(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1106383,      20870]
NotebookOptionsPosition[   1091837,      20427]
NotebookOutlinePosition[   1092305,      20445]
CellTagsIndexPosition[   1092262,      20442]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Quit", "[", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.507275123100278*^9, 3.507275124377351*^9}, {
   3.507516405718161*^9, 3.5075164068292246`*^9}, 3.658661243355674*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellChangeTimes->{{3.6596908624469767`*^9, 3.659690862636801*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.659690863014122*^9, 3.6596908737295303`*^9}, {
   3.659768803571402*^9, 3.659768819026206*^9}, 3.659777060342886*^9, 
   3.6609742118939247`*^9, 3.660974598926803*^9, 3.660974735907158*^9, 
   3.660975331416336*^9, 3.6609754531673527`*^9, 3.660975519667674*^9, 
   3.6609756230172577`*^9, 3.660975784050973*^9, 3.660976139613307*^9, 
   3.660976671557785*^9, 3.66097698038348*^9, 3.660977539537491*^9, 
   3.660977635689486*^9, 3.660977802199739*^9, 3.660977923241341*^9, 
   3.6609782782318153`*^9, 3.660978330331402*^9, 3.660993100758795*^9, 
   3.661341129152372*^9, 3.661420527539074*^9, 3.661420760564947*^9, 
   3.661420993528544*^9, 3.661422792604179*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://adsabs.harvard.edu/abs/1985A%26A...146..260E\>\"", ",", 
     "\"\<HTML\>\""}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Uncomment", " ", "line", " ", "above", " ", "to", " ", "get", " ", 
     "main", " ", "reference", " ", "for", " ", "the", " ", 
     RowBox[{"method", ".", " ", "\[IndentingNewLine]", "Eriguchi"}]}], ",", 
    RowBox[{
     RowBox[{"Y", "."}], ";", "Mueller"}], ",", 
    RowBox[{"E", "."}], ",", " ", 
    RowBox[{"Astronomy", " ", "and", " ", "Astrophysics", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ISSN", " ", "0004"}], "-", "6361"}], ")"}]}], ",", 
    RowBox[{"vol", ".", "146"}], ",", 
    RowBox[{"no", ".", "2"}], ",", 
    RowBox[{"May", " ", "1985"}], ",", 
    RowBox[{
     RowBox[{"p", ".", "260"}], "-", "268."}]}], "\[IndentingNewLine]", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070894618835497`*^9, 3.507089487266001*^9}, {
   3.5070895585460787`*^9, 3.5070895775531654`*^9}, {3.5070898472195897`*^9, 
   3.507089858139214*^9}, {3.507093004962202*^9, 3.507093010187501*^9}, {
   3.641640499664193*^9, 3.64164051394601*^9}, 3.658486283601878*^9, 
   3.6584943465411386`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"conv", " ", "\[Rule]", " ", 
     RowBox[{
     "convert", " ", "rationals", " ", "onto", " ", "machine", " ", 
      "precision", " ", "numbers"}]}], ";", " ", 
    RowBox[{
    "if", " ", "you", " ", "prefer", " ", "to", " ", "keep", " ", 
     "rationals"}]}], ",", " ", "use", " ", ",", ",", 
   RowBox[{
    RowBox[{"identity", "''"}], " ", "conv"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.5077785992268653`*^9, 3.507778656450138*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$OperatingSystem"], "Input",
 CellChangeTimes->{{3.6578705493581047`*^9, 3.6578705527542987`*^9}}],

Cell[BoxData["\<\"Unix\"\>"], "Output",
 CellChangeTimes->{
  3.659261509725041*^9, 3.659261578501381*^9, 3.6592616950842237`*^9, 
   3.65933724267358*^9, 3.659337284623501*^9, 3.6593373317620153`*^9, 
   3.659337401102887*^9, 3.6593374460603247`*^9, 3.659337635995308*^9, 
   3.659337723563938*^9, 3.6593378059100437`*^9, 3.659347650920639*^9, 
   3.659690876606194*^9, {3.659768806386628*^9, 3.659768821452756*^9}, 
   3.659777063085762*^9, 3.6609742145461273`*^9, 3.66097460239098*^9, 
   3.660974738475184*^9, 3.660975334083061*^9, 3.6609754561211348`*^9, 
   3.6609755221259127`*^9, 3.660975627783596*^9, 3.6609757940860167`*^9, 
   3.6609761426379213`*^9, 3.660976674582197*^9, 3.6609769834101467`*^9, 
   3.660977542312784*^9, 3.660977638322907*^9, 3.660977804987162*^9, 
   3.660977930341386*^9, 3.660978336797221*^9, 3.660993103318861*^9, 
   3.661341134426469*^9, 3.661420533504586*^9, 3.66142076238206*^9, 
   3.66142099616333*^9, 3.6614227953254337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$HomeDirectory"], "Input",
 CellChangeTimes->{{3.658484359260812*^9, 3.658484360819901*^9}}],

Cell[BoxData["\<\"/home/misiek\"\>"], "Output",
 CellChangeTimes->{
  3.659261509795075*^9, 3.659261578509837*^9, 3.659261695093403*^9, 
   3.659337242687853*^9, 3.65933728463172*^9, 3.65933733177216*^9, 
   3.659337401110779*^9, 3.659337446086851*^9, 3.6593376360129423`*^9, 
   3.659337723581623*^9, 3.65933780596791*^9, 3.659347650926365*^9, 
   3.659690876657055*^9, {3.659768806410706*^9, 3.659768821476323*^9}, 
   3.659777063142723*^9, 3.66097421457444*^9, 3.660974602437189*^9, 
   3.660974738521494*^9, 3.660975334131564*^9, 3.660975456178225*^9, 
   3.660975522177113*^9, 3.660975627831874*^9, 3.660975794120161*^9, 
   3.660976142688611*^9, 3.6609766746372957`*^9, 3.660976983448699*^9, 
   3.66097754237047*^9, 3.660977638361443*^9, 3.660977805040517*^9, 
   3.660977930376281*^9, 3.660978336835763*^9, 3.660993103360574*^9, 
   3.6613411345417356`*^9, 3.661420533624255*^9, 3.661420762517152*^9, 
   3.661420996240299*^9, 3.6614227954935904`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "==", "\"\<Windows\>\""}], ",", 
    "\"\<H:\\\\misiek/RotatingStars/EM/SolidRotation/\>\"", ",", " ", 
    "\"\</home/misiek/RotatingStars/EM/SolidRotation/\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.657346712678154*^9, 3.65734672862111*^9}, {
  3.657437235641415*^9, 3.657437244809177*^9}, {3.65787054333876*^9, 
  3.657870589762415*^9}}],

Cell[BoxData["\<\"/home/misiek/RotatingStars/EM/SolidRotation/\"\>"], "Output",
 CellChangeTimes->{
  3.6592615098359747`*^9, 3.659261578557819*^9, 3.6592616951432247`*^9, 
   3.659337242758011*^9, 3.659337284677835*^9, 3.65933733200861*^9, 
   3.659337401140497*^9, 3.659337446115788*^9, 3.659337636077874*^9, 
   3.659337723643383*^9, 3.6593378060293503`*^9, 3.659347650975071*^9, 
   3.6596751698285933`*^9, 3.6596757387001534`*^9, 3.659690876699786*^9, {
   3.659768806434815*^9, 3.65976882149986*^9}, 3.659777063200387*^9, 
   3.660974214603067*^9, 3.660974602483376*^9, 3.660974738568191*^9, 
   3.660975334175548*^9, 3.660975456233755*^9, 3.660975522224518*^9, 
   3.660975627877892*^9, 3.6609757941586733`*^9, 3.660976142738122*^9, 
   3.660976674691209*^9, 3.660976983487561*^9, 3.660977542425198*^9, 
   3.660977638399091*^9, 3.660977805095965*^9, 3.660977930408854*^9, 
   3.66097833687042*^9, 3.660993103388906*^9, 3.66134113466076*^9, 
   3.6614205337421713`*^9, 3.6614207626478863`*^9, 3.661420996318552*^9, 
   3.661422795622829*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"conv", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"N", "[", "#", "]"}], "&"}], ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.507692044454732*^9, 3.507692056254407*^9}, {
   3.507692114099715*^9, 3.507692114388732*^9}, 3.659261504592897*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conv", "=", 
  RowBox[{"(", 
   RowBox[{"#", " ", "&"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.507692108428391*^9, 3.5076921254843664`*^9}}],

Cell[BoxData[
 RowBox[{"#1", "&"}]], "Output",
 CellChangeTimes->{
  3.659261509881585*^9, 3.659261578626294*^9, 3.6592616951984386`*^9, 
   3.659337242829064*^9, 3.659337284725315*^9, 3.6593373321420813`*^9, 
   3.659337401187923*^9, 3.65933744615932*^9, 3.659337636176659*^9, 
   3.659337723742202*^9, 3.6593378060892487`*^9, 3.659347651036408*^9, 
   3.6596751722375526`*^9, 3.659675739165658*^9, 3.659690876754634*^9, {
   3.659768806463523*^9, 3.659768821528495*^9}, 3.659777063265657*^9, 
   3.66097421463865*^9, 3.660974602539114*^9, 3.6609747386169777`*^9, 
   3.660975256141446*^9, 3.660975334231133*^9, 3.660975456288095*^9, 
   3.6609755222803173`*^9, 3.660975627934916*^9, 3.6609757942172422`*^9, 
   3.660976142796706*^9, 3.660976674752977*^9, 3.660976983534174*^9, 
   3.660977542490057*^9, 3.660977638443248*^9, 3.66097780515839*^9, 
   3.660977930447592*^9, 3.660978336918166*^9, 3.660993103427997*^9, 
   3.661341134842352*^9, 3.66142053391952*^9, 3.661420762865075*^9, 
   3.661420996418441*^9, 3.661422795808947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NT", "=", "8", 
  RowBox[{"(*", " ", 
   RowBox[{"angular", " ", "rays", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MAX", " ", "NT"}], "=", 
      RowBox[{"24", " ", "tested"}]}], ")"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5069999391570945`*^9, 3.506999940024144*^9}, {
   3.5070872597915974`*^9, 3.507087273088358*^9}, {3.507088373617304*^9, 
   3.5070883773745193`*^9}, {3.507091257554256*^9, 3.5070912576542616`*^9}, {
   3.5070914434238873`*^9, 3.50709146200895*^9}, {3.5071013966661797`*^9, 
   3.5071013967751865`*^9}, {3.5071022943815265`*^9, 
   3.5071022952205744`*^9}, {3.5072072782850547`*^9, 3.507207278568071*^9}, {
   3.5072714146471663`*^9, 3.5072714147641735`*^9}, {3.507271535965105*^9, 
   3.5072715360491104`*^9}, {3.5072751124826703`*^9, 
   3.5072751142767735`*^9}, {3.507277250019931*^9, 3.507277251340006*^9}, {
   3.507285186155386*^9, 3.507285186234396*^9}, {3.507286271639225*^9, 
   3.507286273807*^9}, {3.507286380520051*^9, 3.507286380838092*^9}, {
   3.5072945761304164`*^9, 3.5072945851729336`*^9}, {3.5072963943164105`*^9, 
   3.5072963952804656`*^9}, {3.5073073659769535`*^9, 3.507307366048958*^9}, {
   3.507438273803265*^9, 3.50743829661957*^9}, {3.507438747277346*^9, 
   3.5074387476483674`*^9}, {3.5074404160177927`*^9, 3.507440416391814*^9}, {
   3.507445302789632*^9, 3.507445306766859*^9}, {3.5074735847524505`*^9, 
   3.5074735848744574`*^9}, {3.5074740968487406`*^9, 
   3.5074740977157907`*^9}, {3.5075147686495256`*^9, 3.507514772305735*^9}, {
   3.507515843162985*^9, 3.5075158434900036`*^9}, {3.507516398653757*^9, 
   3.5075164036060405`*^9}, {3.507517486078954*^9, 3.5075174885660963`*^9}, {
   3.507546831205659*^9, 3.50754683174969*^9}, {3.507550666249011*^9, 
   3.507550667588088*^9}, {3.5075594011716204`*^9, 3.5075594036437616`*^9}, {
   3.5076085447829485`*^9, 3.507608545657999*^9}, {3.5076090661767707`*^9, 
   3.507609066670799*^9}, {3.5076094666806784`*^9, 3.5076094673517165`*^9}, {
   3.5076097443935623`*^9, 3.5076097447795844`*^9}, {3.5076126358009415`*^9, 
   3.5076126366759915`*^9}, {3.507647851236143*^9, 3.5076478522492013`*^9}, {
   3.5076493789035206`*^9, 3.507649379267542*^9}, {3.507650111710435*^9, 
   3.5076501120374537`*^9}, {3.5076507699360833`*^9, 
   3.5076507704241114`*^9}, {3.50768833616263*^9, 3.5076883377807226`*^9}, {
   3.5076905989840555`*^9, 3.50769059957909*^9}, {3.5076924641851215`*^9, 
   3.5076924647271523`*^9}, {3.507694476743233*^9, 3.507694477311266*^9}, {
   3.507695106591258*^9, 3.5076951076253176`*^9}, {3.5076977541396894`*^9, 
   3.507697754290698*^9}, {3.507698468644557*^9, 3.5076984690015774`*^9}, {
   3.5077027493664*^9, 3.5077027498684287`*^9}, 3.5077078120729704`*^9, {
   3.507708789843896*^9, 3.507708790058908*^9}, {3.5077194507418413`*^9, 
   3.5077194514088793`*^9}, 3.507720269608678*^9, {3.507720440969479*^9, 
   3.5077204418715305`*^9}, {3.5077215736542645`*^9, 3.5077215737512703`*^9}, 
   3.507734399144841*^9, {3.507735192213202*^9, 3.5077351928632393`*^9}, {
   3.507778700099635*^9, 3.507778701497715*^9}, {3.5078948226079855`*^9, 
   3.507894823527038*^9}, {3.507905574224943*^9, 3.5079055747759743`*^9}, {
   3.508136938787391*^9, 3.5081369391024094`*^9}, {3.5089079653014755`*^9, 
   3.50890796538348*^9}, {3.5255048094689565`*^9, 3.525504810454013*^9}, {
   3.657280008943184*^9, 3.657280009686226*^9}, {3.6572810220961328`*^9, 
   3.657281045383465*^9}, {3.657286140764904*^9, 3.6572861419549723`*^9}, {
   3.657437250937127*^9, 3.657437251753129*^9}, {3.657439378690579*^9, 
   3.6574393862419643`*^9}, {3.657446588005608*^9, 3.657446602340404*^9}, {
   3.65752372649645*^9, 3.657523731888152*^9}, {3.657524245739304*^9, 
   3.657524246554991*^9}, {3.658482980745965*^9, 3.6584829810729837`*^9}, {
   3.65848501609138*^9, 3.6584850171224394`*^9}, {3.658643026674111*^9, 
   3.658643039041862*^9}, {3.658661229780395*^9, 3.658661230226905*^9}, {
   3.659251949408882*^9, 3.659251950800624*^9}, {3.6592591726884127`*^9, 
   3.65925917460809*^9}, {3.659261657268848*^9, 3.659261661428274*^9}, 
   3.659337226271578*^9, 3.659337787674045*^9, {3.6596905701770563`*^9, 
   3.659690582784438*^9}, {3.660974197747651*^9, 3.6609741981948557`*^9}, {
   3.6609745871838913`*^9, 3.6609745872788353`*^9}, {3.6609747236462393`*^9, 
   3.660974723981893*^9}, {3.6609752338011208`*^9, 3.660975283207003*^9}, {
   3.660975436294873*^9, 3.660975436694044*^9}, {3.660975501766226*^9, 
   3.6609755093488417`*^9}, {3.660975609797689*^9, 3.6609756116994963`*^9}, {
   3.660975772226019*^9, 3.660975772353629*^9}, {3.6609761257588882`*^9, 
   3.660976126286375*^9}, {3.6609766406495028`*^9, 3.660976643192506*^9}, {
   3.6609776237592907`*^9, 3.660977624638331*^9}, {3.6609779123003283`*^9, 
   3.6609779125865088`*^9}, {3.660978264855836*^9, 3.660978265111657*^9}, {
   3.6609930833466797`*^9, 3.660993084322166*^9}, {3.6613411219134293`*^9, 
   3.661341122281067*^9}, {3.66142051241676*^9, 3.661420513416648*^9}, {
   3.661420972917644*^9, 3.661420973333199*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.659261509921174*^9, 3.659261578679291*^9, 3.659261695238179*^9, 
   3.659337242888422*^9, 3.659337284763083*^9, 3.6593373321468067`*^9, 
   3.659337401216007*^9, 3.659337446168865*^9, 3.659337636186511*^9, 
   3.659337723747718*^9, 3.659337806126539*^9, 3.659347651089012*^9, 
   3.65967517388736*^9, 3.6596757399699793`*^9, 3.659677020951365*^9, 
   3.659690876796688*^9, {3.659768806489296*^9, 3.6597688215532503`*^9}, 
   3.6597770633203907`*^9, 3.6609742146674128`*^9, 3.660974602584038*^9, 
   3.660974738654868*^9, {3.660975243452875*^9, 3.6609752665111103`*^9}, 
   3.6609753342724037`*^9, 3.6609754563392353`*^9, 3.6609755223287277`*^9, 
   3.6609756279821053`*^9, 3.660975794263117*^9, 3.660976142840498*^9, 
   3.660976674805004*^9, 3.660976983571999*^9, 3.6609775425424967`*^9, 
   3.660977638480654*^9, 3.660977805211659*^9, 3.6609779304817743`*^9, 
   3.660978336954204*^9, 3.660993103471277*^9, 3.661341134968487*^9, 
   3.661420534040951*^9, 3.661420762992782*^9, 3.661420996488916*^9, 
   3.66142279593643*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NR", "=", "8", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"radial", " ", "slices"}], ",", " ", 
    RowBox[{"including", " ", "surface"}], ",", " ", 
    RowBox[{"without", " ", "center", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MAX", " ", "NR"}], "=", 
       RowBox[{"32", " ", "tested"}]}], " ", ")"}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.507000077681018*^9, 3.507000079730135*^9}, {
   3.50700320429585*^9, 3.507003204507862*^9}, {3.5070872747834544`*^9, 
   3.5070873028100576`*^9}, {3.507088379533643*^9, 3.5070883798556614`*^9}, {
   3.5071013987502995`*^9, 3.5071013997593565`*^9}, {3.507102297657714*^9, 
   3.507102297847725*^9}, {3.5072072812942266`*^9, 3.5072072813922324`*^9}, {
   3.507271416766288*^9, 3.5072714172373147`*^9}, {3.5072718084056883`*^9, 
   3.5072718089177175`*^9}, {3.5072725679671326`*^9, 3.507272569724233*^9}, {
   3.507274700158087*^9, 3.5072747002380915`*^9}, {3.507275117174939*^9, 
   3.507275117283945*^9}, {3.5072772536591387`*^9, 3.5072772540391607`*^9}, {
   3.5072782411236186`*^9, 3.5072782412216244`*^9}, {3.5072851880631285`*^9, 
   3.5072851888927336`*^9}, {3.507286275820256*^9, 3.5072862765083437`*^9}, {
   3.5072863832228947`*^9, 3.5072863842725277`*^9}, {3.5072945788615723`*^9, 
   3.5072945797186213`*^9}, {3.507296397364585*^9, 3.5072963979186163`*^9}, {
   3.507307368732111*^9, 3.507307369221139*^9}, {3.507433169800333*^9, 
   3.5074331703903666`*^9}, {3.507434265493003*^9, 3.507434266420056*^9}, {
   3.5074382762554054`*^9, 3.5074383067501497`*^9}, {3.5074387496184797`*^9, 
   3.50743875976206*^9}, 3.507439980006854*^9, 3.5074404182129183`*^9, 
   3.5074453115891347`*^9, {3.5074730513239403`*^9, 3.5074730530580397`*^9}, {
   3.5074735876546164`*^9, 3.507473587800625*^9}, {3.507474100118928*^9, 
   3.507474100589955*^9}, {3.507514774089837*^9, 3.507514774208844*^9}, {
   3.5075158483542814`*^9, 3.507515849122326*^9}, {3.5075164116545005`*^9, 
   3.507516412893572*^9}, {3.50751749195829*^9, 3.5075174937743945`*^9}, {
   3.50751770331738*^9, 3.5075177044444437`*^9}, {3.5075231882631006`*^9, 
   3.5075231889291387`*^9}, {3.507550669756212*^9, 3.5075506706132607`*^9}, {
   3.507559407249968*^9, 3.5075594098661175`*^9}, {3.507609068643912*^9, 
   3.507609069722974*^9}, {3.5076094697458534`*^9, 3.5076094712319384`*^9}, {
   3.507609746636691*^9, 3.5076097470027113`*^9}, {3.5076126384280915`*^9, 
   3.50761263927814*^9}, {3.507647853647281*^9, 3.5076478540513043`*^9}, {
   3.507649381966696*^9, 3.507649382840746*^9}, {3.5076501135355396`*^9, 
   3.5076501136045437`*^9}, {3.507650771935198*^9, 3.5076507725592337`*^9}, {
   3.5076883415629387`*^9, 3.5076883418029523`*^9}, {3.507690601733213*^9, 
   3.5076906021542373`*^9}, {3.5076924668462734`*^9, 3.507692468231353*^9}, {
   3.5076944726239977`*^9, 3.5076944737960644`*^9}, {3.507702752040553*^9, 
   3.5077027531466165`*^9}, {3.507707814543112*^9, 3.5077078149251337`*^9}, {
   3.507708791706002*^9, 3.5077087920650225`*^9}, {3.5077194529669685`*^9, 
   3.5077194536100054`*^9}, 3.507720271602792*^9, {3.507720444363673*^9, 
   3.5077204445026813`*^9}, {3.5077215755653744`*^9, 3.5077215782265263`*^9}, 
   3.5077351952163734`*^9, 3.507778703930854*^9, {3.5077798356555853`*^9, 
   3.507779836858654*^9}, {3.50780110548645*^9, 3.507801106129487*^9}, {
   3.5078095248940125`*^9, 3.507809528906242*^9}, {3.5078948249121175`*^9, 
   3.5078948256941624`*^9}, {3.507905576984101*^9, 3.5079055771551104`*^9}, {
   3.5081369410985236`*^9, 3.5081369419425716`*^9}, {3.5089079676376085`*^9, 
   3.5089079681216364`*^9}, {3.508909038274846*^9, 3.5089090385158596`*^9}, 
   3.525504812389124*^9, {3.6572800123583794`*^9, 3.657280012630395*^9}, {
   3.6572810478396053`*^9, 3.6572810486396513`*^9}, {3.6572861439950886`*^9, 
   3.6572861449471436`*^9}, {3.657437254041092*^9, 3.657437257528936*^9}, {
   3.6574393817145033`*^9, 3.657439389601565*^9}, {3.657446604869203*^9, 
   3.6574466059409447`*^9}, {3.657523734480571*^9, 3.657523735744114*^9}, {
   3.65752424906739*^9, 3.65752425005939*^9}, {3.6584830087055645`*^9, 
   3.658483009048584*^9}, {3.658485019075551*^9, 3.658485020338623*^9}, {
   3.65864303313802*^9, 3.658643047505837*^9}, {3.658661232483818*^9, 
   3.6586612334269*^9}, {3.659251954704706*^9, 3.659251956093524*^9}, {
   3.659259176944697*^9, 3.659259178176139*^9}, {3.659261664084529*^9, 
   3.659261664692492*^9}, 3.659337228559617*^9, 3.659337793305519*^9, {
   3.659690585040484*^9, 3.659690585136026*^9}, {3.660974200307626*^9, 
   3.660974202179605*^9}, {3.660974589231779*^9, 3.66097458931087*^9}, {
   3.660974725470244*^9, 3.660974725549371*^9}, {3.660975235848104*^9, 
   3.660975285015432*^9}, {3.660975438230484*^9, 3.660975438309503*^9}, {
   3.660975503381742*^9, 3.660975511092698*^9}, {3.660975613300621*^9, 
   3.6609756133953953`*^9}, {3.660975774002877*^9, 3.6609757740662622`*^9}, {
   3.660976128142992*^9, 3.660976128398233*^9}, {3.660976644777296*^9, 
   3.6609766449207487`*^9}, {3.660977626206708*^9, 3.6609776266857147`*^9}, {
   3.66097778918143*^9, 3.6609777893879147`*^9}, {3.6609779142387447`*^9, 
   3.660977914666565*^9}, {3.6609782668563433`*^9, 3.66097826762376*^9}, {
   3.660993086434203*^9, 3.660993086833665*^9}, {3.661341124016808*^9, 
   3.6613411242331867`*^9}, {3.661420515888693*^9, 3.661420520792575*^9}, {
   3.661420975381627*^9, 3.661420975653425*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.6592615099600487`*^9, 3.6592615786837473`*^9, 3.659261695242989*^9, 
   3.659337242893098*^9, 3.659337284805475*^9, 3.659337332181231*^9, 
   3.659337401245244*^9, 3.659337446194783*^9, 3.659337636228703*^9, 
   3.65933772379074*^9, 3.659337806170081*^9, 3.659347651139661*^9, 
   3.659675174521615*^9, 3.6596757406763*^9, 3.659677021079372*^9, 
   3.659690876840342*^9, {3.659768806513229*^9, 3.659768821577787*^9}, 
   3.65977706338019*^9, 3.660974214696726*^9, 3.660974602630868*^9, 
   3.6609747386971397`*^9, {3.6609752435307617`*^9, 3.660975266985572*^9}, 
   3.660975334316943*^9, 3.660975456387768*^9, 3.660975522374794*^9, 
   3.660975628029475*^9, 3.660975794310114*^9, 3.660976142881555*^9, 
   3.6609766748636217`*^9, 3.6609769836083727`*^9, 3.6609775425968113`*^9, 
   3.660977638517757*^9, 3.660977805263464*^9, 3.660977930513927*^9, 
   3.660978336992527*^9, 3.660993103512171*^9, 3.661341135088793*^9, 
   3.661420534163067*^9, 3.661420763129549*^9, 3.661420996557715*^9, 
   3.66142279606964*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NL", "=", "8", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "Legendre", " ", "polynomials", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MAX", " ", "NL"}], "=", 
       RowBox[{"20", " ", "tested"}]}], ")"}], ".", " ", 
     RowBox[{"WARNING", ":", " ", 
      RowBox[{"too", " ", "large", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"e", ".", "g", ".", " ", "NL"}], "=", "32"}], ")"}], " ", 
       "number", " ", "of", " ", "Legendere", " ", "polynomials", " ", 
       "might", " ", "cause", " ", "numerical", " ", "instability", " ", 
       "and", " ", "catastrophic", " ", 
       RowBox[{"errors", " ", "!"}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070926671708813`*^9, 3.5070926792195706`*^9}, {
   3.5072072870955586`*^9, 3.5072072884746375`*^9}, {3.507277186070273*^9, 
   3.5072771861632786`*^9}, {3.5072863895416965`*^9, 
   3.5072863896927156`*^9}, {3.5072945899312057`*^9, 
   3.5072945900132103`*^9}, {3.507296401851842*^9, 3.5072964020618534`*^9}, {
   3.507306351360921*^9, 3.5073063519179525`*^9}, {3.507438279746605*^9, 
   3.507438319326869*^9}, {3.5074403859320717`*^9, 3.5074403864451013`*^9}, {
   3.507440420097026*^9, 3.5074404204360456`*^9}, {3.5074453131592245`*^9, 
   3.5074453137352576`*^9}, {3.5074735944540052`*^9, 
   3.5074735948210263`*^9}, {3.50747410208304*^9, 3.507474103265108*^9}, {
   3.507514775865939*^9, 3.507514775960944*^9}, {3.507515851738475*^9, 
   3.507515852209502*^9}, {3.5075225426391726`*^9, 3.5075225429641914`*^9}, {
   3.5076085371745133`*^9, 3.507608538287577*^9}, 3.507647857313491*^9, 
   3.5076507779605427`*^9, 3.5076883443390975`*^9, 3.5076903139567533`*^9, {
   3.5077352011287117`*^9, 3.507735201476732*^9}, {3.507779840043836*^9, 
   3.507779883141301*^9}, {3.5077911438173747`*^9, 3.50779114408339*^9}, {
   3.507801114384959*^9, 3.5078011145999713`*^9}, {3.5079055794792433`*^9, 
   3.5079055795682487`*^9}, {3.6575237392323503`*^9, 3.657523739664226*^9}, {
   3.657524252554977*^9, 3.65752425337064*^9}, {3.658483028065672*^9, 
   3.658483028136676*^9}, {3.658661236675501*^9, 3.658661236803491*^9}, {
   3.659259180032249*^9, 3.6592591805441628`*^9}, {3.6592616676685658`*^9, 
   3.6592616761963177`*^9}, {3.6593372308154907`*^9, 
   3.6593372341272383`*^9}, {3.659337795337673*^9, 3.6593377958645287`*^9}, {
   3.659347632879388*^9, 3.6593476339341784`*^9}, {3.659675593168861*^9, 
   3.659675600192498*^9}, {3.6596757175157003`*^9, 3.6596757197905197`*^9}, {
   3.659676257896892*^9, 3.659676258456184*^9}, {3.659677023054994*^9, 
   3.659677023934681*^9}, {3.659777040911091*^9, 3.65977704711804*^9}, {
   3.660974204323566*^9, 3.660974204738798*^9}, {3.6609745909110203`*^9, 
   3.66097459099111*^9}, {3.660974727006548*^9, 3.660974727069388*^9}, {
   3.6609752376570253`*^9, 3.6609752865833607`*^9}, {3.6609754397986383`*^9, 
   3.660975439861511*^9}, {3.6609755050778637`*^9, 3.6609755127248383`*^9}, {
   3.6609756150606194`*^9, 3.6609756152194977`*^9}, {3.660975775554927*^9, 
   3.6609757756178913`*^9}, {3.660976130238997*^9, 3.660976130686082*^9}, {
   3.660976646520727*^9, 3.660976646584858*^9}, {3.660977526624569*^9, 
   3.6609775271355953`*^9}, {3.6609776283674383`*^9, 3.660977628653458*^9}, {
   3.6609782691122017`*^9, 3.660978269463797*^9}, {3.660993089058323*^9, 
   3.660993089426*^9}, {3.66142052257675*^9, 3.6614205235446577`*^9}, {
   3.6614209774536963`*^9, 3.661420977693576*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.659261509999127*^9, 3.659261578721431*^9, 3.659261695285825*^9, 
   3.659337242938993*^9, 3.659337284811005*^9, 3.659337332220517*^9, 
   3.659337401250424*^9, 3.659337446221977*^9, 3.6593376362771797`*^9, 
   3.659337723833696*^9, 3.6593378062119837`*^9, 3.6593476511926117`*^9, 
   3.659675175112916*^9, 3.659675741209036*^9, 3.659676259113633*^9, 
   3.659677024124765*^9, 3.659689147324996*^9, 3.659690876887352*^9, {
   3.659768806537484*^9, 3.6597688216024733`*^9}, 3.659777063436963*^9, 
   3.6609742147253923`*^9, 3.660974602678774*^9, 3.6609747387416077`*^9, {
   3.660975243781605*^9, 3.660975267438499*^9}, 3.660975334358292*^9, 
   3.6609754564397707`*^9, 3.660975522424766*^9, 3.660975628078123*^9, 
   3.6609757943539333`*^9, 3.660976142925169*^9, 3.660976674912614*^9, 
   3.660976983649253*^9, 3.6609775426486387`*^9, 3.6609776385549107`*^9, 
   3.660977805317342*^9, 3.660977930547657*^9, 3.660978337029573*^9, 
   3.660993103547369*^9, 3.6613411352250557`*^9, 3.661420534288501*^9, 
   3.6614207633414583`*^9, 3.661420996633069*^9, 3.6614227963549767`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"R", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<R\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"radius", " ", "of", " ", "the", " ", "stellar", " ", "surface"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.506999862689721*^9, 3.5069998789156485`*^9}, {
   3.506999929860563*^9, 3.5069999357138977`*^9}, {3.506999965950627*^9, 
   3.506999994067235*^9}, {3.5076126405472126`*^9, 3.507612641739281*^9}, {
   3.5077014139120164`*^9, 3.507701452824242*^9}, {3.5077787189717145`*^9, 
   3.507778723534975*^9}, 3.657446616356412*^9, 3.658483035514098*^9, 
   3.658643060146208*^9, 3.66097524788*^9, 3.660975306999943*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"r", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"j", "/", "NR"}], "*", 
        RowBox[{"R", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], "//", "conv"}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"discretized", " ", "radial", " ", "grid", " ", "coordinates"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.50700001338834*^9, 3.5070001173872886`*^9}, {
   3.5074335677190924`*^9, 3.507433568136116*^9}, {3.5074383234761057`*^9, 
   3.507438323745122*^9}, {3.5074460003825316`*^9, 3.507446000771554*^9}, {
   3.507688351675517*^9, 3.5076883577788663`*^9}, {3.5077014548063555`*^9, 
   3.50770145575841*^9}, {3.5077787369807444`*^9, 3.5077787555988092`*^9}, 
   3.657446627445154*^9, 3.660975253032539*^9, 3.6609753112559757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]r", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"R", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/", "NR"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], "//", "conv"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"trapezoidal", " ", "integration", " ", "rule"}], ",", " ", 
    RowBox[{"central", " ", "point", " ", "not", " ", "included"}], ",", " ", 
    RowBox[{"surface", " ", "weigth", " ", "assumed", " ", "ZERO"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.507005420112587*^9, 3.5070054568346877`*^9}, {
   3.507091619952984*^9, 3.507091672230974*^9}, {3.507433574042454*^9, 
   3.507433574468478*^9}, {3.507438331202548*^9, 3.507438331634573*^9}, {
   3.5074460061698627`*^9, 3.507446006508882*^9}, {3.5076883623241262`*^9, 
   3.507688362684147*^9}, {3.507701465362959*^9, 3.507701467877103*^9}, 
   3.657446630676011*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pi", "/", "2"}], "*", 
        RowBox[{"i", "/", 
         RowBox[{"(", 
          RowBox[{"NT", "-", "1"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"NT", "-", "1"}]}], "}"}]}], "]"}], "//", "conv"}]}], ";"}], 
  "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"angular", " ", "grid"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070001792198253`*^9, 3.5070002821447124`*^9}, {
   3.5074335813638725`*^9, 3.507433582003909*^9}, {3.50743833578281*^9, 
   3.5074383384729643`*^9}, {3.5074460113021564`*^9, 
   3.5074460116571765`*^9}, {3.5076883672114058`*^9, 3.507688367563426*^9}, {
   3.5077014832869844`*^9, 3.507701484331044*^9}, {3.5077787717937355`*^9, 
   3.507778776172986*^9}, 3.660975316135915*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]\[Theta]", "=", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"NT", "-", "1"}], ")"}]}], "/", "2"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"NT", "-", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"NT", "-", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"NT", "-", "1"}], ")"}]}], "/", "2"}], "}"}]}], "]"}], " ",
      "//", "conv"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"trapezoidal", " ", "rule"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.50700534603835*^9, 3.507005369691703*^9}, {
   3.5070911960887403`*^9, 3.5070912214471908`*^9}, {3.5070912537560387`*^9, 
   3.507091270163977*^9}, {3.5070913382078695`*^9, 3.5070913704017105`*^9}, {
   3.5070914763377695`*^9, 3.5070914831491594`*^9}, {3.5074335899803658`*^9, 
   3.50743359040739*^9}, {3.5074383423961887`*^9, 3.507438342667204*^9}, {
   3.507446015634404*^9, 3.507446016017426*^9}, {3.50768837270072*^9, 
   3.507688373004737*^9}, {3.507701487939251*^9, 3.507701489240325*^9}, 
   3.657446639509211*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"surface", "=", 
    RowBox[{"InterpolatingPolynomial", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "R"}], "}"}], "]"}], ",", 
      "\[Theta]\[Theta]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "interpolating", " ", "polynomial", " ", "representing", " ", "surface"}], 
   " ", "*)"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5070032463382545`*^9, 3.507003280605214*^9}, {
   3.5070892355896063`*^9, 3.507089240213871*^9}, {3.507522562053283*^9, 
   3.507522581716408*^9}, {3.507550747111636*^9, 3.507550747398653*^9}, {
   3.5077787823863416`*^9, 3.5077787956300993`*^9}, {3.6416405442397428`*^9, 
   3.6416405455918207`*^9}, 3.6614209842916813`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<\[Rho]\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<x\>\"", "<>", 
          RowBox[{"ToString", "[", "j", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "unknown", " ", "densities", " ", "at", " ", "grid", " ", "points"}], ";",
     " ", 
    RowBox[{"zero", " ", "at", " ", "surface"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070013888920145`*^9, 3.5070014724917965`*^9}, {
   3.5070015040926037`*^9, 3.507001520266529*^9}, {3.507546951397534*^9, 
   3.5075469814592533`*^9}, {3.507547058276647*^9, 3.507547062508889*^9}, {
   3.5077787993833137`*^9, 3.507778829751051*^9}, 3.6574466456691427`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"\[Rho]DISCR", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Rho]C"}], "}"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"\[Rho]", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.507001558426711*^9, 3.507001594171756*^9}, {
   3.507001638319281*^9, 3.507001638580296*^9}, {3.5070016991537604`*^9, 
   3.507001727036355*^9}, {3.5070018315373325`*^9, 3.5070018339774723`*^9}, {
   3.507002273495611*^9, 3.507002296693938*^9}, {3.5070023587884893`*^9, 
   3.507002383605909*^9}, {3.5070024331597433`*^9, 3.5070024447154045`*^9}, 
   3.5071014107299843`*^9, {3.507438769499617*^9, 3.5074387787881484`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[Rho]INTERP", "=", 
    RowBox[{"InterpolatingPolynomial", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"InterpolatingPolynomial", "[", 
            RowBox[{
             RowBox[{"\[Rho]DISCR", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "rr"}], "]"}], "//", 
           "Simplify"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}], ",", 
      "\[Theta]\[Theta]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5070017082472806`*^9, 3.50700173865702*^9}, {
   3.5070017693767767`*^9, 3.507001802264658*^9}, {3.5070018749758167`*^9, 
   3.50700188394733*^9}, 3.5070022296281023`*^9, {3.5070025103261566`*^9, 
   3.5070025378197293`*^9}, {3.50710141345214*^9, 3.5071014213645926`*^9}, {
   3.5072073065346704`*^9, 3.507207313261055*^9}, 3.507271435039333*^9, {
   3.507438781126282*^9, 3.5074387830793943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"(", 
    RowBox[{"\[CapitalOmega]0", "&"}], ")"}], " ", 
   RowBox[{"(*", 
    RowBox[{"solid", " ", "body", " ", "rotation"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.5074452177997704`*^9, 3.507445232325601*^9}, {
   3.5074452789072657`*^9, 3.5074452869117236`*^9}, {3.5076131645981865`*^9, 
   3.507613172058614*^9}, {3.5079055990643635`*^9, 3.5079056054237275`*^9}, 
   3.6572800346566544`*^9, 3.657281082105565*^9}],

Cell[BoxData[
 RowBox[{"\[CapitalOmega]0", "&"}]], "Output",
 CellChangeTimes->{
  3.659261510143537*^9, 3.659261578868966*^9, 3.659261696956854*^9, 
   3.6593372430886097`*^9, 3.659337284920273*^9, 3.659337332755189*^9, 
   3.659337401350568*^9, 3.659337446448297*^9, 3.659337636431923*^9, 
   3.6593377239851437`*^9, 3.659337807999424*^9, 3.6593476528648043`*^9, 
   3.6596751844874907`*^9, 3.6596757481460648`*^9, 3.659690879868045*^9, {
   3.659768809450795*^9, 3.659768824501278*^9}, 3.659777066427168*^9, 
   3.66097421485753*^9, 3.660974602842454*^9, 3.6609747388753233`*^9, 
   3.660975334480648*^9, 3.6609754565618973`*^9, 3.660975522538392*^9, 
   3.6609756281962347`*^9, 3.660975794474099*^9, 3.660976144511381*^9, 
   3.660976675048605*^9, 3.660976983734873*^9, 3.6609775427850523`*^9, 
   3.6609776386690407`*^9, 3.6609778054523067`*^9, 3.660977930649458*^9, 
   3.66097833712222*^9, 3.660993435774577*^9, 3.661341136006274*^9, 
   3.661420535098637*^9, 3.6614207641388083`*^9, 3.661420996799872*^9, 
   3.661422797055274*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"\[CapitalOmega]", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"#", "^", "2"}], "/", 
          RowBox[{"A", "^", "2"}]}]}], ")"}]}], "&"}], ")"}]}], "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"j", "-", 
    RowBox[{"const", " ", "rotation", " ", "law"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072952811287403`*^9, 3.5072953005858526`*^9}, {
   3.50744520486003*^9, 3.507445212186449*^9}, {3.507778837502494*^9, 
   3.5077788460819845`*^9}, 3.6572810746401377`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"-", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"\[Zeta]", " ", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "[", "\[Zeta]", "]"}], "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Zeta]", ",", "0", ",", "x"}], "}"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.5072749843903437`*^9, 3.5072749847063622`*^9}, {
   3.507275149987816*^9, 3.5072751501248236`*^9}, {3.507278140165844*^9, 
   3.5072781406658726`*^9}, 3.5072782637329116`*^9, 3.507278337904154*^9, {
   3.507278403673916*^9, 3.50727840374292*^9}, 3.5072786230424633`*^9, {
   3.5072787122795672`*^9, 3.5072787124285755`*^9}, {3.507295401903648*^9, 
   3.507295467771415*^9}, 3.6575237568182487`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Refine", "[", 
   RowBox[{"%", ",", 
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", 
     RowBox[{"A", ">", "0"}]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5074453477942057`*^9, 3.507445378954988*^9}, 
   3.65752375920151*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\[CapitalPhi]C", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox["#", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]0", "2"]}], "&"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"solid", " ", "body", " ", "rotation"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.507295486700498*^9, 3.50729550666364*^9}, {
   3.50729572258899*^9, 3.5072957358227468`*^9}, {3.507690614948969*^9, 
   3.507690618049146*^9}, {3.5079056097499747`*^9, 3.507905614274234*^9}, 
   3.6572800606901436`*^9, 3.6572810965443907`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   SuperscriptBox["#1", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]0", "2"]}], "&"}]], "Output",
 CellChangeTimes->{
  3.659261510202623*^9, 3.659261578930521*^9, 3.659261697026224*^9, 
   3.659337243151732*^9, 3.659337284983889*^9, 3.659337332812359*^9, 
   3.65933740139176*^9, 3.659337446509932*^9, 3.659337636495186*^9, 
   3.659337724056465*^9, 3.6593378080672007`*^9, 3.659347652936433*^9, 
   3.6596908799374237`*^9, {3.659768809504312*^9, 3.659768824588787*^9}, 
   3.659777066506053*^9, 3.660974214920517*^9, 3.660974602910736*^9, 
   3.660974738926238*^9, 3.6609753345414457`*^9, 3.660975456626399*^9, 
   3.6609755226083603`*^9, 3.66097562825941*^9, 3.66097579453686*^9, 
   3.660976144584806*^9, 3.6609766751243267`*^9, 3.660976983786215*^9, 
   3.660977542856522*^9, 3.660977638735895*^9, 3.660977805523975*^9, 
   3.660977930711132*^9, 3.660978337178224*^9, 3.660993435850404*^9, 
   3.661341136392211*^9, 3.661420535501768*^9, 3.661420764499093*^9, 
   3.661420996902833*^9, 3.661422797722678*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"\[CapitalPhi]C", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"A", "^", "2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]0", "^", "2"}], "/", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"#", "^", "2"}], "/", 
          RowBox[{"A", "^", "2"}]}]}], ")"}]}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]0", "2"]}]}], "&"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"centrifugal", " ", "potential"}], ";", " ", 
    RowBox[{"normalized", " ", "to", " ", "zero", " ", "at", " ", 
     RowBox[{"center", " ", "!"}]}]}], " ", "*)"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5074404308956437`*^9, 3.507440452738893*^9}, {
   3.5074406692812786`*^9, 3.50744068417113*^9}, 3.5074454044374456`*^9, {
   3.5074731040269547`*^9, 3.507473107182135*^9}, {3.5074738537558365`*^9, 
   3.507473859466163*^9}, {3.507778850292226*^9, 3.507778865650104*^9}, 
   3.657281090854066*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPhi]C", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.507778873122531*^9, 3.5077788762367096`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.659261510246656*^9, 3.659261578974382*^9, 3.659261697077168*^9, 
   3.659337243200251*^9, 3.659337285024246*^9, 3.6593373328630753`*^9, 
   3.659337401425941*^9, 3.65933744654776*^9, 3.659337636542061*^9, 
   3.659337724105741*^9, 3.659337808126129*^9, 3.659347652993927*^9, 
   3.6596908799934998`*^9, {3.659768809545621*^9, 3.659768824619566*^9}, 
   3.6597770665654163`*^9, 3.6609742149708*^9, 3.660974602960616*^9, 
   3.660974738964768*^9, 3.6609753345817423`*^9, 3.66097545668286*^9, 
   3.660975522669365*^9, 3.660975628313065*^9, 3.6609757945850163`*^9, 
   3.660976144632597*^9, 3.6609766752794*^9, 3.660976983831952*^9, 
   3.6609775429159613`*^9, 3.6609776387923098`*^9, 3.660977805583193*^9, 
   3.66097793076584*^9, 3.660978337222859*^9, 3.660993435900082*^9, 
   3.661341136573756*^9, 3.661420535683742*^9, 3.661420764675002*^9, 
   3.661420996991815*^9, 3.661422798090988*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"\[CapitalPhi]C", "[", "x", "]"}], ",", 
    RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.507778884357174*^9, 3.507778894691765*^9}, 
   3.657523764015202*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"kernel0", "[", 
     RowBox[{
      RowBox[{"ra_", "?", "NumericQ"}], ",", 
      RowBox[{"Cos\[Theta]a_", "?", "NumericQ"}], ",", 
      RowBox[{"rb_", "?", "NumericQ"}], ",", 
      RowBox[{"Cos\[Theta]b_", "?", "NumericQ"}], ",", 
      RowBox[{"nLeg_", "?", "NumericQ"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ra", "\[GreaterEqual]", "rb"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"rb", "^", 
           RowBox[{"(", 
            RowBox[{"2", "n"}], ")"}]}], "/", 
          RowBox[{"ra", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"2", " ", "n"}], ",", " ", "Cos\[Theta]a"}], "]"}], "*", 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"2", "n"}], " ", ",", "Cos\[Theta]b"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "nLeg"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ra", "^", 
           RowBox[{"(", 
            RowBox[{"2", "n"}], ")"}]}], "/", 
          RowBox[{"rb", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"2", " ", "n"}], ",", " ", "Cos\[Theta]a"}], "]"}], "*", 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"2", "n"}], " ", ",", "Cos\[Theta]b"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "nLeg"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.507438428518114*^9, 3.5074385456068115`*^9}, {
   3.5074386156118155`*^9, 3.507438628039526*^9}, {3.5074388330972548`*^9, 
   3.5074388360294223`*^9}, 3.507439050142669*^9, 3.5074391073129387`*^9, {
   3.5074398373596954`*^9, 3.5074398488463526`*^9}, 3.507461132722235*^9, {
   3.5075221409411974`*^9, 3.507522215945487*^9}, {3.5076133116856003`*^9, 
   3.507613316710887*^9}, {3.5076478832459745`*^9, 3.5076478855041037`*^9}, {
   3.507650506376009*^9, 3.507650515165511*^9}, {3.5076508003818245`*^9, 
   3.5076508042450457`*^9}, {3.507702785886489*^9, 3.5077027943709745`*^9}, {
   3.659675776733437*^9, 3.659675782350647*^9}, {3.659689392639531*^9, 
   3.6596893975658293`*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefaultCCompiler", "[", "]"}]], "Input"],

Cell[BoxData["CCompilerDriver`GCCCompiler`GCCCompiler"], "Output",
 CellChangeTimes->{
  3.659261510312873*^9, 3.6592615790498877`*^9, 3.659261697158907*^9, 
   3.659337243285102*^9, 3.659337285092559*^9, 3.659337333324593*^9, 
   3.659337401485434*^9, 3.659337446622816*^9, 3.659337636628262*^9, 
   3.659337724188753*^9, 3.659337808205524*^9, 3.659347653089858*^9, 
   3.659675204868285*^9, 3.659675784659356*^9, 3.6596770343889523`*^9, 
   3.659689154998259*^9, 3.659690880078796*^9, {3.659768809623199*^9, 
   3.659768824676999*^9}, 3.6597770666640673`*^9, 3.660974215050593*^9, 
   3.660974603037023*^9, 3.660974739028294*^9, 3.660975334651515*^9, 
   3.66097545676469*^9, 3.660975522749703*^9, 3.6609756283920603`*^9, 
   3.660975794663918*^9, 3.660976144704048*^9, 3.660976675375568*^9, 
   3.660976983901095*^9, 3.660977543000688*^9, 3.660977638872993*^9, 
   3.660977805669612*^9, 3.66097793083955*^9, 3.660978337291184*^9, 
   3.660993435985951*^9, 3.661341136936234*^9, 3.661420536016691*^9, 
   3.6614207649711723`*^9, 3.661420997192237*^9, 3.661422798602743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$CCompiler"], "Input",
 CellChangeTimes->{{3.5076487220409503`*^9, 3.5076487220419507`*^9}}],

Cell[BoxData["Automatic"], "Output",
 CellChangeTimes->{3.6609753346887693`*^9, 3.660975456822596*^9, 
  3.660975522801146*^9, 3.660975628438918*^9, 3.6609757947152987`*^9, 
  3.660976144754574*^9, 3.660976675438857*^9, 3.660976983940854*^9, 
  3.6609775430506763`*^9, 3.660977638912456*^9, 3.66097780571075*^9, 
  3.6609779308866253`*^9, 3.660978337339089*^9, 3.6609934360410624`*^9, 
  3.6613411370588923`*^9, 3.661420536137823*^9, 3.661420765081352*^9, 
  3.661420997263751*^9, 3.6614227987068357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", "Automatic"}]], "Input",
 CellChangeTimes->{{3.660975145112666*^9, 3.6609751451214333`*^9}}],

Cell[BoxData["Automatic"], "Output",
 CellChangeTimes->{3.660975334724456*^9, 3.660975456875498*^9, 
  3.660975522846747*^9, 3.66097562848488*^9, 3.6609757947595654`*^9, 
  3.660976144805464*^9, 3.6609766755054693`*^9, 3.660976983980834*^9, 
  3.6609775430999126`*^9, 3.660977638964808*^9, 3.660977805767456*^9, 
  3.660977930933291*^9, 3.660978337373283*^9, 3.660993436088601*^9, 
  3.661341137182172*^9, 3.6614205362575073`*^9, 3.661420765196158*^9, 
  3.661420997344858*^9, 3.6614227988052*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$CCompiler", "=", 
  RowBox[{"DefaultCCompiler", "[", "]"}]}]], "Input",
 CellChangeTimes->{3.5076488032365947`*^9}],

Cell[BoxData["CCompilerDriver`GCCCompiler`GCCCompiler"], "Output",
 CellChangeTimes->{
  3.659261510388772*^9, 3.659261579126333*^9, 3.6592616972503347`*^9, 
   3.6593372433739357`*^9, 3.659337285167034*^9, 3.659337333769999*^9, 
   3.659337401557596*^9, 3.659337446655986*^9, 3.659337636718614*^9, 
   3.6593377242802887`*^9, 3.6593378082990026`*^9, 3.6593476531810083`*^9, 
   3.659675205958947*^9, 3.659675785746212*^9, 3.659677035427478*^9, 
   3.6596891560417643`*^9, 3.6596908801708593`*^9, {3.659768809696714*^9, 
   3.6597688247548933`*^9}, 3.659777066782411*^9, 3.660974215144232*^9, 
   3.6609746031297007`*^9, 3.6609747391196737`*^9, 3.66097533476097*^9, 
   3.660975456930578*^9, 3.660975522897681*^9, 3.660975628539463*^9, 
   3.660975794808218*^9, 3.660976144858375*^9, 3.660976675688175*^9, 
   3.660976984027451*^9, 3.66097754315504*^9, 3.660977639020143*^9, 
   3.660977805822968*^9, 3.6609779309831057`*^9, 3.66097833741584*^9, 
   3.660993436139194*^9, 3.661341137303754*^9, 3.6614205363763027`*^9, 
   3.661420765379706*^9, 3.661420997659181*^9, 3.661422798862892*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"part1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"rb", "^", 
        RowBox[{"(", 
         RowBox[{"2", "n"}], ")"}]}], "/", 
       RowBox[{"ra", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.507689464916191*^9, 3.507689509395735*^9}, 
   3.5076906369382267`*^9, {3.5076950391223993`*^9, 3.5076950423725853`*^9}, 
   3.6596886062641478`*^9, {3.659688814053831*^9, 3.6596888164206743`*^9}, {
   3.659689126738173*^9, 3.659689128033052*^9}, {3.6596892247531013`*^9, 
   3.659689237839781*^9}, {3.659689621500389*^9, 3.6596896513353357`*^9}, {
   3.659690342085038*^9, 3.659690342434844*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part1NEW", "=", 
   RowBox[{"part1", "//", "HornerForm"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.659688613585133*^9, 3.659688617526916*^9}, 
   3.659688656408658*^9, {3.659689130210526*^9, 3.659689136433375*^9}, {
   3.659689228144617*^9, 3.659689232576748*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part2", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ra", "^", 
        RowBox[{"(", 
         RowBox[{"2", "n"}], ")"}]}], "/", 
       RowBox[{"rb", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5076895216674366`*^9, 3.5076895310359726`*^9}, 
   3.507690639825392*^9, {3.5076950474138737`*^9, 3.5076950489799633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part2NEW", "=", 
   RowBox[{"part2", "//", "HornerForm"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6596769704956617`*^9, 3.659676986222657*^9}, {
  3.659689177425458*^9, 3.6596891839848003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part1Da", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rb", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", 
         RowBox[{"ra", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], ",", "ra"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.507689902179201*^9, 3.507689927845669*^9}, 
   3.5076906419355125`*^9, {3.507695051809125*^9, 3.507695053255208*^9}, {
   3.657437286856653*^9, 3.657437287992927*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part1Db", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rb", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", 
         RowBox[{"ra", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], ",", "rb"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5076899397653503`*^9, 3.5076899421784887`*^9}, 
   3.507690644229644*^9, {3.5076950585145082`*^9, 3.507695060200605*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part2Da", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ra", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", 
         RowBox[{"rb", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], ",", "ra"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5076899598585*^9, 3.5076899784725647`*^9}, 
   3.5076906468167915`*^9, {3.507695063993822*^9, 3.5076950653539*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part2Db", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ra", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", 
         RowBox[{"rb", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], ",", "rb"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5076899944314775`*^9, 3.5076900005278263`*^9}, 
   3.5076906493359356`*^9, {3.507695069766152*^9, 3.5076950713472424`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kernel5", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ra", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ca", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"rb", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"cb", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ra", "\[GreaterEqual]", "rb"}], ",", 
         RowBox[{
          RowBox[{"Evaluate", "[", "part1", "]"}], "//", "Evaluate"}], ",", 
         RowBox[{"Evaluate", "[", "part2", "]"}]}], "]"}], "//", "Evaluate"}],
       ",", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      RowBox[{"CompilationOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ExpressionOptimization\>\"", "\[Rule]", "False"}], 
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "kernel", " ", "seems", " ", "to", " ", "be", " ", 
     "fastest"}], ";", " ", 
    RowBox[{
    "tested", " ", "on", " ", "Microsoft", " ", "Visual", " ", "Studio", " ", 
     "Compiler"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5076895352162113`*^9, 3.507689569843192*^9}, {
   3.507689612955658*^9, 3.5076896698039093`*^9}, 3.507690367556819*^9, {
   3.507778970571105*^9, 3.5077789939484425`*^9}, {3.6596760297236147`*^9, 
   3.659676044298897*^9}, 3.6596760853555*^9, {3.659676139402717*^9, 
   3.659676140569154*^9}, {3.659676614276845*^9, 3.65967661558779*^9}, {
   3.659677045678934*^9, 3.65967704902274*^9}, {3.6609769578147573`*^9, 
   3.6609769662457523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kernel5Da", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ra", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ca", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"rb", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"cb", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ra", "\[GreaterEqual]", "rb"}], ",", 
         RowBox[{"Evaluate", "[", "part1Da", "]"}], ",", 
         RowBox[{"Evaluate", "[", "part2Da", "]"}]}], "]"}], "//", 
       "Evaluate"}], ",", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"derivatives", " ", "of", " ", "the", " ", "kernel"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5076900708688493`*^9, 3.507690080796417*^9}, 
   3.5076903715680485`*^9, {3.5077790051120806`*^9, 3.507779014526619*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"kernel5Db", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ra", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ca", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rb", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"cb", ",", "_Real"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ra", "\[GreaterEqual]", "rb"}], ",", 
        RowBox[{"Evaluate", "[", "part1Db", "]"}], ",", 
        RowBox[{"Evaluate", "[", "part2Db", "]"}]}], "]"}], "//", 
      "Evaluate"}], ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.507690092574091*^9, 3.5076900974423695`*^9}, 
   3.5076903737211714`*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"kernel", "[", 
     RowBox[{
      RowBox[{"ra_", "?", "NumericQ"}], ",", 
      RowBox[{"Cos\[Theta]a_", "?", "NumericQ"}], ",", 
      RowBox[{"rb_", "?", "NumericQ"}], ",", 
      RowBox[{"Cos\[Theta]b_", "?", "NumericQ"}], ",", 
      RowBox[{"nLeg_", "?", "NumericQ"}]}], "]"}], ":=", 
    RowBox[{"kernel5", "[", 
     RowBox[{"ra", ",", "Cos\[Theta]a", ",", "rb", ",", "Cos\[Theta]b"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "wrapper", " ", "for", " ", "convenient", " ", "use", " ", "within", " ",
       "Mathematica"}], ";", " ", 
     RowBox[{
     "note", " ", "that", " ", "this", " ", "slow", " ", "down", " ", "by", 
      " ", "a", " ", "factor", " ", "of", " ", "two"}]}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.50769012141274*^9, 3.507690121493745*^9}, {
  3.5077790203389516`*^9, 3.507779053585853*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6596759351277237`*^9, 3.659675938683969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"kernel0", "[", 
     RowBox[{
      RowBox[{"9", "/", "10"}], ",", 
      RowBox[{"4", "/", "10"}], ",", 
      RowBox[{"3", "/", "10"}], ",", 
      RowBox[{"1", "/", "10"}], ",", 
      RowBox[{"2", "^", "nl"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"nl", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.659675249435577*^9, 3.659675266259985*^9}, {
  3.6596753186772203`*^9, 3.659675319891897*^9}, {3.659675802814102*^9, 
  3.659675868716927*^9}, {3.659675940940585*^9, 3.659675954988961*^9}, {
  3.6596761663138323`*^9, 3.659676188953122*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.126679012345679`", ",", "1.126155186042524`", ",", "1.1260360488448327`",
    ",", "1.126035842119338`", ",", "1.126035842115914`", ",", 
   "1.1260358421159142`", ",", "1.126035842115914`", ",", 
   "1.126035842115914`", ",", "1.126035842115914`", ",", "1.126035842115914`",
    ",", "1.1260358421159142`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.659675266650769*^9, 3.659675320553713*^9, {3.659675799566656*^9, 
   3.659675868954282*^9}, {3.659675950441084*^9, 3.659675955391444*^9}, {
   3.659676180185903*^9, 3.6596761910806417`*^9}, 3.659677058000599*^9, 
   3.659689202079896*^9, 3.6596894092435217`*^9, 3.6596908832995253`*^9, 
   3.659768827860821*^9, 3.6597770698904247`*^9, 3.6609742181798573`*^9, 
   3.660974606225979*^9, 3.660974742136526*^9, 3.660975337536129*^9, 
   3.66097546001495*^9, 3.660975527222496*^9, 3.660975639155517*^9, 
   3.66097580119066*^9, 3.660976155455168*^9, 3.660976682491179*^9, 
   3.660976991641261*^9, 3.660977546361005*^9, 3.660977646191573*^9, 
   3.660977812943815*^9, 3.660977938127329*^9, 3.6609783485384274`*^9, 
   3.660993440673749*^9, 3.661341147247263*^9, 3.661420550459656*^9, 
   3.661420778179422*^9, 3.661421003052009*^9, 3.661422804906588*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kernel5", "[", 
  RowBox[{
   RowBox[{"9", "/", "10"}], ",", 
   RowBox[{"4", "/", "10"}], ",", 
   RowBox[{"3", "/", "10"}], ",", 
   RowBox[{"1", "/", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659675269292261*^9, 3.659675283588792*^9}, {
  3.659675968860121*^9, 3.659675977195347*^9}}],

Cell[BoxData["1.126035842119338`"], "Output",
 CellChangeTimes->{
  3.6596752845107203`*^9, 3.659675321671076*^9, 3.659675805566004*^9, 
   3.659675880119183*^9, {3.6596759660191793`*^9, 3.6596759775578547`*^9}, {
   3.659676036627151*^9, 3.659676055551158*^9}, 3.65967609218927*^9, 
   3.659676144630474*^9, 3.6596762762353697`*^9, 3.65967705937493*^9, 
   3.659689206227632*^9, 3.659689412649704*^9, 3.65969088341123*^9, 
   3.659768827928525*^9, 3.659777069987834*^9, 3.660974218469578*^9, 
   3.660974606306685*^9, 3.6609747422166443`*^9, 3.6609753376102533`*^9, 
   3.6609754601051273`*^9, 3.66097552731122*^9, 3.660975639240941*^9, 
   3.660975801274434*^9, 3.6609761555404387`*^9, 3.6609766825837727`*^9, 
   3.6609769917369957`*^9, 3.660977546448337*^9, 3.660977646276532*^9, 
   3.660977813037415*^9, 3.660977938207358*^9, 3.6609783486226883`*^9, 
   3.6609934407504387`*^9, 3.6613411474914417`*^9, 3.661420551084345*^9, 
   3.661420778370804*^9, 3.661421003146894*^9, 3.661422805319496*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"kernel5", "@@", 
     RowBox[{"Join", "[", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", "10000", "}"}]}], "]"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.5075202161841073`*^9, 3.507520277435611*^9}, {
   3.5075205180253716`*^9, 3.5075205183213882`*^9}, {3.507520772799944*^9, 
   3.507520778463268*^9}, {3.5075211912608786`*^9, 3.507521191539894*^9}, {
   3.507521564234211*^9, 3.5075215726756945`*^9}, 3.507612674988183*^9, {
   3.507689578650696*^9, 3.5076895791137223`*^9}, 3.661420562608382*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.040893`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA2ImO9GTNc6vHf3ubrkIordM/vQARPM+WHR4IZB+8+Pi
CRDd1iR8HkQflI2/DqJjtzLdBdEGrUe+gOjIn9v/g+h97ae4FgHpiCuet5cB
aTnlhbt9XV47Mr8qL/AD0tO42utLgPShBydbK4B05KtIwYNurx1Zs684guia
8ItBINrglu1cED3rbu8aEP1g9ZctIFq7/fchEC20yPw6iD54vIX5EJA+45Dk
CqJzV7HngOhUi8iNINpC6+ZeEO3VsPESiDaaGP4IRL8yXSN6GEjzTVAtOQWk
vz5tsC5xf+2odp+RcTaQbvIMkgXRRUfSLUG0/aO1UnOANABURJ+N
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"kernel0", "@@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", "4"}], "]"}], ",", 
       RowBox[{"{", "NL", "}"}]}], "]"}]}], ",", 
    RowBox[{"{", "10000", "}"}]}], "]"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.50752028896327*^9, 3.507520302283032*^9}, {
   3.507520508977854*^9, 3.5075205307290983`*^9}, 3.507612684855747*^9, {
   3.507651843267474*^9, 3.507651843549491*^9}, {3.507690399499646*^9, 
   3.507690400027676*^9}, {3.659689439981823*^9, 3.659689451454234*^9}, 
   3.661420566600706*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.639579`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6592615132778263`*^9, 3.659261582299205*^9, 3.659261704389203*^9, 
   3.6593372457399893`*^9, 3.659337287174046*^9, 3.6593373372619343`*^9, 
   3.659337403591114*^9, 3.659337448684211*^9, 3.6593376387613783`*^9, 
   3.6593377264219513`*^9, 3.659337815165988*^9, 3.659347675233251*^9, {
   3.659689442733664*^9, 3.659689463444087*^9}, 3.659690887806641*^9, 
   3.6597688318848743`*^9, 3.659777074054587*^9, 3.660974222768152*^9, 
   3.660974610212188*^9, 3.6609747462160463`*^9, 3.6609753410693703`*^9, 
   3.660975464134656*^9, 3.660975533627438*^9, 3.660975651061859*^9, 
   3.660975810236751*^9, 3.660976167409382*^9, 3.660976691841217*^9, 
   3.66097700076369*^9, 3.660977550392956*^9, 3.660977655257978*^9, 
   3.660977822072796*^9, 3.660977947174584*^9, 3.66097836060093*^9, 
   3.6609934471553392`*^9, 3.661341154840066*^9, 3.661420564541471*^9, 
   3.661420780057652*^9, 3.661421003931246*^9, 3.661422806190537*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Derivative", "[", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], "[", 
    "kernel", "]"}], "[", 
   RowBox[{
    RowBox[{"ra_", "?", "NumericQ"}], ",", 
    RowBox[{"Cos\[Theta]a_", "?", "NumericQ"}], ",", 
    RowBox[{"rb_", "?", "NumericQ"}], ",", 
    RowBox[{"Cos\[Theta]b_", "?", "NumericQ"}], ",", 
    RowBox[{"nLeg_", "?", "NumericQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"kernel5Da", "[", 
   RowBox[{"ra", ",", "Cos\[Theta]a", ",", "rb", ",", "Cos\[Theta]b"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "derivatives", " ", "of", " ", "the", " ", "kernel", " ", "required", " ", 
    "for", " ", "Jacobian", " ", "generation"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5076901733117085`*^9, 3.5076902045174932`*^9}, {
  3.5077790819574757`*^9, 3.5077790948512135`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Derivative", "[", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "]"}], "[", 
    "kernel", "]"}], "[", 
   RowBox[{
    RowBox[{"ra_", "?", "NumericQ"}], ",", 
    RowBox[{"Cos\[Theta]a_", "?", "NumericQ"}], ",", 
    RowBox[{"rb_", "?", "NumericQ"}], ",", 
    RowBox[{"Cos\[Theta]b_", "?", "NumericQ"}], ",", 
    RowBox[{"nLeg_", "?", "NumericQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"kernel5Db", "[", 
   RowBox[{"ra", ",", "Cos\[Theta]a", ",", "rb", ",", "Cos\[Theta]b"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5076902147770805`*^9, 3.5076902213224545`*^9}}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sysMAIN", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Rho]", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", 
         RowBox[{"\[CapitalPhi]C", "[", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", "-", 
         RowBox[{"4", " ", "Pi", " ", "G", " ", "\[IndentingNewLine]", 
          RowBox[{"Sum", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], "]"}], 
             RowBox[{"\[CapitalDelta]\[Theta]", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "\[IndentingNewLine]", 
             RowBox[{"Sum", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"r", "[", 
                  RowBox[{"[", 
                   RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"\[CapitalDelta]r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", "*", 
                RowBox[{"\[Rho]", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
                "\[IndentingNewLine]", 
                RowBox[{"kernel", "[", "       ", 
                 RowBox[{
                  RowBox[{"r", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                  RowBox[{"r", "[", 
                   RowBox[{"[", 
                    RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"l", ",", "1", ",", "NT"}], "}"}]}], "]"}]}]}], 
        "\[Equal]", "C"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], "//", "Chop"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.5074385508341103`*^9, 3.5074385900853553`*^9}, {
   3.5074386458665457`*^9, 3.507438671720024*^9}, {3.5074387296123357`*^9, 
   3.5074387300413604`*^9}, 3.5075163501109805`*^9, 3.5075164583321705`*^9, 
   3.5075165107831707`*^9, 3.5075165986851983`*^9, {3.5075172640332537`*^9, 
   3.5075172727127504`*^9}, 3.5075175287243934`*^9, 3.507518110292657*^9, {
   3.50751861387146*^9, 3.507518618710737*^9}, {3.5076091073891277`*^9, 
   3.5076091371598306`*^9}, 3.507609493730225*^9, {3.507652639948042*^9, 
   3.507652640276061*^9}, {3.507693109605037*^9, 3.507693110330079*^9}, {
   3.50770281842235*^9, 3.5077028240506716`*^9}}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sysMAINa", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Rho]", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", 
        RowBox[{"\[CapitalPhi]C", "[", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], 
        "\[IndentingNewLine]", "-", 
        RowBox[{"4", " ", "Pi", " ", "G", " ", "\[IndentingNewLine]", 
         RowBox[{"Sum", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "]"}], 
            RowBox[{"\[CapitalDelta]\[Theta]", "[", 
             RowBox[{"[", "l", "]"}], "]"}], " ", "\[IndentingNewLine]", 
            RowBox[{"Sum", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
               RowBox[{"\[CapitalDelta]r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", "*", 
               RowBox[{"\[Rho]", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], "\[IndentingNewLine]", 
               RowBox[{"Sum", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"f", "[", " ", 
                   RowBox[{
                    RowBox[{"2", "n"}], ",", " ", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"l", ",", "m"}], "]"}], "]"}]}], "]"}], " ", 
                  "\[IndentingNewLine]", 
                  RowBox[{"LegendreP", "[", 
                   RowBox[{
                    RowBox[{"2", " ", "n"}], ",", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"LegendreP", "[", 
                   RowBox[{
                    RowBox[{"2", "n"}], " ", ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "NT"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[Equal]", "C"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.507437657043988*^9, 3.507437748915243*^9}, 
   3.5074380012796774`*^9, {3.507439951998252*^9, 3.5074399582966127`*^9}}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sysMAINb", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Rho]", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", 
        RowBox[{"\[CapitalPhi]C", "[", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "-", 
        RowBox[{"4", " ", "Pi", " ", "G", " ", 
         RowBox[{"Sum", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "]"}], 
            RowBox[{"\[CapitalDelta]\[Theta]", "[", 
             RowBox[{"[", "l", "]"}], "]"}], " ", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
            RowBox[{"\[CapitalDelta]r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
            "\[IndentingNewLine]", 
            RowBox[{"f", "[", " ", 
             RowBox[{
              RowBox[{"2", "n"}], ",", " ", 
              RowBox[{"r", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}]}], "]"}], " ", 
            "\[IndentingNewLine]", 
            RowBox[{"LegendreP", "[", 
             RowBox[{
              RowBox[{"2", " ", "n"}], ",", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "*", 
            RowBox[{"LegendreP", "[", 
             RowBox[{
              RowBox[{"2", "n"}], " ", ",", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}], "*", 
            RowBox[{"\[Rho]", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "NL"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], 
       "\[Equal]", "C"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.507005159890703*^9, 3.5070053238530817`*^9}, {
   3.5070054843052588`*^9, 3.5070054924607253`*^9}, {3.5070058626849008`*^9, 
   3.5070059195541534`*^9}, {3.507005952599044*^9, 3.5070059580653563`*^9}, 
   3.5070872446347303`*^9, {3.5070874972651796`*^9, 3.5070874977172055`*^9}, {
   3.507091998637644*^9, 3.5070920125914416`*^9}, {3.507092054081815*^9, 
   3.5070920556309032`*^9}, {3.507092296963707*^9, 3.5070923039051037`*^9}, 
   3.5070925424217463`*^9, {3.5070926607465143`*^9, 3.507092661756572*^9}, {
   3.507092962303762*^9, 3.5070929711022654`*^9}, 3.5072749958259983`*^9, {
   3.5074332442595916`*^9, 3.507433269948061*^9}, 3.5074380126783295`*^9, {
   3.5074399656560335`*^9, 3.5074399713133574`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vars", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"R", ",", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "\[Rho]", "]"}], ",", "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"C", ",", "\[Rho]C", ",", "\[CapitalOmega]0"}], "}"}]}], 
     "]"}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"unknown", " ", 
     RowBox[{"variables", ":", " ", "density"}]}], ",", " ", "surface", ",", 
    " ", 
    RowBox[{"central", " ", "density"}], ",", " ", 
    RowBox[{"parameter", " ", "of", " ", "the", " ", "rotation", " ", "law"}],
     ",", " ", 
    RowBox[{"and", " ", "constant", " ", "C"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.507779102294639*^9, 3.5077791559577084`*^9}, {
   3.5079016905188074`*^9, 3.507901692352913*^9}, 3.6586431036022673`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"kernel", "[", 
    RowBox[{"ra_", ",", "\[Theta]a_", ",", "rb_", ",", "\[Theta]b_"}], "]"}], 
   ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ra", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"4", "Pi", " ", "rb", " ", 
      RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Theta]a", "\[NotEqual]", "\[Theta]b"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"4", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "ra", " ", "rb", " ", 
               RowBox[{"Sin", "[", "\[Theta]a", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
              RowBox[{
               SuperscriptBox["ra", "2"], "+", 
               SuperscriptBox["rb", "2"], "-", 
               RowBox[{"2", " ", "ra", " ", "rb", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]a", "+", "\[Theta]b"}], "]"}]}]}]], "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["ra", "2"], "+", 
             SuperscriptBox["rb", "2"], "-", 
             RowBox[{"2", " ", "ra", " ", "rb", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]a", "+", "\[Theta]b"}], "]"}]}]}]]], "+", 
          FractionBox[
           RowBox[{"4", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "ra", " ", "rb", " ", 
               RowBox[{"Sin", "[", "\[Theta]a", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
              RowBox[{
               SuperscriptBox["ra", "2"], "+", 
               SuperscriptBox["rb", "2"], "+", 
               RowBox[{"2", " ", "ra", " ", "rb", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]a", "-", "\[Theta]b"}], "]"}]}]}]], "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["ra", "2"], "+", 
             SuperscriptBox["rb", "2"], "+", 
             RowBox[{"2", " ", "ra", " ", "rb", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]a", "-", "\[Theta]b"}], "]"}]}]}]]]}], ")"}], 
        RowBox[{"rb", "^", "2"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], "\[IndentingNewLine]", ",", 
       "0"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.507295743532188*^9, 3.507295751295632*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"sysMAIN2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Rho]", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", 
        RowBox[{"\[CapitalPhi]C", "[", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "-", 
        RowBox[{"Sum", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalDelta]\[Theta]", "[", 
            RowBox[{"[", "l", "]"}], "]"}], "  ", 
           RowBox[{"\[CapitalDelta]r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
           "\[IndentingNewLine]", "*", "\[IndentingNewLine]", 
           RowBox[{"kernel", "[", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "l", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
           "*", "\[IndentingNewLine]", 
           RowBox[{"\[Rho]", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"l", ",", "2", ",", "NT"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", 
            RowBox[{"NR", "-", "1"}]}], "}"}]}], "]"}]}], "\[Equal]", "C"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.507266830759983*^9, 3.5072669147187853`*^9}, {
   3.5072669540780363`*^9, 3.5072671021125035`*^9}, 3.507267190880581*^9, {
   3.507267235480132*^9, 3.507267284345927*^9}, {3.507267345865445*^9, 
   3.507267374984111*^9}, {3.5072674389277687`*^9, 3.5072674392447863`*^9}, {
   3.5072683624075885`*^9, 3.507268362523595*^9}, 3.5072684115654*^9, {
   3.5072690813127074`*^9, 3.507269107480204*^9}, {3.507269635214389*^9, 
   3.5072696404776897`*^9}, {3.5072711302959023`*^9, 
   3.5072711644438553`*^9}, {3.5072712033750825`*^9, 3.507271208019348*^9}, {
   3.5072713905067854`*^9, 3.5072714032125125`*^9}, 3.5072714427267723`*^9, {
   3.507274609330892*^9, 3.507274648006104*^9}, 3.507274685721261*^9, {
   3.507277617607956*^9, 3.5072776180169787`*^9}, {3.5072852061854296`*^9, 
   3.507285206444463*^9}, {3.5072852774864836`*^9, 3.507285311982364*^9}, {
   3.5072853602184896`*^9, 3.5072853606170397`*^9}, {3.5072856628574195`*^9, 
   3.5072856673934956`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"potencjal", " ", "w", " ", "centrum"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.507006050245629*^9, 3.5070060558899517`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPhi]0", "=", 
   RowBox[{
    RowBox[{"-", "4"}], " ", "Pi", " ", "G", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "l", "]"}], "]"}], "]"}], " ", 
       RowBox[{"\[CapitalDelta]\[Theta]", "[", 
        RowBox[{"[", "l", "]"}], "]"}], " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], 
          RowBox[{"\[CapitalDelta]r", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
          RowBox[{"\[Rho]", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "NT"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "gravitational", " ", "potential", " ", "at", " ", "the", " ", 
      "center"}], ";", " ", 
     RowBox[{"NOTE", ":", " ", 
      RowBox[{
      "this", " ", "is", " ", "exact", " ", "discretized", " ", 
       "formula"}]}]}], ",", " ", 
    RowBox[{"no", " ", "Legendre", " ", "expansion", " ", "used"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.507087785548669*^9, 3.5070878951099353`*^9}, {
   3.507088438005987*^9, 3.507088439508073*^9}, {3.507271843024668*^9, 
   3.5072718499210625`*^9}, {3.50768843424424*^9, 3.50768843651637*^9}, {
   3.507691442954328*^9, 3.5076914504817586`*^9}, 3.507692564284847*^9, {
   3.5077791799270797`*^9, 3.5077792316950407`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eq0", "=", 
    RowBox[{
     RowBox[{"\[Rho]C", "+", 
      RowBox[{"\[CapitalPhi]C", "[", "0", "]"}], "+", "\[CapitalPhi]0"}], "==",
      "C"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"center", " ", "is", " ", "treated", " ", "separately"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070879466178813`*^9, 3.507087963346838*^9}, {
   3.5072747571753483`*^9, 3.5072747622886405`*^9}, {3.5073468001420126`*^9, 
   3.507346801772106*^9}, {3.5075155591557407`*^9, 3.5075155622439175`*^9}, {
   3.507518686541617*^9, 3.5075186869736414`*^9}, {3.5075224108066325`*^9, 
   3.507522412062704*^9}, {3.507522654806588*^9, 3.507522655160609*^9}, {
   3.507550087919933*^9, 3.5075500893050117`*^9}, {3.507550805290964*^9, 
   3.5075508062800207`*^9}, {3.507612002640727*^9, 3.507612003900799*^9}, {
   3.507613339555194*^9, 3.5076133403992424`*^9}, {3.507691459630282*^9, 
   3.50769146116637*^9}, 3.507692569951171*^9, {3.5077792390764627`*^9, 
   3.507779247838964*^9}, {3.508137402416909*^9, 3.508137406818161*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqMASS", "=", 
    RowBox[{"M", "==", 
     RowBox[{"4", " ", "Pi", " ", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "]"}], 
         RowBox[{"\[CapitalDelta]\[Theta]", "[", 
          RowBox[{"[", "l", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
         RowBox[{"\[CapitalDelta]r", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
         "*", 
         RowBox[{"\[Rho]", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"equation", " ", "to", " ", "set", " ", "total", " ", "mass"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072946116574483`*^9, 3.507294652123763*^9}, {
   3.50730596513383*^9, 3.507305973911332*^9}, {3.507306335528015*^9, 
   3.5073063359130373`*^9}, {3.507306601161209*^9, 3.507306602281273*^9}, {
   3.5075157331656933`*^9, 3.507515734909793*^9}, {3.5075186323545175`*^9, 
   3.507518632817544*^9}, {3.50752241531189*^9, 3.5075224164409547`*^9}, {
   3.5075226584978*^9, 3.5075226702994747`*^9}, {3.5075500934252477`*^9, 
   3.5075500944003034`*^9}, {3.5075508099192286`*^9, 3.507550810739276*^9}, {
   3.507612008873083*^9, 3.5076120107801924`*^9}, {3.5076133443584685`*^9, 
   3.507613344885499*^9}, {3.5076884439257936`*^9, 3.507688453964368*^9}, {
   3.507691473563079*^9, 3.5076914751301684`*^9}, 3.507692574091408*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqANGMOM", "=", 
    RowBox[{"J", "==", 
     RowBox[{"4", " ", "Pi", " ", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "]"}], 
         RowBox[{"\[CapitalDelta]\[Theta]", "[", 
          RowBox[{"[", "l", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "4"}], " ", 
         RowBox[{"\[CapitalDelta]r", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
         "*", 
         RowBox[{"\[Rho]", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", "\[IndentingNewLine]", 
         RowBox[{"\[CapitalOmega]", "[", "  ", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "equation", " ", "to", " ", "set", " ", "angular", " ", "momentum"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072955292199297`*^9, 3.50729564600861*^9}, {
   3.5073059792476373`*^9, 3.507305989522225*^9}, {3.507306588907508*^9, 
   3.5073065959889126`*^9}, {3.5075157382079816`*^9, 
   3.5075157395910606`*^9}, {3.5075186380588436`*^9, 3.507518638553872*^9}, {
   3.507522421239229*^9, 3.5075224224753*^9}, {3.507522662579033*^9, 
   3.5075226763818226`*^9}, {3.507550097745495*^9, 3.507550098652547*^9}, {
   3.5075508139674606`*^9, 3.5075508147365046`*^9}, {3.507611992978174*^9, 
   3.507611994004233*^9}, {3.5076133491647434`*^9, 3.507613349781779*^9}, {
   3.5076884602407265`*^9, 3.50768846256586*^9}, {3.5076912724765773`*^9, 
   3.5076912729486046`*^9}, 3.507692576789562*^9}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NOTE", ":", " ", 
    RowBox[{
    "mass", " ", "and", " ", "angular", " ", "momentu", " ", "are", " ", 
     "driving", " ", 
     RowBox[{"parameters", ".", " ", "Usually"}]}]}], ",", " ", 
   RowBox[{
   "one", " ", "use", " ", "poorly", " ", "justified", " ", "choice", " ", 
    "of", " ", "parameters"}], ",", " ", 
   RowBox[{"like", " ", "central", " ", "density"}], ",", " ", 
   RowBox[{
   "central", " ", "angular", " ", "momentum", " ", "or", " ", "axis", " ", 
    RowBox[{"ratio", ".", " ", "These"}], " ", "sequences", " ", "have", " ", 
    "at", " ", "least", " ", "the", " ", "same", " ", "mass", " ", "and", " ",
     "angular", " ", 
    RowBox[{"momentum", ":", " ", 
     RowBox[{"you", " ", "can", " ", "compare", " ", 
      RowBox[{"them", ".", " ", "Comparison"}], " ", "of", " ", "structures", 
      " ", "with", " ", "different", " ", "mass", " ", "and", " ", "angular", 
      " ", "momentum", " ", "is", " ", 
      RowBox[{"nonsense", "!"}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.50777926157475*^9, 3.5077794118413444`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Left", "-", 
    RowBox[{"hand", " ", "side", " ", "of", " ", "equations", " ", 
     RowBox[{"(", 
      RowBox[{"with", " ", "-", "C"}], " ", ")"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fLHS", "=", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", "vars", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Rho]C", "+", 
           RowBox[{"\[CapitalPhi]C", "[", "0", "]"}], "+", "\[CapitalPhi]0", 
           "-", "C"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"M", "-", 
           RowBox[{"4", " ", "Pi", " ", 
            RowBox[{"Sum", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], "]"}], 
               RowBox[{"\[CapitalDelta]\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], " ", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
               RowBox[{"\[CapitalDelta]r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
               "\[IndentingNewLine]", "*", 
               RowBox[{"\[Rho]", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"J", "-", 
           RowBox[{"4", " ", "Pi", " ", 
            RowBox[{"Sum", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], "]"}], 
               RowBox[{"\[CapitalDelta]\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], " ", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "4"}], " ", 
               RowBox[{"\[CapitalDelta]r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
               "\[IndentingNewLine]", "*", 
               RowBox[{"\[Rho]", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
               "\[IndentingNewLine]", 
               RowBox[{"\[CapitalOmega]", "[", "  ", 
                RowBox[{
                 RowBox[{"r", "[", 
                  RowBox[{"[", 
                   RowBox[{"l", ",", "m"}], "]"}], "]"}], 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", 
                   RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", 
            RowBox[{"\[CapitalPhi]C", "[", 
             RowBox[{
              RowBox[{"r", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "-", 
            RowBox[{"4", " ", "Pi", " ", 
             RowBox[{"Sum", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "]"}], 
                RowBox[{"\[CapitalDelta]\[Theta]", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], " ", 
                RowBox[{
                 RowBox[{"r", "[", 
                  RowBox[{"[", 
                   RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"\[CapitalDelta]r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
                "\[IndentingNewLine]", 
                RowBox[{"kernel", "[", " ", 
                 RowBox[{
                  RowBox[{"r", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                  RowBox[{"r", "[", 
                   RowBox[{"[", 
                    RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}],
                 "\[IndentingNewLine]", "*", 
                RowBox[{"\[Rho]", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], "-", 
            "C"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
       "Flatten"}]}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"RuntimeAttributes", "\[Rule]", 
        RowBox[{"{", "Listable", "}"}]}], ",", 
       RowBox[{"Parallelization", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CompilationOptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<ExpressionOptimization\>\"", "\[Rule]", "True"}], 
         "}"}]}], ",", " ", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.507612017645585*^9, 3.507612065484321*^9}, {
   3.5076121809289246`*^9, 3.507612196150795*^9}, {3.5076124463991084`*^9, 
   3.507612446689125*^9}, {3.507612852254322*^9, 3.5076128540664253`*^9}, {
   3.507612884876188*^9, 3.507612916977024*^9}, {3.507612954190152*^9, 
   3.507612981283702*^9}, {3.5076130327306447`*^9, 3.507613040100066*^9}, {
   3.50761314821725*^9, 3.507613150451378*^9}, {3.507648930883896*^9, 
   3.5076489577394314`*^9}, {3.507649015096712*^9, 3.507649046666518*^9}, {
   3.507649571947562*^9, 3.5076495971650047`*^9}, {3.507651067831122*^9, 
   3.5076510700722504`*^9}, {3.5076512042099223`*^9, 
   3.5076512170656576`*^9}, {3.5076515933091774`*^9, 
   3.5076515955803075`*^9}, {3.50765163147336*^9, 3.5076516325394216`*^9}, {
   3.5076518626445827`*^9, 3.5076518652647324`*^9}, {3.5076519395459814`*^9, 
   3.507651941553096*^9}, {3.5076520635350733`*^9, 3.5076521136029367`*^9}, {
   3.507652663430385*^9, 3.507652663742403*^9}, {3.507688477725727*^9, 
   3.5076884812979307`*^9}, {3.507690280264826*^9, 3.5076902822249384`*^9}, {
   3.50769151572449*^9, 3.5076915172735786`*^9}, 3.5076915911178026`*^9, {
   3.507693596852906*^9, 3.507693600312104*^9}, {3.5077794303834047`*^9, 
   3.50777945162862*^9}, 3.6572813461686687`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"fLHS", "@@", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "vars", "]"}]}], "]"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.5076978286689525`*^9, 3.5076978316811247`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "I", " ", "have", " ", "still", " ", "troubles", " ", "with", " ", 
    "Jacobian", " ", 
    RowBox[{"generation", ".", " ", "Naively"}]}], ",", " ", 
   RowBox[{
   "you", " ", "can", " ", "just", " ", "differentiate", " ", "equations", 
    " ", "with", " ", "respect", " ", "to", " ", "variables", " ", "using", 
    " ", "symbolic", " ", "capabilities", " ", "of", " ", 
    RowBox[{"Mathematica", ".", " ", "Unfortunately"}], " ", "this", " ", 
    "is", " ", "unusually", " ", 
    RowBox[{"slow", ".", " ", "Below"}], " ", "is", " ", "slightly", " ", 
    "better", " ", "approach", " ", "with", " ", "derived", " ", "formulae", 
    " ", "for", " ", "jacobian"}], ",", " ", 
   RowBox[{
   "but", " ", "still", " ", "generation", " ", "time", " ", "is", " ", 
    "proportional", " ", "to", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"NT", "*", "NR"}], ")"}], "^", "3."}], " ", "Once", " ", 
    "Jacobian", " ", "is", " ", "generated"}], ",", " ", 
   RowBox[{
   "FindRoot", " ", "solves", " ", "system", " ", "of", " ", "equations", " ",
     "in", " ", "few", " ", "steps"}], ",", " ", 
   RowBox[{
    RowBox[{"and", " ", "few", " ", 
     RowBox[{"seconds", ".", " ", "But"}], " ", "you", " ", "must", " ", "do",
      " ", "this", " ", 
     RowBox[{"once", ".", " ", "Pre"}]}], "-", 
    RowBox[{
    "calculated", " ", "Jacobians", " ", "are", "  ", "stored", " ", "on", 
     " ", "disk", "  ", "for", " ", "convenience"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.5077794765700464`*^9, 3.5077796984047346`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Jacobian", " ", "generation", " ", 
    RowBox[{"starts", ".", " ", "Skip"}], " ", "if", " ", "you", " ", 
    "prefer", " ", "to", " ", "use", " ", "pre"}], "-", 
   RowBox[{"calculated", " ", 
    RowBox[{"one", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.507779705505141*^9, 3.5077797279564247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drlmk", "=", 
  RowBox[{"SparseArray", "@", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
       RowBox[{"vars", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5077039955226765`*^9, 3.5077040489867344`*^9}, {
   3.5077040857088346`*^9, 3.5077041082161217`*^9}, 3.5077178574087076`*^9, {
   3.5077182082277737`*^9, 3.507718208589794*^9}, {3.507719141632161*^9, 
   3.507719145037356*^9}, {3.5077344625694685`*^9, 3.507734468256794*^9}, {
   3.508909095089095*^9, 3.5089090960781517`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["64", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "67"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["64", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "67"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.014925373134328358`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "8"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "4"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["3", "8"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "2"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<64>, {8, 8, 67}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6592615134867764`*^9, 3.659261583673888*^9, 
  3.6592617069807587`*^9, 3.659337247063353*^9, 3.6593372884628897`*^9, 
  3.659337338851301*^9, 3.659337404884138*^9, 3.659337450001274*^9, 
  3.659337640031322*^9, 3.659337727603208*^9, 3.6593378160464287`*^9, 
  3.6593476770728617`*^9, 3.659690890117087*^9, 3.6597688345898323`*^9, 
  3.659777076019208*^9, 3.6609742241290197`*^9, 3.660974611469035*^9, 
  3.660974747452424*^9, 3.6609753423052177`*^9, 3.660975465221698*^9, 
  3.66097553475556*^9, 3.6609756522542877`*^9, 3.660975811469954*^9, 
  3.660976169408598*^9, 3.660976693097534*^9, 3.660977001977975*^9, 
  3.6609775515220947`*^9, 3.660977656446903*^9, 3.660977823245749*^9, 
  3.660977948410159*^9, 3.660978361858367*^9, 3.660993449374316*^9, 
  3.661341160037141*^9, 3.661420568183908*^9, 3.6614207820546503`*^9, 
  3.66142100548053*^9, 3.6614228091550827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d\[CapitalDelta]rlmk", "=", 
  RowBox[{"SparseArray", "@", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[CapitalDelta]r", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
       RowBox[{"vars", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.507704075572255*^9, 3.507704081523595*^9}, {
   3.507704117587658*^9, 3.5077041282292666`*^9}, 3.507717860716897*^9, 
   3.5077191386449904`*^9, {3.507734489225993*^9, 3.5077344945442977`*^9}, {
   3.508909101159443*^9, 3.5089091020274925`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["56", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "67"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["56", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "67"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.013059701492537313`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "8"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "8"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "8"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "8"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<56>, {8, 8, 67}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.659261513549653*^9, 3.659261584096394*^9, 
  3.6592617083714657`*^9, 3.659337247462722*^9, 3.659337288797723*^9, 
  3.659337339202449*^9, 3.659337405231184*^9, 3.659337450382929*^9, 
  3.6593376403981028`*^9, 3.6593377279640007`*^9, 3.659337816787094*^9, 
  3.659347678408149*^9, 3.65969089189778*^9, 3.65976883609832*^9, 
  3.659777077377864*^9, 3.660974224579524*^9, 3.660974611773954*^9, 
  3.660974747766021*^9, 3.6609753425899143`*^9, 3.6609754655470457`*^9, 
  3.6609755350660887`*^9, 3.660975652607834*^9, 3.660975811817865*^9, 
  3.660976170451249*^9, 3.6609766934813337`*^9, 3.6609770022979603`*^9, 
  3.660977551921402*^9, 3.660977656803369*^9, 3.660977823626791*^9, 
  3.660977948781508*^9, 3.660978362211872*^9, 3.660993450858355*^9, 
  3.6613411606953793`*^9, 3.661420568710869*^9, 3.661420782236829*^9, 
  3.661421005744066*^9, 3.661422809467023*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"dir", "<>", "\"\<dKlmijk_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"dKlmijk", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"dir", "<>", "\"\<dKlmijk_\>\"", "<>", 
      RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timer", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dKlmijk", "=", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "@", 
      RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], 
            "[", "kernel", "]"}], "[", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], 
          RowBox[{"drlmk", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "+", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", 
             RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "]"}], 
            "[", "kernel", "]"}], "[", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], 
          RowBox[{"drlmk", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m", ",", "k"}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NR"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<dKlmijk_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "dKlmijk"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.50770413894588*^9, 3.5077041452242384`*^9}, {
   3.50770430574842*^9, 3.5077044863617506`*^9}, {3.507707528050725*^9, 
   3.507707530697877*^9}, {3.507708634315*^9, 3.5077086389612656`*^9}, {
   3.5077094043010406`*^9, 3.50770940463906*^9}, {3.5077094534658527`*^9, 
   3.5077094537928715`*^9}, 3.5077178994151106`*^9, 3.507718021300082*^9, {
   3.507719128099387*^9, 3.507719129845487*^9}, 3.5077193863911605`*^9, 
   3.507719439214182*^9, {3.507721215381773*^9, 3.5077212379190617`*^9}, {
   3.5077345074650364`*^9, 3.5077345128003416`*^9}, {3.5077345653353467`*^9, 
   3.507734566462411*^9}, {3.657346671838874*^9, 3.657346674817206*^9}, {
   3.658643130992991*^9, 3.658643195201521*^9}, {3.65925991239683*^9, 
   3.659259937128235*^9}, 3.659260041991856*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7680", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "8", ",", "8", ",", "67"}], 
                    "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7680", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "8", ",", "8", ",", "67"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.027985074626865673`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "8"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    "+", 
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "8"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "4"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    "+", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "4"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "3", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "R1"}], "8"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    "+", 
                    RowBox[{
                    FractionBox["3", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "R1"}], "8"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "4", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "2"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "2"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<7680>, {8, 8, 8, 8, 67}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6613411612906017`*^9, 3.661420574524448*^9, 
  3.6614207837419024`*^9, 3.661421006265039*^9, 3.66142280997469*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d\[Rho]lmk", "=", 
  RowBox[{"SparseArray", "@", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Rho]", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
       RowBox[{"vars", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5077041640203133`*^9, 3.507704186597605*^9}, 
   3.5077180258353415`*^9, 3.5077191372479105`*^9, {3.5077346036535387`*^9, 
   3.5077346087838316`*^9}, {3.5089091205815535`*^9, 3.508909121499606*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["56", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "67"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["56", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "67"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.013059701492537313`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "9"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "10"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "11"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4", ",", "12"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<56>, {8, 8, 67}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6592615137809553`*^9, 3.6592615843748217`*^9, 
  3.6592641465819597`*^9, 3.659337247627174*^9, 3.659337288985838*^9, 
  3.6593373394431562`*^9, 3.659337405446301*^9, 3.659337450619149*^9, 
  3.659337640603435*^9, 3.659337728161215*^9, 3.659337863927959*^9, 
  3.659349869957385*^9, 3.659693394655827*^9, 3.65976890068332*^9, 
  3.659777136704382*^9, 3.660974231502997*^9, 3.660974618701284*^9, 
  3.660974766878347*^9, 3.660975342664029*^9, 3.660975465688443*^9, 
  3.660975537563779*^9, 3.660975712168084*^9, 3.660975828952374*^9, 
  3.660976214890642*^9, 3.660976695274213*^9, 3.6609770040716467`*^9, 
  3.660977553700171*^9, 3.66097765692912*^9, 3.660977824294289*^9, 
  3.660977949619296*^9, 3.660978368042077*^9, 3.660997896045889*^9, 
  3.661341161603607*^9, 3.661420574914804*^9, 3.661421006399427*^9, 
  3.661422810066551*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"timer", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"dlmijkNEW", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"SparseArray", "@", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
           RowBox[{"drlmk", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m", ",", "k"}], "]"}], "]"}], "*", 
           RowBox[{"\[CapitalDelta]r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
           RowBox[{"kernel", "[", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], "*", 
           RowBox[{"\[Rho]", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
          "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
           RowBox[{"d\[CapitalDelta]rlmk", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m", ",", "k"}], "]"}], "]"}], "*", " ", 
           RowBox[{"kernel", "[", " ", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], "*", 
           RowBox[{"\[Rho]", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
          "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
           RowBox[{"\[CapitalDelta]r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
           RowBox[{"dKlmijk", "[", 
            RowBox[{"[", " ", 
             RowBox[{"l", ",", "m", ",", "i", ",", "j", ",", "k"}], "]"}], 
            "]"}], "*", 
           RowBox[{"\[Rho]", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
          "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
           RowBox[{"\[CapitalDelta]r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
           RowBox[{"kernel", "[", " ", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], "*", 
           RowBox[{"d\[Rho]lmk", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m", ",", "k"}], "]"}], "]"}]}]}], 
         "\[IndentingNewLine]", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "NR"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], "-", "timer"}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.5077075455187244`*^9, 3.5077076419462395`*^9}, {
   3.5077076885569057`*^9, 3.5077078062666388`*^9}, {3.507707863307901*^9, 
   3.5077078638399315`*^9}, {3.5077081638490906`*^9, 3.507708168434353*^9}, {
   3.5077082316129665`*^9, 3.5077082352501745`*^9}, {3.5077082677630343`*^9, 
   3.5077082694251294`*^9}, 3.507718039314112*^9, {3.507718236381384*^9, 
   3.5077182376494565`*^9}, 3.507718276596684*^9, 3.5077183170980005`*^9, 
   3.5077184807393603`*^9, {3.5077186750514746`*^9, 3.5077187215111313`*^9}, {
   3.507719078654559*^9, 3.5077191090692987`*^9}, {3.5077191535468426`*^9, 
   3.507719158909149*^9}, {3.50771920508479*^9, 3.5077192070019*^9}, {
   3.507734623718686*^9, 3.507734646147969*^9}, 3.657523685313203*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"dir", "<>", "\"\<dlmijkNEW_\>\"", "<>", 
      RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<.m\>\""}], ",", 
     "dlmijkNEW"}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5090101046753874`*^9, 3.5090101147189617`*^9}, {
   3.657346761164536*^9, 3.657346765036626*^9}, {3.657437352519321*^9, 
   3.657437353255307*^9}, 3.657523695087975*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"dir", "<>", "\"\<dlmijkOLD_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"dlmijkOLD", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"dir", "<>", "\"\<dlmijkOLD_\>\"", "<>", 
      RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timer", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dlmijkOLD", "=", 
     RowBox[{"SparseArray", "@", 
      RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
           RowBox[{"\[CapitalDelta]r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
           "\[IndentingNewLine]", 
           RowBox[{"kernel", "[", " ", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], 
           "\[IndentingNewLine]", "*", 
           RowBox[{"\[Rho]", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"vars", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
        ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"D", " ", "ends"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NR"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<dlmijkOLD_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "dlmijkOLD"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5076972285376267`*^9, 3.507697295019429*^9}, {
   3.50769734923853*^9, 3.507697395634184*^9}, {3.5076974275570097`*^9, 
   3.507697469497409*^9}, {3.5076976031320524`*^9, 3.5076976137086573`*^9}, {
   3.5077028567855444`*^9, 3.5077028820849915`*^9}, 3.5077037750630665`*^9, {
   3.5077078741295195`*^9, 3.5077078745925465`*^9}, 3.507718438649953*^9, {
   3.50771866186572*^9, 3.5077186639098372`*^9}, 3.5077187317467175`*^9, {
   3.507718989615466*^9, 3.507718992515632*^9}, {3.5077346581916575`*^9, 
   3.507734665136055*^9}, {3.658643537260208*^9, 3.658643589724058*^9}, {
   3.659260070566908*^9, 3.659260092966606*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10304", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "8", ",", "8", ",", "67"}], 
                    "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10304", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "8", ",", "8", ",", "67"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.03754664179104478`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["3", "512"], " ", 
                    SuperscriptBox["R1", "2"], " ", "\[Rho]1x1", " ", 
                    RowBox[{"kernel", "[", 
                    RowBox[{
                    FractionBox["R1", "8"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    "+", 
                    RowBox[{
                    FractionBox["1", "512"], " ", 
                    SuperscriptBox["R1", "3"], " ", "\[Rho]1x1", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "8"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    "+", 
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "8"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}]}], 
                    ")"}]}]}], ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "9"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", "512"], " ", 
                    SuperscriptBox["R1", "3"], " ", 
                    RowBox[{"kernel", "[", 
                    RowBox[{
                    FractionBox["R1", "8"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "1"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["3", "512"], " ", 
                    SuperscriptBox["R1", "2"], " ", "\[Rho]1x1", " ", 
                    RowBox[{"kernel", "[", 
                    RowBox[{
                    FractionBox["R1", "4"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    "+", 
                    RowBox[{
                    FractionBox["1", "512"], " ", 
                    SuperscriptBox["R1", "3"], " ", "\[Rho]1x1", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "4"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    "+", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{
                    SuperscriptBox["kernel", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    ")"}], Derivative], MultilineFunction -> None], "[", 
                    RowBox[{
                    FractionBox["R1", "4"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}]}], 
                    ")"}]}]}], ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "9"}], 
                    "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", "512"], " ", 
                    SuperscriptBox["R1", "3"], " ", 
                    RowBox[{"kernel", "[", 
                    RowBox[{
                    FractionBox["R1", "4"], ",", "1", ",", 
                    FractionBox["R1", "8"], ",", "1", ",", "8"}], "]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<10304>, {8, 8, 8, 8, 67}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.661341162504293*^9, 3.661420586176156*^9, 
  3.6614210070206337`*^9, 3.661422811025467*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dlmijkOLD", "-", "dlmijkNEW"}], "//", "Simplify"}], "//", 
    "Flatten"}], "//", "Tr"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5077079719511147`*^9, 3.5077079793205366`*^9}, {
   3.507708076208078*^9, 3.507708084041526*^9}, {3.5077083740611143`*^9, 
   3.507708376101231*^9}, {3.5077087267232857`*^9, 3.5077087287814035`*^9}, {
   3.5077088664352765`*^9, 3.5077088853223567`*^9}, {3.5077185305222073`*^9, 
   3.5077185330893545`*^9}, {3.507718846608287*^9, 3.5077188482243795`*^9}, {
   3.5077189579656563`*^9, 3.5077189654300833`*^9}, {3.507719002891226*^9, 
   3.507719007310478*^9}, {3.50771917675217*^9, 3.507719182394493*^9}, {
   3.507720311940099*^9, 3.5077203294911027`*^9}, 3.6575237016148567`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"jac", "=", 
    RowBox[{"Table", "[", 
     RowBox[{",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vars", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.507693724061182*^9, 3.50769372927148*^9}, 
   3.6575236702583847`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"totaltimer", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{"ii", "\[LessEqual]", 
       RowBox[{"Length", "[", "vars", "]"}]}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"timer", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"jac", "[", 
         RowBox[{"[", "ii", "]"}], "]"}], "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"fLHS", "@@", "vars"}], ")"}], "[", 
             RowBox[{"[", "ii", "]"}], "]"}], ",", 
            RowBox[{"vars", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Eq=\>\"", ",", "ii", ",", "\"\<\\tTime=\>\"", ",", 
         RowBox[{
          RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}], ",", 
         "\"\<\\tTotal time=\>\"", ",", 
         RowBox[{
          RowBox[{"AbsoluteTime", "[", "]"}], "-", "totaltimer"}]}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5076499279679255`*^9, 3.5076499937006855`*^9}, {
   3.507650063034651*^9, 3.507650065356784*^9}, {3.5076505509945607`*^9, 
   3.5076505529136705`*^9}, 3.5076884990819483`*^9, 3.507690449467504*^9, {
   3.507690758192162*^9, 3.507690774547097*^9}, {3.507691168948656*^9, 
   3.5076911699437127`*^9}, {3.5076937529338336`*^9, 
   3.5076938170605016`*^9}, {3.507694456692086*^9, 3.5076944600692797`*^9}, 
   3.5076951753731923`*^9, {3.5076967134681664`*^9, 3.507696763980056*^9}, {
   3.507697846249958*^9, 3.5076978472360144`*^9}, 3.657523666292839*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"timer", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"jacPARTNEWa", "=", 
    RowBox[{
     RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"D", "[", 
             RowBox[{"C", ",", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], 
           "\[IndentingNewLine]", "+", "\[IndentingNewLine]", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Rho]", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
           "+", "\[IndentingNewLine]", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[CapitalPhi]C", "[", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"end", " ", "of", " ", "NON"}], "-", 
            RowBox[{"gravitational", " ", "part"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "\[IndentingNewLine]",
          "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}], "//", 
     "Transpose"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.5090101784466066`*^9, 3.509010187719137*^9}, {
   3.509010248977641*^9, 3.5090102506097345`*^9}, 3.657523653588141*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"timer", "=", 
    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"jacPARTNEWb", "=", 
    RowBox[{
     RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[IndentingNewLine]", "4"}], " ", "Pi", " ", 
           RowBox[{"Sum", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], "]"}], 
              RowBox[{"\[CapitalDelta]\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], " ", "\[IndentingNewLine]", 
              "*", "\[IndentingNewLine]", 
              RowBox[{"dlmijkOLD", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m", ",", "i", ",", "j", ",", "k"}], "]"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "\[IndentingNewLine]",
          "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}], "//", 
     "Transpose"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.5090102568460913`*^9, 3.5090102730930204`*^9}, 
   3.657523640052717*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"dir", "<>", "\"\<jacPARTNEWa_\>\"", "<>", 
      RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<.m\>\""}], ",", 
     "jacPARTNEWa"}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5090103378947268`*^9, 3.509010339328809*^9}, {
   3.657346884203774*^9, 3.657346887723639*^9}, {3.657437420566598*^9, 
   3.657437421302576*^9}, 3.657523645135057*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"dir", "<>", "\"\<jacPARTNEWb_\>\"", "<>", 
      RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<.m\>\""}], ",", 
     "jacPARTNEWb"}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5090102946542535`*^9, 3.5090103147174015`*^9}, {
   3.6573468908117723`*^9, 3.657346895323537*^9}, {3.657437423974656*^9, 
   3.657437424662505*^9}, 3.657523648431921*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"dir", "<>", "\"\<jac_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jac", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"dir", "<>", "\"\<jac_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
    ";"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timer", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"jacPARTNEW", "=", 
     RowBox[{
      RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D", "[", 
              RowBox[{"C", ",", 
               RowBox[{"vars", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "+", "\[IndentingNewLine]", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[Rho]", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]",
             "+", "\[IndentingNewLine]", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[CapitalPhi]C", "[", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"end", " ", "of", " ", "NON"}], "-", 
              RowBox[{"gravitational", " ", "part"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", "-", "\[IndentingNewLine]", 
            RowBox[{"4", " ", "Pi", " ", 
             RowBox[{"Sum", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "]"}], 
                RowBox[{"\[CapitalDelta]\[Theta]", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], " ", "\[IndentingNewLine]", 
                "*", "\[IndentingNewLine]", 
                RowBox[{"dlmijkOLD", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m", ",", "i", ",", "j", ",", "k"}], 
                  "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}], "//", 
      "Transpose"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"jacCENTER", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", " ", 
        RowBox[{
         RowBox[{"\[Rho]C", "+", 
          RowBox[{"\[CapitalPhi]C", "[", "0", "]"}], "+", "\[CapitalPhi]0", 
          "-", "C"}], ",", 
         RowBox[{"vars", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "    ", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"jacMASS", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", " ", 
        RowBox[{
         RowBox[{"M", "-", 
          RowBox[{"4", " ", "Pi", " ", 
           RowBox[{"Sum", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], "]"}], 
              RowBox[{"\[CapitalDelta]\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], " ", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
              RowBox[{"\[CapitalDelta]r", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
              "\[IndentingNewLine]", "*", 
              RowBox[{"\[Rho]", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{"vars", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "    ", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"jacANG", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"J", "-", 
          RowBox[{"4", " ", "Pi", " ", 
           RowBox[{"Sum", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], "]"}], 
              RowBox[{"\[CapitalDelta]\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], " ", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "4"}], " ", 
              RowBox[{"\[CapitalDelta]r", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
              "\[IndentingNewLine]", "*", 
              RowBox[{"\[Rho]", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
              "\[IndentingNewLine]", 
              RowBox[{"\[CapitalOmega]", "[", "  ", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{"vars", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"jac", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "jacCENTER", "}"}], ",", 
       RowBox[{"{", "jacMASS", "}"}], ",", 
       RowBox[{"{", "jacANG", "}"}], ",", "jacPARTNEW"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<jac_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "jac"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5077017287860265`*^9, 3.507701758066701*^9}, {
   3.5077018290057583`*^9, 3.5077019819445057`*^9}, {3.507702047662265*^9, 
   3.507702050772443*^9}, {3.5077020894216537`*^9, 3.5077020948749657`*^9}, {
   3.507702340516015*^9, 3.5077023539647846`*^9}, {3.507703782561496*^9, 
   3.5077037863007097`*^9}, {3.507720365512163*^9, 3.507720365903186*^9}, {
   3.507721635914826*^9, 3.5077216380579486`*^9}, {3.50773482082296*^9, 
   3.507734839920052*^9}, {3.507734933758419*^9, 3.507734935092496*^9}, {
   3.5090053063999414`*^9, 3.5090053214428024`*^9}, {3.658643663258903*^9, 
   3.658643761502804*^9}, {3.658643826124852*^9, 3.658643828233602*^9}, 
   3.658644347575432*^9, {3.659260173014431*^9, 3.659260194117943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6592396691805983`*^9, 3.659239672890931*^9}}],

Cell[BoxData["99110552"], "Output",
 CellChangeTimes->{3.659261514254417*^9, 3.65926158481122*^9, 
  3.659292238433629*^9, 3.6593372481986847`*^9, 3.659337289224451*^9, 
  3.6593373396748333`*^9, 3.65933740569523*^9, 3.659337450925205*^9, 
  3.6593376408585987`*^9, 3.659337728438569*^9, 3.65933805109547*^9, 
  3.659368701678875*^9, 3.659734685313759*^9, 3.65976914939835*^9, 
  3.6597773713019867`*^9, 3.660974249307436*^9, 3.660974643556326*^9, 
  3.660974812818247*^9, 3.6609753428754873`*^9, 3.660975465990016*^9, 
  3.660975543228755*^9, 3.6609758767597933`*^9, 3.6609767012786713`*^9, 
  3.660977010020303*^9, 3.660977559607044*^9, 3.660977657259403*^9, 
  3.6609778268991213`*^9, 3.6609779525609493`*^9, 3.66097858793852*^9, 
  3.661070036821063*^9, 3.661341165136305*^9, 3.6614205981765423`*^9, 
  3.661421007639963*^9, 3.661422812700885*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"jacPARTNEW", "=", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"dir", "<>", "\"\<jacPARTNEWa_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<.m\>\""}], "]"}], "+", 
     RowBox[{"Import", "[", 
      RowBox[{"dir", "<>", "\"\<jacPARTNEWb_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<.m\>\""}], "]"}]}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5090761415393195`*^9, 3.509076166233732*^9}, {
   3.657346907579709*^9, 3.657346916730514*^9}, {3.657437432854618*^9, 
   3.657437433398415*^9}, {3.657439523680161*^9, 3.65743952440003*^9}, 
   3.657523852637086*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"jacNEW", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"dir", "<>", "\"\<jac_\>\"", "<>", 
      RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5091223239192176`*^9, 3.5091223333777585`*^9}, {
   3.6573469450986023`*^9, 3.6573469547461987`*^9}, {3.6574374632701597`*^9, 
   3.657437467174189*^9}, 3.657523889714085*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"jacNEW", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", 
    RowBox[{"jac", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5076958640715837`*^9, 3.5076958646406164`*^9}, {
   3.507702103405453*^9, 3.5077021584196*^9}, {3.507702239216221*^9, 
   3.5077022883160295`*^9}, {3.507702709609126*^9, 3.507702715174444*^9}, {
   3.5077350912584276`*^9, 3.507735094205596*^9}, 3.65752386870253*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"jacNEW", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "!=", "0"}], ",", "1", ",", 
       "0", ",", 
       RowBox[{"LeafCount", "[", 
        RowBox[{"jacNEW", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", " ", 
       RowBox[{"Length", "[", "vars", "]"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "vars", "]"}], ",", "1"}], "}"}]}], "]"}], "//",
    "MatrixPlot"}], "*)"}]], "Input",
 CellChangeTimes->{{3.50769183689186*^9, 3.507691909506013*^9}, {
   3.507691940688797*^9, 3.507691941110821*^9}, {3.507696235773844*^9, 
   3.5076962428842506`*^9}, {3.5076962839766006`*^9, 3.507696318018548*^9}, {
   3.507720980855359*^9, 3.507721037556602*^9}, {3.5077214603027816`*^9, 
   3.507721479459877*^9}, 3.657446788723955*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Jacobian", " ", "generation", " ", "END", " ", "here"}], " ", 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"fLHS", "@@", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "vars", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", "100", "}"}]}], "]"}], "//", "Timing"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.5076128375544815`*^9, {3.507690899057219*^9, 3.507690904193513*^9}, {
   3.50773513168574*^9, 3.507735134288889*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"sys", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "eq0", "}"}], ",", 
        RowBox[{"{", "eqMASS", "}"}], ",", 
        RowBox[{"{", "eqANGMOM", "}"}], ",", "sysMAIN"}], "]"}], "//", 
      "Flatten"}], "//", "N"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5070879716703143`*^9, 3.5070879882322617`*^9}, 
   3.5072750507741413`*^9, 3.5072772229463825`*^9, 3.507277627631529*^9, 
   3.5072781558697424`*^9, 3.507285217395853*^9, 3.5072856803781443`*^9, {
   3.5072862316191435`*^9, 3.5072862441907396`*^9}, 3.5072863244044256`*^9, {
   3.5072946819564695`*^9, 3.5072946844736133`*^9}, {3.5072956380141525`*^9, 
   3.507295654501096*^9}, {3.507515584652199*^9, 3.507515595523821*^9}, {
   3.507515688404133*^9, 3.5075156887951555`*^9}, {3.5075158190986085`*^9, 
   3.5075158235538635`*^9}, {3.507517249993451*^9, 3.507517251952563*^9}, {
   3.507517282968337*^9, 3.5075172836553764`*^9}, {3.507610189593026*^9, 
   3.5076102091481447`*^9}, 3.507613357616227*^9, {3.5077351372170563`*^9, 
   3.5077351397882032`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"sys", "=", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "eq0", "}"}], ",", 
       RowBox[{"{", "eqMASS", "}"}], ",", 
       RowBox[{"{", "eqANGMOM", "}"}], ",", 
       RowBox[{"fLHS", "@@", "vars"}]}], "]"}], "//", "Flatten"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.507517886115835*^9, 3.5075178920191727`*^9}, {
  3.507550821565895*^9, 3.507550823617012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jac", "//", "ByteCount"}]], "Input",
 CellChangeTimes->{{3.5077908782341843`*^9, 3.507790924190813*^9}, {
  3.507791012877886*^9, 3.5077910129438896`*^9}, {3.507791074518411*^9, 
  3.5077910753324575`*^9}, {3.5078124743477116`*^9, 3.5078124749927483`*^9}, {
  3.5078126524428983`*^9, 3.5078126527829175`*^9}}],

Cell[BoxData["13407168"], "Output",
 CellChangeTimes->{3.659261514344267*^9, 3.659261584885552*^9, 
  3.659292239957045*^9, 3.6593372482539387`*^9, 3.659337289307538*^9, 
  3.659337339839028*^9, 3.659337405770646*^9, 3.659337451156025*^9, 
  3.6593376409555893`*^9, 3.659337728536379*^9, 3.6593380523274*^9, 
  3.65936870282926*^9, 3.65973468691835*^9, 3.6597691512204437`*^9, 
  3.65977737284118*^9, 3.6609742494184313`*^9, 3.660974643683663*^9, 
  3.660974812959791*^9, 3.660975342963255*^9, 3.660975466079184*^9, 
  3.660975543330755*^9, 3.660975876876401*^9, 3.6609767014203587`*^9, 
  3.660977010109079*^9, 3.660977559739582*^9, 3.660977657360303*^9, 
  3.66097782699796*^9, 3.6609779526818438`*^9, 3.660978588157353*^9, 
  3.661070038908689*^9, 3.661341166051049*^9, 3.661420598920026*^9, 
  3.661421007761945*^9, 3.661422813421679*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "jac", "]"}]], "Input",
 CellChangeTimes->{{3.5077801238480687`*^9, 3.507780129502392*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"67", ",", "67"}], "}"}]], "Output",
 CellChangeTimes->{3.659261514501402*^9, 3.659261584927855*^9, 
  3.659292240023631*^9, 3.6593372482801647`*^9, 3.659337289342938*^9, 
  3.6593373398699636`*^9, 3.659337405810425*^9, 3.659337451193697*^9, 
  3.659337641002207*^9, 3.659337728581435*^9, 3.659338052396883*^9, 
  3.659368702875271*^9, 3.6597346869672194`*^9, 3.659769151276946*^9, 
  3.6597773729076147`*^9, 3.660974249462852*^9, 3.6609746437286386`*^9, 
  3.660974812993579*^9, 3.6609753430051193`*^9, 3.6609754661267157`*^9, 
  3.660975543381463*^9, 3.660975876921633*^9, 3.660976701462557*^9, 
  3.660977010132039*^9, 3.660977559800832*^9, 3.660977657415338*^9, 
  3.6609778270515633`*^9, 3.660977952739732*^9, 3.660978588197817*^9, 
  3.661070038949196*^9, 3.661341166136943*^9, 3.66142059897799*^9, 
  3.661421007824613*^9, 3.661422813703828*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "vars", "]"}]], "Input",
 CellChangeTimes->{{3.658643855723873*^9, 3.6586438618321333`*^9}}],

Cell[BoxData["67"], "Output",
 CellChangeTimes->{3.659261514539144*^9, 3.659261584980742*^9, 
  3.659292240031776*^9, 3.659337248307927*^9, 3.659337289379196*^9, 
  3.659337339997388*^9, 3.6593374058434467`*^9, 3.6593374512351627`*^9, 
  3.6593376410481977`*^9, 3.659337728625683*^9, 3.659338052449439*^9, 
  3.659368702910207*^9, 3.659734686973384*^9, 3.659769151307982*^9, 
  3.659777372959345*^9, 3.660974249500987*^9, 3.660974643767481*^9, 
  3.660974813030779*^9, 3.6609753430468893`*^9, 3.6609754661787443`*^9, 
  3.6609755434313583`*^9, 3.66097587696216*^9, 3.660976701504861*^9, 
  3.6609770101523027`*^9, 3.660977559856044*^9, 3.660977657464635*^9, 
  3.660977827102735*^9, 3.660977952786913*^9, 3.6609785882299623`*^9, 
  3.661070038982566*^9, 3.661341166448266*^9, 3.661420599380011*^9, 
  3.661421007941029*^9, 3.661422813805107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "=", "1", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Gravitational", " ", "constant"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070880395881987`*^9, 3.5070880400322247`*^9}, {
  3.5077799509011765`*^9, 3.5077799615137835`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6592615145812597`*^9, 3.6592615850235643`*^9, 
  3.6592922400759993`*^9, 3.659337248337031*^9, 3.6593372894141293`*^9, 
  3.659337340030745*^9, 3.659337405882328*^9, 3.6593374512742167`*^9, 
  3.659337641185767*^9, 3.659337728763863*^9, 3.659338052503087*^9, 
  3.659368702944643*^9, 3.659734687006852*^9, 3.659769151342827*^9, 
  3.659777373012025*^9, 3.6609742495359297`*^9, 3.6609746438121243`*^9, 
  3.660974813080626*^9, 3.660975343084483*^9, 3.660975466223317*^9, 
  3.6609755434769487`*^9, 3.6609758770033407`*^9, 3.660976701559181*^9, 
  3.660977010173785*^9, 3.660977559911621*^9, 3.6609776575185947`*^9, 
  3.660977827158229*^9, 3.6609779527943373`*^9, 3.660978588261673*^9, 
  3.661070039013233*^9, 3.6613411668380537`*^9, 3.661420599501704*^9, 
  3.661421008154858*^9, 3.661422814100876*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Lane", "-", 
      RowBox[{"Emden", " ", "with", " ", "R"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}], " ", "radius", " ", 
       "and", " ", "rhoC"}], "=", "1"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.5072950451642437`*^9, 3.507295047484376*^9}, {
  3.50730709998474*^9, 3.507307129670438*^9}, {3.5073072664902635`*^9, 
  3.507307270265479*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], "2"]], "Output",
 CellChangeTimes->{3.659261514618417*^9, 3.659261585065197*^9, 
  3.65929224012253*^9, 3.6593372483640127`*^9, 3.6593372894491796`*^9, 
  3.6593373400672398`*^9, 3.659337405918254*^9, 3.659337451281098*^9, 
  3.659337641229205*^9, 3.659337728807705*^9, 3.65933805255346*^9, 
  3.659368702979164*^9, 3.659734687046885*^9, 3.659769151383129*^9, 
  3.659777373064204*^9, 3.6609742495734*^9, 3.660974643856227*^9, 
  3.6609748131265907`*^9, 3.660975343248589*^9, 3.66097546626403*^9, 
  3.6609755435275908`*^9, 3.660975877044401*^9, 3.6609767016016207`*^9, 
  3.660977010194934*^9, 3.660977559964881*^9, 3.660977657647593*^9, 
  3.660977827210538*^9, 3.660977952837468*^9, 3.660978588294978*^9, 
  3.661070039046166*^9, 3.661341166910133*^9, 3.6614205996209917`*^9, 
  3.661421008277299*^9, 3.6614228142169857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K", "=", 
  RowBox[{"1", "/", "2"}]}]], "Input",
 CellChangeTimes->{{3.5089082405452185`*^9, 3.5089082419843006`*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.6592615146558657`*^9, 3.6592615851067533`*^9, 
  3.659292240131267*^9, 3.659337248392344*^9, 3.65933728948738*^9, 
  3.659337340105912*^9, 3.659337406057321*^9, 3.659337451318954*^9, 
  3.659337641277956*^9, 3.659337728852874*^9, 3.659338052609599*^9, 
  3.659368703014881*^9, 3.65973468708218*^9, 3.659769151417088*^9, 
  3.659777373116243*^9, 3.660974249614506*^9, 3.660974643899968*^9, 
  3.660974813168638*^9, 3.66097534339222*^9, 3.6609754663873663`*^9, 
  3.660975543574518*^9, 3.6609758770847883`*^9, 3.6609767016508217`*^9, 
  3.6609770102190733`*^9, 3.6609775600159388`*^9, 3.660977657701315*^9, 
  3.660977827264164*^9, 3.660977952881743*^9, 3.660978588328405*^9, 
  3.6610700390538893`*^9, 3.661341167214163*^9, 3.6614205999202023`*^9, 
  3.661421008340398*^9, 3.661422814346629*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NT", "*", "NR"}], "+", "3", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "equations"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.507088462691399*^9, 3.507088466414612*^9}, {
  3.5077799850061274`*^9, 3.5077800033421764`*^9}}],

Cell[BoxData["67"], "Output",
 CellChangeTimes->{3.659261514693953*^9, 3.659261585148322*^9, 
  3.65929224017426*^9, 3.659337248440795*^9, 3.6593372896174097`*^9, 
  3.659337340138669*^9, 3.659337406096328*^9, 3.6593374513599*^9, 
  3.659337641326591*^9, 3.6593377288995037`*^9, 3.659338052660798*^9, 
  3.6593687030494823`*^9, 3.659734687113153*^9, 3.659769151453524*^9, 
  3.65977737316987*^9, 3.660974249653837*^9, 3.660974643942018*^9, 
  3.660974813212163*^9, 3.6609753434891148`*^9, 3.660975466436887*^9, 
  3.6609755436228037`*^9, 3.660975877126272*^9, 3.6609767016984043`*^9, 
  3.660977010241001*^9, 3.6609775600665617`*^9, 3.660977657753726*^9, 
  3.6609778273162622`*^9, 3.660977952927669*^9, 3.660978588361863*^9, 
  3.661070039085178*^9, 3.6613411673425922`*^9, 3.661420600044903*^9, 
  3.6614210084848022`*^9, 3.661422814473846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "vars", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "variables"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.507779988056302*^9, 3.507780009865549*^9}}],

Cell[BoxData[
 RowBox[{"{", "67", "}"}]], "Output",
 CellChangeTimes->{3.659261514732057*^9, 3.659261585189587*^9, 
  3.659292240215352*^9, 3.659337248464983*^9, 3.659337289652651*^9, 
  3.659337340173685*^9, 3.659337406136723*^9, 3.659337451396302*^9, 
  3.659337641378809*^9, 3.6593377289469137`*^9, 3.659338052710847*^9, 
  3.6593687030840073`*^9, 3.659734687144813*^9, 3.659769151488003*^9, 
  3.659777373220192*^9, 3.660974249693172*^9, 3.660974643988222*^9, 
  3.6609748132544317`*^9, 3.6609753436425037`*^9, 3.660975466484606*^9, 
  3.66097554367424*^9, 3.660975877168475*^9, 3.6609767017397337`*^9, 
  3.660977010261839*^9, 3.660977560121482*^9, 3.660977657807543*^9, 
  3.660977827373661*^9, 3.660977952973029*^9, 3.6609785883955507`*^9, 
  3.6610700391172667`*^9, 3.6613411674713593`*^9, 3.6614206003069267`*^9, 
  3.661421008691349*^9, 3.6614228148966618`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"init", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"NT", "*", "NR"}], "+", "2"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.5070880528869596`*^9, 3.5070880676488037`*^9}, {
  3.507088451015731*^9, 3.5070884734550147`*^9}, {3.507294700116508*^9, 
  3.507294700430526*^9}, {3.5073079713755803`*^9, 3.50730797311668*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"initial", " ", "starting", " ", "guess"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.5077800186530523`*^9, 3.507780039723257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"h", "[", "\[Zeta]", "]"}], "/.", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"\[Zeta]", "^", "2"}]}], 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Zeta]", "^", "2"}], " ", 
               RowBox[{
                RowBox[{"h", "'"}], "[", "\[Zeta]", "]"}]}], ",", "\[Zeta]"}],
              "]"}]}], "+", 
           RowBox[{"4", " ", "Pi", " ", 
            RowBox[{
             RowBox[{"G", " ", "/", "2"}], "/", "K"}], " ", 
            RowBox[{"h", "[", "\[Zeta]", "]"}]}]}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"h", "[", "0", "]"}], "==", "\[Rho]C"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
       ",", 
       RowBox[{"h", "[", "\[Zeta]", "]"}], ",", "\[Zeta]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "//", "ComplexExpand"}], "//", 
  "Simplify", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"initial", " ", "values", " ", "from", " ", "Lane"}], "-", 
    RowBox[{"Emden", " ", "equation"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072712823535995`*^9, 3.507271293987265*^9}, {
  3.5083855828327494`*^9, 3.5083855867199717`*^9}, {3.5083856988873873`*^9, 
  3.5083856990633974`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Rho]C", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "]"}]}], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", "\[Zeta]"}]]], "Output",
 CellChangeTimes->{3.659261515210022*^9, 3.6592615856463633`*^9, 
  3.659292240824163*^9, 3.659337248938291*^9, 3.659337290098569*^9, 
  3.659337340608841*^9, 3.659337406581977*^9, 3.659337451948309*^9, 
  3.659337641846017*^9, 3.659337729400963*^9, 3.659338053090743*^9, 
  3.659368703505644*^9, 3.659734687734282*^9, 3.659769152017446*^9, 
  3.659777373678553*^9, 3.66097425013879*^9, 3.660974644441073*^9, 
  3.660974813708159*^9, 3.660975344394616*^9, 3.6609754669400187`*^9, 
  3.660975544133485*^9, 3.660975877612063*^9, 3.660976702213957*^9, 
  3.660977010700384*^9, 3.6609775605849*^9, 3.66097765826604*^9, 
  3.660977827837983*^9, 3.660977953442953*^9, 3.66097858882938*^9, 
  3.661070039679038*^9, 3.661341168739923*^9, 3.661420601425831*^9, 
  3.66142100916971*^9, 3.661422815745751*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{
    RowBox[{"G", ">", "0"}], "&&", 
    RowBox[{"K", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6584955726882706`*^9, 3.6584955938204794`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Rho]C", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "]"}]}], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", "\[Zeta]"}]]], "Output",
 CellChangeTimes->{3.659261515251462*^9, 3.659261585685815*^9, 
  3.659292240865509*^9, 3.6593372489758587`*^9, 3.659337290135745*^9, 
  3.659337340651372*^9, 3.659337406631427*^9, 3.6593374519712067`*^9, 
  3.6593376418862743`*^9, 3.659337729441186*^9, 3.659338053138069*^9, 
  3.6593687035446568`*^9, 3.659734687769513*^9, 3.659769152076408*^9, 
  3.659777373722827*^9, 3.6609742501757803`*^9, 3.6609746444870453`*^9, 
  3.660974813743743*^9, 3.660975344434903*^9, 3.660975466991673*^9, 
  3.6609755441722403`*^9, 3.6609758776504793`*^9, 3.660976702256963*^9, 
  3.660977010725719*^9, 3.660977560773059*^9, 3.660977658311948*^9, 
  3.660977827879931*^9, 3.660977953486886*^9, 3.660978588868155*^9, 
  3.6610700397135897`*^9, 3.661341168960052*^9, 3.6614206017835817`*^9, 
  3.661421009348737*^9, 3.661422816009344*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]LE", "=", 
  RowBox[{
   RowBox[{"Refine", "[", 
    RowBox[{"%", ",", 
     RowBox[{
      RowBox[{"G", ">", "0"}], "&&", 
      RowBox[{"K", ">", "0"}]}]}], "]"}], "/.", 
   RowBox[{"\[Rho]C", "\[Rule]", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.5072949160838604`*^9, 3.5072949273375044`*^9}, 
   3.507307145808361*^9, {3.508385610018305*^9, 3.5083856111193676`*^9}, 
   3.5083857109110756`*^9, {3.508908177794629*^9, 3.5089081887962584`*^9}, {
   3.5089083391718597`*^9, 3.5089083427400637`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "]"}], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", "\[Zeta]"}]]], "Output",
 CellChangeTimes->{3.659261515291666*^9, 3.659261585693062*^9, 
  3.659292240871621*^9, 3.659337249010518*^9, 3.659337290140773*^9, 
  3.659337340694377*^9, 3.6593374066384363`*^9, 3.659337451995719*^9, 
  3.6593376418939323`*^9, 3.659337729448403*^9, 3.65933805314603*^9, 
  3.659368703550783*^9, 3.659734687776245*^9, 3.659769152085269*^9, 
  3.6597773737285233`*^9, 3.6609742501823*^9, 3.6609746444942207`*^9, 
  3.6609748137496023`*^9, 3.6609753445580807`*^9, 3.6609754669982023`*^9, 
  3.660975544177141*^9, 3.660975877655746*^9, 3.6609767024077253`*^9, 
  3.6609770107471657`*^9, 3.660977560782051*^9, 3.6609776583202677`*^9, 
  3.660977828056184*^9, 3.660977953493395*^9, 3.660978588874647*^9, 
  3.661070039718238*^9, 3.661341169163528*^9, 3.6614206018938437`*^9, 
  3.661421009356944*^9, 3.661422816112843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "\[Equal]", "Pi"}], ",", "\[Zeta]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.658495771186624*^9, 3.6584957875395594`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Zeta]", "\[Rule]", 
    FractionBox[
     SqrtBox["\[Pi]"], "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6592615153299513`*^9, 3.659261585729229*^9, 
  3.659292240912902*^9, 3.659337249045128*^9, 3.65933729017456*^9, 
  3.659337340729113*^9, 3.659337406673285*^9, 3.659337452017126*^9, 
  3.65933764194506*^9, 3.659337729494492*^9, 3.659338053201448*^9, 
  3.659368703586067*^9, 3.659734687808008*^9, 3.659769152121327*^9, 
  3.6597773737807913`*^9, 3.660974250223468*^9, 3.660974644539138*^9, 
  3.660974813790922*^9, 3.660975344599128*^9, 3.66097546705013*^9, 
  3.6609755443111267`*^9, 3.660975877694092*^9, 3.660976702415175*^9, 
  3.66097701076818*^9, 3.660977560834429*^9, 3.660977658369397*^9, 
  3.6609778280644207`*^9, 3.660977953543704*^9, 3.6609785889090757`*^9, 
  3.661070039751823*^9, 3.6613411692766047`*^9, 3.661420602014991*^9, 
  3.661421009460758*^9, 3.661422816369977*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "]"}], 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", "\[Zeta]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Zeta]", ",", "0", ",", 
     RowBox[{"Sqrt", "[", "Pi", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6584957453711476`*^9, 3.658495763909208*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi^Rational[1, 2]}, {-0.21723358035128615`, 
     0.9999999999999972}}, {{0, 1.7724538509055159`}, {-0.21723358035128615`, 
     0.9999999999999972}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659261515384014*^9, 3.6592615859787407`*^9, 
  3.6592922411356*^9, 3.659337249153427*^9, 3.65933729027026*^9, 
  3.659337340821431*^9, 3.659337406767023*^9, 3.659337452098089*^9, 
  3.6593376420511847`*^9, 3.659337729602947*^9, 3.659338053269247*^9, 
  3.65936870367972*^9, 3.659734687960005*^9, 3.659769152247045*^9, 
  3.659777373899536*^9, 3.6609742503279123`*^9, 3.660974644734178*^9, 
  3.6609748139823008`*^9, 3.660975344687201*^9, 3.660975467157631*^9, 
  3.6609755444214897`*^9, 3.660975877789196*^9, 3.660976702531225*^9, 
  3.66097701084505*^9, 3.660977560943782*^9, 3.660977658479726*^9, 
  3.6609778281713457`*^9, 3.6609779537832823`*^9, 3.660978589131977*^9, 
  3.6610700399292393`*^9, 3.661341169684758*^9, 3.661420602144638*^9, 
  3.661421009760743*^9, 3.661422816547418*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Rho]LE", "\[Equal]", "0"}], "&&", 
     RowBox[{"\[Zeta]", ">", "0"}]}], ",", "\[Zeta]", ",", "Reals"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.50838580033519*^9, 3.508385824516573*^9}, {
   3.6572802844689426`*^9, 3.6572802853719945`*^9}, 3.657523915598634*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"K", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], "/", "G"}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], "2"]], "Output",
 CellChangeTimes->{3.659261515418633*^9, 3.6592615859940243`*^9, 
  3.659292241485531*^9, 3.659337249403182*^9, 3.6593372903243723`*^9, 
  3.659337340878152*^9, 3.65933740682518*^9, 3.65933745234813*^9, 
  3.6593376423313217`*^9, 3.6593377298494873`*^9, 3.6593380532933197`*^9, 
  3.65936870369869*^9, 3.659734688232018*^9, 3.659769152491378*^9, 
  3.6597773741259327`*^9, 3.660974250498111*^9, 3.660974644759968*^9, 
  3.6609748140085993`*^9, 3.660975344708685*^9, 3.660975467173649*^9, 
  3.6609755444471073`*^9, 3.660975878000436*^9, 3.66097670255803*^9, 
  3.6609770108638153`*^9, 3.660977560965687*^9, 3.6609776584978657`*^9, 
  3.660977828194377*^9, 3.6609779538224688`*^9, 3.660978589178668*^9, 
  3.6610700401102543`*^9, 3.661341169775033*^9, 3.661420602320919*^9, 
  3.661421009781267*^9, 3.661422817154003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"4", " ", "Pi", " ", 
     RowBox[{"\[Zeta]", "^", "2"}], " ", "\[Rho]LE"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Zeta]", ",", "0", ",", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"K", " ", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "/", "G"}]}], "]"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", "MASS", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072947213767242`*^9, 3.5072947966750307`*^9}, {
  3.5073070750533137`*^9, 3.5073070753603315`*^9}, {3.5073071552389*^9, 
  3.5073071560849485`*^9}, {3.5073072017765617`*^9, 3.507307213001204*^9}, {
  3.50730728601438*^9, 3.5073072867954245`*^9}, {3.5083859298655987`*^9, 
  3.508385941996293*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], "2"]], "Output",
 CellChangeTimes->{3.659261515562397*^9, 3.659261586168095*^9, 
  3.65929224164467*^9, 3.659337249565765*^9, 3.659337290476007*^9, 
  3.6593373412197847`*^9, 3.659337406986002*^9, 3.659337452493806*^9, 
  3.659337642493281*^9, 3.659337730007843*^9, 3.659338053440237*^9, 
  3.659368703843575*^9, 3.659734688445816*^9, 3.65976915263237*^9, 
  3.65977737429468*^9, 3.6609742506509933`*^9, 3.6609746449200773`*^9, 
  3.6609748141618843`*^9, 3.660975344821422*^9, 3.660975467331296*^9, 
  3.660975544608267*^9, 3.6609758781482*^9, 3.660976702726964*^9, 
  3.660977010997178*^9, 3.6609775611384497`*^9, 3.66097765865981*^9, 
  3.6609778283681383`*^9, 3.660977954391837*^9, 3.660978589321542*^9, 
  3.661070040251422*^9, 3.6613411702961283`*^9, 3.661420602615131*^9, 
  3.661421009930314*^9, 3.6614228174193783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init2", "=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"R", "/.", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rule", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "]"}], "&"}], 
          ")"}], "/@", "R"}]}], "//", "N"}], ",", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]LE", "/.", 
             RowBox[{"\[Zeta]", "\[Rule]", 
              RowBox[{"r", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "/.", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"#", ",", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "]"}], 
               "&"}], ")"}], "/@", "R"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"NR", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], "//",
        "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}], ",", "0"}], "}"}]}], 
     "]"}], "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Short"}]}], "Input",
 CellChangeTimes->{{3.5071010958159723`*^9, 3.507101098812144*^9}, {
   3.5071011364822984`*^9, 3.5071011652329426`*^9}, 3.507101273724148*^9, {
   3.5071013557798414`*^9, 3.5071013838174453`*^9}, {3.507294861192721*^9, 
   3.507294874896505*^9}, {3.5072956946223907`*^9, 3.5072956948504033`*^9}, {
   3.5073072952639093`*^9, 3.507307297586042*^9}, 3.507434996316804*^9, 
   3.5077885617896914`*^9, 3.507901638681843*^9, {3.5079017835801306`*^9, 
   3.5079018116837378`*^9}, {3.509076667321393*^9, 3.5090766748548236`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
   "0.8862269254527579`", ",", "0.8862269254527579`", ",", 
    "0.8862269254527579`", ",", "0.8862269254527579`", ",", 
    RowBox[{"\[LeftSkeleton]", "60", "\[RightSkeleton]"}], ",", 
    RowBox[{"-", "1.`"}], ",", "0.8862269254527579`", ",", "0.`"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.65926151561586*^9, 3.659261586197254*^9, 
  3.659292241792335*^9, 3.659337249655999*^9, 3.659337290530615*^9, 
  3.65933734126263*^9, 3.659337407248722*^9, 3.659337452541142*^9, 
  3.6593376425459642`*^9, 3.659337730071944*^9, 3.659338053606432*^9, 
  3.659368704184553*^9, 3.659734688699709*^9, 3.659769152779405*^9, 
  3.6597773744675903`*^9, 3.66097425070435*^9, 3.660974644967176*^9, 
  3.66097481421065*^9, 3.660975344855727*^9, 3.66097546757342*^9, 
  3.6609755446523933`*^9, 3.6609758782054577`*^9, 3.66097670279468*^9, 
  3.6609768228668213`*^9, 3.660977011340229*^9, 3.660977561197214*^9, 
  3.660977658941473*^9, 3.6609778284139023`*^9, 3.6609779544863443`*^9, 
  3.660978589386133*^9, 3.661070040447825*^9, 3.661341170414216*^9, 
  3.6614206029412746`*^9, 3.661421009991796*^9, 3.661422817504518*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"rozw", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<E:\\\\temp\\\\EM\\\\Solid_\>\"", "<>", 
      RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_J_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "[", "0.499", "]"}], "]"}], "<>", "\"\<.m\>\""}], "]"}]}],
    ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.509122394624262*^9, 3.5091224059109073`*^9}, {
   3.657347058977503*^9, 3.6573470595460377`*^9}, 3.657437561539302*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{"init2", "=", 
    RowBox[{"vars", "/.", "rozw"}]}], 
   RowBox[{"(*", " ", 
    RowBox[{"use", " ", "for", " ", "RESTART", " ", 
     RowBox[{"ONLY", " ", "!"}]}], " ", "*)"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.5074764024066114`*^9, 3.5074764290831366`*^9}, {
   3.507550837282794*^9, 3.5075508393749137`*^9}, {3.5077836641885643`*^9, 
   3.50778366603767*^9}, 3.5077861701969*^9, {3.507787874193363*^9, 
   3.5077878854780083`*^9}, {3.507905722011396*^9, 3.507905747444851*^9}, {
   3.509122419394678*^9, 3.509122419881706*^9}, 3.657437565086666*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"start", "=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
        RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "0.0", "]"}], "]"}], "<>", "\"\<.m\>\""}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"vars", ",", 
         RowBox[{"vars", "/.", 
          RowBox[{"Import", "[", 
           RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
            RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
            RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
            RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "0.0", "]"}], "]"}], "<>", "\"\<.m\>\""}], 
           "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"vars", ",", "init2"}], "}"}], "]"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"starting", " ", "guess"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070880690698853`*^9, 3.5070880992526116`*^9}, 
   3.5071013610531435`*^9, {3.5077800553781524`*^9, 3.507780059932413*^9}, 
   3.507786175598209*^9, {3.6572856143687954`*^9, 3.6572856370950956`*^9}, {
   3.6593369210271893`*^9, 3.659336999185604*^9}, {3.659337608588297*^9, 
   3.659337620235021*^9}, {3.659337699339486*^9, 3.6593377002026854`*^9}, {
   3.66097683192801*^9, 3.660976835046419*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"vars", ",", "init2"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.660976848839204*^9, 3.6609768538793592`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"start", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6593376822525177`*^9, 3.6593376839137297`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"R1", ",", "0.8862269254527579`"}], "}"}]], "Output",
 CellChangeTimes->{{3.659337684240952*^9, 3.6593377301444693`*^9}, 
   3.6593380537216988`*^9, 3.659368704242029*^9, 3.6597346887583027`*^9, 
   3.659769152857149*^9, 3.659777374589754*^9, 3.6609742507638597`*^9, 
   3.66097464502962*^9, 3.660974814279254*^9, 3.6609753449058037`*^9, 
   3.660975467644788*^9, 3.660975544715847*^9, 3.660975878265613*^9, 
   3.6609767028784103`*^9, 3.660977011526349*^9, 3.660977561287757*^9, 
   3.660977659015296*^9, 3.660977828486567*^9, 3.6609779547438602`*^9, 
   3.6609785894511013`*^9, 3.661070040504279*^9, 3.661341170818365*^9, 
   3.661420603893066*^9, 3.661421010115129*^9, 3.661422817884981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", "=", "0.0"}]], "Input",
 CellChangeTimes->{{3.657444273316474*^9, 3.657444275133006*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.659261515684681*^9, 3.6592615862399607`*^9, 3.65929224185077*^9, 
   3.659337249719612*^9, 3.659337290783638*^9, 3.659337341330038*^9, 
   3.6593374073360643`*^9, 3.659337452696981*^9, 3.659337642629692*^9, {
   3.659337705695332*^9, 3.65933773019059*^9}, 3.659338053778495*^9, 
   3.65936870428069*^9, 3.659734688789248*^9, 3.659769152892892*^9, 
   3.6597773746369457`*^9, 3.660974250804015*^9, 3.660974528623341*^9, 
   3.6609746450692997`*^9, 3.660974814321109*^9, 3.660975344938217*^9, 
   3.660975467694798*^9, 3.660975544763076*^9, 3.660975878303314*^9, 
   3.660976702932095*^9, 3.660976858071751*^9, 3.660977011571206*^9, 
   3.660977561338222*^9, 3.660977659066395*^9, 3.660977828535165*^9, 
   3.660977954791595*^9, 3.660978589485441*^9, 3.6610700405347443`*^9, 
   3.661341171264295*^9, 3.6614206040118647`*^9, 3.6614210102036257`*^9, 
   3.661422818199792*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wynik", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"e", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"j", " ", "=", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"fLHS", "@@", "vars"}], ",", "start", ",", 
           RowBox[{"MaxIterations", "\[Rule]", "400"}], ",", 
           RowBox[{"EvaluationMonitor", "\[RuleDelayed]", " ", 
            RowBox[{"e", "++"}]}], ",", " ", 
           RowBox[{"StepMonitor", "\[RuleDelayed]", " ", 
            RowBox[{"s", "++"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Method", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Newton\>\"", ",", " ", 
              RowBox[{"\"\<UpdateJacobian\>\"", "\[Rule]", "1"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Jacobian", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"jac", ",", " ", 
              RowBox[{"EvaluationMonitor", "\[RuleDelayed]", " ", 
               RowBox[{"j", "++"}]}]}], "}"}]}]}], "]"}], "//", "Chop"}], "//",
         "AbsoluteTiming"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "e", ",", "j"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5075484415067635`*^9, 3.507548455380557*^9}, {
   3.5075488976198516`*^9, 3.507548897929869*^9}, {3.5075494344995594`*^9, 
   3.507549451853552*^9}, {3.507609292628723*^9, 3.5076093227774477`*^9}, {
   3.507609379596697*^9, 3.507609456108073*^9}, {3.507609698800955*^9, 
   3.50760970396625*^9}, 3.5076099140202646`*^9, {3.5076099902736263`*^9, 
   3.5076099916337037`*^9}, {3.5076102326374884`*^9, 3.507610233607544*^9}, {
   3.5076130750560656`*^9, 3.5076130973133383`*^9}, {3.5076133771443443`*^9, 
   3.5076133798514986`*^9}, {3.507650599301324*^9, 3.5076505996493435`*^9}, {
   3.5076506818860474`*^9, 3.5076507580504036`*^9}, {3.507650960570987*^9, 
   3.507650968036414*^9}, {3.5076510046525087`*^9, 3.50765100502853*^9}, {
   3.507651050536133*^9, 3.5076510521582255`*^9}, {3.5076904848615284`*^9, 
   3.507690485203548*^9}, {3.50769055132833*^9, 3.507690576451767*^9}, {
   3.507693156984747*^9, 3.5076931648952*^9}, {3.507695670794529*^9, 
   3.507695684517314*^9}, {3.5077211112088146`*^9, 3.5077211117158437`*^9}, {
   3.5077800672908335`*^9, 3.5077800675488486`*^9}, {3.5090763948538084`*^9, 
   3.5090763952368307`*^9}, {3.657280381941518*^9, 3.657280382372543*^9}, {
   3.657286657218443*^9, 3.6572866656169233`*^9}, {3.657439132087089*^9, 
   3.6574391323723583`*^9}, {3.65743936389121*^9, 3.657439364257783*^9}, {
   3.657523933983822*^9, 3.657523934271307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wynik", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5075501245490274`*^9, 3.5075501281142316`*^9}}],

Cell[BoxData["0.78948`"], "Output",
 CellChangeTimes->{
  3.6592615158198833`*^9, 3.659261586325254*^9, 3.659292402931469*^9, 
   3.659337249793131*^9, 3.659337290850398*^9, 3.659337341581812*^9, 
   3.659337407594654*^9, 3.659337452955216*^9, 3.659337642887006*^9, {
   3.6593377090527477`*^9, 3.659337730256082*^9}, 3.65933812324153*^9, 
   3.659368889834469*^9, 3.65973483254443*^9, 3.6597692293554907`*^9, 
   3.6597774552332783`*^9, 3.6609742528797197`*^9, 3.660974647689242*^9, 
   3.660974817959553*^9, 3.660975345951351*^9, 3.660975467784719*^9, 
   3.6609755458136578`*^9, 3.6609759377038527`*^9, 3.660977015800804*^9, 
   3.660977565152273*^9, 3.660977659179926*^9, 3.660977829103354*^9, 
   3.660977955340447*^9, 3.660978604540647*^9, 3.661070254602316*^9, 
   3.661341172781268*^9, 3.661420620052319*^9, 3.6614210113249407`*^9, 
   3.661422819235903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wynik", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5075497332126446`*^9, 3.507549743306222*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6592615158590717`*^9, 3.659261586352211*^9, 3.6592924029420843`*^9, 
   3.6593372498336363`*^9, 3.659337290890099*^9, 3.6593373416229973`*^9, 
   3.6593374076411448`*^9, 3.659337452998757*^9, 3.659337642938925*^9, {
   3.659337709632753*^9, 3.659337730306259*^9}, 3.659338123297686*^9, 
   3.659368889884019*^9, 3.659734832553515*^9, 3.659769229383411*^9, 
   3.659777455285602*^9, 3.6609742528962517`*^9, 3.660974647722663*^9, 
   3.6609748179912148`*^9, 3.6609753461041822`*^9, 3.660975467836338*^9, 
   3.660975545858118*^9, 3.660975937739029*^9, 3.660977015837594*^9, 
   3.660977565190818*^9, 3.660977659230582*^9, 3.660977829155834*^9, 
   3.6609779553999157`*^9, 3.6609786045729113`*^9, 3.661070254610094*^9, 
   3.661341172827433*^9, 3.661420620164448*^9, 3.661421011351219*^9, 
   3.661422819372134*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", "]"}]], "Input",
 CellChangeTimes->{{3.507438966114863*^9, 3.5074389691510363`*^9}}],

Cell[BoxData["110422048"], "Output",
 CellChangeTimes->{3.6592615158981323`*^9, 3.659261586379313*^9, 
  3.659292402980113*^9, 3.659337249913134*^9, 3.659337290937057*^9, 
  3.659337341663188*^9, 3.6593374076867323`*^9, 3.659337453045019*^9, 
  3.659337642989365*^9, 3.659337730354209*^9, 3.6593381233501062`*^9, 
  3.659368889935079*^9, 3.659734832594385*^9, 3.65976922940949*^9, 
  3.659777455335733*^9, 3.6609742529122677`*^9, 3.6609746477548723`*^9, 
  3.660974818022122*^9, 3.660975346141127*^9, 3.6609754678864717`*^9, 
  3.660975545900333*^9, 3.660975937769608*^9, 3.66097701587636*^9, 
  3.6609775652339697`*^9, 3.660977659276696*^9, 3.6609778292119637`*^9, 
  3.6609779554544897`*^9, 3.6609786046073503`*^9, 3.66107025465825*^9, 
  3.6613411728742933`*^9, 3.661420620271978*^9, 3.6614210113796473`*^9, 
  3.6614228194776154`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteCount", "[", "jac", "]"}]], "Input",
 CellChangeTimes->{{3.5077801875027094`*^9, 3.507780230550172*^9}, {
  3.5092761860595727`*^9, 3.5092761863825912`*^9}, {3.657439358771555*^9, 
  3.6574393591214857`*^9}}],

Cell[BoxData["13406720"], "Output",
 CellChangeTimes->{3.6592615159414663`*^9, 3.659261586425166*^9, 
  3.659292411850176*^9, 3.659337249952839*^9, 3.659337290981748*^9, 
  3.659337341707419*^9, 3.6593374077332983`*^9, 3.6593374530884447`*^9, 
  3.659337643044191*^9, 3.659337730399413*^9, 3.6593381304570503`*^9, 
  3.6593688964853*^9, 3.659734841327718*^9, 3.65976923829904*^9, 
  3.659777464217505*^9, 3.6609742530631332`*^9, 3.66097464793156*^9, 
  3.660974818249053*^9, 3.660975346304771*^9, 3.660975467941983*^9, 
  3.660975545976458*^9, 3.6609759379978123`*^9, 3.660977016122744*^9, 
  3.6609775654996567`*^9, 3.660977659330408*^9, 3.6609778292799253`*^9, 
  3.6609779555270033`*^9, 3.6609786053134127`*^9, 3.661070265863195*^9, 
  3.661341172960225*^9, 3.661420621100986*^9, 3.661421011432948*^9, 
  3.661422819635351*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "J", "]"}]], "Input",
 CellChangeTimes->{{3.5074346459467635`*^9, 3.5074346482228937`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.5074412570028944`*^9, 3.5074412586149864`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"J", "=", "0.0"}], ",", 
    RowBox[{"J", "<=", "0.234"}], ",", 
    RowBox[{"J", "=", 
     RowBox[{"J", "+", 
      RowBox[{"1", "/", "10"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"A", "=", "1.02"}], ",", 
       RowBox[{"A", ">", "0"}], ",", 
       RowBox[{"A", "=", 
        RowBox[{"A", "-", 
         RowBox[{"1", "/", "1000"}]}]}], ","}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"timer", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
          RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"N", "[", "J", "]"}], "]"}], "<>", "\"\<.m\>\""}], "]"}]}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{"e", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{"j", " ", "=", " ", "0"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rozw", ",", "evals"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"FindRoot", "[", 
               RowBox[{
                RowBox[{"fLHS", "@@", "vars"}], ",", "start", ",", 
                RowBox[{"MaxIterations", "\[Rule]", "128"}], ",", 
                RowBox[{"EvaluationMonitor", "\[RuleDelayed]", " ", 
                 RowBox[{"e", "++"}]}], ",", " ", 
                RowBox[{"StepMonitor", "\[RuleDelayed]", " ", 
                 RowBox[{"s", "++"}]}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Newton\>\"", ",", " ", 
                   RowBox[{"\"\<UpdateJacobian\>\"", "\[Rule]", "1"}]}], 
                  "}"}]}], ",", " ", 
                RowBox[{"Jacobian", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"jac", ",", " ", 
                   RowBox[{"EvaluationMonitor", "\[RuleDelayed]", " ", 
                    RowBox[{"j", "++"}]}]}], "}"}]}]}], "]"}], "//", "Chop"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", "e", ",", "j"}], "}"}]}], "}"}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
           RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
           RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
           RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", "J", "]"}], "]"}], "<>", "\"\<.m\>\""}], ",", 
          "rozw"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rozw", ",", "evals"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
            RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
            RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
            RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "J", "]"}], "]"}], "<>", "\"\<.m\>\""}], "]"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"\"\<From disk\>\"", ",", "0", ",", "0"}], "}"}]}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"initPREV", "=", 
      RowBox[{"vars", "/.", "rozw"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"vars", ",", "initPREV"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<J=\>\"", ",", 
       RowBox[{"N", "[", "J", "]"}], ",", "\"\<\\t Time = \>\"", ",", " ", 
       RowBox[{
        RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}], ",", 
       "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Evaluations=\>\"", ",", 
       RowBox[{"evals", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<\\tStep=\>\"", ",", 
       RowBox[{"evals", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<\\tJac=\>\"", ",", 
       RowBox[{"evals", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "   ", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.507088002317067*^9, 3.5070880080793967`*^9}, {
   3.5070881025297985`*^9, 3.5070881249230795`*^9}, {3.5072715796506042`*^9, 
   3.507271582772783*^9}, {3.50728583343358*^9, 3.5072858338941383`*^9}, {
   3.5072862570973787`*^9, 3.5072862573114057`*^9}, {3.5072958384706182`*^9, 
   3.507295855896615*^9}, {3.507346869473978*^9, 3.5073470260289326`*^9}, {
   3.5073471362062345`*^9, 3.5073471369222755`*^9}, {3.507347453292371*^9, 
   3.507347454785456*^9}, {3.5074345754087286`*^9, 3.5074346034993353`*^9}, 
   3.5074348643852577`*^9, {3.507435127702318*^9, 3.507435131680546*^9}, {
   3.507440775593359*^9, 3.5074407788735466`*^9}, {3.5074408200139*^9, 
   3.5074408798683233`*^9}, {3.5074409256649427`*^9, 3.507440927344039*^9}, {
   3.5074412613641434`*^9, 3.507441321482582*^9}, {3.507445516107833*^9, 
   3.5074455565811477`*^9}, {3.5074461781506996`*^9, 
   3.5074462338388844`*^9}, {3.507447143053889*^9, 3.5074471463430767`*^9}, {
   3.507447482029277*^9, 3.507447483181343*^9}, {3.5074500070577*^9, 
   3.507450043028758*^9}, {3.507450537165021*^9, 3.5074506717457185`*^9}, {
   3.507450702845497*^9, 3.5074507433948164`*^9}, {3.5074726627277136`*^9, 
   3.5074726958066053`*^9}, {3.507473262925043*^9, 3.507473292659744*^9}, 
   3.5074734092974153`*^9, {3.5074749088021817`*^9, 3.50747494461023*^9}, {
   3.5074763708218045`*^9, 3.50747637370597*^9}, {3.507523279821337*^9, 
   3.50752330644886*^9}, {3.5075249642896833`*^9, 3.5075249852358813`*^9}, {
   3.507780502330717*^9, 3.507780589944728*^9}, {3.507780633148199*^9, 
   3.507780652452303*^9}, {3.5077836831936517`*^9, 3.507783724493014*^9}, {
   3.507785747148703*^9, 3.507785751200935*^9}, {3.5077861916701283`*^9, 
   3.5077862055409217`*^9}, {3.5077872368209076`*^9, 3.507787246888483*^9}, {
   3.507787953533901*^9, 3.5077879941872263`*^9}, 3.5077885835449357`*^9, {
   3.5077892106298027`*^9, 3.5077892112848406`*^9}, {3.5077902826261177`*^9, 
   3.507790296949937*^9}, 3.507791863265525*^9, {3.507791940123921*^9, 
   3.5077919402049255`*^9}, {3.507801710345046*^9, 3.5078017140092554`*^9}, {
   3.507805309346897*^9, 3.507805315901272*^9}, {3.5081386962469125`*^9, 
   3.5081387207353125`*^9}, {3.5081390796128397`*^9, 3.5081390799048567`*^9}, 
   3.508921064439703*^9, {3.509076569333788*^9, 3.5090765801294055`*^9}, {
   3.5090766127302704`*^9, 3.509076634983543*^9}, {3.5090943378560896`*^9, 
   3.50909434205433*^9}, {3.50912244354906*^9, 3.509122451622522*^9}, {
   3.509168943168853*^9, 3.5091689569766426`*^9}, 3.509276202770529*^9, 
   3.6572868036268177`*^9, {3.657347837882*^9, 3.657347856355633*^9}, {
   3.657348199376679*^9, 3.6573481999518433`*^9}, 3.657437594758095*^9, 
   3.657444245578903*^9, {3.65925906192588*^9, 3.659259062467723*^9}, {
   3.659260214389264*^9, 3.659260217317024*^9}, {3.659337024387148*^9, 
   3.6593371669783773`*^9}, {3.659337199345705*^9, 3.659337205599896*^9}, 
   3.659337265617404*^9, {3.6593465850879107`*^9, 3.6593465883348503`*^9}, {
   3.659347399973316*^9, 3.659347412964182*^9}, 3.6593475132994347`*^9, {
   3.659760767552936*^9, 3.659760767707492*^9}, {3.659768795489065*^9, 
   3.6597687981602983`*^9}, {3.659776788213683*^9, 3.659776791092033*^9}, {
   3.660974509572277*^9, 3.6609745123553762`*^9}, {3.660978312650793*^9, 
   3.66097831564158*^9}, {3.660991597718031*^9, 3.660991600565589*^9}, 
   3.6609917704366302`*^9, {3.660992258463213*^9, 3.660992260463257*^9}, {
   3.660992571612432*^9, 3.660992589435193*^9}, {3.661341184156969*^9, 
   3.661341224274884*^9}, {3.661420499322473*^9, 3.66142050375839*^9}, {
   3.661420663682588*^9, 3.66142071204136*^9}, {3.661421038344119*^9, 
   3.661421044447249*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010439`4.470203891081493", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0., "\t Time = ", 0.010439`4.470203891081493, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661421046068178*^9, 3.66142282009648*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.661421046068178*^9, 3.661422820097147*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.1`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010119`4.456682589404837", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.1, "\t Time = ", 0.010119`4.456682589404837, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661421046068178*^9, 3.66142282009778*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.661421046068178*^9, 3.661422820098338*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010249`4.462226486627417", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.2, "\t Time = ", 0.010249`4.462226486627417, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661421046068178*^9, 3.6614228201401367`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.661421046068178*^9, 3.661422820142168*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jtest", "=", "0.2"}]], "Input",
 CellChangeTimes->{{3.65744473955562*^9, 3.657444740888792*^9}, {
   3.657446853169569*^9, 3.657446853441338*^9}, {3.6575072515129128`*^9, 
   3.657507257193214*^9}, {3.6575208996764107`*^9, 3.657520899772108*^9}, 
   3.657521855779954*^9, 3.657524050349365*^9, 3.6584849666595535`*^9, 
   3.6586449163010073`*^9, {3.658645249577503*^9, 3.658645249752503*^9}, 
   3.6586493776267433`*^9, 3.658649408634366*^9, {3.659760705657612*^9, 
   3.659760706631159*^9}, {3.66097437616175*^9, 3.660974377313401*^9}, 
   3.6609747105425177`*^9, {3.660992055053926*^9, 3.660992055389784*^9}, 
   3.6611349610795813`*^9, 3.6614207572313423`*^9, {3.661421051741228*^9, 
   3.6614210533890142`*^9}}],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{
  3.659261528193893*^9, 3.659261600437482*^9, 3.659321036179596*^9, 
   3.659337251192425*^9, 3.659337295543046*^9, 3.6593373443242598`*^9, 
   3.659337410368142*^9, 3.659337455930188*^9, 3.6593376460708*^9, 
   3.659337733012816*^9, 3.659552217149005*^9, 3.65967459773492*^9, 
   3.6597607070209293`*^9, 3.659773689553954*^9, 3.6597779875814333`*^9, 
   3.660974377783358*^9, 3.660974666113998*^9, 3.66097471146152*^9, 
   3.660974845702861*^9, 3.660975346773575*^9, 3.6609754681880198`*^9, 
   3.6609755500685062`*^9, 3.660976394042259*^9, 3.660977046187787*^9, 
   3.660977565636471*^9, 3.660977659678522*^9, 3.660977831122411*^9, 
   3.660977958729843*^9, 3.6609791100400047`*^9, {3.660992055995553*^9, 
   3.660992065243725*^9}, 3.661079133066469*^9, 3.661134962127672*^9, 
   3.661341451146435*^9, 3.661420621645475*^9, 3.661421053713043*^9, 
   3.6614228203797693`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rozw", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
     RowBox[{"ToString", "[", "Jtest", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5077918939682813`*^9, 3.507791914564459*^9}, {
  3.5089371051661797`*^9, 3.5089371213461056`*^9}, {3.657347744485211*^9, 
  3.6573477462908163`*^9}, {3.6573478107748613`*^9, 3.657347813569992*^9}, {
  3.657347979025044*^9, 3.657347982495798*^9}, {3.6573484564754257`*^9, 
  3.657348457579075*^9}, {3.657444736217266*^9, 3.657444736712901*^9}, {
  3.657507263289003*^9, 3.657507266872979*^9}, {3.6593210514317293`*^9, 
  3.659321053413064*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"rozw", "=", 
    RowBox[{"wynik", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5077803251195807`*^9, 3.5077803281427536`*^9}, {
   3.507780372101268*^9, 3.5077803736243553`*^9}, 3.6584850675253224`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPolarPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "R"}], "}"}], "]"}], "/.", "rozw"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5077854715559397`*^9, 3.507785507907019*^9}, {
  3.5089975087639427`*^9, 3.5089975088959503`*^9}, {3.5092945262695727`*^9, 
  3.50929452639258*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, 
    GraphicsComplexBox[{{0.7705359159539713, 0.}, {0.7619835648145226, 
     0.17391777626145863`}, {0.7295453645711695, 0.35133053084616045`}, {
     0.6698883740728908, 0.5342181518448318}, {0.5755303762341784, 
     0.7216922649177532}, {0.43627911023929716`, 0.9059429072894417}, {
     0.2423620603755842, 1.0618575668949926`}, {6.92619023079457*^-17, 
     1.131132704648696}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 
        8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659261528747307*^9, 3.659261600950281*^9, 
  3.659337251989497*^9, 3.6593372956620398`*^9, 3.6593373444189*^9, 
  3.659337410462597*^9, 3.659337456087669*^9, 3.659337646171587*^9, 
  3.6593377331067667`*^9, 3.659556489239595*^9, 3.6597887213100777`*^9, 
  3.660974380549329*^9, 3.6609746667382174`*^9, 3.660974846031851*^9, 
  3.6609753488051*^9, 3.660975468337826*^9, 3.660975550206806*^9, 
  3.660977046867599*^9, 3.660977565948107*^9, 3.660977659955117*^9, 
  3.660977831266308*^9, 3.660977959000043*^9, 3.660979115357151*^9, 
  3.661080256505088*^9, 3.661341459205707*^9, 3.661420628085577*^9, 
  3.661421064825344*^9, 3.6614228209229107`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "dat", "]"}]], "Input",
 CellChangeTimes->{{3.5073766055607004`*^9, 3.5073766069147778`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "[", "enum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"dat", "[", "enum", "]"}], "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"N", "[", "enum", "]"}], "]"}], "<>", "\"\<.m\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.507376506454032*^9, 3.50737653649475*^9}, {
   3.507476240279338*^9, 3.5074762478937736`*^9}, {3.5078029017491903`*^9, 
   3.507802918369141*^9}, 3.507809332229993*^9, {3.5081397826530514`*^9, 
   3.5081397846691666`*^9}, {3.5090938900794783`*^9, 3.50909389186058*^9}, {
   3.509163596447871*^9, 3.509163601919184*^9}, {3.5091641097632313`*^9, 
   3.509164131001446*^9}, 3.5091899509914317`*^9, 3.5092735230302563`*^9, {
   3.509274718514634*^9, 3.5092747274231434`*^9}, {3.657347773458592*^9, 
   3.657347776754591*^9}, {3.6573480315204372`*^9, 3.657348040015616*^9}, {
   3.657348086111442*^9, 3.657348087999237*^9}, 3.657348183838628*^9, {
   3.6574447513852654`*^9, 3.657444751816897*^9}, {3.659260315555888*^9, 
   3.6592603176834927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "[", "Jtest", "]"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.6573481041362534`*^9, 3.6573481072463284`*^9}, {
  3.657507313208527*^9, 3.6575073152400846`*^9}, {3.657600210752247*^9, 
  3.657600211967126*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R1", "\[Rule]", "0.7705359159539713`"}], ",", 
    RowBox[{"R2", "\[Rule]", "0.7815793919667908`"}], ",", 
    RowBox[{"R3", "\[Rule]", "0.8097342655908328`"}], ",", 
    RowBox[{"\[LeftSkeleton]", "62", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[Rho]C", "\[Rule]", "0.7889711235336073`"}], ",", 
    RowBox[{"\[CapitalOmega]0", "\[Rule]", "0.601723861503778`"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.659261528813426*^9, 3.659261600994787*^9, 3.659321111434148*^9, 
   3.659337252240116*^9, 3.659337295734562*^9, 3.659337344458085*^9, 
   3.659337410498341*^9, 3.659337456136282*^9, 3.659337646213019*^9, 
   3.659337733146496*^9, 3.6595564892974463`*^9, 3.659760716784438*^9, 
   3.6597887213585253`*^9, 3.660974384210188*^9, 3.660974666817131*^9, 
   3.6609748460735893`*^9, 3.6609753489681377`*^9, 3.6609754685231323`*^9, 
   3.660975550244266*^9, 3.660976402029414*^9, 3.660977046968206*^9, 
   3.660977565987865*^9, 3.660977659991453*^9, 3.660977831307749*^9, 
   3.6609779590395193`*^9, 3.660979115406056*^9, {3.660992061306584*^9, 
   3.660992070642315*^9}, 3.661080256591893*^9, 3.6613414628528748`*^9, 
   3.6614206284582567`*^9, 3.661421074951014*^9, 3.661422821167102*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "powSpline", "]"}]], "Input",
 CellChangeTimes->{{3.5078033649266825`*^9, 3.507803368513888*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"powSpline", "[", "enum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"powSpline", "[", "enum", "]"}], "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "R"}], "}"}], "]"}], "/.", 
      RowBox[{"Import", "[", 
       RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
        RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "enum", "]"}], "]"}], "<>", "\"\<.m\>\""}], 
       "]"}]}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Hermite\>\""}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.50780331261069*^9, 3.507803363194584*^9}, 
   3.507809337412289*^9, {3.507823431531427*^9, 3.507823465711382*^9}, {
   3.5081397953017745`*^9, 3.508139797351892*^9}, {3.508937239999892*^9, 
   3.508937240399915*^9}, {3.508998520477809*^9, 3.5089985218828897`*^9}, {
   3.5090939017401447`*^9, 3.5090939030222187`*^9}, {3.5091573593821316`*^9, 
   3.5091573781502047`*^9}, {3.5091636100836515`*^9, 
   3.5091636120617647`*^9}, {3.509164144583223*^9, 3.509164146144312*^9}, 
   3.5091899555096903`*^9, 3.5092735280545435`*^9, {3.5092747336635003`*^9, 
   3.5092747379817476`*^9}, {3.657347790675351*^9, 3.657347794754449*^9}, {
   3.657348484347722*^9, 3.6573484850182123`*^9}, {3.6573485156390333`*^9, 
   3.657348516858882*^9}, {3.657444760361167*^9, 3.657444761016038*^9}, {
   3.659260335875827*^9, 3.659260339507381*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"powSpline", "[", "Jtest", "]"}]], "Input",
 CellChangeTimes->{{3.507803379554519*^9, 3.50780338219067*^9}, 
   3.657348491290833*^9, {3.657507327864524*^9, 3.657507330296027*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwVxX041AcAB/DD1ouX3HaYiePOnGnC81g9cuarZxNxJ0s9T3kmbavH6y7W
LjMjW4m2hySjNB6Z5uYsCRUqnZFyXkbIa8nL+f3u/Xd3uJu9//F5PqxPTuw/
bk6j0YL+8//Ds8z13WUfBSdLXLWBIgJ33ovPFgVUIHflMYsSEzi7xTrLuF8M
WWZx5VgTAbeWJU4wrwUtn3bUuLQRODXqlvjrQDvedelXURICF26FFrLVD8Fj
20ynDRBIbGXwOLu60ZbreOrvSQIpaZnvP+jrhbugZGslSWDbUr+sIVKK78wv
TlqsExDYtZ2IKR5EuLnVqIsNCXV2lWOvzTBkr3ScHmKTkA16p4a0jsDT+sDM
hl0k7v3ZZH/8wCjUQ2yeOJpE3YYz008dxuGQYSMVpJIY/8ytlNnxDKsBI06H
Ckg4Nm1Oav52EjncCf2QiETAMHlJv3sajTXZf+n7SFyNKmuyXZjBWAuRNKsk
wRAVKYR1z9E9H3/E3U6OhEYv6xnOHL7sedEtD5Rj0NjkV2P1Etdqa4mQBDlq
b+6gBStfwtOSls76QQ7nctcnvffnUTFB3dnYJUdVim/1avUC/vFhRZmtyCER
XE9jCBfhPbXWIeEoEDPnoHw1dAljPqquosMKaHBDWMmRof71Dmb0JQW2D4qN
bJMM3l0z9EypAsKIofP82WXIxunt5ZZKeO9Q9/DvE2Dk7WuURihxNurkOreI
RNaYZLamQInlg0wMpckhVsVV9w0oofje9+voDxSYaogTh9JVOOIXdKyOoUT7
eobFzhgVprsEsT8ZlOiZKk+KrlLBdGZjROEjFSb4zT3Zyyqw/R+FOder4Wex
NT43QA0lXRF8JUcDHdF791yeGiU38rRCTy2kwV3dHiNqtEhFj9Mva5Gq0Ur2
cjTg0E5XLppRiPv9Wn6ZUIPKdxJNXl9QKLf7uPitfg14W4a2xS5SmD/fsPc3
uha8TeQhM74O84kZhbmBWnxost+S9UAHLlHBVSRo8bPZamfK23pwbTcJZi5q
4S+JCQsr1qPQUpQT3q5FT0b3wRWaAY42QeH0JS1EocRRp2QDfL6Red2yolBs
6ap/bcaAZvEb1VP+FBrPPY01RK6Ar9pnEXiYgqsTt5PfsgLWzuvbjZkUSmtb
6zM9VjH3kNfwvIJC7J6FEucLq6j07O+cuE3B44W7eYnZGoJMS4LZYQqevvN7
dOlriMyzV9wjKHxVFlPwZGoNlsduhuT/QWHE8Cz6JM+IJtbnd2s265CVbOtQ
etuIrIijv+QzdLjyI5O/zjLhcjPnKvNNHf4Fyjr07A==
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0.73}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0., 1.5707963267948966`}, {0.7705359163210634, 
                 1.13113270383767}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwVxX041AcAB/DD1ouX3HaYiePOnGnC81g9cuarZxNxJ0s9T3kmbavH6y7W
LjMjW4m2hySjNB6Z5uYsCRUqnZFyXkbIa8nL+f3u/Xd3uJu9//F5PqxPTuw/
bk6j0YL+8//Ds8z13WUfBSdLXLWBIgJ33ovPFgVUIHflMYsSEzi7xTrLuF8M
WWZx5VgTAbeWJU4wrwUtn3bUuLQRODXqlvjrQDvedelXURICF26FFrLVD8Fj
20ynDRBIbGXwOLu60ZbreOrvSQIpaZnvP+jrhbugZGslSWDbUr+sIVKK78wv
TlqsExDYtZ2IKR5EuLnVqIsNCXV2lWOvzTBkr3ScHmKTkA16p4a0jsDT+sDM
hl0k7v3ZZH/8wCjUQ2yeOJpE3YYz008dxuGQYSMVpJIY/8ytlNnxDKsBI06H
Ckg4Nm1Oav52EjncCf2QiETAMHlJv3sajTXZf+n7SFyNKmuyXZjBWAuRNKsk
wRAVKYR1z9E9H3/E3U6OhEYv6xnOHL7sedEtD5Rj0NjkV2P1Etdqa4mQBDlq
b+6gBStfwtOSls76QQ7nctcnvffnUTFB3dnYJUdVim/1avUC/vFhRZmtyCER
XE9jCBfhPbXWIeEoEDPnoHw1dAljPqquosMKaHBDWMmRof71Dmb0JQW2D4qN
bJMM3l0z9EypAsKIofP82WXIxunt5ZZKeO9Q9/DvE2Dk7WuURihxNurkOreI
RNaYZLamQInlg0wMpckhVsVV9w0oofje9+voDxSYaogTh9JVOOIXdKyOoUT7
eobFzhgVprsEsT8ZlOiZKk+KrlLBdGZjROEjFSb4zT3Zyyqw/R+FOder4Wex
NT43QA0lXRF8JUcDHdF791yeGiU38rRCTy2kwV3dHiNqtEhFj9Mva5Gq0Ur2
cjTg0E5XLppRiPv9Wn6ZUIPKdxJNXl9QKLf7uPitfg14W4a2xS5SmD/fsPc3
uha8TeQhM74O84kZhbmBWnxost+S9UAHLlHBVSRo8bPZamfK23pwbTcJZi5q
4S+JCQsr1qPQUpQT3q5FT0b3wRWaAY42QeH0JS1EocRRp2QDfL6Red2yolBs
6ap/bcaAZvEb1VP+FBrPPY01RK6Ar9pnEXiYgqsTt5PfsgLWzuvbjZkUSmtb
6zM9VjH3kNfwvIJC7J6FEucLq6j07O+cuE3B44W7eYnZGoJMS4LZYQqevvN7
dOlriMyzV9wjKHxVFlPwZGoNlsduhuT/QWHE8Cz6JM+IJtbnd2s265CVbOtQ
etuIrIijv+QzdLjyI5O/zjLhcjPnKvNNHf4Fyjr07A==
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0.73}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0., 1.5707963267948966`}, {0.7705359163210634, 
                 1.13113270383767}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 1.5708}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.659261528901229*^9, 3.6592616010607224`*^9, 
  3.6593211148165827`*^9, 3.659337252393984*^9, 3.659337295792119*^9, 
  3.659337344547647*^9, 3.659337410585908*^9, 3.659337456238288*^9, 
  3.6593376463068132`*^9, 3.659337733250292*^9, 3.659556489422801*^9, 
  3.659760719686728*^9, 3.6597887214746447`*^9, 3.660974387853631*^9, 
  3.660974666974456*^9, 3.660974846126211*^9, 3.660975349252817*^9, 
  3.66097546862383*^9, 3.660975550338373*^9, 3.6609770472561893`*^9, 
  3.660977566253973*^9, 3.6609776600903177`*^9, 3.660977831410735*^9, 
  3.660977959133916*^9, 3.660979115489394*^9, 3.660992073469819*^9, 
  3.661080256750394*^9, 3.661341465824815*^9, 3.6614206289274473`*^9, 
  3.661421079948207*^9, 3.66142282158576*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surf", "=", 
  RowBox[{"PolarPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
       RowBox[{
        RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
      RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"DotDashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1.4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.4"}], "}"}]}], "}"}]}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.5078034370498075`*^9, {3.5078036358421783`*^9, 3.5078036377392864`*^9}, {
   3.507803717961875*^9, 3.5078037229511604`*^9}, 3.507809352408147*^9, {
   3.507823358474248*^9, 3.5078233590662823`*^9}, {3.508139806554418*^9, 
   3.5081398166439953`*^9}, {3.508937490988248*^9, 3.5089374924973345`*^9}, {
   3.508997524931867*^9, 3.508997533999386*^9}, {3.5091119656773434`*^9, 
   3.50911197471086*^9}, {3.50911203923055*^9, 3.5091120423427277`*^9}, {
   3.509156986323794*^9, 3.509156988077894*^9}, {3.509157028937231*^9, 
   3.50915703783674*^9}, {3.5091622456526103`*^9, 3.509162247096693*^9}, {
   3.509163249570031*^9, 3.5091632496390347`*^9}, {3.5091633621214685`*^9, 
   3.5091633621864724`*^9}, {3.5091633965494375`*^9, 
   3.5091633967844515`*^9}, {3.5091634634232626`*^9, 
   3.5091634637082787`*^9}, {3.509163620416242*^9, 3.509163620486246*^9}, {
   3.5091638702555323`*^9, 3.5091638703195357`*^9}, {3.5091641516536274`*^9, 
   3.509164153411728*^9}, {3.509164231128173*^9, 3.5091642326022573`*^9}, {
   3.5091900388774586`*^9, 3.5091900389984655`*^9}, {3.509269065295288*^9, 
   3.509269065535302*^9}, {3.657348530587304*^9, 3.657348563081706*^9}, 
   3.657445458497101*^9, {3.657507474455944*^9, 3.657507477462317*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
      "]]}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small, Small, Small}], 
     LineBox[CompressedData["
1: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
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 1.4}, {0, 1.4}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659261528970619*^9, 3.659261601115354*^9, 
  3.659321115570709*^9, 3.6593372527030354`*^9, 3.659337295838334*^9, 
  3.659337344625527*^9, 3.659337410663113*^9, 3.659337456321125*^9, 
  3.6593376463798313`*^9, 3.6593377333904533`*^9, 3.659556489535729*^9, 
  3.659760720428133*^9, 3.6597887215760202`*^9, 3.6609743891336718`*^9, 
  3.660974667231123*^9, 3.660974846165469*^9, 3.6609753493239393`*^9, 
  3.660975468662511*^9, 3.6609755504198008`*^9, 3.6609770474416027`*^9, 
  3.660977566342285*^9, 3.660977660163217*^9, 3.660977831499352*^9, 
  3.6609779592149*^9, 3.6609791155612803`*^9, 3.660992074312895*^9, 
  3.661080257034131*^9, 3.661341467223749*^9, 3.661420629011889*^9, 
  3.661421081674905*^9, 3.6614228217136793`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"PolarPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"2", "/", "3"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Medium", ",", "Black"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dotted", ",", "Black", ",", "Medium"}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.0"}], ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.657521095777029*^9, 3.657521110330892*^9}, {
  3.65848109891133*^9, 3.658481100071397*^9}, {3.658645202938484*^9, 
  3.6586452137369547`*^9}, {3.6609914397651043`*^9, 3.660991442004664*^9}, {
  3.660991516532745*^9, 3.660991520436364*^9}, {3.6609921675008993`*^9, 
  3.660992176972555*^9}, {3.661341476895075*^9, 3.661341484102963*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfNEW", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
        RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], " ", ",", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pi"}], "/", "2"}], "+", "\[Theta]\[Theta]"}], "]"}], 
        ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]\[Theta]", ",", 
        RowBox[{"Pi", "/", "2"}], ",", " ", "Pi"}], "}"}]}], "]"}], " ", ",", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
         RowBox[{
          RowBox[{"-", "\[Theta]\[Theta]"}], "+", 
          RowBox[{"3", 
           RowBox[{"Pi", "/", "2"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]\[Theta]", ",", "Pi", ",", 
        RowBox[{"3", " ", 
         RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}], " ", ",", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "/", "2"}], "Pi"}], "+", "\[Theta]\[Theta]"}],
          "]"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]\[Theta]", ",", 
        RowBox[{
         RowBox[{"3", "/", "2"}], "Pi"}], ",", " ", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.657521041594685*^9, 3.657521393976375*^9}, {
  3.6575214460084553`*^9, 3.657521500134912*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1HdYzt//B/AQopS0JFKi8smWlPX8JApJOxJaRkILlRENkZb23uNua99N
pdAgn/bUnu9K474RDfxO3+t3/jnX47rOdc7r9TznOqJG5hrXlrKwsLAtYWFZ
nNXNr4QKCzLB8v/DVtuol5PYQL+9dccXeXRo37H+s56JwkC38Y1f1HHcYG3A
F2Lry65B8x2GOGA0uLma+PAx/5I49euQNjs4n0s8WB1370SVKcTYGmkexDqB
whzZHZY43n/expZ4t2x/3De+eyi/0hRsRCwdSqvepW6Nu2d2NksT252rm/et
fIg45wzJegEmtGwF7q7ucMCNcgV3OnHOhjWGPj8dcaay7HgocYKrfgc/3zPs
c/iVaETsM665jk/tOd7ppVwe5WeiJjyOa/CDKzotNjm18DHBWxXHcanNG6Vp
VWKZxEH61jN/rvtAM/usoBtxuPY6s8gfPpCc11t2lNh39972tnV+4Opd1hrE
y4SarJfhDpUA7C5cCNzDwwSr81a9s2Uh2Jw57sdCbD68q7lcNRTbHqdQteuY
cDtZJynTHYrp0Y3+t4mfsans4ZkPg8KHE8sjuJkYeLTvZbx0JBIO5V7p4yL9
XHv2xasxGqH7qwaiiS07IwpSRGIQb2kUZ0istCtA+/2dGAQJNrR1czIRZq+V
MrkyFmyPxHnq1jCR17KHQ+JIHKp5uJke7OQ+ur6HicTR4L6OV+E4sfjsxEZe
Bg0b4+Uafqwm9SQ2f2U9lgAuQf+Ui8Q12mqG3a0JkFixQ1VoFRP8h2J6zNmT
cOry7BPbFUyYFVeprrRKQVorS4UI8VzIKVpNSQoudTeoVC1nou3X1T5P9lTc
g6MIH/G089zYqvhUUOXlLfHLSP3BPT7trWnYsi4gNZaFCT9Kpvi2cAaOSmvs
WjfHwCm6mLCAYxYakz1OJc8y8EDFSqcwPgsbORrfyhPTtfg69KqzwLKBo8bs
FwPoFyoIXpsNX56d6mUzDNzhLvRkicwGD+f3A6e+McCdw2ZgW5SDNqHwm93j
DNzIref8y6SDFlXgZkT8Ztas9jp/HqYf31s7PMZA65ipW41cHuqmdY+PjzJg
4/t+3Ns+D4I2M8qTIwwcLxBZzcqZj1DPbQKtAww8PDEa7SRZAF8nKz/pLwwc
+rInsEevCHnP68USOxg4xh9HV39SBFsuSxEhYs13SWFlUUVIslpi9LeNgX7J
kuyQoSJoKpxfXdbCgGLx4/q95sXYon2La3sDA2suLxtjOLwBZSo96l7FwO5s
2bzk+FJc9NDrTclm4I/c6oAPzDIUb82f+JrFwEfDL6LCy8vR/lZWdyexz4IC
932Bcki5XlNOzWBg1HqKT/hIOZrTUqJj0sj5dAO/S87leCo6A8sEBtil7mi7
CrxDo6OVf2AIA7zxmS+jDr2HZL2hMs9TBvaam7HYPKrAjmap4iNPGKC+71bb
6V4Bn8TA5Gt2DEz9rP/VF1aBP5tnWOiPGLA6ckJdsaQCS9nkgtRsyf7SbSvm
WSrR5X3Y744lyXfrtgqe55XQX6LYrWTMgLbj56IFzyrkTs4lPj/JwJDl8K2n
oR+xd/Z6UsafafA8GNhsx/wPbCbBzXqZ0xhccP0k4FKPV+qfKmeNphH2z6+d
3YaNUCyb6phaOY3O7Vk65qrNkIgQ+ven3hSerB4OobO1ovePhlNo7CTkHE0/
V9PasLFLMI2naQJh5TsKtTQ7EKlcxqBzTID/rqHGsrov4Cv19TKV/opqvr5s
0ctd2Pky68LeS+Pwvjr6Pqa2G/e0yvbcfDWGC9+kUybZe4EIjnKv16MQwyg9
M6cXlDi7VUEHhYWPHh4Vp/vg2SXyPPHbCHiyrddb9Peh5uF2qQmuESg56Qu8
M+9HEL95U/GRYYxfmHiVONGPX1G6Sh7nh/BtoKv5udkA9FqSvAMdBiHFas47
2jMA1W5JL/aMAUyXaCZWnxoEvzS1a9vnfvQECURWZw9i+ds9oTOzfWjwcUxy
5h7CaEufeAdfH3L2c1kWWgzBxCFLes/BXpzWWR38rGoIY8nbql7XdWPz2cnK
9XzDKO1JPveTuwvlfU6Wr4yGIRtZe63e6gsieL4V18YP42d6HUtEVzv80lb+
kBwYRgdt75JJiTYMKbhtqhQZwQGe/Ne3vVsQft5UsVJ7BCHBh5t+dzTh1Yt4
/0rXEQxUePvqKzRiYx13ykzeCLaOa9Wr59bjitfyHed6R2Ax/U+IzMo67DDW
elS4ksKGllexDpM14BZJP/VCkkIzm8l4mGc1/qvqWvZJicKDEdH0A/IVaP7W
IyRrROHvejE2SroCjR5RFT7EYSIOTiGSFVD8T+bgBLGNlkjfX64KjOyduBlt
TMH7g5NMTfcH9L0o5Vt5jULC6thjtx5/wKqgfpfKGxTYMi1My/PeY+Du4PjG
OxTa3dqMGna9w5DcwroNNhTORdwXeib6DmY1dam3iUPSc34d4H2Hq7lNS0uJ
DftbRUJmy+HXYTVgZEvhgsrXbVffl2OUkrdJeEChhm3zjz+65YicHR8Te0zh
LctDGVXnMvTt/sg1Zk9B6/qc8XLbMjxk19gv7UDyyBbIKTItww3rkzxPiL0K
qSJJtTLcjb/Pxu1IgaN/iwmrUBm69LdX7XeiMFc3tbU84y3mzyhE3HamcIbO
YZ+WXwqvNSXpKS8prAvisBuKLEV2fT/bKLFN/WjWphel4HQ4LSHuSuGJUHOV
p3YpeN/0ZkcSF5mEh9xllpC+NDi83Ei+y61KlXaU4L7/5qJrHhT2BJRcFIwq
xnRWAv+QF4XPd5LlL7woxrJfbYJC3hS+Kv97JdCsGJ8umvSrEdsFs8ryHy2G
4aW4d0XEDfnbb/F3FOHvfFyFpw8FXcP3BSK8RYjfcKV2ux+Fna1zSpdcCrD1
aOfU/kAKHx3eiAtbFIDGFpNrSGxnzynTe74AhWtEFF4Rj+T/HroqUYBJXcXc
UeJrGQ4uFhX5oPkqzoQGUZCezHznxZoPdx7j8R/BFIZNRC2+29ORQWONexpG
gVfJd3+xCR0Lh28b0og576RtfaZGx1N7v+Ea4qjvT17xitCR5CNxSjCcQmU6
v/PB0lwkll00SSf2XSPe6fw7By3qyzfVR1CwspMMVXiYDex6cH4siuTFJ5K5
1CAbF9yWFHNEU5hpfzpbdjIb/HOa3buIddhXiMpzZyP0pM4lK2KGA3eVfGIW
NO0+Hp0hPnnA4PLZlkwsjMsEMGIoxN/wducszsQW6ngrVyyFQL/rX+uiM0G3
523ZSXyq2f2ozp1MNCxZueYmcfXFwi3GrJlg/tpk0Eks8+1or/O+DDzISA+h
x1HQCArnUF6fAbbcvrw6YnGR6lqRhXSsGKv3GSPmentP+6BvOmRjxxw2xVPI
PbjqjUnZa/zT8/WEPfGZJpXPnZvScP9kwmU5GgUHHeXR26OpcHlqpaNK7Lzh
tf7vnFTkezA4rhHLq3+6uPlsKsS2s2W/Iq57/vTZjYcpWPjkMNBHnGnYY83W
mgS3/OmmBwkU8mQVzDfTkrBN/fEDV+K0mfvZMveTQDt9fDCE2IkjTPg6TxJG
dR5yFBH/2yT7qEo1Ec2qzgm/iO0LDD/3CSfiytX/7FYmUuhPW2o6P5GA9cHK
G/iJO3WXOu52T8BnwZ74fcSHGjUkQ6tokPqtsfImsQDlX00PpMEkYRuXNfHq
sN/ZDddpSKRt63Ik1t3jY8y+nAYdvuRPocSX/pXZbi8fD3aNFOZH4kAxVq6I
tfE4qFEr1UIslkE7UtwTB0N1Qak+YvGWcrNZuzj42wo9niHWnqjeblMYC+5t
b24IJ1FYppp+OvBlLNqGf9RLEGtOb8zIuxAL/cqzS/cS76odV52diUH6J7Xc
48TPIudcNlTEILBr/qAysXzz15VH/GPgMPbWXpN4xcHWlqf7YzBf4HfVmLjd
1E48ZmkMnHSj/5oSN/AYF72vj8ZC2jsDK2Ka9emc1RbR2Lj+5H174okQzu7g
1ChIjAmNBBOrSx3RLHkUBSm5vKxIYlaBqxwDZ6Jw6Yz+iXjiWpFlfhcbImHA
XV+QTnxFQCUs3iISkxZB4TnE7I9OSzE4I7Fl+IZSAXGQ5/rOl8oReKWyYaKM
OI9D+XfLaDietc1RH4j9/aZit7qEIzi5O7mamO0ivdZKPBw9ru/3fSaOTVe1
L3sfBqVjKfZ1xMYrbueuNQ5D4gtvv0Zi3ckiM4MlYSiUsDZrIXbhn07JiAyF
QNd5znbi8rMFt5ccC8XhqwfufSGWoFqNZupCcNVjsrOLWG6r8MK4cQhEAy/8
7iEWNhCW7Z8Jxia6ZXMf8WepW/ztL4NRKCR7bYB4XikwoG5jMPhnklIHiVfR
DuRXpQdhjcWHlCHifJP2h2XHg7A/08VomHh0gK+7sDkQX7oYdYvWCHvSl2MS
CF6BvzOLXnIq4Vn6fABSHr5uWvTIf2KVyZ4B2Cn25+ainc+4JNJEAzAo8ZX+
v/2X35SMzfFHe5h10eL5UnYXFaOU/NHqE2qzWB+lz1gS0eEHEwHd8cX62V6V
Xwy744d26TT+XuJ7m4zVQln8IMv0n13s/4aaSX+Iry+0NLn9FvOZiryxNlTc
F+UXNg23ESfQZ9pDC3zQ9jdvqpn4gWXKsfCzPsg83pPRQCzQK3Qssscbu9d7
b68lfi/wkj1+uTcsFd3lK4nT/ma1JQZ5oelxfW85sXY781ialBf4lwQfLFlc
nySabB7riVVuNPbF9xNmeJjtcbUHArQol9fETkOH/V9OuaP4W+ybROKc1xmy
iYfdICdgrxL2v/ydVQoMXfHmZFiiP/HM56Wen168hGzE9iJPYgXfIs9vjS+w
/4/nisX3fkJST2XV3HMoBRjBljiky1RaROQ5bB5E7LYg9tqSYKt++xlkNivK
6BMv/Xmo6ZaPE2ovpJ3VIR6/v0b7Rb4jIj7d3aBCvMdb/l0ZqwMmJPg65YgP
9z63cTn0CEMBJj+5iHfUqOjUPn+AVe4uVazET859t1rfaAOWP9/VZsn/MHko
Wj/z1j2wlSS9WPw/UtsHc+flboHjwzH318QJqapzqQ038PTzE4FoYuW45Gij
W1fBUvNT15e4W6FJkC6nh28prqw2xG+59P0P39IC0znytgnxqFroY185ZWxQ
GnDTJVZ4LH7IUe4wOo01jc4Q/zOT2Ptxn9sRR5WJqUPE/wfSw2sw
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[CompressedData["
1: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
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
4Hg1URCbl5vdLG0pU+n/M1X5ag==
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[CompressedData["
1:eJwt13k01dv7B3BXolKSEkqGi1KSulQUHokyyzynlKHSLZWSISRDGsxTyHwy
pEyZ6zF0kEQqJS7FwcH5KBok0/nu1u/3x157vf7Z87PXeks6nTN15uTg4Jgg
7U/Pc/sx5x6dCNXTX8uiZuwomCsUZLNn9+M/utds//hIe3ILe1Yfnax6yn4R
l4bZR8O8OV4TfZE+TZzjWvZlcdYOq1L0xH4Sd+mt/Nrvexx/9h2V/068ai3t
b/X5k1jHXNo+SVy54SZXqo8bWjUCxxdi06n1oXOzZ5Dms/L5OLGWdHGKjfc5
1NrkLsIk1s/4L7nX1wOvlh/lYBA7ndeRCVe9iCpWQ179xHmtbSeU5y/h1jUL
1z8SN3jfOzJScxkTf+WKvSO+YDg4FOPjhSHio/rtxNExWaMTsz64P1LCrp74
0YNreveq/dCVd4NaNXG7RILyIW9/7N7+oKiEuPqFpHG7byC2ffQ1yCTuTxW9
kWV/HSVz6JeSiK+9SfDwUg1Cp/jMHZF/9iPi4SY5fwObfUWsfImTeTnO/OwN
xh1YSvcgzhLzEH5RE4I8DYN0F+Jnl+1czvmE4apytrcx8UTfwr8Vs7fw8vl9
lRv/rLde71RYz20sbfQvXUX8PVTtu3X1HeR1sNNg21Iw//Ry7szVCHyp9Z5v
gFhK6KJokm8UNl0duJZGfFAjLNefikLroE/cd4ndL7z54mwfjXLPPSV8iYvX
7M3apRqDK7ncl1kRm5gm+dDnYlEuJLSAh5ir61Fe3pk4dDtsXPfNhoLXtXY3
7vTG4Y2UYpc+4s/sh8rmNfEYe+SwWzHxMf+Qs33eiRh/vE7dnDjDkRHe9zsZ
mU/2qQRbU5BQ4h8rfTEFvSpaeV2Jc6ZGN56hUtB/aaa9DrG/7OXk6f5UnKuW
vbqcWOVxswTP8zTMvkpLDbaiIOqOtQJ3cwZGmYzHOltSMMPhK5GzJBN3c+wx
AGJ31x14UCMTHbvfBAoTb3cY5wioysSSV5xuLywoEDzreuVHQRYuf2EsIUMc
bIlqbZE56BakfeC5GQUOYa3Bzq9y0HvtfF8c8aUsvtOLy2mYPrf6twvxKSOK
UyGIhkM7zfJ5iHPHc61ueT5A132OvzVNKZjlunlPwTYPzWst9DKOUNCnZj8l
JlWI82Wez+YNKFgIq0mk2RVi7oiTaQPx6QO/WuVjC/Gkk7NnKHFzq1/bvqWP
UH+40I2feNxWVM6Y+QiZe125NumT89N6oFNkUYR7O0zWSOpS8HW6lBUhUoIR
IiJh77Qo0NB/Gv1ydwleKk7kuE18bG7TFLdpCVZYGS07SPyj5+83vuElWOBw
jP74IAW6raPCznMlaBQP00GaFGzr7rHc0leKieXfFIU0KJAp1gw4l/4Em942
bxnbR4Hr9ZystbVPkD55Vi2W2OuvRxcrPjzBMs43I+rEorzLhBf5ylFI+uOP
aBWynzQdl1C/cmy+y7O4W5nUz33N2pu2FXhyiLfJdTf5H2rj3PTWVeGrQvU9
3gqkfutdzRgKVWg4ptokRPwPT2afj34Vem2WGS/bQe6DI7e94HoVTsVUTUzI
U/C+yUWIZ6oKuUREh2y3k/djsomZ/6oalZeJRkhsJfUfIJecHVKLFmaLo7Z/
U9CRkmQVkl2L1ePeVwYkKZC/3RTt2lCLXoNLQl2Jv94+ECS7WIs6dw9uvSBB
6ktpQS3b8yl2xpR7B4pRUPQkOfv6yWc4FWVtFraBAnpBTSNLog6vJJ9h7REg
/0nZTxGnhXrUTBJVE+agwNd0plyTtwF9Umrsb7JZcFxu9SopkQY8Mm/EN7vI
gnCXNMagUgMGpdtt6VlggesWMyVH9wasCtDbFTfHgt33zZX0ehvQ0PoSbXqa
Bepdx3aNVjZiXsOijOsEC86vuqasfJGO7tN57MVuFqwsioxTl3+B/8o5To7Q
WCCV/rGko70ND3AsrJo+y4KepH++2Qi+xoaJGx4zu1jApxW/TpbRicKjVYd8
x8bhuWTLs+I7b1HTIrGReX8ctmT1GEjJdaGkekm6k/E4LNcNM+YceY/W7w8d
4/o2BkHeitaX/brx9UuOZ+axY6C6YM5nv7MHT6mOd1ZtGYPCa0GG7Le9uNPG
MFWwfBQU9rnWnjXvwxtzSaWT2qOwx5LFcJ7oRxtB5C+nM+H7u+53qbs+438T
HVw/DjNBaI1yTfavzxg+kj+xu2oE2gQiGbpPBrBDu3Yqf/MI9HYumDccH0Tt
otYPxxOHgfvGDe8yIQaeimmZ3DUzBAN7j4Xm1zJw48Idw30OQ1BQOi6XZjOE
b6DpiFMdA9wZsf+cWBxC5dePtw7zM+CXW/d8Z/QwLr7eKKzrNgi3hkN/V8iP
YKnDu2OXHg7AQug2pVgcwbU/w3k3fP0MpV1XQiYPMLHW62oB7PsMvy+yG3+2
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
RVU+p8ReY4D/z634fzk2TfV/oSLu8Q==
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV1nc8l90bB3BKESI7I/Eooz2kRPVIpUJGtChbkqwKbSNCyN7Ze2Rly+dB
GY2fPZK9upH0/SoZjd/5/nW/3q/zOue+rus+57qPpKmdrsUKJiYmNmYmJsZT
x+5KjLgwHUL86y4kzCcru+ibDnER37zysXvbJxX06t9w+rOeDo2op9Nin3Rw
1Hhd+CfiGgPfyOVeE+wzHdvYRMyiGFadomMJedv9y8XEhW9Sbh1rtIYUW3ua
P7FKuDhnUa8Djo6cd3Yhfr5/JGVO4BZqr3REmRJviklr2qHjhJunt3fKE2/X
bFkOabiLFM982VYhOp45C91k73XD1VpVvxLi3SJrTYJ/uuN0Q83RGGJzX6Ne
QYHH2OO2kGFKnD91lldA2wt1BtmXJwXpeB+bwj32xhd99hs8ugTocG5I4TTs
CQJyG6UKiEWNnOb/WAbjbJGG8FNiFX1e2/gfwZBdNlh5iJjasftjD28ouIdW
dkfy0xGxP9Bkm2Y4dlb8itjFR+J9vMlAoyYaGwumQ5mIy8d3dNZqxWDz/Wyq
mZeOuWMtsgoDMaBNioXZECewau7iW46F6ptjq+J46Ji9u8cnVT4eGQeLrwxz
03HV4vGnwPZExOxtHE0k3tYXV54tkYRUB9MUE+JjO8L1X99IQqRwW88AFx0B
rnrZX1mTwXZPmq9lLR3hXbs4ZZRT0MTHQ/fnIPH2f4+VSEmDHy+/6lHitoUZ
MX5aGsRSFdt+sJP1Mzq/sBxOB7dwWPYlYmt9bZOB7nTIrt6mJbqGjjjFpEE7
jkycurz40GU1HYJVjVqsjtl40c1UL0EcE30y7X11NgwH2jQbV9FRsWA+HMCR
g1tH3CUEiJs8l6bWpOaAqq3tSl1JB3vUYPDH7lxI8YbnJDPRYUIpVNmI5+OQ
vO4O3iUauEqkxIXcC9Ge5X8ya5EGdU3HcxWphdjA2f6fCrGDnkCvQVMhmEQ4
39su0MA3Iloeta4IoXzbdWrmadjGUxHAFF8EPq7v+07O0TBTxGbsUvkSvaLP
rw1M07C3uJXrL70EaQnlT02JHRdtmy0FS/Ht/q11E1M0RE5ZP32vWIrWbxeP
Tk/SsCPk9XSQaylEnOfVv36mYU25BDsLVxliAjYLdY/SsP/YZKKHbDlCPBxD
5T/RMNm7K2LQoBLlXq1SGb00/BBIKdF5WAkXbgcJUeJ1dZmxNQmVyHZkNv3b
Q4OfbHVR9Hgl9FXPs9d0kfmV91t321Vhk/51brk2Gt4Yrpyiub3CpLX8pF8j
yafwQGlWKmDobzCUXURDmyJ7+Bt6Dao3lc18KaQhx+STpPiqWvT+d+DiduJb
v1R5bgvVYpuvhXpOPg31TrMC4sq16M7NTkzKpaG8xDjU0LMWbpLzRxzSaejY
ckPfV6gOne6OYRHRNIylFPgkHHyNLa0m6nyPaGCys2VyvlePnZ1bq5Qf0pD1
faf2dr96hGVEZFk8oKHkZ+vCcGw9mCXmmUru0XBM+ZjOiep6sLApRmq70NCy
t2f1MlMDBoOUQm840KC2aXM9n1cDzJhPDKiZ0bDe/UPlr4BGlH1dyvA6TkO2
w8T1RzFvsW/RMjP/zzd0uYxufED/H9ZaRXUaFHzDm1++74S8WxGq865h0fQb
Hm1Z2D5g0g6NmtneWdZvgFzhOTutTuyNE/33p8EsjNknokvYuvHlj65HTPJX
iLtbf2hK64Fsv3AuX8cMHtduq9A724ss9RpaCecM/jqa6K5s+YSNCAm0lv+C
IoHhIsnL/VDyKbyw23Aad8wnXyc1D8BDr2bXtWdT0JiTz/7KMQTtOM7awBeT
EDgyWVLwcgi/pDkcy3spzLz1968/NYyUfgmvjLnPWFXktN5+ZBijd+W2znB/
xgEPI6E6uxHkC9p1VClPoP/CzLOMmRHwJl5U8z8/jvHR/k4v21E4dWUGRbiN
YQOLHf/k4CisB2QDOfJHMVp9NqPp5Bh2yVM7Nn8YQVukUHxT0Rg2/rcrZn5x
GPXB7pmePONg7R6W7hUYRvpebocK+3H4uBXK79o/BOVz7FGPG8exJXtz44uW
AfBrfG1YLzCBlUNZZ37y9KN02MPhmekE7sU3W7Q6fkII31xVc+oEFPJbmOL6
P+JpLusP2dEJSKbvZv4q04M+1acbGiQ+4y5f2QuboC6Enbc+0aD/GeNRSh2/
ezvg9SQ1rMH3M7Y3BIUYqbaDv4Une770M6yn9Vp1iltxPnDVtjNDn1HxbUu0
AmsLpM307lWwUsjsepbs9vU9OCXyTj6RpWC1xmo6NqAJjY39K9+pUeCjJPP2
qdSjZW5Q9IAphVRhKTZKvh7N/gn1wcRKkm4e0bL1UPmfwv4ZYhZ9ieG/3PUY
3T1zLdGMwq56D4X3A2/Q9wQCrBYU5DmSD1+//warI0e8G65SSCywt64tfY3B
m2PTYjcoePr1mLbtqMOw4i9eEWcKzPG3RR9L1sH6fUuODfGF/JcL+/jrYFzc
sQLEvKPdEtGLtQjsdRw1daHAfubLZvPXtRinVJzT71BwWLPxx5+LtYhenJ6S
uk/BgvmugpZnDfp3vuWecqXw13LJbJVLDW5z6O6Vd6PwvkjoZaV1DcycjvM9
JFaupCpltWtgn3qbjcedQvXIP1YsojX4aCTXuNeDQmHr7Kba/P+wcFo1zsaT
Qm4pp2tuGeC3tjov24eCUxTng/F4IL91hG2SuLhtsnDDE4DD7ZSMtC+FRrHO
xgB9YN2roaJ4Yl7r59E36dW4PKLLGfiUgjCrI9S2VcMxbGOlhT+FsIjqS8IJ
VaR/pQuOB1LYbZelcuFJFZgWeoRFgyhc0vz3SoRtFRouWY1oEy9GsxwQPFSF
K4YpdZWM8Qq564K9lfi1nFIfEEyhy/R1uQR/JZJFrjTLhZL4epbUDL3LIXGo
b3ZvBIXLHq+kxe3LkcSWVGxCzOvOpTB0vhxlayVUnxGHVPweN5cpx9TFE8WT
xAsFbt729WVICjkxHxNJYXi2oC6QpQw+fGbTP6Io3LGWtP/uWoKcNJaUR7EU
0k+G7K2yKsGiko1JGvED29xNj7VL8MA1dOI9scj8w2f8EiVID5Y5KfycgmWB
oOd+FCO15pJVHjEXt3Sf5++XaNdZtaE1jsT3SDZG9W4RDu24c34qgUKtoETB
CuMi6D9lruJMpOD96dFizXHyX1s6O7CDeMXa1ZIqPEWIOn7O0JE404OnUSWj
EDoP3h6aJx5TML6s0VWAxWmFcFoShWvXgvy4qgogQR3t5k6mYBBu+aUlsQAv
Xfm7thPPdfkdOnejAM3MrGuvEWsZVvxjxlKAbwsbjPuIO78fGvLckw+X/Lzo
khSKnN/nnOrr87GqeLi0hVhDqqlZ4lceVk21Bk8RW9Td0t8fkgeF5Cm3DakU
NiuteWVV8wIyg1+OuRJ7dWt+6NuQi1vH0y8rplFgu6Q+aTOZA69Hjue0iDnE
Xxj9fpmDEn8apwVxhN67Sxs1ciAlx1b0jLjP59Hjq3ezsfTObXSYeNZ80Imt
OxM+Zd867qRTOKKsarcxLRNSOvfv+BIzL90uUridiZRTR8eiiXu4Y8Ut+TLx
+dxdzkpii+4D9xq1MtCu5Zm+QHyryuTDsHgGLpv/7wFrBkXudyusl2fSIRSl
LiJI3Gy4wn2nXzo+CA+m7iE26tKVjWlMg9xvXdZrxDbTYU0lEWm4mr6Z24lY
Lf53UZtlGtLTNve7E+ftDTbjWJUGPYGsdzHEb1UV5FxVUsGum01/S6wlw8Id
ty4VCrrNW7uIs4rSlKsGU2CsI7x1mDj3Y63t4oMUhLmI3p8nzv7WJOdckQye
za+uimdSkNHNOxXhk4yeiR+tMsQ1c2L5pReSYdSgsWI3sW7btNbifBLy3mkX
HyXuTVryFqlPIvfF5f3qxBY9X1iVw5LgOvWf61niYwe7ux7tTcJyeai5GbGJ
7QPppBVJ8LiY+NeaWFrIrPJ1ayKWcuuMHYl/3Tn1kt0+EWLrj992Jb4VxzUQ
lZMA6SnRz1HEa3Yqn62+l4AtiqWF8cQpIuaco6cTYHja6Fgq8b+yK0MvtcXD
mKe1PI/YRlwzNtU+Hl/tI5+/JJ5wO7WVxhUPyYmrauXEaWHr+3zU4xCgKTJT
Q2zKp/67a/I5HvcsUW+I22Nmkzd5P0dU1kBWEzG/SUmzo/RzDPi+3vOB+EyJ
lmvN61ioHc52bSF2WGtTvM4sFhlPgkLbiVl+VNoaM8eiQsbJtou4Rexbdn58
DIT6z3N9JI47W27DfDgGSub7bn1ijH/tNp1viYa5/9e+fmK3LeK/ps2iIRlx
4fcg8QpL8QMj81EQK3HoHGbEs+e64EefKJSLHrAYZdTjTER4i1gUBOczc8YY
83P2lTXmRWKt/ZvsceK/th/v1hyNxJ4Cb9MJ4g+TAgMVnRHo7ae1MNye+HD4
pVUE+IX+zjOsq5n+OG85HNl3X3QwvLpDqiErIBw7pP5cY5hV2zsjTTIcozJf
Shjrx3Jck01+GYaeWKdKxvsH3S+dSFALQ3dwjDMjPmsLGnNcbyiuCV2cZsQv
E1p7KfZGKD7K5woOEe/8x0w7hikUB+hhi4z86XpWI9EhIdA7yxPKqM/JlKvr
YqRDUHthw0QPsVnl/MeY8mD0/C2d7SSOcso+/FwjGIVHB/PbGPUfFz0cPxiE
neuD5JqJN4j5cKSuCoLjCT+VBka9Vhb1ZEQGouN+61AtsUg//XDu1kAIMUft
ryYuKJDMsksOwJqnaRyM/XPGWontfpM/wvUo7xfEbTNKYT6zfqiaS36VQdxf
nH8gQ+kpFIVcNWMZ+eZ4apab+OLV8diMMOIf7SsC3j3xwYE4ucoA4tSoyoC5
9ieQ/xOwmrHfr+800Fyz5AW1cNMjLsRGY9byEhJecLkTt9OeeJtsuouOzWMo
bDyhYMQ4f8sHO64He6DlQq7GOeIrd9fqPylzR9y7myKajO8VrlJXw+KGLzIC
fYrEEZ+9nL0P3sNEuNVPbuK6Ns1zzV53wO7n3chC7Hv2u+P6dmcw/fmuvUj6
w9KRRKOC67fAVp35hNE/8ofGipcVr2Ptm8N+L4jD87WWctqu4tGHh0KJjPG0
rETT6+Zgev/zYgjxK/UO4RJFA8xl+7I4EzdtMApTuq6HOc94GytGP7SMuR+i
qA5RtdGnF4lLY6QPuisqoc/srOlp4viyh7LrLVOq3DVnZg8S/x+ZYXDg
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[CompressedData["
1:eJw112k0VW0bB3CVKEr0KJTHkAaSVFQkKUkylrEMKWUoeUpFZjI3mqeQTMeU
4piH+hsiGSqlEmlwcA5nKyqS8b19eD/stddv7WGtfa99X9f/krS5aGi7kIOD
Y5gc8+fzP4ojJiwocN9+vHCXVsreHUd8zOe9MnfV3NykCmzMuor/EF95m9g0
N6kDH9EXD8aJX9+1jFSbNkZFkrbYGHGeXfH32UkLjPWclPtF3Ka57Mdnr9Oo
YS5+OULczE9bt2/6LMzq1Ti+E+9Zc4Mz2dMBNM9lz4aI34+sDpmadITGvxdE
mMSNUoVJJzwuwr30JAeDeCT1U2K3lzOUzfrcPhMPOmttuLn3CmQEZvw/Ep9v
bj2jNH0V8X+yxTqIn7rdOzpQ5YpgcZbOS2Innd6+KE83qIRLWNQSX4pMZw1P
esKed41q5byzfLTvVXqjc0tWAZ04XCJOSdPDF60fvXTTiMubJA1eel2HZGbD
1QTiv4migemW/rCJTdsaTszTHufstjcAz71EzLyIDYSdHSSnA7EVRQ3OxAk8
HI5j3UHgruttsJtfXzFn4RdVwVheOudhQFztYmF30TMUrpf2lK8lHvo081/Z
5C0U1fsWLSeOqNE+F9p1G7xWFvvnzCmcCVH9dbzyDlo03vN9I/5b7Zo94R6G
RvdvPinEqauviCZ4ReB4wBeuu8S1aqHZvlQEZJ+5SHgRr7/85rutZSSWcV5Y
Yka8TWB3+va9UZANDsnjJo4/luDZMBUNh8MGNT9PUAjseJST4xiDwKRCux5i
/WqLwDvdMYg+etihkPj77EMl46pYxJ6u2WdM/J9PsFOPRzyYJXuUg45TkLBm
3Oz5mwi3smZee2Ihum/0+itJ8F2cZqlFHDPKWutIJWGqUtp9KfFFadfE8c/J
yHCnJQeZUfj16LkE97MURBwbirY1pXDsznF5ruep2MmxS1eNuIzDSyJzURqs
O99cFyaWtd+Kg/vTQG9b6PDChMIryyEOv4o08LwwkNhAnHTB/trvvHQ4BBw6
8MyIgowpVFvDM+H5z3RPDHF/SHOQbVsmHkyt+GtHrJDOd352KQ1924xyuefv
16cWygfQYL/H+q+6IQX7oWyzWy5ZMK420U49SsGf88Y9efMczBS7PJ3WpXBW
1XJUTCof2QM2hnXEqaFV8TSLfNja2LqEEP/Y/6dZLjofuv35DvzEjs3erXsW
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
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
7a7HCWHzcLEbJy0UVP4P74gErQ==
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[CompressedData["
1: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
6dEG/H/dCpz3chcfUM2t+h/vf+zR
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[
    Rational[2, 3], 0.6666666666666666],
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-1.5, 1.5}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.659261529049034*^9, 3.6592616012089243`*^9, 3.659321117762073*^9, 
   3.659337253070217*^9, 3.659337295926766*^9, 3.659337344897655*^9, 
   3.659337410751481*^9, 3.659337456415745*^9, 3.659337646469438*^9, 
   3.659337733479939*^9, 3.65955648965009*^9, 3.65976072231925*^9, 
   3.659788721673085*^9, 3.6609743933301573`*^9, 3.660974667697611*^9, 
   3.66097484625563*^9, 3.6609753494096603`*^9, 3.660975468737629*^9, 
   3.660975550505858*^9, 3.660977047553424*^9, 3.6609775664345837`*^9, 
   3.660977660241103*^9, 3.660977831577615*^9, 3.6609779593075867`*^9, 
   3.660979115657916*^9, 3.660991443452896*^9, 3.660991521621366*^9, 
   3.660992076021618*^9, {3.660992171135755*^9, 3.6609921789479713`*^9}, 
   3.6610802576595793`*^9, 3.6613414856074047`*^9, 3.661420629663685*^9, 
   3.661421090062892*^9, 3.66142282196638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "/.", 
   RowBox[{"dat", "[", "Jtest", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657521518247138*^9, 3.65752156077351*^9}, {
  3.657521632997253*^9, 3.657521633205551*^9}}],

Cell[BoxData["0.7705359159539713`"], "Output",
 CellChangeTimes->{3.65926152906135*^9, 3.659261601383347*^9, 
  3.6593211190224323`*^9, 3.6593372532230167`*^9, 3.659337295945113*^9, 
  3.659337345013886*^9, 3.65933741076571*^9, 3.65933745642968*^9, 
  3.659337646482854*^9, 3.659337733493868*^9, 3.659556489670355*^9, 
  3.659760723476027*^9, 3.6597887216904917`*^9, 3.6609743944515467`*^9, 
  3.6609746677692623`*^9, 3.660974846272498*^9, 3.660975349423286*^9, 
  3.660975468756814*^9, 3.660975550525605*^9, 3.6609770475667267`*^9, 
  3.66097756645475*^9, 3.660977660255004*^9, 3.660977831596455*^9, 
  3.6609779593265676`*^9, 3.660979115672614*^9, 3.660991444892556*^9, 
  3.660991522849648*^9, 3.6609920768125963`*^9, 3.661080257740634*^9, 
  3.661341488233392*^9, 3.66142063003187*^9, 3.661421091323903*^9, 
  3.661422822037014*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], "/.", 
   RowBox[{"dat", "[", "Jtest", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657521563761141*^9, 3.657521568213973*^9}, {
  3.657521634277841*^9, 3.657521634437419*^9}}],

Cell[BoxData["1.131132704648696`"], "Output",
 CellChangeTimes->{3.6592615291048326`*^9, 3.6592616014004517`*^9, 
  3.6593211196618233`*^9, 3.65933725331806*^9, 3.6593372959529667`*^9, 
  3.659337345062316*^9, 3.659337410808392*^9, 3.65933745647381*^9, 
  3.659337646527306*^9, 3.659337733529745*^9, 3.6595564897313013`*^9, 
  3.659760724162929*^9, 3.659788721740624*^9, 3.660974395061294*^9, 
  3.660974667840794*^9, 3.660974846281272*^9, 3.6609753495730467`*^9, 
  3.660975468805579*^9, 3.660975550570792*^9, 3.660977047597632*^9, 
  3.660977566504237*^9, 3.660977660305603*^9, 3.660977831647367*^9, 
  3.66097795937348*^9, 3.660979115707223*^9, 3.660991447851707*^9, 
  3.660992077414796*^9, 3.6610802578172626`*^9, 3.661341489019307*^9, 
  3.661420630140647*^9, 3.661421091897488*^9, 3.661422822141474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "/", "a"}]], "Input",
 CellChangeTimes->{{3.65760061401073*^9, 3.657600614490794*^9}}],

Cell[BoxData["0.6812073532904188`"], "Output",
 CellChangeTimes->{3.659261529148849*^9, 3.659261601417499*^9, 
  3.659321120270606*^9, 3.659337253388585*^9, 3.659337295961794*^9, 
  3.65933734511556*^9, 3.6593374108635817`*^9, 3.659337456482127*^9, 
  3.659337646571972*^9, 3.659337733634014*^9, 3.659556489789979*^9, 
  3.659760724870926*^9, 3.659788721798621*^9, 3.6609743959095173`*^9, 
  3.660974667893832*^9, 3.6609748462905693`*^9, 3.660975349715645*^9, 
  3.6609754688567257`*^9, 3.660975550616727*^9, 3.6609770476278353`*^9, 
  3.6609775665659227`*^9, 3.660977660358614*^9, 3.660977831701664*^9, 
  3.660977959414246*^9, 3.660979115744781*^9, 3.660992078026676*^9, 
  3.661080257864954*^9, 3.661341489920463*^9, 3.661420630242467*^9, 
  3.6614210927905073`*^9, 3.661422822244454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elipsa", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{"b", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Normal", ",", "DotDashed", ",", "Black"}], "}"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6575215708028383`*^9, 3.657521572325902*^9}, {
  3.6575216149496307`*^9, 3.657521646244975*^9}, {3.6584810619122143`*^9, 
  3.658481091279894*^9}, {3.660991427205578*^9, 3.66099142821336*^9}, {
  3.66099150778122*^9, 3.6609915095886908`*^9}, {3.66134149519106*^9, 
  3.661341498135022*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
    Dashing[{0, Small, Small, Small}], FaceForm[Opacity[0.3]], 
    LineBox[CompressedData["
1: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
Nw1dXsPChg+X3tSpfYDtg8nVqXwsFNViRh8qyYD8VWxJ/AIsDAoeO1Oblgpp
zb+3R5PuD9RLVRhLAZrFzJkdguTn937TfrMnBaYKLVN3CrEwUEJf0iIlCWYn
kvpiSec2O5aU0BOh6PvtUiFhFj5hY2oLSCRC6rptfkzSWHNSOiMxAX7u6Lxz
eS0L54I1Opij8WBukMKFpIvUFuXlxeIhhf3EIbd1LFzITM+5pPYGrj/o+9ZO
ul/NeLa24jUICiltkVjPwiWRo4L7VGKhYNVYPpI2fmB+i3YsCv58EOHm2cBC
9rtbriiVREL9YjmbBul/l2fifA9HgKNMe6ov6el/a0O+FobB7ifH/5WRPnbz
a5CAYij81P717wfp1G9Gf3Q+BkPX98l0cREWqkT93fH0YBAUPhThukD6xc7B
nkfmL+BOiu1KF9IvOZetqCYBUFVBKY4lfVGwP03t8hO4r2YnUkq6auWy/uuL
PqDwfvXOLtKbllk7WbqekOWT0zVF2tDY/5VvnDv4m145zLaRhdSEZaHtkU5g
2sGlzk+6Z+ymRP5Le/jyNJ1NhDRz9+cnzwUswVrqzI0tpPu+rbinx6kLjXco
zltJt+2cJXqslfCxkIOCKGl+145ZZSVT3Di4GCdMWvhFwno2KRvcmeD5cQXp
lq/Vm6ZiHXCXEpfTH/J+GpvvuhgkumCyl/8ohfQW76MFhRmPUcJW+F8D6Wlt
TtmnPV64bTK98j3p91/7OQ4O+CL3PwP5Z6RtwrbGdA7744nkzbqWpMcUlFUc
qM/wwJ8Vm4+SLsjLPbyKCERJ3p0ha0h76LkyvvwKQut5x4895PqXKeK7IOcQ
FPv7n3cC6aq9N36dmwtFvYmzu3aTPqvSzcDFCMwzXz1HIfff9PyuVrtHr9CI
dtYlmvQW1+7+jWzR2O0c8XiRrB/XOm/WZc7X6KVTy51CuoJ/pRrTJw45KiuV
tEnj3SdiKpxvcd7uQdJzsh6Fn113r/KJx9BPV4d2kdZUX/Pn0akEPFpsV1tM
1nOM63/CijzvcOz63dgusv61Q5udIp4kYmn8SpsBsn8U5+cpmwJSkP9Zg6IG
acM9PCe5r6Til9r5yQ//sfC3ukQjIZWGmkZmG2/xs/DILtfL0V/TcfTHBeck
sn8v7MvfEi+QiXbu72MYZH+XZLw5rDOSiUFfFzLESd/d7ZHIysnC01kGwS/J
PNAt2qYclJaNVaXnHfeQ+RG4YgXV50wu6nTEL58g88VK9Y9zfm4u3k2sdb7I
SX6+Znz98KY8TF0RcdCezKPFv/17d0/k4akZWs8NMs/G/5iV2T3Lx9qAelnz
n0zc6Ofo9b3xE64c9iuW/MHEXMGDu5MOFqFaJqE4xWSi5Ljux9vRRbjfdZHX
coaJPEGTQnTrYjSpdd8sMs7ESZft2Y94S/FuvMbF54NMzFidTt93EvGF+uZD
XANMtPURt3yYgfhcokXAuY+Jy+bfF81XlqPzptBs7W4m1mZe+BttX47GvRKZ
ZW1M9Dpy92eHcgUKan1alV3FRCnP1+eNeytRZnLsxp8K8v0FvTPqq6rw0nKn
1ZFyJprwX6LuP1KFWb0hV/NKmfhmvVjcdFQV6sS0it/NZ6J4iMMa+UvVeF/n
usPmZCYG6cqGfflegw6Xcs22JpLnH5fYSiueWvyBqxdEE5io8GuVyJJCLeZy
9yqtimPiMZ61nRvDyefO50x6bjgTo27V+/Lr1eF69ykPBfJ8jYjbH0b5Wo/r
O664szzJ81i3Xm7nv3oMKVPYl/GYie5bTPOuSDdgCVjn/OfGxL8XD4qXBjQg
n/tHvaS7TOTTr/A/oN6IBvouXpymTFwoKDhJLWtC5YRnHS/lmNiRaLhhY1oz
rld/6OMvS36fB60vzPua8ZLp7RPu+5joET+yI56vBWnTtTT93eT6Fcxacd9r
wfHQS8zGTeS88FrCTnZLK5bc+jfUyMbEGJaXZQa1FUUOFNRsb5hFoUrdg1N2
7Vg8tobqXjOLrp2yJo7+7RguI7e/o2IW28/zHPz7th3bQyTO3C+eRR1L089T
be0oXP64zDVjFlWPBYRHyn3D73HKz+Ofz2L8w0O7h399Q4VEjTjTs7M49MGT
ba1TJ1aqjhxQVJ9FSzPFhPsvOlHRhu/ESrVZ7LrdpNGS2Im+EtXf44/MIrMl
I+Det04MmLZhey05i3XblaTtZb9jrVPFxVIecj6rS1BTHfuOz5XGVM+5zWBI
rgzvuovdeLUibnHk7gye187uTrvdjbl+dxdtrGZwWXg15ZB3N67IYHZbGsyg
Q7G6H2R3Y8mI8znm/hncESl8Y3FlD6o0mzyzHibn5zuzQrtLezCBwe7FOjaN
VxeNedeJ9uGPFEfdPXLT2L57f9Y5mT7cvPNe90XJaVTZOlTjrdaHIipe/HHr
ppFy46pMt00fql36Ytk5NYU/PDNuHSjtw2u39g+MxU7h23TN0/FX+jH1tbVU
Cfl8cNHoNI9B+AAuyVncWDMxiUKrjhp8TB1A9YmNyReHJ9Hv+i63NaUDZF1v
V/7eOIn/vdp/OIUygIWsixu93kxiL7V0wVdmEGtuWNUHqk+icUbXC2rdIOqP
EBgYMoHNj7r7uH8MYbzsds41fhMo+36hzItzGH9u/Obo6TKBl/NEuR7xDeP+
zZN/9M0mMIuiNHRjxzBqGEp+i9s3gc+Th56yaw5jZc08f0XtOBZ9ZRwzihxG
s7Grhpd+jKFZ6hd0lh3BkwuPo0dpY4gxXzKHD4+gsJ+a943uMXR5WVZ0Um0E
Sz/xGlz8PIY98S0iSwYjyDaiaTnoN4Y/Mi/mKLiN4PYss9ehImM4G7luKb96
BNNpuYsfFAm8eZ0+QuhRcO7PnrWakgRODalObzKm4PcDFw8MihKodbreTuM6
+dzdszXgNxuBpnsONYbfp6BC1Ceh4UYGfi8+lTgXRkG3bYZ2USYM3G5K2Uft
oOA9a+XNnx/RUfKaWI/ihVHcTVdxfGNPx5ttUvnfjEaxx5HthLsFHd8UfK+z
MRtF0+585V2n6WguHfz0hd0oarqBggIfHeUPaZyJfDGK2iV2u85H0/DmP/Gd
lfWjuLTLgu9ZNhXZ+VY6WR2loj3XJTm+BCqOFVVdPqVKxelKx7sBoVS8KXzr
zhZNKubSptWcnKi4Nu2vKF6kYvdgZYLwMSqmFXRa1N+l4qdDrbpWtaMY8WbT
YWYyFUVuVvKHdFHw8N59gsF8NKR9r156WE/B04ZZla3CNBQc9XG2LKKgN/fZ
u6s30VBNKlpwdwwFzzwaxbsSNAxe06flaEpBxrTNHDvQUGRKZuUJ6gj2rLR4
JWNHw3DlnE1Zk8NIv+wSld9EQ86AgMmyvmH8Z8Cx90sbDU8nKPA0Ng7jdc62
uP4uGg7YLou1pw7jIXTaPzFKQwuNuMD068N4sKi2oGyBhjJpJrFshUN4YYPC
3+N76Uhbs0a/8tkAKkSuWg72oqPLrnyvWqsBDLyQNjPyhI5NUfmOlacG8Pbl
sGCpF3RMKvzZEr/cT+al5WhGJB0vRty3Wr7Xjw39M+Fm7+nYcHtng7JRH1rs
Nf/5qoOOejpsRcJbenDBdw/l6HYGGk+t2fB8oRtvposL3BNnoG+jl+lSTzf2
JxtFJ+xhIO8Ps8bWCDInePSRJcvAsB1KC/sEunG3t5HMuRMMdNCPnG1l70Ir
o+2Nf8wYeMrIbYo13IH9cQnq7LEMXK33x+ZTWQcuWv3e7PmGgdGvjvY/iO3A
yDof2YUEBkp988gbN+zAea4Z/sE0Bh7/uigR2vwND7i9CjYtZGCoTJTjUnE7
Rmzt/KPZxsCnz+G5S1ArXluqGKwm69qbfSaw/FYrzqgLm9ZyEjgy/W+A41Qr
Bv0uXiznITB034zID1YLzvQmhcWvIfug8l2eWXUzdrz02iAgQvbRs33Xoy2/
YEv5q4/x+whcq354S+zGLyhdq1InL0vgsXUbGsO/NqFfhu9k+UEChZwtLt5V
aMLPy4s21YcIvB1oHdPE1YjB5jl7H5wg0OgOMbMtoQ49ouT4Q/QIvKj8dluG
QR1u1XP6k29AoIjSs7cyK+uQ+/grot2QwK180VPi9rWozvpv+M8VAim2VzdV
Ha9Bk5nLwtPXCLwmefOwKLMa/VTWSfVaku9/JXDJNrEapwz+O403CRx6sIO1
vKoaxddHed+3IdBr3RPWcFclCq86x//sHoFxvP0PVz+rRM7oUwfgPoHdu7KK
ZJUr8VKosd6kI4Ht7P3RNokVmLeXI/SAC4HC8X9sksi5w3nP4R83H5NZ2ccj
4SJQild1DL97B5D326lnau9RgqXuTa65zwh8QH36yWy2GGsSti/1PiewSfWV
xb7WIgw/oP5240sCS9dNuLu+LESH6C9ntEMJHAze8VF5uQBlBXwHz4QRCN1K
+/7dKcBzPHM6quEEvtLa6Witk48WHVtqtkYSOPm3W4uTLw9LneeWX0QTKP+W
0+e1ey4qFexwuBxDYM5ziy1ykzlYsFa1Ynssgc2aSzwXmrLxc3LyVPRrsj5u
mr7pOZKNP249b9KJI3BP0j39Uv0sjLf/4L1I+uW6a+cKhT6g4clfnqfekrnp
9rM6jZmBf8Yb6oZJp0zvUQlvTceLPgoMx3gCp48eszIKTMVRceXcFwmk2x4n
ydqmYL92uInAOwLfN8is5NRKxqMf/ow8J72emnk9cmUi5ildc3RIJD/v3vTk
JSIBh1sP+gyQPrverXRDXTxmOEfbnEgi8IRokGhb0lsMPeIp9Yb07fZviWtW
vkGP7Jaq36Tf0J7p2tXG4pc5O3mNZHL/Tta0NnpHo0659sNQ0p0vlrK2nXiF
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
3Hgwo/R/ANAzoz8=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.1311325724590682`, 1.131132704648696}, {-0.7705358075250854,
    0.7705358221600929}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.659261529212388*^9, 3.659261601453856*^9, 3.659321120884802*^9, 
   3.659337253471569*^9, 3.659337296022274*^9, 3.659337345188562*^9, 
   3.659337410933984*^9, 3.659337456541239*^9, 3.659337646640806*^9, 
   3.659337733700501*^9, 3.659556489877606*^9, 3.659760727964484*^9, 
   3.659788721878929*^9, 3.660974397082765*^9, 3.66097466796019*^9, 
   3.660974846352989*^9, 3.660975349932412*^9, 3.660975468930459*^9, 
   3.66097555068685*^9, 3.660977047678985*^9, 3.660977566644814*^9, 
   3.660977660435206*^9, 3.660977831779479*^9, 3.660977959478651*^9, 
   3.660979115801474*^9, {3.660991429204878*^9, 3.660991449447353*^9}, {
   3.660991509988042*^9, 3.6609915247846527`*^9}, 3.6609920787168903`*^9, 
   3.660992183946417*^9, 3.661080257928113*^9, 3.661341498706957*^9, 
   3.661420630497291*^9, 3.661421093448351*^9, 3.661422822518578*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"surfNEW", ",", "elipsa", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<X\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657521647945179*^9, 3.657521656101206*^9}, {
   3.6575216908382187`*^9, 3.657521693860387*^9}, {3.658481136086457*^9, 
   3.6584811526144023`*^9}, {3.658484207553135*^9, 3.6584842088092065`*^9}, 
   3.6584851032103634`*^9, {3.6592604334903812`*^9, 3.659260441666088*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}}, {}, {{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1HdYzt//B/AQopS0JFKi8smWlPX8JApJOxJaRkILlRENkZb23uNua99N
pdAgn/bUnu9K474RDfxO3+t3/jnX47rOdc7r9TznOqJG5hrXlrKwsLAtYWFZ
nNXNr4QKCzLB8v/DVtuol5PYQL+9dccXeXRo37H+s56JwkC38Y1f1HHcYG3A
F2Lry65B8x2GOGA0uLma+PAx/5I49euQNjs4n0s8WB1370SVKcTYGmkexDqB
whzZHZY43n/expZ4t2x/3De+eyi/0hRsRCwdSqvepW6Nu2d2NksT252rm/et
fIg45wzJegEmtGwF7q7ucMCNcgV3OnHOhjWGPj8dcaay7HgocYKrfgc/3zPs
c/iVaETsM665jk/tOd7ppVwe5WeiJjyOa/CDKzotNjm18DHBWxXHcanNG6Vp
VWKZxEH61jN/rvtAM/usoBtxuPY6s8gfPpCc11t2lNh39972tnV+4Opd1hrE
y4SarJfhDpUA7C5cCNzDwwSr81a9s2Uh2Jw57sdCbD68q7lcNRTbHqdQteuY
cDtZJynTHYrp0Y3+t4mfsans4ZkPg8KHE8sjuJkYeLTvZbx0JBIO5V7p4yL9
XHv2xasxGqH7qwaiiS07IwpSRGIQb2kUZ0istCtA+/2dGAQJNrR1czIRZq+V
MrkyFmyPxHnq1jCR17KHQ+JIHKp5uJke7OQ+ur6HicTR4L6OV+E4sfjsxEZe
Bg0b4+Uafqwm9SQ2f2U9lgAuQf+Ui8Q12mqG3a0JkFixQ1VoFRP8h2J6zNmT
cOry7BPbFUyYFVeprrRKQVorS4UI8VzIKVpNSQoudTeoVC1nou3X1T5P9lTc
g6MIH/G089zYqvhUUOXlLfHLSP3BPT7trWnYsi4gNZaFCT9Kpvi2cAaOSmvs
WjfHwCm6mLCAYxYakz1OJc8y8EDFSqcwPgsbORrfyhPTtfg69KqzwLKBo8bs
FwPoFyoIXpsNX56d6mUzDNzhLvRkicwGD+f3A6e+McCdw2ZgW5SDNqHwm93j
DNzIref8y6SDFlXgZkT8Ztas9jp/HqYf31s7PMZA65ipW41cHuqmdY+PjzJg
4/t+3Ns+D4I2M8qTIwwcLxBZzcqZj1DPbQKtAww8PDEa7SRZAF8nKz/pLwwc
+rInsEevCHnP68USOxg4xh9HV39SBFsuSxEhYs13SWFlUUVIslpi9LeNgX7J
kuyQoSJoKpxfXdbCgGLx4/q95sXYon2La3sDA2suLxtjOLwBZSo96l7FwO5s
2bzk+FJc9NDrTclm4I/c6oAPzDIUb82f+JrFwEfDL6LCy8vR/lZWdyexz4IC
932Bcki5XlNOzWBg1HqKT/hIOZrTUqJj0sj5dAO/S87leCo6A8sEBtil7mi7
CrxDo6OVf2AIA7zxmS+jDr2HZL2hMs9TBvaam7HYPKrAjmap4iNPGKC+71bb
6V4Bn8TA5Gt2DEz9rP/VF1aBP5tnWOiPGLA6ckJdsaQCS9nkgtRsyf7SbSvm
WSrR5X3Y744lyXfrtgqe55XQX6LYrWTMgLbj56IFzyrkTs4lPj/JwJDl8K2n
oR+xd/Z6UsafafA8GNhsx/wPbCbBzXqZ0xhccP0k4FKPV+qfKmeNphH2z6+d
3YaNUCyb6phaOY3O7Vk65qrNkIgQ+ven3hSerB4OobO1ovePhlNo7CTkHE0/
V9PasLFLMI2naQJh5TsKtTQ7EKlcxqBzTID/rqHGsrov4Cv19TKV/opqvr5s
0ctd2Pky68LeS+Pwvjr6Pqa2G/e0yvbcfDWGC9+kUybZe4EIjnKv16MQwyg9
M6cXlDi7VUEHhYWPHh4Vp/vg2SXyPPHbCHiyrddb9Peh5uF2qQmuESg56Qu8
M+9HEL95U/GRYYxfmHiVONGPX1G6Sh7nh/BtoKv5udkA9FqSvAMdBiHFas47
2jMA1W5JL/aMAUyXaCZWnxoEvzS1a9vnfvQECURWZw9i+ds9oTOzfWjwcUxy
5h7CaEufeAdfH3L2c1kWWgzBxCFLes/BXpzWWR38rGoIY8nbql7XdWPz2cnK
9XzDKO1JPveTuwvlfU6Wr4yGIRtZe63e6gsieL4V18YP42d6HUtEVzv80lb+
kBwYRgdt75JJiTYMKbhtqhQZwQGe/Ne3vVsQft5UsVJ7BCHBh5t+dzTh1Yt4
/0rXEQxUePvqKzRiYx13ykzeCLaOa9Wr59bjitfyHed6R2Ax/U+IzMo67DDW
elS4ksKGllexDpM14BZJP/VCkkIzm8l4mGc1/qvqWvZJicKDEdH0A/IVaP7W
IyRrROHvejE2SroCjR5RFT7EYSIOTiGSFVD8T+bgBLGNlkjfX64KjOyduBlt
TMH7g5NMTfcH9L0o5Vt5jULC6thjtx5/wKqgfpfKGxTYMi1My/PeY+Du4PjG
OxTa3dqMGna9w5DcwroNNhTORdwXeib6DmY1dam3iUPSc34d4H2Hq7lNS0uJ
DftbRUJmy+HXYTVgZEvhgsrXbVffl2OUkrdJeEChhm3zjz+65YicHR8Te0zh
LctDGVXnMvTt/sg1Zk9B6/qc8XLbMjxk19gv7UDyyBbIKTItww3rkzxPiL0K
qSJJtTLcjb/Pxu1IgaN/iwmrUBm69LdX7XeiMFc3tbU84y3mzyhE3HamcIbO
YZ+WXwqvNSXpKS8prAvisBuKLEV2fT/bKLFN/WjWphel4HQ4LSHuSuGJUHOV
p3YpeN/0ZkcSF5mEh9xllpC+NDi83Ei+y61KlXaU4L7/5qJrHhT2BJRcFIwq
xnRWAv+QF4XPd5LlL7woxrJfbYJC3hS+Kv97JdCsGJ8umvSrEdsFs8ryHy2G
4aW4d0XEDfnbb/F3FOHvfFyFpw8FXcP3BSK8RYjfcKV2ux+Fna1zSpdcCrD1
aOfU/kAKHx3eiAtbFIDGFpNrSGxnzynTe74AhWtEFF4Rj+T/HroqUYBJXcXc
UeJrGQ4uFhX5oPkqzoQGUZCezHznxZoPdx7j8R/BFIZNRC2+29ORQWONexpG
gVfJd3+xCR0Lh28b0og576RtfaZGx1N7v+Ea4qjvT17xitCR5CNxSjCcQmU6
v/PB0lwkll00SSf2XSPe6fw7By3qyzfVR1CwspMMVXiYDex6cH4siuTFJ5K5
1CAbF9yWFHNEU5hpfzpbdjIb/HOa3buIddhXiMpzZyP0pM4lK2KGA3eVfGIW
NO0+Hp0hPnnA4PLZlkwsjMsEMGIoxN/wducszsQW6ngrVyyFQL/rX+uiM0G3
523ZSXyq2f2ozp1MNCxZueYmcfXFwi3GrJlg/tpk0Eks8+1or/O+DDzISA+h
x1HQCArnUF6fAbbcvrw6YnGR6lqRhXSsGKv3GSPmentP+6BvOmRjxxw2xVPI
PbjqjUnZa/zT8/WEPfGZJpXPnZvScP9kwmU5GgUHHeXR26OpcHlqpaNK7Lzh
tf7vnFTkezA4rhHLq3+6uPlsKsS2s2W/Iq57/vTZjYcpWPjkMNBHnGnYY83W
mgS3/OmmBwkU8mQVzDfTkrBN/fEDV+K0mfvZMveTQDt9fDCE2IkjTPg6TxJG
dR5yFBH/2yT7qEo1Ec2qzgm/iO0LDD/3CSfiytX/7FYmUuhPW2o6P5GA9cHK
G/iJO3WXOu52T8BnwZ74fcSHGjUkQ6tokPqtsfImsQDlX00PpMEkYRuXNfHq
sN/ZDddpSKRt63Ik1t3jY8y+nAYdvuRPocSX/pXZbi8fD3aNFOZH4kAxVq6I
tfE4qFEr1UIslkE7UtwTB0N1Qak+YvGWcrNZuzj42wo9niHWnqjeblMYC+5t
b24IJ1FYppp+OvBlLNqGf9RLEGtOb8zIuxAL/cqzS/cS76odV52diUH6J7Xc
48TPIudcNlTEILBr/qAysXzz15VH/GPgMPbWXpN4xcHWlqf7YzBf4HfVmLjd
1E48ZmkMnHSj/5oSN/AYF72vj8ZC2jsDK2Ka9emc1RbR2Lj+5H174okQzu7g
1ChIjAmNBBOrSx3RLHkUBSm5vKxIYlaBqxwDZ6Jw6Yz+iXjiWpFlfhcbImHA
XV+QTnxFQCUs3iISkxZB4TnE7I9OSzE4I7Fl+IZSAXGQ5/rOl8oReKWyYaKM
OI9D+XfLaDietc1RH4j9/aZit7qEIzi5O7mamO0ivdZKPBw9ru/3fSaOTVe1
L3sfBqVjKfZ1xMYrbueuNQ5D4gtvv0Zi3ckiM4MlYSiUsDZrIXbhn07JiAyF
QNd5znbi8rMFt5ccC8XhqwfufSGWoFqNZupCcNVjsrOLWG6r8MK4cQhEAy/8
7iEWNhCW7Z8Jxia6ZXMf8WepW/ztL4NRKCR7bYB4XikwoG5jMPhnklIHiVfR
DuRXpQdhjcWHlCHifJP2h2XHg7A/08VomHh0gK+7sDkQX7oYdYvWCHvSl2MS
CF6BvzOLXnIq4Vn6fABSHr5uWvTIf2KVyZ4B2Cn25+ainc+4JNJEAzAo8ZX+
v/2X35SMzfFHe5h10eL5UnYXFaOU/NHqE2qzWB+lz1gS0eEHEwHd8cX62V6V
Xwy744d26TT+XuJ7m4zVQln8IMv0n13s/4aaSX+Iry+0NLn9FvOZiryxNlTc
F+UXNg23ESfQZ9pDC3zQ9jdvqpn4gWXKsfCzPsg83pPRQCzQK3Qssscbu9d7
b68lfi/wkj1+uTcsFd3lK4nT/ma1JQZ5oelxfW85sXY781ialBf4lwQfLFlc
nySabB7riVVuNPbF9xNmeJjtcbUHArQol9fETkOH/V9OuaP4W+ybROKc1xmy
iYfdICdgrxL2v/ydVQoMXfHmZFiiP/HM56Wen168hGzE9iJPYgXfIs9vjS+w
/4/nisX3fkJST2XV3HMoBRjBljiky1RaROQ5bB5E7LYg9tqSYKt++xlkNivK
6BMv/Xmo6ZaPE2ovpJ3VIR6/v0b7Rb4jIj7d3aBCvMdb/l0ZqwMmJPg65YgP
9z63cTn0CEMBJj+5iHfUqOjUPn+AVe4uVazET859t1rfaAOWP9/VZsn/MHko
Wj/z1j2wlSS9WPw/UtsHc+flboHjwzH318QJqapzqQ038PTzE4FoYuW45Gij
W1fBUvNT15e4W6FJkC6nh28prqw2xG+59P0P39IC0znytgnxqFroY185ZWxQ
GnDTJVZ4LH7IUe4wOo01jc4Q/zOT2Ptxn9sRR5WJqUPE/wfSw2sw
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1: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
        "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
4Hg1URCbl5vdLG0pU+n/M1X5ag==
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1:eJwt13k01dv7B3BXolKSEkqGi1KSulQUHokyyzynlKHSLZWSISRDGsxTyHwy
pEyZ6zF0kEQqJS7FwcH5KBok0/nu1u/3x157vf7Z87PXeks6nTN15uTg4Jgg
7U/Pc/sx5x6dCNXTX8uiZuwomCsUZLNn9+M/utds//hIe3ILe1Yfnax6yn4R
l4bZR8O8OV4TfZE+TZzjWvZlcdYOq1L0xH4Sd+mt/Nrvexx/9h2V/068ai3t
b/X5k1jHXNo+SVy54SZXqo8bWjUCxxdi06n1oXOzZ5Dms/L5OLGWdHGKjfc5
1NrkLsIk1s/4L7nX1wOvlh/lYBA7ndeRCVe9iCpWQ179xHmtbSeU5y/h1jUL
1z8SN3jfOzJScxkTf+WKvSO+YDg4FOPjhSHio/rtxNExWaMTsz64P1LCrp74
0YNreveq/dCVd4NaNXG7RILyIW9/7N7+oKiEuPqFpHG7byC2ffQ1yCTuTxW9
kWV/HSVz6JeSiK+9SfDwUg1Cp/jMHZF/9iPi4SY5fwObfUWsfImTeTnO/OwN
xh1YSvcgzhLzEH5RE4I8DYN0F+Jnl+1czvmE4apytrcx8UTfwr8Vs7fw8vl9
lRv/rLde71RYz20sbfQvXUX8PVTtu3X1HeR1sNNg21Iw//Ry7szVCHyp9Z5v
gFhK6KJokm8UNl0duJZGfFAjLNefikLroE/cd4ndL7z54mwfjXLPPSV8iYvX
7M3apRqDK7ncl1kRm5gm+dDnYlEuJLSAh5ir61Fe3pk4dDtsXPfNhoLXtXY3
7vTG4Y2UYpc+4s/sh8rmNfEYe+SwWzHxMf+Qs33eiRh/vE7dnDjDkRHe9zsZ
mU/2qQRbU5BQ4h8rfTEFvSpaeV2Jc6ZGN56hUtB/aaa9DrG/7OXk6f5UnKuW
vbqcWOVxswTP8zTMvkpLDbaiIOqOtQJ3cwZGmYzHOltSMMPhK5GzJBN3c+wx
AGJ31x14UCMTHbvfBAoTb3cY5wioysSSV5xuLywoEDzreuVHQRYuf2EsIUMc
bIlqbZE56BakfeC5GQUOYa3Bzq9y0HvtfF8c8aUsvtOLy2mYPrf6twvxKSOK
UyGIhkM7zfJ5iHPHc61ueT5A132OvzVNKZjlunlPwTYPzWst9DKOUNCnZj8l
JlWI82Wez+YNKFgIq0mk2RVi7oiTaQPx6QO/WuVjC/Gkk7NnKHFzq1/bvqWP
UH+40I2feNxWVM6Y+QiZe125NumT89N6oFNkUYR7O0zWSOpS8HW6lBUhUoIR
IiJh77Qo0NB/Gv1ydwleKk7kuE18bG7TFLdpCVZYGS07SPyj5+83vuElWOBw
jP74IAW6raPCznMlaBQP00GaFGzr7rHc0leKieXfFIU0KJAp1gw4l/4Em942
bxnbR4Hr9ZystbVPkD55Vi2W2OuvRxcrPjzBMs43I+rEorzLhBf5ylFI+uOP
aBWynzQdl1C/cmy+y7O4W5nUz33N2pu2FXhyiLfJdTf5H2rj3PTWVeGrQvU9
3gqkfutdzRgKVWg4ptokRPwPT2afj34Vem2WGS/bQe6DI7e94HoVTsVUTUzI
U/C+yUWIZ6oKuUREh2y3k/djsomZ/6oalZeJRkhsJfUfIJecHVKLFmaLo7Z/
U9CRkmQVkl2L1ePeVwYkKZC/3RTt2lCLXoNLQl2Jv94+ECS7WIs6dw9uvSBB
6ktpQS3b8yl2xpR7B4pRUPQkOfv6yWc4FWVtFraBAnpBTSNLog6vJJ9h7REg
/0nZTxGnhXrUTBJVE+agwNd0plyTtwF9Umrsb7JZcFxu9SopkQY8Mm/EN7vI
gnCXNMagUgMGpdtt6VlggesWMyVH9wasCtDbFTfHgt33zZX0ehvQ0PoSbXqa
Bepdx3aNVjZiXsOijOsEC86vuqasfJGO7tN57MVuFqwsioxTl3+B/8o5To7Q
WCCV/rGko70ND3AsrJo+y4KepH++2Qi+xoaJGx4zu1jApxW/TpbRicKjVYd8
x8bhuWTLs+I7b1HTIrGReX8ctmT1GEjJdaGkekm6k/E4LNcNM+YceY/W7w8d
4/o2BkHeitaX/brx9UuOZ+axY6C6YM5nv7MHT6mOd1ZtGYPCa0GG7Le9uNPG
MFWwfBQU9rnWnjXvwxtzSaWT2qOwx5LFcJ7oRxtB5C+nM+H7u+53qbs+438T
HVw/DjNBaI1yTfavzxg+kj+xu2oE2gQiGbpPBrBDu3Yqf/MI9HYumDccH0Tt
otYPxxOHgfvGDe8yIQaeimmZ3DUzBAN7j4Xm1zJw48Idw30OQ1BQOi6XZjOE
b6DpiFMdA9wZsf+cWBxC5dePtw7zM+CXW/d8Z/QwLr7eKKzrNgi3hkN/V8iP
YKnDu2OXHg7AQug2pVgcwbU/w3k3fP0MpV1XQiYPMLHW62oB7PsMvy+yG3+2
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
RVU+p8ReY4D/z634fzk2TfV/oSLu8Q==
        "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV1nc8l90bB3BKESI7I/Eooz2kRPVIpUJGtChbkqwKbSNCyN7Ze2Rly+dB
GY2fPZK9upH0/SoZjd/5/nW/3q/zOue+rus+57qPpKmdrsUKJiYmNmYmJsZT
x+5KjLgwHUL86y4kzCcru+ibDnER37zysXvbJxX06t9w+rOeDo2op9Nin3Rw
1Hhd+CfiGgPfyOVeE+wzHdvYRMyiGFadomMJedv9y8XEhW9Sbh1rtIYUW3ua
P7FKuDhnUa8Djo6cd3Yhfr5/JGVO4BZqr3REmRJviklr2qHjhJunt3fKE2/X
bFkOabiLFM982VYhOp45C91k73XD1VpVvxLi3SJrTYJ/uuN0Q83RGGJzX6Ne
QYHH2OO2kGFKnD91lldA2wt1BtmXJwXpeB+bwj32xhd99hs8ugTocG5I4TTs
CQJyG6UKiEWNnOb/WAbjbJGG8FNiFX1e2/gfwZBdNlh5iJjasftjD28ouIdW
dkfy0xGxP9Bkm2Y4dlb8itjFR+J9vMlAoyYaGwumQ5mIy8d3dNZqxWDz/Wyq
mZeOuWMtsgoDMaBNioXZECewau7iW46F6ptjq+J46Ji9u8cnVT4eGQeLrwxz
03HV4vGnwPZExOxtHE0k3tYXV54tkYRUB9MUE+JjO8L1X99IQqRwW88AFx0B
rnrZX1mTwXZPmq9lLR3hXbs4ZZRT0MTHQ/fnIPH2f4+VSEmDHy+/6lHitoUZ
MX5aGsRSFdt+sJP1Mzq/sBxOB7dwWPYlYmt9bZOB7nTIrt6mJbqGjjjFpEE7
jkycurz40GU1HYJVjVqsjtl40c1UL0EcE30y7X11NgwH2jQbV9FRsWA+HMCR
g1tH3CUEiJs8l6bWpOaAqq3tSl1JB3vUYPDH7lxI8YbnJDPRYUIpVNmI5+OQ
vO4O3iUauEqkxIXcC9Ge5X8ya5EGdU3HcxWphdjA2f6fCrGDnkCvQVMhmEQ4
39su0MA3Iloeta4IoXzbdWrmadjGUxHAFF8EPq7v+07O0TBTxGbsUvkSvaLP
rw1M07C3uJXrL70EaQnlT02JHRdtmy0FS/Ht/q11E1M0RE5ZP32vWIrWbxeP
Tk/SsCPk9XSQaylEnOfVv36mYU25BDsLVxliAjYLdY/SsP/YZKKHbDlCPBxD
5T/RMNm7K2LQoBLlXq1SGb00/BBIKdF5WAkXbgcJUeJ1dZmxNQmVyHZkNv3b
Q4OfbHVR9Hgl9FXPs9d0kfmV91t321Vhk/51brk2Gt4Yrpyiub3CpLX8pF8j
yafwQGlWKmDobzCUXURDmyJ7+Bt6Dao3lc18KaQhx+STpPiqWvT+d+DiduJb
v1R5bgvVYpuvhXpOPg31TrMC4sq16M7NTkzKpaG8xDjU0LMWbpLzRxzSaejY
ckPfV6gOne6OYRHRNIylFPgkHHyNLa0m6nyPaGCys2VyvlePnZ1bq5Qf0pD1
faf2dr96hGVEZFk8oKHkZ+vCcGw9mCXmmUru0XBM+ZjOiep6sLApRmq70NCy
t2f1MlMDBoOUQm840KC2aXM9n1cDzJhPDKiZ0bDe/UPlr4BGlH1dyvA6TkO2
w8T1RzFvsW/RMjP/zzd0uYxufED/H9ZaRXUaFHzDm1++74S8WxGq865h0fQb
Hm1Z2D5g0g6NmtneWdZvgFzhOTutTuyNE/33p8EsjNknokvYuvHlj65HTPJX
iLtbf2hK64Fsv3AuX8cMHtduq9A724ss9RpaCecM/jqa6K5s+YSNCAm0lv+C
IoHhIsnL/VDyKbyw23Aad8wnXyc1D8BDr2bXtWdT0JiTz/7KMQTtOM7awBeT
EDgyWVLwcgi/pDkcy3spzLz1968/NYyUfgmvjLnPWFXktN5+ZBijd+W2znB/
xgEPI6E6uxHkC9p1VClPoP/CzLOMmRHwJl5U8z8/jvHR/k4v21E4dWUGRbiN
YQOLHf/k4CisB2QDOfJHMVp9NqPp5Bh2yVM7Nn8YQVukUHxT0Rg2/rcrZn5x
GPXB7pmePONg7R6W7hUYRvpebocK+3H4uBXK79o/BOVz7FGPG8exJXtz44uW
AfBrfG1YLzCBlUNZZ37y9KN02MPhmekE7sU3W7Q6fkII31xVc+oEFPJbmOL6
P+JpLusP2dEJSKbvZv4q04M+1acbGiQ+4y5f2QuboC6Enbc+0aD/GeNRSh2/
ezvg9SQ1rMH3M7Y3BIUYqbaDv4Une770M6yn9Vp1iltxPnDVtjNDn1HxbUu0
AmsLpM307lWwUsjsepbs9vU9OCXyTj6RpWC1xmo6NqAJjY39K9+pUeCjJPP2
qdSjZW5Q9IAphVRhKTZKvh7N/gn1wcRKkm4e0bL1UPmfwv4ZYhZ9ieG/3PUY
3T1zLdGMwq56D4X3A2/Q9wQCrBYU5DmSD1+//warI0e8G65SSCywt64tfY3B
m2PTYjcoePr1mLbtqMOw4i9eEWcKzPG3RR9L1sH6fUuODfGF/JcL+/jrYFzc
sQLEvKPdEtGLtQjsdRw1daHAfubLZvPXtRinVJzT71BwWLPxx5+LtYhenJ6S
uk/BgvmugpZnDfp3vuWecqXw13LJbJVLDW5z6O6Vd6PwvkjoZaV1DcycjvM9
JFaupCpltWtgn3qbjcedQvXIP1YsojX4aCTXuNeDQmHr7Kba/P+wcFo1zsaT
Qm4pp2tuGeC3tjov24eCUxTng/F4IL91hG2SuLhtsnDDE4DD7ZSMtC+FRrHO
xgB9YN2roaJ4Yl7r59E36dW4PKLLGfiUgjCrI9S2VcMxbGOlhT+FsIjqS8IJ
VaR/pQuOB1LYbZelcuFJFZgWeoRFgyhc0vz3SoRtFRouWY1oEy9GsxwQPFSF
K4YpdZWM8Qq564K9lfi1nFIfEEyhy/R1uQR/JZJFrjTLhZL4epbUDL3LIXGo
b3ZvBIXLHq+kxe3LkcSWVGxCzOvOpTB0vhxlayVUnxGHVPweN5cpx9TFE8WT
xAsFbt729WVICjkxHxNJYXi2oC6QpQw+fGbTP6Io3LGWtP/uWoKcNJaUR7EU
0k+G7K2yKsGiko1JGvED29xNj7VL8MA1dOI9scj8w2f8EiVID5Y5KfycgmWB
oOd+FCO15pJVHjEXt3Sf5++XaNdZtaE1jsT3SDZG9W4RDu24c34qgUKtoETB
CuMi6D9lruJMpOD96dFizXHyX1s6O7CDeMXa1ZIqPEWIOn7O0JE404OnUSWj
EDoP3h6aJx5TML6s0VWAxWmFcFoShWvXgvy4qgogQR3t5k6mYBBu+aUlsQAv
Xfm7thPPdfkdOnejAM3MrGuvEWsZVvxjxlKAbwsbjPuIO78fGvLckw+X/Lzo
khSKnN/nnOrr87GqeLi0hVhDqqlZ4lceVk21Bk8RW9Td0t8fkgeF5Cm3DakU
NiuteWVV8wIyg1+OuRJ7dWt+6NuQi1vH0y8rplFgu6Q+aTOZA69Hjue0iDnE
Xxj9fpmDEn8apwVxhN67Sxs1ciAlx1b0jLjP59Hjq3ezsfTObXSYeNZ80Imt
OxM+Zd867qRTOKKsarcxLRNSOvfv+BIzL90uUridiZRTR8eiiXu4Y8Ut+TLx
+dxdzkpii+4D9xq1MtCu5Zm+QHyryuTDsHgGLpv/7wFrBkXudyusl2fSIRSl
LiJI3Gy4wn2nXzo+CA+m7iE26tKVjWlMg9xvXdZrxDbTYU0lEWm4mr6Z24lY
Lf53UZtlGtLTNve7E+ftDTbjWJUGPYGsdzHEb1UV5FxVUsGum01/S6wlw8Id
ty4VCrrNW7uIs4rSlKsGU2CsI7x1mDj3Y63t4oMUhLmI3p8nzv7WJOdckQye
za+uimdSkNHNOxXhk4yeiR+tMsQ1c2L5pReSYdSgsWI3sW7btNbifBLy3mkX
HyXuTVryFqlPIvfF5f3qxBY9X1iVw5LgOvWf61niYwe7ux7tTcJyeai5GbGJ
7QPppBVJ8LiY+NeaWFrIrPJ1ayKWcuuMHYl/3Tn1kt0+EWLrj992Jb4VxzUQ
lZMA6SnRz1HEa3Yqn62+l4AtiqWF8cQpIuaco6cTYHja6Fgq8b+yK0MvtcXD
mKe1PI/YRlwzNtU+Hl/tI5+/JJ5wO7WVxhUPyYmrauXEaWHr+3zU4xCgKTJT
Q2zKp/67a/I5HvcsUW+I22Nmkzd5P0dU1kBWEzG/SUmzo/RzDPi+3vOB+EyJ
lmvN61ioHc52bSF2WGtTvM4sFhlPgkLbiVl+VNoaM8eiQsbJtou4Rexbdn58
DIT6z3N9JI47W27DfDgGSub7bn1ijH/tNp1viYa5/9e+fmK3LeK/ps2iIRlx
4fcg8QpL8QMj81EQK3HoHGbEs+e64EefKJSLHrAYZdTjTER4i1gUBOczc8YY
83P2lTXmRWKt/ZvsceK/th/v1hyNxJ4Cb9MJ4g+TAgMVnRHo7ae1MNye+HD4
pVUE+IX+zjOsq5n+OG85HNl3X3QwvLpDqiErIBw7pP5cY5hV2zsjTTIcozJf
Shjrx3Jck01+GYaeWKdKxvsH3S+dSFALQ3dwjDMjPmsLGnNcbyiuCV2cZsQv
E1p7KfZGKD7K5woOEe/8x0w7hikUB+hhi4z86XpWI9EhIdA7yxPKqM/JlKvr
YqRDUHthw0QPsVnl/MeY8mD0/C2d7SSOcso+/FwjGIVHB/PbGPUfFz0cPxiE
neuD5JqJN4j5cKSuCoLjCT+VBka9Vhb1ZEQGouN+61AtsUg//XDu1kAIMUft
ryYuKJDMsksOwJqnaRyM/XPGWontfpM/wvUo7xfEbTNKYT6zfqiaS36VQdxf
nH8gQ+kpFIVcNWMZ+eZ4apab+OLV8diMMOIf7SsC3j3xwYE4ucoA4tSoyoC5
9ieQ/xOwmrHfr+800Fyz5AW1cNMjLsRGY9byEhJecLkTt9OeeJtsuouOzWMo
bDyhYMQ4f8sHO64He6DlQq7GOeIrd9fqPylzR9y7myKajO8VrlJXw+KGLzIC
fYrEEZ+9nL0P3sNEuNVPbuK6Ns1zzV53wO7n3chC7Hv2u+P6dmcw/fmuvUj6
w9KRRKOC67fAVp35hNE/8ofGipcVr2Ptm8N+L4jD87WWctqu4tGHh0KJjPG0
rETT6+Zgev/zYgjxK/UO4RJFA8xl+7I4EzdtMApTuq6HOc94GytGP7SMuR+i
qA5RtdGnF4lLY6QPuisqoc/srOlp4viyh7LrLVOq3DVnZg8S/x+ZYXDg
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1:eJw112k0VW0bB3CVKEr0KJTHkAaSVFQkKUkylrEMKWUoeUpFZjI3mqeQTMeU
4piH+hsiGSqlEmlwcA5nKyqS8b19eD/stddv7WGtfa99X9f/krS5aGi7kIOD
Y5gc8+fzP4ojJiwocN9+vHCXVsreHUd8zOe9MnfV3NykCmzMuor/EF95m9g0
N6kDH9EXD8aJX9+1jFSbNkZFkrbYGHGeXfH32UkLjPWclPtF3Ka57Mdnr9Oo
YS5+OULczE9bt2/6LMzq1Ti+E+9Zc4Mz2dMBNM9lz4aI34+sDpmadITGvxdE
mMSNUoVJJzwuwr30JAeDeCT1U2K3lzOUzfrcPhMPOmttuLn3CmQEZvw/Ep9v
bj2jNH0V8X+yxTqIn7rdOzpQ5YpgcZbOS2Innd6+KE83qIRLWNQSX4pMZw1P
esKed41q5byzfLTvVXqjc0tWAZ04XCJOSdPDF60fvXTTiMubJA1eel2HZGbD
1QTiv4migemW/rCJTdsaTszTHufstjcAz71EzLyIDYSdHSSnA7EVRQ3OxAk8
HI5j3UHgruttsJtfXzFn4RdVwVheOudhQFztYmF30TMUrpf2lK8lHvo081/Z
5C0U1fsWLSeOqNE+F9p1G7xWFvvnzCmcCVH9dbzyDlo03vN9I/5b7Zo94R6G
RvdvPinEqauviCZ4ReB4wBeuu8S1aqHZvlQEZJ+5SHgRr7/85rutZSSWcV5Y
Yka8TWB3+va9UZANDsnjJo4/luDZMBUNh8MGNT9PUAjseJST4xiDwKRCux5i
/WqLwDvdMYg+etihkPj77EMl46pYxJ6u2WdM/J9PsFOPRzyYJXuUg45TkLBm
3Oz5mwi3smZee2Ihum/0+itJ8F2cZqlFHDPKWutIJWGqUtp9KfFFadfE8c/J
yHCnJQeZUfj16LkE97MURBwbirY1pXDsznF5ruep2MmxS1eNuIzDSyJzURqs
O99cFyaWtd+Kg/vTQG9b6PDChMIryyEOv4o08LwwkNhAnHTB/trvvHQ4BBw6
8MyIgowpVFvDM+H5z3RPDHF/SHOQbVsmHkyt+GtHrJDOd352KQ1924xyuefv
16cWygfQYL/H+q+6IQX7oWyzWy5ZMK420U49SsGf88Y9efMczBS7PJ3WpXBW
1XJUTCof2QM2hnXEqaFV8TSLfNja2LqEEP/Y/6dZLjofuv35DvzEjs3erXsW
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
        "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV1nc41W0YB3ChlGREdlRmRMuLku4ko4xXySpF80W2QtkpUYTslZlRWcce
eXJsiuxVcsyTQr8jZL+Pv871uc7v+v3u67nv5/s8+2/aXbpDT0dHx7yFjm7z
N7HUU5L3blrlY53p2ZOZVCRhIf/tr74iACtrtSZ2epl92rbLmnCbe6uxIba7
8qlzBy4bw5KmR689dtCGdZPJZQtQ+NoomIotSbHN+3P9Hiw+bxXMxSbtKuAP
s7QFk/HSkXLsVQ/qGRtwBPassx/bsSOoIr+aLruCut5V8ip2rkX8C7GBh8Cm
W0Jsy6Kikxuv5h+buYHR4NZJdmwBRScZVStPYLH3ERHFrir7J/0XPIbMlP1j
GthtSq9zk+l9gVtLRVUPezioLsWozhdax80tjLH7QyM06y88BQaPdEYLbEg4
lJJj4A+aQa5Pn2DLKrntuMcbANNH6rheYKvZ8ZlJDgbAUIaQVSi22Gpo7xvz
F+Bqsn43AXt7dtjKHZFAoBU8Y03FZko7zi4xEQhG+0XdM7EpM4m73t97CTuv
x2eRsB1yIhbtZIPhyyk3yxLs6kD3LjkiGKx1nGYrsKOI+5fWTELAbbef0kfs
wxllheYVIRDIUqRTi33B0Ci0VjAU9pdvEW/E/sIaQ5X0DIXcKJvaFux1z3+2
z515BUrNmfod2C+XxNuNU17B111u57qxFRim9iCGMCi67rjSix2u29wjdicM
CNkQ1wHs6BxOrqD6MMie6a74iu3Bvbv1j0Q4zO1UqxvCfh/DsfVaQDhU0obC
h7GL710vq5vC/7O8kRrZfP/wuZ+y2hFgT472G8VuteKIi86OgFXXisyxzfVJ
ZG+iZ4sE7XDW0HHs80eCH9jYRwK9cxhMYNcT/Ul97ZFQ4KFVuOm7Pcpa545H
Qd92xdlNV/1mepAXHgUUxyu/N/3H8anQ3oUoENlTWLLp6WwGzedG0TCurq62
6YEPQ78OVkdD39zcs83vBY5QJZulYoBqV+m3Wc+U0NNVq/AYOGqRrLJZb85r
bguW9RiY9EsrpWDHldJZ5/wXCzecGn5+x87/nb79Ynss8HbsHPyGbTtnffrP
yTiIO+fkN4jNHV28KzotDl5bbkz3YW8bmXQ+xRoPv77mc/Rgy2zcfkRxiQcn
hUBisz966q94n1Hi4QRbSFAb9hPFrosyWglgtlg1vtnPhMfB4l2FCSDqzb/c
sFn/imSUm9BrGJZPa67B1kl+rvOJeA37DDSTyrE3tPaGP7iaCN2Nd94UYbPv
F3EVrkuEsccld/Owvf3Ygk5qJ4EbeW3vG+yjLvbW7D5J8PfUPGci9v0Gw7iJ
oiQomBSvj8a+dsybGiacDOSo02ab+2Gi5yDTvcvJ8OGRhPrmfnk7I+Z8NiAZ
zpzX++GO/cJqVI1GS4Zd5/67bYPtlc9HMqhPAQ2tdhkt7D2PVo0Pr6SAy4nh
BRXsxHdtF3ccSYUHayfcFbFZPvKcrIpJhUvnOis29/ejfyempG3SYFfvR9Zl
nA9S9gwS21PSoDb0QvkM9tlfBcVjPWlQrHfwwCj2k9Hk9tdn3sDj8inxFmzR
8Ecr3FzpsEh6zRiNrdS43D+vmQ5X+GivnmMPSBfv6vZIh/D51G/u2P/2FjwI
n0wHgRCJTHNszwtpOjwVGSAq/ZlDDNuk6Ja2zM0sMBH1UkzOoKK1c5IXQsKy
QK6OoyIE21ZDMmKuNgvISxX03thkzkDOCom3wC97hXINO+4HKtaZfgscRR2D
3Nj/wcwHH9f3kHLhcr1HOhUth15M+5H1HiYvlsRaYredrxy4OPge0kWV5Qyw
BatMFUVOZ8O9twXF0tid5lUVTQw5oClxban7Dc6Loi5m8eBcODa431kYe0Z5
eVvYx1z4J3Ixngn7+Q06QzpaLuzcseQ/m4brVy1YsJHKA086n7wqbO+yS75a
QXlAFSQpX8E26Sl5yqqfD1Ipf/X8UnFeJt7sKBwiQfitmGukZJwvEnbOfxZI
QHIZawjDDlUWUpNjKwCT+pyl+9jaCR9uFkIBCDVWF8hjC3A9SC5OKoD57nGf
kiQqurPP5UwNfqKu7KxfTiIVVUrop65NFAHdWvVhxwR8XhTaN5zdKALNLwee
a2Pb1m7j8+cpBuIq43tx7Fibv+c4NYtB7MR59YF4PD/sLmTprGIQ7O/pOo3t
1cJncedeCZgMD5usxVKR00Qy3epsKUyb/EOvF01FMU6KQobMZZDgFesljD2w
XnU/T7QMfHe7l89EUVHNJa7Pd0zKgCeCZBGI/ZROWraTXAbcf4bSayOpqEzQ
6VNpRDn4iJZnSUZQkfOfrzp5SpVgGbhRWxVKRdZB/LUchpXgudT0+yn2Qxcu
Fyf7SmAMXenXxm4SLA1TeFMJdPUhY/0hVJRRL/COzPoBNNWtBn4H436laNuM
UT6AvwaT5u6XVDRyeIPHyB/Bik6+iMhzfJ7JmEquJSFI+q/WYCKAiqQV1+xT
yxBkjZfqZGEXcTi8+z2FgH5eJVgWO4c6N1ov/hHWREuM5f1xfl/OvmIZ8BGe
0Z9iVPLDeV8XyVyrWw3ns1OKeB9T0f4rOaqd/WTIHfA7IfYQz4uWvJf8JBl2
Rqn5d7pSEZdyyPeYP2RwTLn+ygf79qlV1htsNSB9OarvqwsVZX32lSLO1QCv
OPVQiDMVdUR+vsmbVwOrj0Tnfjjh/n8z1/b1qwVTI+UJS1u8nv156a3H62H2
k/W32Js4L5y9yEneTXBj5PBjVU0q+rUmlykQ9Qn+mQ6WG5XG8zCs/EFqrg24
wujVqNvxfSFRjeYd2A5joGumNDaJhPfRZhd4OyFzONfEvnISXdDjdBtq7IIW
m1HN74GTqNp6/0zUtR54K+p3Qc10EvEOWr/w5+6DXXZds/tEJlG2s/ABj6Z+
EPUp0+CbmEB7GAwNV8wHoe/msfyYzAnk8+vo6h/Bb5B4VOFHifkEusrS+OP4
hyHILT0EkbwTKF6ZiYlXZRgMyzt1KmrHUfgZuxWrfRRINvtXztF6HAVxuypM
ERRQ2Znosco1jnRHyB5t3SPQFbeW3JE7huoGOOwk341C1KBAw0GtMSQa4fiW
5D6G70eMuTYjo4jzaJOUivk48Pfsja23HEWV1qtCKXITsEAf0GBCG0HGR78L
JfBPgknmGUUlyxG0eye9c+3aJNzmOuK1MEhBVpJVXi1fqDB2UILyXI+CbBVy
x8UKf0BMq2dVat4w2v6sxM/CbwoeLgWa/tg9jF4q9GgLX/oJUzc8x9WGh9Ba
rQNDp/QvMMwI9rhq/Q05MdTySc39guEqkdCQjUFUp8YcpdwyDbdP5218vj2A
yAcdLXyDZ6D9iSrHZHsfilj8dlX7/CzUSOqlqcr1oknhieAFxt9wKzdmiHS9
G2WpfhldMfkNHS/s8zkjOtGe9Rq5rXm/oTr0tW9qSDsSCFvf9nTtN3ykZzvp
x9CG1mkjbpTTBEh7dczr7mxB0qVWJ6aBgGeuylZdS83IbPtT679nCLhklVJo
RG1GLA4px3apEhClvdxqVNeMxlz7FY9oECC8aHn8tFczUvBnpzP9l4CWpe6A
NFoT4rp9m+O8GQGJ7cLbhnobEU9BH6utBwFicyz6SvH1aObUZRV1TwLoxvQr
7F7Uo8iFHb/3ehHQNL7ikvKoHqnze1e3eBMg1DtH0JvUowi+vUf2PyEgWOrs
lrw99ehYowlvwXMCvpQyG1S8rEMm4WOLDlEEyMvESiV41aLEz2RB/VwCGmjb
OcmmZGRYWvdiax4Bfgq3DH5okRHp0n3HEmzbL23ybEpkJHYJ0vlIBMz55A4Y
8pHRq37X1N5CAjJ89aq7u6uRVfxs54lyAt+XflJe6VYjFf/GHZG1BFzpMdfk
gI/It8FcXKGOgOXwNF1W2Y+oMH5rcS+26rcbnMx7P6KxohEZngYC/mq+L12Z
R0i47KdbcBMBYUKKHNk2CLlIGzrcacX1bW0wizWtQv73amre9BJQ0n9xKVux
Ej3TvyCs0keARbHsQQfOSrTUE9w2iN3FUEM6OlOBmucSZdgGCDiVyDT0NrUC
1Vv2Dth8JeCqBv2IB2sFMrvR385MIWD1Jy9L1mgZ+iLSMV/9g4DiY09CJAJL
UDDTtVCNKex8QbO4uyXI4ie9+yfsEZlYCotKCZLvnlbu+klAnBll14/5YiRs
fMducJqAIT15Az+zYlTBIH6zkcDr5f7zsNGxImRIttAXWML9HxKi3O0hoa6x
KE5f7O1z9JpCBSRkvr4qN4VdcL5gS1cwCW30fY0tXibAOtrW5eR5EgrQE57V
WCUgRhlIcxX56Ma6dJz2Bp6vswtRfMl5iFRqev0tdu+sg3GJRx76oxrpzURH
A4kD9OH6V/JQVXYMBWFTRML9nnHmIZtuwd0H6WlQfvHs2YqduUhHfgfbN0Ya
8E9AX0DXe2SkkUU6spUGHCKrIlFB7/F5LFPgi63KfbM0Wf09Ejt4tVliGw12
fmb9klP6Dn06FK5jwUSDa2yhOlnxbxGFPBPQvIMGseskQdHbmehl2eJPTmYa
9NcUWG7fm4kydJoyTbEPNLboT3VnoMCUM8d+YT+iT+LK0MhALy4NeDOw0MDY
sH+IUTodPep5O7ublQb/vevQMiRSUeKnOwom2Cpl/H6fk1PRzK03Oa+x7fM9
j5+9lIqmWlekJNho0NW0sVW0IAXNArOhLDsNOvQvmjXfT0YHHs9w2WL3trQy
yYolI93on1uysXm8vcyDu5PQ6H23O5IcNIjkP62iJZ+E0tMZdPfspsGyocmR
i7MJqLAXuepiTwsYy83/m4DGPx364ocdknGLKyIvHrkJ3GWcx+a1GE1vdIhD
reoPPBo4abCnJr6Z7k80Yjt85MW5PTRgXG9rJC+GofXD+63tsWsYncaljcOQ
sM66cxz2wERbf2jpK2Ta8XnHLHZeq03A5YehSE5xVSiQmwbSwn/9bOaDkNfX
ZxfysZ2CWcvZiwNRoGjq627su5GJ8TnOL5B76CAS4KEBkmMnBhb90bHlOEoC
dvi+RrOlJV+UZPFLuxL7+8p65IPyx2jfhtP3fuw45Rjv6Uc+aC7a4+FuXhqI
mQcNJC96ICl46y2DrdimdOuhqxvS0b+Vo4HdzF9tcH7JFTlUfXF/iJ1809Sz
c9kJfT95ZG8otmxkvsJLNwd0yN5xNAP7rGgp+clfG/SdcWG4A3ubgQH/kZVb
6NSuUZ5J7MqO3TrUv9eQwz7m+8vYFVe91K+s6CODUyrzLHw0YFHz1rddUUUX
7a7HCWHzcLEbJy0UVP4P74gErQ==
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1: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
6dEG/H/dCpz3chcfUM2t+h/vf+zR
        "]]}}, {}, {{{}, {}, {}, {}}, {}}}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{0, Small, Small, Small}], FaceForm[Opacity[0.3]], 
     LineBox[CompressedData["
1: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
Nw1dXsPChg+X3tSpfYDtg8nVqXwsFNViRh8qyYD8VWxJ/AIsDAoeO1Oblgpp
zb+3R5PuD9RLVRhLAZrFzJkdguTn937TfrMnBaYKLVN3CrEwUEJf0iIlCWYn
kvpiSec2O5aU0BOh6PvtUiFhFj5hY2oLSCRC6rptfkzSWHNSOiMxAX7u6Lxz
eS0L54I1Opij8WBukMKFpIvUFuXlxeIhhf3EIbd1LFzITM+5pPYGrj/o+9ZO
ul/NeLa24jUICiltkVjPwiWRo4L7VGKhYNVYPpI2fmB+i3YsCv58EOHm2cBC
9rtbriiVREL9YjmbBul/l2fifA9HgKNMe6ov6el/a0O+FobB7ifH/5WRPnbz
a5CAYij81P717wfp1G9Gf3Q+BkPX98l0cREWqkT93fH0YBAUPhThukD6xc7B
nkfmL+BOiu1KF9IvOZetqCYBUFVBKY4lfVGwP03t8hO4r2YnUkq6auWy/uuL
PqDwfvXOLtKbllk7WbqekOWT0zVF2tDY/5VvnDv4m145zLaRhdSEZaHtkU5g
2sGlzk+6Z+ymRP5Le/jyNJ1NhDRz9+cnzwUswVrqzI0tpPu+rbinx6kLjXco
zltJt+2cJXqslfCxkIOCKGl+145ZZSVT3Di4GCdMWvhFwno2KRvcmeD5cQXp
lq/Vm6ZiHXCXEpfTH/J+GpvvuhgkumCyl/8ohfQW76MFhRmPUcJW+F8D6Wlt
TtmnPV64bTK98j3p91/7OQ4O+CL3PwP5Z6RtwrbGdA7744nkzbqWpMcUlFUc
qM/wwJ8Vm4+SLsjLPbyKCERJ3p0ha0h76LkyvvwKQut5x4895PqXKeK7IOcQ
FPv7n3cC6aq9N36dmwtFvYmzu3aTPqvSzcDFCMwzXz1HIfff9PyuVrtHr9CI
dtYlmvQW1+7+jWzR2O0c8XiRrB/XOm/WZc7X6KVTy51CuoJ/pRrTJw45KiuV
tEnj3SdiKpxvcd7uQdJzsh6Fn113r/KJx9BPV4d2kdZUX/Pn0akEPFpsV1tM
1nOM63/CijzvcOz63dgusv61Q5udIp4kYmn8SpsBsn8U5+cpmwJSkP9Zg6IG
acM9PCe5r6Til9r5yQ//sfC3ukQjIZWGmkZmG2/xs/DILtfL0V/TcfTHBeck
sn8v7MvfEi+QiXbu72MYZH+XZLw5rDOSiUFfFzLESd/d7ZHIysnC01kGwS/J
PNAt2qYclJaNVaXnHfeQ+RG4YgXV50wu6nTEL58g88VK9Y9zfm4u3k2sdb7I
SX6+Znz98KY8TF0RcdCezKPFv/17d0/k4akZWs8NMs/G/5iV2T3Lx9qAelnz
n0zc6Ofo9b3xE64c9iuW/MHEXMGDu5MOFqFaJqE4xWSi5Ljux9vRRbjfdZHX
coaJPEGTQnTrYjSpdd8sMs7ESZft2Y94S/FuvMbF54NMzFidTt93EvGF+uZD
XANMtPURt3yYgfhcokXAuY+Jy+bfF81XlqPzptBs7W4m1mZe+BttX47GvRKZ
ZW1M9Dpy92eHcgUKan1alV3FRCnP1+eNeytRZnLsxp8K8v0FvTPqq6rw0nKn
1ZFyJprwX6LuP1KFWb0hV/NKmfhmvVjcdFQV6sS0it/NZ6J4iMMa+UvVeF/n
usPmZCYG6cqGfflegw6Xcs22JpLnH5fYSiueWvyBqxdEE5io8GuVyJJCLeZy
9yqtimPiMZ61nRvDyefO50x6bjgTo27V+/Lr1eF69ykPBfJ8jYjbH0b5Wo/r
O664szzJ81i3Xm7nv3oMKVPYl/GYie5bTPOuSDdgCVjn/OfGxL8XD4qXBjQg
n/tHvaS7TOTTr/A/oN6IBvouXpymTFwoKDhJLWtC5YRnHS/lmNiRaLhhY1oz
rld/6OMvS36fB60vzPua8ZLp7RPu+5joET+yI56vBWnTtTT93eT6Fcxacd9r
wfHQS8zGTeS88FrCTnZLK5bc+jfUyMbEGJaXZQa1FUUOFNRsb5hFoUrdg1N2
7Vg8tobqXjOLrp2yJo7+7RguI7e/o2IW28/zHPz7th3bQyTO3C+eRR1L089T
be0oXP64zDVjFlWPBYRHyn3D73HKz+Ofz2L8w0O7h399Q4VEjTjTs7M49MGT
ba1TJ1aqjhxQVJ9FSzPFhPsvOlHRhu/ESrVZ7LrdpNGS2Im+EtXf44/MIrMl
I+Det04MmLZhey05i3XblaTtZb9jrVPFxVIecj6rS1BTHfuOz5XGVM+5zWBI
rgzvuovdeLUibnHk7gye187uTrvdjbl+dxdtrGZwWXg15ZB3N67IYHZbGsyg
Q7G6H2R3Y8mI8znm/hncESl8Y3FlD6o0mzyzHibn5zuzQrtLezCBwe7FOjaN
VxeNedeJ9uGPFEfdPXLT2L57f9Y5mT7cvPNe90XJaVTZOlTjrdaHIipe/HHr
ppFy46pMt00fql36Ytk5NYU/PDNuHSjtw2u39g+MxU7h23TN0/FX+jH1tbVU
Cfl8cNHoNI9B+AAuyVncWDMxiUKrjhp8TB1A9YmNyReHJ9Hv+i63NaUDZF1v
V/7eOIn/vdp/OIUygIWsixu93kxiL7V0wVdmEGtuWNUHqk+icUbXC2rdIOqP
EBgYMoHNj7r7uH8MYbzsds41fhMo+36hzItzGH9u/Obo6TKBl/NEuR7xDeP+
zZN/9M0mMIuiNHRjxzBqGEp+i9s3gc+Th56yaw5jZc08f0XtOBZ9ZRwzihxG
s7Grhpd+jKFZ6hd0lh3BkwuPo0dpY4gxXzKHD4+gsJ+a943uMXR5WVZ0Um0E
Sz/xGlz8PIY98S0iSwYjyDaiaTnoN4Y/Mi/mKLiN4PYss9ehImM4G7luKb96
BNNpuYsfFAm8eZ0+QuhRcO7PnrWakgRODalObzKm4PcDFw8MihKodbreTuM6
+dzdszXgNxuBpnsONYbfp6BC1Ceh4UYGfi8+lTgXRkG3bYZ2USYM3G5K2Uft
oOA9a+XNnx/RUfKaWI/ihVHcTVdxfGNPx5ttUvnfjEaxx5HthLsFHd8UfK+z
MRtF0+585V2n6WguHfz0hd0oarqBggIfHeUPaZyJfDGK2iV2u85H0/DmP/Gd
lfWjuLTLgu9ZNhXZ+VY6WR2loj3XJTm+BCqOFVVdPqVKxelKx7sBoVS8KXzr
zhZNKubSptWcnKi4Nu2vKF6kYvdgZYLwMSqmFXRa1N+l4qdDrbpWtaMY8WbT
YWYyFUVuVvKHdFHw8N59gsF8NKR9r156WE/B04ZZla3CNBQc9XG2LKKgN/fZ
u6s30VBNKlpwdwwFzzwaxbsSNAxe06flaEpBxrTNHDvQUGRKZuUJ6gj2rLR4
JWNHw3DlnE1Zk8NIv+wSld9EQ86AgMmyvmH8Z8Cx90sbDU8nKPA0Ng7jdc62
uP4uGg7YLou1pw7jIXTaPzFKQwuNuMD068N4sKi2oGyBhjJpJrFshUN4YYPC
3+N76Uhbs0a/8tkAKkSuWg72oqPLrnyvWqsBDLyQNjPyhI5NUfmOlacG8Pbl
sGCpF3RMKvzZEr/cT+al5WhGJB0vRty3Wr7Xjw39M+Fm7+nYcHtng7JRH1rs
Nf/5qoOOejpsRcJbenDBdw/l6HYGGk+t2fB8oRtvposL3BNnoG+jl+lSTzf2
JxtFJ+xhIO8Ps8bWCDInePSRJcvAsB1KC/sEunG3t5HMuRMMdNCPnG1l70Ir
o+2Nf8wYeMrIbYo13IH9cQnq7LEMXK33x+ZTWQcuWv3e7PmGgdGvjvY/iO3A
yDof2YUEBkp988gbN+zAea4Z/sE0Bh7/uigR2vwND7i9CjYtZGCoTJTjUnE7
Rmzt/KPZxsCnz+G5S1ArXluqGKwm69qbfSaw/FYrzqgLm9ZyEjgy/W+A41Qr
Bv0uXiznITB034zID1YLzvQmhcWvIfug8l2eWXUzdrz02iAgQvbRs33Xoy2/
YEv5q4/x+whcq354S+zGLyhdq1InL0vgsXUbGsO/NqFfhu9k+UEChZwtLt5V
aMLPy4s21YcIvB1oHdPE1YjB5jl7H5wg0OgOMbMtoQ49ouT4Q/QIvKj8dluG
QR1u1XP6k29AoIjSs7cyK+uQ+/grot2QwK180VPi9rWozvpv+M8VAim2VzdV
Ha9Bk5nLwtPXCLwmefOwKLMa/VTWSfVaku9/JXDJNrEapwz+O403CRx6sIO1
vKoaxddHed+3IdBr3RPWcFclCq86x//sHoFxvP0PVz+rRM7oUwfgPoHdu7KK
ZJUr8VKosd6kI4Ht7P3RNokVmLeXI/SAC4HC8X9sksi5w3nP4R83H5NZ2ccj
4SJQild1DL97B5D326lnau9RgqXuTa65zwh8QH36yWy2GGsSti/1PiewSfWV
xb7WIgw/oP5240sCS9dNuLu+LESH6C9ntEMJHAze8VF5uQBlBXwHz4QRCN1K
+/7dKcBzPHM6quEEvtLa6Witk48WHVtqtkYSOPm3W4uTLw9LneeWX0QTKP+W
0+e1ey4qFexwuBxDYM5ziy1ykzlYsFa1Ynssgc2aSzwXmrLxc3LyVPRrsj5u
mr7pOZKNP249b9KJI3BP0j39Uv0sjLf/4L1I+uW6a+cKhT6g4clfnqfekrnp
9rM6jZmBf8Yb6oZJp0zvUQlvTceLPgoMx3gCp48eszIKTMVRceXcFwmk2x4n
ydqmYL92uInAOwLfN8is5NRKxqMf/ow8J72emnk9cmUi5ildc3RIJD/v3vTk
JSIBh1sP+gyQPrverXRDXTxmOEfbnEgi8IRokGhb0lsMPeIp9Yb07fZviWtW
vkGP7Jaq36Tf0J7p2tXG4pc5O3mNZHL/Tta0NnpHo0659sNQ0p0vlrK2nXiF
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
3Hgwo/R/ANAzoz8=
      "]]}}},
  AspectRatio->NCache[
    Rational[2, 3], 0.6666666666666666],
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-1.5, 1.5}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659261529257202*^9, 3.6592616015002937`*^9, 
  3.659321121749655*^9, 3.659337253515696*^9, 3.659337296050151*^9, 
  3.659337345369585*^9, 3.6593374109716682`*^9, 3.65933745657125*^9, 
  3.6593376466736517`*^9, 3.6593377337344913`*^9, 3.659556489911173*^9, 
  3.6597607287629642`*^9, 3.659788721908449*^9, 3.660974410691584*^9, 
  3.660974667984077*^9, 3.66097484638072*^9, 3.660975350015039*^9, 
  3.6609754689607487`*^9, 3.660975550716939*^9, 3.660977047705171*^9, 
  3.660977566677044*^9, 3.660977660463212*^9, 3.660977831810753*^9, 
  3.660977959506433*^9, 3.66097911583742*^9, 3.66099139245315*^9, 
  3.66099145002864*^9, 3.660991525554789*^9, 3.660992080050385*^9, 
  3.660992184656844*^9, 3.66108025796271*^9, 3.661341500403798*^9, 
  3.661420630528369*^9, 3.661421094847825*^9, 3.661422822614026*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"dir", "<>", "\"\<Surface_0230.pdf\>\""}], ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6584849340926905`*^9, 3.6584849531957827`*^9}, {
   3.6584851128269134`*^9, 3.658485114009981*^9}, {3.658645233705751*^9, 
   3.65864523416912*^9}, {3.658645281545088*^9, 3.658645285256835*^9}, {
   3.659321129411806*^9, 3.659321130403623*^9}, 3.660974421350081*^9, {
   3.660991388725807*^9, 3.660991389861367*^9}, {3.660992084061357*^9, 
   3.660992085084756*^9}, {3.661341512366804*^9, 3.661341513198669*^9}, {
   3.6614228700896587`*^9, 3.661422871417027*^9}}],

Cell[BoxData["\<\"/home/misiek/RotatingStars/EM/SolidRotation/Surface_0230.\
pdf\"\>"], "Output",
 CellChangeTimes->{3.660991398451605*^9, 3.6609914584982367`*^9, 
  3.6609915283417597`*^9, 3.6609920866187057`*^9, 3.660992188319685*^9, 
  3.661080258302526*^9, 3.661341514954514*^9, 3.661420631224812*^9, 
  3.661422823127161*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"powSpline", "[", "i", "]"}], "[", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
       RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"DotDashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2.0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"\"\<C=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"C", "/.", 
         RowBox[{"dat", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Rho]C", "/.", 
         RowBox[{"dat", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[CapitalOmega]0", "/.", 
         RowBox[{"dat", "[", "i", "]"}]}], "]"}]}]}]}], "\[IndentingNewLine]",
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "Jtest"}], "}"}], ",", "0.0", ",", "0.246", ",", 
     "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5073762386497145`*^9, 3.507376321035427*^9}, {
   3.507376371246299*^9, 3.5073765028298244`*^9}, {3.5073765539767504`*^9, 
   3.5073765630302677`*^9}, {3.507376653166424*^9, 3.507376809321355*^9}, 
   3.507377022723561*^9, {3.5074359643721733`*^9, 3.5074359649162045`*^9}, {
   3.5074762658698015`*^9, 3.507476269499009*^9}, {3.507479036661282*^9, 
   3.5074790407895184`*^9}, {3.50753580977701*^9, 3.5075358116111145`*^9}, {
   3.507802979980665*^9, 3.507802984839943*^9}, {3.507803450806595*^9, 
   3.507803460832168*^9}, {3.50780370388507*^9, 3.5078037083923273`*^9}, 
   3.5078093624207196`*^9, {3.508139837059163*^9, 3.5081398617355747`*^9}, {
   3.508937200670643*^9, 3.508937202691758*^9}, {3.5089977025800285`*^9, 
   3.5089977092174077`*^9}, {3.5091571489320946`*^9, 3.5091572075504475`*^9}, 
   3.657348620874812*^9, {3.657348857960166*^9, 3.657348859687599*^9}, {
   3.6576002257290487`*^9, 3.657600227088182*^9}, {3.660974450144598*^9, 
   3.6609744532645197`*^9}, {3.661341539791689*^9, 3.661341542703334*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 0.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 0.2}, 0., 0.246, 0.1}}, Typeset`size$$ = {
    450., {124., 134.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$57835$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$57835$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> PolarPlot[{
         $CellContext`powSpline[$CellContext`i$$][
         Pi/2 - $CellContext`\[Theta]\[Theta]], Sqrt[Pi]/
         2}, {$CellContext`\[Theta]\[Theta], 0, Pi/2}, AspectRatio -> 1/2, 
        PlotStyle -> {{Thick, Black}, {DotDashed, Black}}, 
        PlotRange -> {{0, 2.}, {0, 1.}}, PlotLabel -> StringJoin["C=", 
          ToString[
           ReplaceAll[C, 
            $CellContext`dat[$CellContext`i$$]]], 
          ", \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=", 
          ToString[
           ReplaceAll[$CellContext`\[Rho]C, 
            $CellContext`dat[$CellContext`i$$]]], 
          ", \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=", 
          ToString[
           ReplaceAll[$CellContext`\[CapitalOmega]0, 
            $CellContext`dat[$CellContext`i$$]]]]], 
      "Specifications" :> {{{$CellContext`i$$, 0.2}, 0., 0.246, 0.1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {177., 185.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.659261529618145*^9, 3.659261601775676*^9, 3.659337254509181*^9, 
   3.6593372965932302`*^9, 3.659337345840485*^9, 3.6593374115271873`*^9, 
   3.659337457105077*^9, 3.6593376472257023`*^9, 3.659337736021138*^9, 
   3.659561497808921*^9, 3.659800216947772*^9, 3.660974454051614*^9, 
   3.660974668383317*^9, 3.6609748468851624`*^9, 3.6609753508325567`*^9, 
   3.660975469140897*^9, 3.660975550887108*^9, 3.6609770480818*^9, 
   3.6609775671629868`*^9, 3.660977660653852*^9, 3.6609778320010357`*^9, 
   3.660977959966013*^9, 3.660979122206151*^9, {3.661341529253631*^9, 
   3.6613415436128407`*^9}, 3.6614206375492268`*^9, 3.66142181414062*^9, 
   3.661422823837883*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]DISP", "=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"\[Rho]", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "\[Rho]C"}], 
           "}"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "NR"}], "}"}]}], "]"}], "/.", 
      RowBox[{"dat", "[", "Jtest", "]"}]}], ",", "1"}], "]"}], "//", 
   "Interpolation"}]}]], "Input",
 CellChangeTimes->{{3.507089978040072*^9, 3.5070900570025883`*^9}, {
   3.507090124260435*^9, 3.5070901274706187`*^9}, {3.5070930231232405`*^9, 
   3.5070930458115387`*^9}, {3.507093084615758*^9, 3.507093086659875*^9}, {
   3.5070932665051613`*^9, 3.507093329045738*^9}, {3.5075174495458646`*^9, 
   3.5075174501518993`*^9}, {3.507524633336754*^9, 3.5075246350268507`*^9}, {
   3.5078038908937664`*^9, 3.5078038923988523`*^9}, {3.5078094226361637`*^9, 
   3.507809423639221*^9}, {3.5081399207529497`*^9, 3.508139921699004*^9}, {
   3.5089374672218885`*^9, 3.5089374675869093`*^9}, {3.5091120601607475`*^9, 
   3.5091120630499125`*^9}, {3.5091574270940046`*^9, 3.509157429445139*^9}, {
   3.5091622602274437`*^9, 3.5091622608374786`*^9}, {3.5091629373091707`*^9, 
   3.5091629375151825`*^9}, {3.50916298292578*^9, 3.509162983022785*^9}, {
   3.5091632579365096`*^9, 3.5091632582715287`*^9}, {3.5091633716650143`*^9, 
   3.5091633718550253`*^9}, {3.509163404178874*^9, 3.50916340446189*^9}, {
   3.509163473440836*^9, 3.5091634737888556`*^9}, {3.5091636319098997`*^9, 
   3.5091636321769147`*^9}, {3.5091638800900946`*^9, 
   3.5091638801891003`*^9}, {3.509164161104168*^9, 3.50916416236524*^9}, {
   3.509164239871673*^9, 3.509164240501709*^9}, {3.5091900456268444`*^9, 
   3.5091900458858595`*^9}, {3.5092690365446444`*^9, 3.509269036802659*^9}, 
   3.657348891958817*^9, 3.657445389586131*^9, {3.657507345240912*^9, 
   3.6575073473207808`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Interpolation", "::", "udeg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Interpolation on unstructured grids is currently only \
supported for InterpolationOrder->1 or InterpolationOrder->All. Order will be \
reduced to 1. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Interpolation/udeg\\\", ButtonNote -> \
\\\"Interpolation::udeg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659261529767994*^9, 3.659261601921844*^9, 
  3.6593372549832563`*^9, 3.659337296843259*^9, 3.659337346047948*^9, 
  3.659337411718936*^9, 3.659337457304492*^9, 3.659337647428041*^9, 
  3.6593377362338543`*^9, 3.659561498237468*^9, 3.659800217434451*^9, 
  3.66097445758003*^9, 3.6609746687151814`*^9, 3.66097484704392*^9, 
  3.6609753509483633`*^9, 3.66097546933218*^9, 3.660975551063568*^9, 
  3.6609770483941*^9, 3.6609775673582497`*^9, 3.660977660966937*^9, 
  3.660977832310823*^9, 3.660977960135154*^9, 3.6609791223760967`*^9, 
  3.6613415532139893`*^9, 3.661420637972485*^9, 3.661421819179325*^9, 
  3.661422824198091*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.131132704648696`"}], "}"}]}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.131132704648696`"}], "}"}]}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Unstructured\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.5708}, {0., 1.13113}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.659261529812933*^9, 3.659261601962256*^9, 
  3.659337255010064*^9, 3.659337296890009*^9, 3.659337346107937*^9, 
  3.659337411750977*^9, 3.6593374573354177`*^9, 3.6593376474588213`*^9, 
  3.659337736265239*^9, 3.659561498280212*^9, 3.65980021747571*^9, 
  3.660974457612831*^9, 3.6609746687498426`*^9, 3.66097484707096*^9, 
  3.660975350970852*^9, 3.6609754693585653`*^9, 3.6609755510915527`*^9, 
  3.660977048422132*^9, 3.660977567385792*^9, 3.660977660997149*^9, 
  3.660977832338859*^9, 3.660977960162365*^9, 3.660979122403598*^9, 
  3.6613415533172407`*^9, 3.661420638066083*^9, 3.661421819269528*^9, 
  3.661422824225501*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]DISPXY", "=", 
   RowBox[{
    RowBox[{"\[Rho]DISP", "[", 
     RowBox[{"\[Theta]\[Theta]", ",", "rr"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rr", "\[Rule]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "]"}]}], ",", 
      RowBox[{"\[Theta]\[Theta]", "\[Rule]", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", "/", "y"}], "]"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5070901426184855`*^9, 3.507090198976709*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"\[Rho]DISPXY", "*", 
     RowBox[{"UnitStep", "[", "\[Rho]DISPXY", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.01", ",", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",",
        "0.6", ",", "0.7", ",", "0.8", ",", "0.9", ",", "1.0"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.507090178828556*^9, 3.5070902462094107`*^9}, {
   3.507093236043419*^9, 3.5070932383955536`*^9}, {3.507296568678384*^9, 
   3.507296571268532*^9}, {3.507785620440456*^9, 3.5077856375944366`*^9}, 
   3.5077856712603626`*^9, {3.5078040809636374`*^9, 3.507804082197708*^9}, {
   3.507804200314464*^9, 3.507804239327696*^9}, {3.5091120733865037`*^9, 
   3.509112075475623*^9}, {3.5091574423388767`*^9, 3.509157449498286*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5668900966629296`\\\", \\\",\\\", \\\"1.142865862131917`\\\"}], \\\"}\\\
\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.659261530259354*^9, 3.6592616024121017`*^9, 
  3.659337255134169*^9, 3.659337297356204*^9, 3.659337347489608*^9, 
  3.6593374121807823`*^9, 3.65933745774658*^9, 3.659337647866105*^9, 
  3.659337736657939*^9, 3.659561500789905*^9, 3.65980021886829*^9, 
  3.6609744612175627`*^9, 3.660974668834491*^9, 3.660974847515689*^9, 
  3.660975351494409*^9, 3.660975469895597*^9, 3.660975551672944*^9, 
  3.660977048874421*^9, 3.660977567847583*^9, 3.660977661457061*^9, 
  3.660977832788045*^9, 3.660977960609371*^9, 3.660979122834721*^9, 
  3.6613415555961847`*^9, 3.6614206390212307`*^9, 3.6614218218013897`*^9, 
  3.661422824918953*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5668900966629296`\\\", \\\",\\\", \\\"1.142865862131917`\\\"}], \\\"}\\\
\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.659261530259354*^9, 3.6592616024121017`*^9, 
  3.659337255134169*^9, 3.659337297356204*^9, 3.659337347489608*^9, 
  3.6593374121807823`*^9, 3.65933745774658*^9, 3.659337647866105*^9, 
  3.659337736657939*^9, 3.659561500789905*^9, 3.65980021886829*^9, 
  3.6609744612175627`*^9, 3.660974668834491*^9, 3.660974847515689*^9, 
  3.660975351494409*^9, 3.660975469895597*^9, 3.660975551672944*^9, 
  3.660977048874421*^9, 3.660977567847583*^9, 3.660977661457061*^9, 
  3.660977832788045*^9, 3.660977960609371*^9, 3.660979122834721*^9, 
  3.6613415555961847`*^9, 3.6614206390212307`*^9, 3.6614218218013897`*^9, 
  3.661422824920918*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5688432042784177`\\\", \\\",\\\", \\\"1.1428593226820727`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.659261530259354*^9, 3.6592616024121017`*^9, 
  3.659337255134169*^9, 3.659337297356204*^9, 3.659337347489608*^9, 
  3.6593374121807823`*^9, 3.65933745774658*^9, 3.659337647866105*^9, 
  3.659337736657939*^9, 3.659561500789905*^9, 3.65980021886829*^9, 
  3.6609744612175627`*^9, 3.660974668834491*^9, 3.660974847515689*^9, 
  3.660975351494409*^9, 3.660975469895597*^9, 3.660975551672944*^9, 
  3.660977048874421*^9, 3.660977567847583*^9, 3.660977661457061*^9, 
  3.660977832788045*^9, 3.660977960609371*^9, 3.660979122834721*^9, 
  3.6613415555961847`*^9, 3.6614206390212307`*^9, 3.6614218218013897`*^9, 
  3.661422824945766*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\", \
\\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659261530259354*^9, 3.6592616024121017`*^9, 
  3.659337255134169*^9, 3.659337297356204*^9, 3.659337347489608*^9, 
  3.6593374121807823`*^9, 3.65933745774658*^9, 3.659337647866105*^9, 
  3.659337736657939*^9, 3.659561500789905*^9, 3.65980021886829*^9, 
  3.6609744612175627`*^9, 3.660974668834491*^9, 3.660974847515689*^9, 
  3.660975351494409*^9, 3.660975469895597*^9, 3.660975551672944*^9, 
  3.660977048874421*^9, 3.660977567847583*^9, 3.660977661457061*^9, 
  3.660977832788045*^9, 3.660977960609371*^9, 3.660979122834721*^9, 
  3.6613415555961847`*^9, 3.6614206390212307`*^9, 3.6614218218013897`*^9, 
  3.661422824999237*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
ki9X8jdimB1Q+DiG2QGLArsvx6fATwaW42AUPsE9MFx+0X7YO7QfWDwvy9fz
lfQIyf7z91LFOCPEe/L764GRLt+PIp5PjGHyCDkR+S2SYegb6AvoG2ClfXlM
/kX/CefJ8pg+Uf6ex/wDfI/xAW5a4G+J/MHP24jxyzGMz4FRXn4BnVhfAsb6
lBhvmSz5Z+6Mn4Hhz2BeiPmbuB4ZIMUv+DN/B/pM1CfZ0nnhbCleNU9af8hm
9kPMH8/4EfYC3yvtwHsWfDwwPtD/on1KZPM36C8l30dpfpQnYR7/CfuK/oJ+
Et/3VrP3pZV+1jB+Bf8jv1KulmHkF9cpU1h5kA+kJ/fqW/9V4zw66F+B/IxU
1Nl2deWUqXlUbrV/7JEzKrZ/cWdAzamPp0bSpqWjgxvO+kR71lb851hUJLUz
azpPdec389OU9hv0G2MRNPjqxGyascTuU6+gfHK52cjY8Hw2BV49MeOx+hO1
GrAp5/CGKHpRf275/MffqezjfVPMI7VUqt+A138q/KHEL48uOe3IpHXdW5T7
nJxL7m+KhnTJC6JvZUx+bpqgo/6NSnZfOSyYrGtOyIzYmkfL+nRPcU8PpWKl
3IvN1+TTdsPXvec4ZVPGtXw/ryn68Z3wZff8G6GUUTr45rkyOpp85bbhYp8A
OrBpZeaJlny/sfkn933JQz9SkXGDcwM3htPkj790Uds+UnLgn00jssLoUd6L
28M9ddS1VtHSF766ksZkZ1Y5w7wCP9uO2n6b6b75so6Cs4bFXk91ISODpYfP
fNPR2A7D75dctYdKNMhqllsvj15deHzRxeg6tT70e5RNmo56FrHKKKm7RrtT
q6eWfaUjq2tGqhcZT+h7qduDQ+34fWcv+n9JvZiSS/WvOPbOswki7xK9jRxa
8firuI7OLavd1ZF9sad1x9/1oH09Ur5eyNNRiTbpbv2rnKSf+66Ezs3UkccU
w+DpUZdpytDL92p80NH+nmrj9ovPktGGB84T1+po+f5uZyOPe9CnLKtydg90
9C07t0qJOU/p9bhbb1yu69M/3b0X0t2FTvkbrquYpCOvfy5GLQy8Ra0z5kzf
FsDvO7j++lT7mMP8/oBJA4oMGLuDnx93rtPjQd9JOtKsUjt+GedNL+0bLpzW
nZ8PaZLYu/aY0zoaUtXjSP8KoXT4Ra2or4t0pN33rsbJ255UfmrqwA/jdOR/
c3nugJf+1KDDruUr9e1JOH+t/KGxtwr8Fh1tatN82aaxb8glf4Iqvh2P96i4
YHfi5C55lFmt0foufyZT0p3FlVeTjiKvuCz6p1Mgqe89/Niko47qxjd03zXq
Le3u0ba4tX78LFfkzz233Ipmnf0wtdpcHeVWHnbFcKAXDbKZNdmxpo7e3HVq
3e+KP9kfrPrTs76ORvW1qX6khD9VKmManBqio8bmbl9mVXhASw8b11FN1VH2
rdLlnL960cFYu8hYYx3dO/nt/alBvvQ2wbJiAyMddV84tv3csn709qTHnTYD
dLTn4p/ec90DKHyzbfinSTw+PGjGvDSfhnm0/PyS4hv2XqaJnqdujdLz19cB
tllFpz6lkoOqL9r4UT9+y/qM/tTWkV7s+9TPNEpHrsc+jj0c9oLc57e3Wb0A
+t2PPmy6sPLudz4/d5o9sP6AeB09S8xv0q7jHWbfq7kOXrbwjT3dHKK5nqiX
jwT/zwaGmse0IfFgh6RUffmHV1ed9tCKeuwp6nhVn37PqGkPzZXXlLlzdNUq
p/T9XdWpjZO7K42u9nLKw906sjSp3q54EXdKWfFs/OqLevn42Ud1K+glpU9t
7TdN338bzxxzqpXwkvrV3PHMqoSOkjYfNO9fN5B2nzhgM2E3t08DX9ke2BDF
/fmGb87Mm7RNR73tXwztmhpMfQbf0Z5z1ZFJta4jJm0KoSEjHvuta6mjHr0+
vd5dMohqelHdH1d1VNSAJvhZeFIrq7IvQ/X8vHTBKpc+Tt7kW2Hezl369u/4
NstveTVvMmmoeXapqt4+DW29Wn3AhgamHszaXSOP3u21mbPT7yZtm9pqTnT5
PCrac9jddvXv0eP93iFdqn5l+19D7lYwmT7rO9PrUW+nft55+2eB/UyjQxun
qjxy9fReiTTvVM6Joj5PmHfc6RNdaRKcO6ZrNF0NDn2StPM7DR/6JW+1UTKt
X1mmamPtb7JfWa/l15hM8j01aNW275+p+jzLxJsBCTTH8YTB9QHf6Fr4ub1f
2mnoQ3SkheexH+RZr6UNuafS1Kb1Brv1+0onBu5bYrs4iT4MWxyVcuQ7TfMp
67Pll4b2rHy0rEzYT9pZ8WqW+8k0sih1rbdb4G8a1Tln5s/EDCpiMSPJ2fE7
la4bfT9ZP5/+FpNbsYfhHwrcmbmGZmRS1vCX5tt+6MjJfNr41evh/3yiGRV6
1Wg9JIoa9a5U71Cw3l6kj595UW9vUkcMKjt9z3fqlrB04rtbWnp91+nuqQG/
6dK8JgeG2MOf/03jXnXIUBtn0qlHX23VjfPJtWj9Haae75l9uhF1pemowGzK
NHE9UvHqR6r4Idf3QudwehE9rf7lOR9pVomX1/bYh5NX3vBes3rnUZPDQwc4
LVTRmRfnGxezyqO+l1aWGdZORfm/F6+xKv+RBp2fsnR8mTAq8qHxzMbBedTf
MdFi9MEwGvPIM7XKFx31W5D9/nfFI/SpT/VDbfJ4PHqYa3DjEe91dNN8Udef
Xy7S0w3phmM3cH3/2WZPBx+9/v/n002bhaWeUYX9dR801+vzKpq3z3bsM6d+
yxcHZRbLo/CZlrVM3B/RCCPLpMDHOrr8PnvwdwdnWnmiRKTJJR01q/zWe3lD
LypV0u9H/mcdNbetYbVk5X4a0PTw4296fW8y4vydbzm+NMO68eEMvb5YVHx0
tS1eIWR+/drswDs6+lNm8jL7AaE0xvzpxU7tdPTq+LuT/4wLoVJrZkzK1uu7
vYPOZg6vEUKG83xi9qzR25dbC763MHxDTyzXTbIrrtfnrYuUv5ASTP+sOeV6
vk0ejR7ovMfS9AjF+U8JebVUR4klqzxSTfekp81Va+ou1lH1oQ2d7yZ40luP
KZv7zebvhR+OGnnVrZJe/0/ZbBYyJ4CKDX53aV09rv+ii/S5Eq+3Pw1+zsh+
a/qIjvuPt08+oNefrYe6n6zhQzZlfvjO7aGjGfUv14hJ8KUPx99/6N1Fb/9M
u1bZ2P4NPRgbV2LnKB21rd30QHCGP01fEDS7nV4f7h5WJtFygB/d7v3HfEoL
HdU+nuMTNNKPjA82qN1nho5aLqh0oudPPxrW4FnZYh3y6HaE7fNZRbdQ+VZl
S78dxO2d6+EP+yuP1NGvuxn7W/X3oaYLG2Ql9+DrK9v/7DvWs3UelfIatv5Q
1HGKHuJmfzRMx/yLRSW3NtmQrKNj3u8Xdu73jIq2aBk77reOtl+opq18uStF
7fqRMSJbV6AvzpPl02I1zuv12eEWN/bc6OJHczbres/Q20+/1mP3Lv/2hroc
31u675dc2jK/fotrI99SRG7azqV6/e66v+ziz5E2dHNw1RN5RfOoWdtLS8/W
sKeI5B/zg911lLxkWRcvKwdabHjvZk1Pvr5ZYnXXf0746f2Pfs3PmMyyp5Ss
xvFjx+vogKbY4EF/4ySydm16ruXrldHzds2OqMf3q20C3JpMTOPrm8n1dmx8
qqd/ndGsPd4aF1rTfbhDdABfz6vrHHZk9Qkd5ZQIOd6r6Gt6WHzRP8/cdFT8
9jPrdS3caPJRt01TzvL8dY5/vbxX75+N7vLpS8yWl1S8zSbqqtJRUHcFr63U
9et2vf2stGPn1fdZl6hb2M9pG/XyuNcr2KJ+J/6ecFunKTnjOrhTUOyIyktK
68i2xjn1gz8BVHfW5c+9f+TSq6IWDczKv6Uut8zGz9D7O0+HbmnUcK473Xgz
q8FBvT2yS67gbmhylzZ5K7hfhV6hNdNsafiZLQkqPb++XmtUes08Nwrc5Wn/
tLWO6YtRHn6ngpOxXhBEz0Lqlf7QQcfwEp9y2c9P6mjg15MlxnXypl0v6z/2
OMvlZ+VKqw6N/8mjlCFlW5g0u035sfPte9fm86FRk1pudKqUR/sc5pXxTrtD
5XKXvP5Sgc+H2v4YM6TdoM9sfc2j/sXoCSe4/Zo8ULN8c+R3Nt8+bjRV26/W
L3pSYL/q+Zbb+2D+nwK/7B3NLHF1ksFDHU0I1LR91syDZv7pWyZI748NDwk7
/mt7a6rapLlTF719GPbUYFTdP4/Jpc4m60bvPrH6yxb9mrN8J69v5mn7ao4V
efmVPYecP6Gfb7w3zmzcXz/fUOTiC7Xtd6TmSgusP38nW68T9WdWwTrHTwot
33DgrVtpZHJgRlqKXp66jLzptOGkUwEdX8h4qXF9w6uJBfOq72Q/bWmjexc0
BfX+pLgbPwZ/bJVWMM/9TeGzNqXk/N1/nfqxc7beHmJ/+Pew8O1bv/5m8zPb
a0sSLv3g8hTltyyw/2kejzWvlS4sLprHYxUraj/+eaN0OpM5NCO/coAx1qN8
Lo69ctT/CX142kUVMZ2/6318XGjS4iC+bpZyvLpXn+2xbJ2jldHXe9/X8fs1
sV5X9eQJM7tdKurftd4AN99Q1v9xBb83lv3oO60Zf6+kattXzsaH2D3utLPs
pyL2ddTUpO9Nn1R7/v4I0p+8O/G20wX+nnF2lYP5mddTqJGFann5mDQydm62
4CY50J7ik+c3WpZGzSb0ST+20J1OqUc3em3kRjHVchsXn+tPiwM0VqbvNbSv
+PVvQxz9qX71N/2th8aQ48RNg2t3CyVjQ8uWe/S/5eYXM6szIZLaH5/YzlcT
S/OmjVFvPBdJ5j8tLUzcNOQ0qM3T+/p0H7MGrR7kphb8RpBlzIYnz6uqaI55
MdMiE+Oo/RLzm2OvaShpcHbtFx81dMz62rONnmn0y7X1mZZ9tbTtrZ9BX7MY
8h+T+WB5jRSanVr2Ye79bOp5ZcuRO7VjyHDf4iE/LmbT3awNa9YPiCHf2v+E
qF8lUf0FL29MtNH7X88bHu9jEkBj5v3jbP8nnb4mvrpZYncA/fzxuXnk73S6
tiKtQvVicUx+WzVeer3mNDV1afd29qTyL2jVmGeGg4vwOLF6qt4Rv99nU7X4
6X3bnntBRivmzT06y4+SfMO3RKm86WCOebWHk7Mp64x58aq1fGjl1IcXbLtm
k9PG9wvC9PaywecKF5fq7W+l7/vzfI76kH2D/KP+pfT+f4+1j46P8aXWPlku
rS7z99H2janZ1DYjo+A3mqymnZ/9ypTH30252LJbtTB/utK9Qq1DN1PpXNWp
o+dYBVLEo627D57m97p+SXH5srZEOrmWuH/J/hJ/TwW/ljUyZlQfmEGtelsv
Ob8ui7puWr21wsJTFPN7RbMuq7Ko7PNNXvUunaWnSXvW73up9+8vl45pctac
+hilW51y0dvT+hO/3UuyoOwiTo5RG3MpttjyZY/ehdAtqywHrxfp9NqojW/f
sxp62YPmV3JLpdlXrncordaSx7fWYXWOJ5POKnF7p4optN9A51ilpoYW+5Xd
PaF+Ktkc/Ta/xW5+X1a5e+36Z7/h9y+GuLc+tKZFHFt/mO8WU+bsb36fosew
rNUjK8vnCD7QotPz7l87HEYVglf0/1Wc7x+rLd335Wdd1vsJFf/Yrc4gzan3
4/KGZdG0ykdCmpra0awVp6wz9XjPnt7TT662IxfvpEreVjrynfmr/Phy96h1
wImEYXr7+PvFn4Sk5g/IwTPA7/WkcNpV/eX+SXP4O1hXzq72OOKaRqO7/Xg6
/j/xf+PiWvf7WS6U7a9Bz/ge+nLzyQIv2nxxrPv4B4XjA6u2TB24eRVf3/32
4FvLEfXVlJ7pbp5WnMeXIh6wT/CMwO/n+X2xZSv4lPmcwt5JoMnrSrQyv5JO
nedumzG4Zwhd6m84cuOJ1xR+od/OFk8jC359qPhuz6sNtkXS0lkfg136+NL0
zLicAbaJVHHq09v2+7yplVcHx+2LMuljGU/1pek+tH+ybZW6h1PIrWab+Nvv
gqnz6sarFu5MIV3MaueUaiG0Jyhua/OZGbR6y6r5LVcGkUGzuVF7B9lTpzJd
3zqOD6fn1mtNytZ0ork9Vy437RFO1W9frVntdASFL1w/+cr7MNqdedl+1exE
Sumr3mHgHkaDbs+uMP76QzoYf8jffV8M/bHKrhL92pdCjxe/ULtnNBnNGXO7
T2Ak7Ss7x+173RhqdTUqJqWTWi+no1Y/0EWTt+fGMobLUyizXOl2k35Fk3WH
mXnbi6WQ/72Z2+c+iaGWJV8dPm9zn66033DhfNdEavR+luNkzzfkapvXZGC5
BOreK7H716uptDuw6N4jHol0oPrAur7tUulq57GlzUySyLp3r8uxUXbkOGH1
q0XLNTSoVWUrk+Z+dM7gueZOnJomDPna5u2v+5R7srXLgnvJ9Gbgvgc7HP1o
y1L7c6e66eUmKnJN6QPB9MzCzTYwS0uWvRfnR6x6SvH3D+/vViaNepWPv2Tt
p6a1G0M3Nfh2gWLelS3RyEtNnbRftV2OXaPG92x3W2Ym059p3yLGlLpE1n6u
ti5pyfSq7t6xv4pcJYO9+32aL80hzYenF87stKRZo/tMSzXJIcuBVr08a12l
+KDHZh9y0th6stGOLznBD7h/OvJxxUFbrxSOH/3s3dg/yTiE/ika9mZPW76/
hvXi0RsenXK9GsfWRU12fEnQ3lJTytV94beMefxo4IADnRstKxw/6uqwZkf4
Uv4udoU+dzufX833k47ONDRtZO9F2k+GPVTNuH+HecYhjXVwpboZVMrEMGjQ
og+00dijd8O6EZQxwHXnK4N35PHdaPqGVYlU5od1l02Lwsh06tVmtb330rXu
H9ItF4aRSc2O/h9jzWhzwqkzIb3D6NveWbUzf10ho72V9w0dGEazyxyv2af2
JVrX9+0Yg0g17e8acW7XrfXUpHjmz7SvyZRiu6xi8SF7qf3QWcO378yhnjf8
5l7esZkisirvv986l/r+ML2085qK2g6eHO9/NIf6np9vXqlNFIW/V2Vsscuk
IW2jxq4fqKbXh49/M9mWSZmjE0fNW6Km82G9r47TeVLi5Dl7S3TNoDfl+o3O
fsvvE2zS+Iz/hlweb1qrf/61plv4+xiZDe70WbSG3y9419Hy/DUPfr9gxpqJ
dc65Fo5PTV73KHfw/URa0MCss+Wy/ZQ8yChv47IM5v98zPasHrYijbIvzfg9
egiPV93X7ZNH1tsIqpC5vv6U1un0/NGSxX2PnyGjbeNMypXgfpx9RzOnnRXS
qN+39oM+dY5j7fn27V2Vx7X4exoL3RqGXTrB/cO0I+fKW17kehD7B+de7dvZ
wsGN5Zsw7ufct1UDmX/1fs5drd3UN3T19JOjdcz4u1JNbzg9SfPm+zZOCee/
dO/F34EtVezsCKcLfkzPIt+g/hemfskIpbY1eh8KPxjL8kPPP09oOn1mhTDy
uX3Zd2deEvse7T164Gv/nN4q8srpVyTxabKUrs/x2DZ/VzP+nkVMo6jMHMco
mn7n7YMPy/g9fqCv45nbMWbDIqjG+PfHg235Pef3TAZ2/HCU32MS/aZY912P
+XsVyzp5FLm88rV0HsWDds8pMyXtRQIZBH/wHrbZg9m7mJdODpNN+HsU7y8c
zLAplcTsFeizHDKvbZW1PD7dtMOLErd94imgyK025X/w89L1H/kv8ankwfTB
8Nfl620zjWUY/XnBImb9kAQNo9c8sfPJvDMa6q6JMrTJ17L8qH931avb81/z
eNNm+5rOSN2QTLVPTL9gOc6T7f+BnytGJdVJepZMQypMelQiJp6lT2xkE9v+
RCSbb7H90U7vfgw9lEK32jyavdctjFoGrJjaMDeFfjQPqOn0kr/vmfa8fifP
OjHUe+yn0Pk5r6n+DdWGlGox1Fo3PvxBRTdyS7peZdiNNJZ/XkfD8YbqTOrb
ufTPSzNdqUS9cj/i3DKpRsVtHcwruVPA/vGXVPVjqVrH09YJV/TzrbfNGyS5
5NKR96WndZ4dRC5113vOH5tNSYtKZNzT8Hjs3dFTJu8KT6fgoGxLg8qx5JG2
ctoIx2cUXXlwhLtlMnkU2RXc38iZ9tr02LtndDI5NlzuaNrPjRwqGX9sPjmZ
Zi/pP9ft6msqdvr2mjq1smhXndEdhtdxptSkQXv9DbMp8PWRoudq+NOIWzu1
W/P4e6Khx+L2/Cr7nr6Gr7w9+GoILYi+6qFunkGffqVNKrEmlopuWPRwy7MQ
Gvbh1Qb7CalkW+9s0kCPbLZ/Emk1uqHa/D1FHG27qIzzW6KJdqcP63E33/3n
Zj17SydrVm1nEJJLBz6tKXJmYSDt63A3Y0u7UPpR9GL1yc/TacbqKe6vKoRS
y4X3To17mU7preud+JGcS1NqjXs3dYU/9alkc0uVnkvbLtWPO61vf80Ip6Il
0lTMPv5JaPv7cJUwGlg2vq/zqtv0pm6ZQVY/9XIaubLam5u2NGnHwAetQvV8
dez1qIYTbMmo1kPzh1HJVLb7qEHai7epWNyfyiM6ZDG91HCRQWPzTjnk/rux
++gZ9lSmW16Xrd1y6M2xYdVvL39E66562Xwy15Frl6czcho9Jp8N6yxmXufx
5t1LezVIiXxHey9lLN30M54C26dMe1GpcLy5/RDzX5/s42ln66CeC56q6d2C
X+VuO9ymvuqZbgPH5tCo04OHbLhnQ3+2FR0XVS+7UDz6yqCABrndY2mR+fFO
86an05HY+lPvvosjTdqhy2HtVCweYdWzBk/nusbSKfvbplWNHtKnnMuGQ37k
0rfiRSfO3/6GhqaW69imtTdVHtP3oG7kG/qeMf9oG2dfvh8GPfymWiXDeb5k
uTRy0stxubTdJDSvrE8oTbB+pNk7MI2KHx4cuPmUlso/Wn3gtYuG0orl3/sZ
rZe3V8OWTXXW0K85txyN4lLo6FHXtes+aemHw4sPNpNTaCx5LTMO4/GPL5yO
jth+zZEqdajw/KNpBh0+erTq9YFupNn4YsPF8RnU/nOXrMgramptf/Sf7q3t
ye6tkWuRSfy+QPg9b7Z4/VmsTaMiBxuV/HGXv8fSpEKFyb5r+Xux0LN9apVs
Pz4ihcYEjAhfPziCHi7bE1L1dQrT918bula+9j2Vppl4uY2amEmRFevYaHv4
kumtWsaWg4Jp4c97F599DqHwemffdLKMoX2BpmUGZIWQ9ndwkZihafTt2dWY
hGYRdKxmva00IIuWBB+d9OVRBHku2u/WpGcW9b60neJ9Ishm8pUGlR9F0cKx
NRo/aJhIC5u3qDXEX00hRRIPNtqbSC6v/uxsbhZNwxdnb+t3UkOHPrZNbTgj
ih7d+T3tyroU6v7ZMjBscTadqh64eFon/j54tFlNd5uSEdSqbfq2C98Qx8Lf
B69k8d65uLkfbfsTPqpWb0+mH/Y0S7tuGsPfC0f8wNBiLwODugdQp25jrvms
dmfxRudyz1nPC1XT8yquE6q1OUoxU0c6HwpR08Z1a7I3+R+npn0tJjbS+2OV
9hRp+GPhPnqv7Xy2qy6Zxk48FLFzljlVTe7uErYxi4I/NbQvk3SIJrVzNzTa
nEMVZo9w/1jmMPX/WupMv/U59C3vaTm/MadoZeulbrbuOnqVcsV466/9FL3F
IN/cQU0z3o066phwh344xz5/b6emlsNad7xkdY+q9KtZZuKYHPIbPmmlpvgd
WtV3X8IFTTYlG1+/ZFvzJf159ftQmmc2vdiYcj4s4DVVmK65sKVnBHWyXv/S
PcCP2phtLLlDz7++STe2hV33pB0jV7SedkFL2gYXDpYkH9qsCxnQ6EYm5Wpv
HBgwwJOuTFqcE7rNjPZkqpefKBJICR99K5X1fkj7i6S/mtMikMb6dnnW53QY
XZw+vUiwYyBN6v3Buuug+ILfQCq3tWWtnzO8yf67QZdL5cPofXTG3IbaJKr7
bNKCatNUNOTk0C17RiYX/IbRyXd5PWaWTKaWZhk7q0SE0coVe9ocM06n4Y1z
Sg24r6LolmVXZNT3om7jP01o9Cialn+oWPJNvXhqFOa65rV3HB38vfB56gkV
9fniM7xDZb2/eyU9+PqYBNqytX7fXlvUZLbceHUxvb4tv+ng8FnbtTS9nLH1
2578vXHlN5eWjB2x74oulKpmJdpWbsHfHy/a/mqfgbaF3x8fWi783Pw/fF3I
IKpF8ZFrM8hm4MazSeX4fkWLGG/ncVPC6FO3sis/njAn79+Pz/q20uu9mStm
3Wt1mkodH1Kndqc4Cgl1OZtb9CCNMHgZ6VctnSy/7G7pvfgENR3qfr7jP+k0
ZULxU1Y3jlCNeh89P03V0qLBS/o+tkyhul+S1gx++oEG0LpzJ4eH05k2MfE+
erwirHmTnsPC6f5wh5dVR0eRQ9PxPaK+plGJBJ/Nld9G0XrnzGmtMtLIcWvD
LrVWvqMh15b59NX7X3vnhh7c0YC/V26y+vOjlAncb4T+yf1n57ARBvz98oRz
0zPLpARQ/9Z7XowyS6OvF2aufTE7gRyCyw6rtFhFe1o4zpxaL5X1o1fCr1tD
nrymZo5JOwJH8XfEGg4MH1ZkU7K0/pFMa7+bltqw4yU9m9OpbeKnTJY+Rn3a
b5VfMtOXOeszTO08+P6gXZ7FziuzMtl4pBrfdB0TkFFoPOtdbnM7SD9PH2Sx
7ULLa9k0wCIk1bWGB21/c6jCxPPZtHHEnXFdj3pQ1CvnWNXWbPpR3uJP95pe
9GTl0fq3i+XSQAuzmkU2hlHZNtOnzrjG3yOf9Kh5dY2LmipNef9PyrmbpN0e
3n3R9BxqnnTTtVWANeU0Hv60nyk/j/Nu0cwp5r48ThDxSE/nGgx9XTOV3Fp1
6errpJHi9VwoLCG6TJd5GdQu/2LdN1HRlHP4mVHvN2nUqNlBtcaRvy/+wvOr
oecY/r54xDvzExNfR5JdBl0acCyFLo/se3rLAv6++OXyQ3ZVuhfJ+u9Rm14N
HywIpWq+Y7/6Wj2n/MrNTw8Mxz2WztQj80W1EfbsPR7a1cGh3lGHUHpvuOzY
omXBTO66dOgRbGYZRLd7x57dlsLfF78y+ZipUVgsuV+rZ75hUTDzpwf8yu5k
ZBxEr3qPGHjgPn9vPPPiWTPfHVFk9KLZllBLFbU7+uv76qVv6Wjj3X/q6O3M
3YM2G+dZp1GNBbOTe08PZ/MHTfjwCdVe6sdrwpCJvb7xd35vlD0UWLtzKnVu
HzKH9OXmNfy6/mpqFvV5UudV+7Lh9LNiWqehtfn74zXjLQPb+Gkoz6KUbXK3
BFqatS9pSH/+3rjZzIrVJn6JpXU/R019XlLD6HF90KfxgPdq2jSk4c0v2ni2
nmFRMO/dY9hiy/tjWnKobV0xQfNWmp+GkGuy7QSjwW5kNGVryPqUVDY+154W
bzb7bCrZjXB7ei7pDa2/PWDehK2p1PdPuYW3rvvRqq2mqmn5/J7cZ7sfl1+/
P4Xhl85nyu95pi745fckjrw1Zlyj/THUxaFzRqVq/N30+UsOG66ewONCp25r
G92rnJqul5vQ6G2HGPb9qJ0xz6p1SmQ4Y9zP6I2L+PoM2fnVK2KbTL0SW5m8
NU+mToaBEb4rnlLtRRNWF9ucTEm/Y4/tH+ZCvW3iNjQtncP4zaHYx3q/jPj7
5CZf6vSoutuf5rXq/eVSGf4+ubvB9NGrTaL1cne584mp/L3yafErxrd+x+9Z
mNRj7Leo3UlM/mamxvnWtkum04lFBjkaP6FLcRc+dFO9J7+4LWstsgNof4xX
rMMS/v54//TmJ22WZZH6mHm9C4ssSdPyXfPGc3l8/c1Ej7hOxu8LfuMpZXO5
sbOavqc+oQci3q+MJ8c/o1K8r6pZ/Jf3QiPXkn35e+T59RZapJd8S02neWW/
rK63537bRjbe9UZ678WHGugGtXnqlUonV5s3WzWRx4+9L/fIYcloHZ3OamUz
+aYbHZnSxqDm/ARqW+OR8+RtfpT0vJ+X56kEer7m4fVtv99Q6duGO6z6plGO
U0ap1/s9aXWbbd1OVE2jFu9qOt8f6U1WoxvU/n5KQ68XugeUVwfS0uUG5/rN
0ND9Y6tK9GgcRDFfdH++5SXTUJWtafjdUOoxqciPWKt0qmTcZOzTfaEUW9Vp
0q3QdGpqE3O12xfOb44/DR+PGhtOB3oOsX958BAZdwjt2K5LOFV36XDqQ4Ar
LaiRptsZE0aVYmpUHXJ2I/1wHxHxYmwMLbB7ZH76nZpq1jo27I9PFHnvnvVp
28Vk2p7d3S5jfSyNepXbIu/mEZp/bUq3FfUSSRcx8/oe1xS23tDrldmRObVP
U9+rIzx/LuT7fAO9VPM/uKopyNjTucEcvRyOPZeS10hD5Tbfb7ikZyjNN1oy
68NAvb8x6WPoxFnB5Pgk5FrYTjU9C3VYbRx5knbWHT3NxI7f8zph4YaW25sk
07IbH0c+rhGitw/RZWZotFTOJK2fzQYVHbqx70MLKwcq0867+9y6OVRmtdmL
zklPKHL5G+vAynr/ssM5re1qJ7afXnTiaNtmlS2p3pmlEys58ftSchPSH1Yx
yCGfzdddRhg8oz4R6wa7pPH7qTo3rpDrRulk13Vc2RKZGrrU+HveczP+3jji
mWuuOVfnrqeGsoMOfd2gp+v11gyvUSapZG10e2XdsvJ9Amo6p6mf0m1GKtXY
MuvCiD0qNq5nir8r836ujroPv6HZP+wVXcvyWzp85t/4voiiQ0e4Um+nmU1G
r9Hr5UNWpdZ2wfvfYVR3Y1jTlp/n0VrTE7e769PdYs0dNM2q06RVvcPf9ubv
Rw6rEj17bLSaam88ll9eFWB8wWJg7ORINW2JrZO1q9haOvq7jtW238m05FnV
hvmtm1LLWr+uG9XXz0fjWw/b9mgNffmkPbG8Xjp12Gq/oGrVDdTDxv+Ux44s
WhTm5vYnaBm9NKm9y2JbFi3fNaBDULctlBPYyvLV3Cy6qxk4c9bZG3SgdN1H
qYuyqPqXy7Zvel6lpzVfney3L4dUVn4+fce+NS7W3LZEzu4cKvFndtUSS1aQ
2diqua5h/D3ijm8ssttu4+8PG20Psjj+lb8/vH+Z9dyJa/j7wwd69mxWY1EY
Sw/+PPhdi75xtCHeKezBxGl0wGF+27Vd42iua2WTM0d20ta14yKuNOfvCX9Z
amf6tkg0qRrUGrZ/tSfVf1Ei8MHDJLJPHDNH9dWd4tc9MIlYpdeHjy+3Gxvr
QQ2CHMZdrc7fE25qd2zghL483upDiSPvdm/U0poOM5c17eJLce0b9Tx+K57x
fZUlve5sis2g1fMsL+yO8afqX6dOsb2eQQOyS7of3RzI9PXZKofMrPa/IdcJ
QxukVCr8fvALx9k/Q91D6PSQveUixvP3gjcbmY3u9jWJxvQq+/z1IBW5mt0Y
lHGg8PvAmyteyPj0S0WvrlY4V3Iefx94SdTuc3d26ucl1m1tjraJoBNDYkrU
ucrfA8Zv6mBTgxqW4TTgzYrBC6f6MXtyqJa36ZpH8bTtR9/sZp35+8BWYx/u
jhsTTqZfza66H9bSnzqB7dNC+fu/fglns8P185vnI787Z+UUfg+4Qd/ZRT5e
iaD8dkfPdg91pPNPTO+e3RhDPsf77rfO10rxBMlUM2eGV5GXsVTh9IcOh8yd
KM72mHt6A36/+t1D9UudGsPfA95h8YJMSyTS9DHFOmt2JFHrO3st17gmsfaP
ePxwjfVsNX0asbb5vl38PeBpO6uNXmPnROFDQ4s/ncHf/32RlNdn+gq9X7Qu
JG6xOoLUiw7GLSirpYVREzYdMg2X7tsJ19uJCrPvDtTSlnvWPfrfjWL655H3
4wbFH2kpUhtd0Wwqv698aUqjWS8S1bS5n8ki70NOdHHa9QyrG/z9330VjfZE
TkqmgRG9i12sFU8bjOc3e3SRn0c/NrfN6np9+Pu/dd9WWDPGPoVc+mucLs2L
Zvy82nHuzYd6vX7h8Pula/Xzj1/Z9n+0ddRUYVifEhtOv6ajh028NpxLZv7I
ziMGzbLGJzP56L+sVq2Ydsk094hV+WUB7mSwvpj79e3v6Jk6cXP5qSrKzv5a
Jc8+mcmjl+XLRWbP9XagjeZhtcQ4KnOu2ccBc/j7v2NbZ247PMmXio3S1vxZ
g7//mxplt7L6F2+aULtfym5nbxb/vaTI2aN9pvP3fydSm86R19R0aEyHYxcu
P6JKjn9+drdVE1UIPd+23n0aP8ZvyRe9v1FkTJH7J20e0b6eXxbmDOPvYcxc
eSXokEc42aZMKzcnOIXSZ2RvbKXXNy41G+wIGjWNto+/fu6vPt1U51zaPb0+
xfr23ciyi22W+dALp04nbC9EMX8tWD172PKOjpSVmjfsTXoA7Woy6tsT52fS
vWoutDDgYeuGTfn7uR8WFnddbRdMt7Ojs2LU/D3dyKQqz6v24O/pDvgUf6N0
ehSTb3ZvQ7mkPtcmsnfLqLRPy0vDzcJoWlBxQ38Vf2933a8fX099D2Z0QP/k
bmxi1iw2klwTfw/yzo6mXjbvd1qm8Pd2U2eeu33LI4rJ1/RN+37dM4mitxZl
Oqbs5HEZKwv8tjXdJ0+tMTeSelAH/yohmSx9ed3yKZlX3cn49Lmrnt85Xy4p
Xeuk17toNv9elXJu3cGhMXTlyKOyOU+D6KiR8Z1B/fj7ur/njOt9vnw8yz/v
h3/igEqJ9HjfkW3fvsdQlPugvr9+xVNshUArT/tYNn9B/5cMDGv9ZCh/T7em
dZG0oMYaVl6xvlev95+joS7uDXdqvqmZfIP+fQGm5QI78/d0dw81de2o9/dX
/fE8rBsYwvztnjlTF6U1DGHyM+bMx5LT9P6R8utGVNbizv7d/L3cUnc+WU1b
l0ZzT7w1aq1yo1H32z2vuN2Vdm/9fXPePX96uPhmcNu1/J2QBy/GlRiwSE0r
p9UP3LjmGXV3PF5laLUsln52666BFStkkW2tknkevk/p8KZjjWf+1o/Hn011
zY1fUF7e2NC+23S0yHviydJtn9JmrwMm89bpqO4IV/dmFZ+Te7VHLvPX6mhD
Wrb2wMjnZDYs/EvNjtm0wXTuzPK13pDHnXFlrvfKYOvjrn7VP89cn0GqGZ2v
vomIIbuR70K6Hs6gjwkVa7+5H0MTmx+z6fI4mdQGjcqW1s/j93y2eut/JJF6
fYo42aoSf9/EyXTnsKVLUmnf5w4ONXoFUb0fv0zq70qlvcebl/jklk1GC5La
dazmxs6HXRluX2vWfTd6mpC0Mukhf6+1YvlTvWv+fk/F2m94UPOiP1kf27LF
Jvk9k6fxIU9v5bvw+8L3evVd+9c/SqQDqUNDltGcbevu7/PV0WzPX9d6PJhH
W1Y9NnrlqaNKnsNaLG+0i54365r4N33tP3OfZ9+bx/o9J398l8vLMqhvrzYd
zO8/o2kdE/26Lc6gef2iD91ye07ftps9/WzC72f54ZrRcM7EDHL4bHo0tttr
6jrZOtN5cgbd3dM4P+PeS2q7dr/j11kZtGFY86aV/lyiM+EjNm1cnUH3Vi1K
uPaKv0eaf8lptbFHMn2Kur/zY+WH5D15UvupXsn0rHTAvN8jHlDXpa3rGdvw
88jr7EeX63dLR7PqrXrbpIQtHXYbW6PpeX5eJ9LmWeo2Sx1ddK6752urh+RZ
xnJb86+76NIrz2d1lvL3SQ9TpacPDNOodJvLRrHWd2ny2V2pUyqkUaJvpmPu
8Ad0UB0QpNHjm/Umnx99P4WMl2t6FC2vJrvaD773WulJ7Wfc7DUnLpVu/A4x
7DfRh1a3qtlE45tK6jvDQ0f4q+hBVNsVBifTae68ORvXxPD3SaHXXPpPGDpg
ezpd8S86NcM7hKqOWn/k0PeXZOrft8054n4C7OUyr0ZDog69oXZjXwZPqZvB
+A7xFpfP7s8wmBVClhnFTI4dT2X+QbvgRufMmqeS28flLe6s5u+Vzkg879Wi
aBo1bFG+fF5bZ1qScuVFVNk0erVpU1TthW7UvGPl2zs+ptIku5Guj7a9picv
Un7e+5pKhuaGo6N9+P2o3ueWdRkdoCbbnFenFsWco4SvM4sPdleT38OfZwaH
WlGdZ+t6jszg75F2G2pV7x9NMvWfM3J3xPgbNMUroWfaIv7+6OfINZNVK3Mo
aYSXl8HZs3TjcvqCVrP08y/TyeX/2N+gJiZzethkp9HQBQfSt+XbUf95XUy0
h3SU9XtW2nu3J9QyONLBqXQOuXxsMDh2PH9PdO2gPMM2xWLIcOYZq9rvCr8v
6uDxM6isRxRbn3o9P36/bRstnevsFZhSj99/hP3osL0L5iZeTKUq92vdq7GI
vzc6YfDscUZL+f0MOG8dtGTAotLNXtBYh9wSh2rx88NB3w/kZF7xpb3jPx9s
XzODxn4cPPVexwDpvSE/KmVq512/Qgb92Obn4vkPP5/+a22/GnNXvKMRDVM6
dn6eQHe3n1pp3P0dzc1c3vR+lUS65j50WZF+Yax/n+dfOWjbJozKDStJ7wbd
oOtDzxmWmai3s9fKVT5T/wwFnivbyqASf8/zW4txWy42jaM7l7va1bA4S6MC
Es+tqRtHi2Z8ebg/+SLNufLPgL/zOdvwHQ1ObmhKKxzOvK1XNp19b7v//NN1
xdLpt+ma479K36A53/oeCC2ZTovmn3f/2OQafXjypnvFCunU6nC9G33Wn6Ow
viVPvTVMp+JObtOeL7lIx+27jz71IZkC6gS5th93hum9Hy7W2w1WZtCgyze+
r/M7y8733w0r0qD8pkTablkm9k5aKtUrFt+mxP8r68zDoVz/P06baOMkdChr
aSHHlr23RLQopdKiRLQrSSoS2RLViRYkjn0pskZZRvbKvjNjnzHDmJipE1H0
c875mee6vv66r+ea55rr2e77/nw+z/28Xhe6ufWZGT5UxnKnlTcbCZ/m15TP
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
iyQNGqE7OlzKqfjJSil8JUnwf06EmYaGxxC+v5k601ffqg/mSgM4WpO+9MlH
Jo7823Zx5/9aKmW17K9OfIm/ZjY2TIeVpwKpIa4D9yIH7dWlCkA1262Si14c
PVwo7lzWjeptlXqVVYT/zvDXwmUdQVTc9mxNK8gkfHcz414XRWq+aS4Dxgde
OJgpc+CTtftQyI0SJOUvpoaQCN/c96WBga8NhiEhkNK8QPsVRM3i/RYWM/Bl
gbBtoRIFLi5PF5EFWPirRP4P2fAOHKqLdCRJfsZfNmV5ZoZk8I9+TftgyuC+
b6wJmXzSoU+F/wqhyzkqNMgUTxk1jhE+sqz1hrWabzhocRddckorDKoLhRt4
R7u418352rfhpyrFUK0IEHHP78TGsgmbFRYF2OyWuIXv7+n4IvXxwdKpIrjZ
zaPOuU5FeeJCZX+bAozbVQjOe0AFvUaa5s03873RJ1COJzj+vNPJnS9+PVjC
973of73K5Viu8DZDY6wHB13z74px6qEnXhx1cGM2rkTPM4l9zUHHkzUaGWVR
qH9ms7AriwOTnaM+p1LC4GcQQCoWHebOhzPjvFXjAa/N0jPft5BRk0h34gum
Y5e5aYK82+f/b9vR2JKzfrtaNS5IelikjDCgr6qQlbS2kZu3G78wXqEjyoFD
5gY9TVYZitTM5zjN56DvXi7N16sCe6XMxUoq2Si8nRnxta4Kv5TWaouUsxFE
63Vxs65GzlTwsZ4Djdw8QuT9hHhiBQXdpy/2RVrRsd31ot2yboJfPixmO59/
jAXLv3+/Sksh4+cemS77lZ/ReWbXpMkBMq6k8Fdo2DSjorNWJU+LgUVtVZIn
lzdjzuavfG2GhN/MSckzPvDUAOiLEqo8SAS/vKdyKynt6P/yy+k4zx95Vi6n
E8rt16d4hgj+eOY5wwcql2bzx8d57/lOaffgzTrZ54anCP74oonoiMJAJpS2
qZcslOvGRws9zuCfTMR43bzFWUus51Y/LS1NKk9HOq/hvhM0gj9uoCo7GetN
8MZNlxkcPmhO8MYN11S71zQTXPb/9huA/rB/73n+XszTDnve8Z3gictMZ/6W
FTTueuyZ95a7u6TdjmoTfPE7vf0P7/b34fR83+N+O2fzxjeuOsF65E+djp+1
X6vqEfxx3oRjE3NeUbnx63/nMd3vfuo82tNCxc33JhVSr2nw+fIhOdqVCsff
CiztBCjgBPkGd+VFQoi1LsRGiIK1S558O2wWgUrXYCkrZTYknZOvpd5oQM0q
i+YOPjZ0XQv/mDzeiLhLrRdMRNmYu8v/4RR/I4bCeE5a/DkMof4g70jpVji9
PaIp4TCIxBzqvcFLPThLq7N45F+MpwohK8f0BxB85Hiwel4ZPItH5vLJDWCD
5fpA7awyWPUFKW6RI3i2pyhNDRtlu3Hdc0GGzBDBG983blJ18xx5Fm/8U0BA
ZI8uHXobV4pG5bBQ1EQfOGFCQZ62rPn5KhZMrS72P1xB4eYXLnavCw8cYqDi
j/AXcV8J3vhF/hdajTEEb9xPlNK/RWgE+j7ZL5JZzfjxdvmfE9+GYdoumBs8
nS/+fNrv7hPSjmX+Bl+MUukI2h83yChgY9L4z+gvCjVoXu94blsUG1vcPFgi
pbV4ahpFzX/Fhou7aKbu1lpIVLItKr/XwGbl1PmV3Qw0koqUTWJrEBRz+8z+
PgYCeMYEtXRY3PqXv8kJUolZPOZEKm9cPB2f1tjIRew/lwDPqYQ5/8Sr6s3i
moLtbHSLXWxRuF6JQ2tal8odrkNR7MUrtCoG5pB5Tk5oceCyLfdzaUQxXDTC
tuqpcSAk83hcQKkEfwy6ZQiunZ4vPiu4771fijeOUc9YShw81LQWkgorgXea
QXXXMBt3wouiDzl+xHtLecrHxw3YnHWfh5yZjsd9V+KLUxsw59a+dbrVabAM
1ysSaGoA33ME7w1NwdWrmaKJ9Q24VXqIyelMwX3RAlEJg2Fu3D1TN1w8sSR4
bgXBJ19UFCXulEPGEZ+K1m8sglce7bxBImSA4JPrPrT/bqU/m0euNFrqFxbW
heZTvw08YhF88gW6zL8XyzDQ4OJFT9rVATMpJR+GLAMhGeY1N00IPrmxk0uy
2fZ+HMcV9dQxNlJ2Ve+5n/kBNW4ZonyCBG98pt/mtIsH1oPgj1+SUverZSZC
W/l6j6/JbB55b2GasMKbTgS8EN/z7BnBJ9+qpsWIXcPBwnrai8fPSvFDOduT
9zkbr+uN8x2W1U2f/74VU6qD2JeXKPArtAdpFtrdVxPI0D3dFxqRn4ZNn86G
ZoeScbSd35snMR35txlUtYNkpHSPa5o+pePZy6YO53cDuBzxM2jeSA+EDCSu
9VoTfNIiC2fNuMNsCF6zlCYH1+N2K8P37Ck2pL9bq/x+pB7SJp9s+tzY2LBL
JlEkrw73K6okf9kMo+UI52zg3VbY/HGh53k7A4mrNS8MevSiun/rMcYWwjcS
HnvNw697BH/92zZC3DJ2a+kwwVvW1Vn0VkG2E966XTRNOTpsRuvi4xWmr8vN
d8oPZOg4YH9CjfVbGwT4v5as66FjiPcyjXmC4CXbWmft9yshQ/7l751GFil4
yRkRcP9A8JGSeE6S2ekEj3jmfe+BAJWf2atoiHZrERa2InjEJ206eFcGNSLP
mt+u1pmBH2Gpld6eH6Fmvc+MtGgAIunuGTHi3TBk/cUaKCf4vcODtjf+Wa8r
6n38Ne/RESwqU3M21mxG1IHzN7x0RqB6M1Mg0bsZCrLzO9KF6WjdkeXumdyH
i11JwTpz6Ij5FKA1ntMHJtOZ54Y2wbOdqeuO1t0yZdXR8bGn3iPTkODPii3V
j/F9OAKbSFuWWGYTmJTy20vqCL7sTD8iqU9ZJIYk4ZhO33v7HIIPuzfze1u5
D8GHDGeFp59OJHity6PTug9FE7ymcoP7F4ReEvzVAS+fy15FBJ/y5Im4xPEo
FkSrPKzOuFHAR1ptc9+E4D8lPsjhJW/l4DeNydT5TUUwsRRQqtnGwa7cvJ47
UUU4n/BXkKonB+HV0l2bNr+Bjfolm/R+Njfe+z+UKC30
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnHm81dP6x7/nVGfv795nb9yoFJeuqcQPSROZmkNUplIqQzKWoVDSoAxF
sylxUSRKpbmoXOSSudLIvQiVKeN1XcPv8z7P57zyx3qttdd3fdd61lrP/Dzf
Xfeifp2vKU2S5KayJKmi+ohskpyr0kTtfpkkqa+HR5QkyTlVk2SEBgxXeV+/
b1PJa0zXNEkOVmmk5208trf6F+jdeSrHq2+D+kZ6/BbVd6oU1J7neT5X+2uN
Xav2MJUmevhltSRpqrq6YDlEc+xfEnN3SWL++uqvp7JL712q3+eonKuyTmOG
q+SSgJN192LO0pj7M/U/6zFFlVPUv4fqff3uiJL4Pdew7alSW5P1V/le6zXX
Jg7SWV0h2Irqu0HlG8HQSfMcorGtNc981aNUtqu90e3yJOAY6f5/6sxeVemq
32+oXqMyXvOnmqtMpZv671ffO5p3ksr/1B6itfrq/L/T2ksEw/eq79I7a/X8
fJVxal+TifGb9P7tXrezYP6PzvMUjW+uMZ9n4jwHac6bVWprrs36fYfvZaHb
O9Su7nlot/S7f9PvPj7v84wz7L1xErjDb8bUEbzXqzTTOyP17AaVAUncN2dR
W/Uc3wX3cpTgvk7vnqTfX6u+VmUy51Ul2pxJbcE7WO2PuT+1b1d7vNpfVYv+
vOcYoXK/+jdxb5r7Km3sc425Rf01NeYz9f+fnvdT/yaPZ/2P1V9X/RzcYTqX
69X/vvozOsNzwZVikvw3G+vy+wPVl6nUUvtb1TdyRnr/Kbcf0FQf6906oo+v
NXdJNuZ8EFzRXD/rvXwxcG6EaWF0NvYA/M8Zf/6i8r7e/0rPf9N89+pMhxvm
7b6nOkncI/S1T0ngHnfHs0Uqd6nUUNmqMlqlpsoleuds08/OJPr2V71E9RiV
Wipf6Pe+qv8KXRs39mZ+wfOd+oYXAj9Yc78kaHZxGnR7hfZWQ3v/QmOfUt8w
PTtc/aurBvy8v0H1srIYt0l720f1RtVZj6+nebN6v5/KZxq3JRv3+JH6Z6mu
rvGPco65wDnwbZRxbaDKaXqnTM+7a/x01f1UXwBPE2xj9f5TqidorXvUd55K
U71/pfH5bD2vr7qpSrMk2oerNHfdQOUXwXqsYLhU8xzvviNUrtU8/TOBn+Dm
5LLAz43e43CNv1XrNiwNfOiQxPsnwFfV17g04Jyi0lPlSdBSfdvU7qWySnSx
Xr9XqX1cSdDHkCTwcLLWrZsJXK+h0gNekI0zeFBjWnvOGWrX0fPaKhfqd/9s
7J+z4M64k82Ct4f6zzFdsydkw/nw42zwsH6a53RoS+Xokjjvk7zW/trjII3/
qTTwrI1KW5WCxh6YCZg4L3AH3Htc4x9T6e676upzeFJ9T6j8Tee4UGd3pNqL
VNcSrZ4hOG9Wu2k2+Ep9nyPzHum7oh8aOTYbsulqzflxWfA/2onmu1jPqmRj
TdYeo+5Zaj/i36NMT9DcevMo+NOxmq+hyifco+jhd/GadoXgi8hS5MLLyMqy
GDMc/FC5zvve6b0PU+nvZ//R+Dt1B81VT1P5VetsK41nyMCLVE7U3TTQnNcU
g2d097kzF3QLzTYrjfHMe5/muVdlnMYsNR+Axqeq7yGVphq7UnMu1Zw/CP7b
9M715t0LzU/2Nu/e7vOcb7kGj1ps/gOf+RUa1Zk8l4lxO7zX00tDr/hS7b9o
f3eoTM2GrtBc5RuveXES/OkK3e/jut83tMfz9bt9ErSyIxO4B761M3029/Pm
pqW2f6Jd8K6Jf1+kOadozotVF7Tmp5qjt0qnbPBg9ldVcI1U+VF3ebDq21Sy
uoPLLPeAJYO81XuNSoLfoIv08Xld4t/QyGmmiw4640noLewhG3cyVGWmzny2
znxHIXgWc7DOQvW/iSzQ3svVfhj+pzHPpkG/P4DPam8GDwXnO9nAE/AAvL03
G7gL/f2s9oWq71P5JRsyhPf+p/KExvTJxpi91f5R9X9UWmvMD9n4PQEahI7V
bpWJZ7QnVomxP7ofvv6LeftPnof+i7IhO5GbrTxvy0zw4C9UxpaE/rJT7VLV
uUzoAegAOz2misd/6fYE1V+pZDPBu743/2LsTs+5EFiyQaO3GwZ4M7T7tXUu
dK8fvMffuQe1v1G9RHtbpNIMWYlcU/sW7WuXx1TTXvbU+5+pvU19n5ZFG52D
dT9X6aJ3PlH9qconer7d/ds8drvbzxRj/hdUf10tdAv0in9DR9mQY6eXxW90
jBZp9NP3IDoRsqw05mZOYNngfuQreLDEe6mud3tUjd/wwA+zwQfruI2e8ZXw
bLmeP58PefJvw7DNe+E98Osb41ijTJxzF5/ZDpWF2AvqW5eN30szIe+eQC4L
hqfVfyQyRXueqfbZ+dCbZnqPf6ieng0dbIPb7PEbvXuT6PE9jTnF86BLddL7
nyDP4Icqz3DXqufBR1X+lsYczIVsg2Y2G/8fNT2gJwLvRvP29W6/bJ0FfRG9
C/mzdxpyGNx433sc4THoOHdo7ZVqP+p9IZuRy1XT0BHRD6GjV4x74BU6DfrM
Parnq3TSnIOL0R6kul0+dP5axZAHK6uEDoAeCs6gC++Xxlqc4QPwm2zoPicV
Q4fKqr47H3MfWIx7Yq/drB+iK6o7uV99C/RuA707VeNv1e9UD64vBu6X5ONs
1vl8hhZDN/8jH/iwTP19kRvqf0HtUcXAdWgDOQi+LDTO3Kf7uVnlj5KQ2ftb
fiFDthnfVqYBK/rODsPM73x56PPo9fBv+Dg2HTbLWfCcktATT6oaekiuPNpp
eegsZ4IPKpttL/yeD17Zx3cE3/i7eRc6BvMjI97Kht2FzZUpD111Wy7kEnwf
no9NhO6E7OmuuqPKrWp3U901G3Kgo2Gg/0jDjK7VTHXnbKzZU+XCbOikyBPm
7+e9dvZ+4f0tqgZeoH+3z4atV0gDTvhhtTT4JjLoMt3HI2r3UX2/6inZkBvL
zFO+EC61yYcdWrMY+uYDxqXexWj3Un1BMXhBN8bYlsEGB+/u9/jlmZgT+t3D
9i44f34xZGITrbMuF/x1teqr1T+Gsy6G7Xud7d+W5tcPco/5sH330pg907CH
J1mXo80zZMNE96MjYV8hH+FttLGzLi/GmMb5OPP2Ps+GqtupHKPS1m30Xu7z
XN8R9hj8coPgO9e+kMk4VcrDlvwkFzYutm7RtAGN/JqLO2WuekncaTfjA/gH
HmK/Pl+MOX/Nx7MLjCcdjD/9reN1NT58Yh4NzVbInOxuHk8bWC8xr4JPH5iG
rsb4vsXA87a+c+yaCv+DbRxsHfxA4Mw7XrOb1wWu7oZtUGno0pz/tZb9nb3H
000XNd2+1XoZeN3UNMJcZ5gmoY17kij0jfVa7H+o7Y7T/kRTpxmeZvng6+9L
js3LBi2j25zh+Yd6TWgKe+HtbJzLIsss2uAi9gB7uUbtjlViL/AB5N592ZB9
55g+zza83Q1/U8/P/eI76WGcYXwP91/od2kfYzuslcpz+n2q6vnombbh+I2v
AL8VPpNqwo8H8Cvofhuo7q277JXG81M9pkcm7KztJaE3brfd1wg9TOXuJHgd
43aUhE6BrEevaFMSa7PuijTGYxONLQ/5dpnO9gite28udHTsmgkq423LUI9L
wo6YpDIxCZwEP8HTt/R7hcpK+jPhG8A2YB+TNedFquemIQ+BrbX6FuViPvZ3
qPfYkXtVman22jSewf9aqLRUmaL+ndg4enei6ra2NXolgcPQD3Q0oEq8g916
pt/n3Q/0zgmen/eO97tH4UfKhf+gpeoFudhjr0LoUhepPs4wNC8JW7fM86Nn
omP+Jh47pjzk56WFOOPWPmf2wF3Ci1pp7oWcs9qPqX5U5R3vBd8re8C/wH1N
T8J/gr8Wm25YIe5zZCH0fvSXCji8F2wufHSTfU8djb/QHH6I4ww/ug08tMJX
p2cjkrjzhvnQy/GpnGfbBRumk3l4Z9UPm4ah378bL8b7PIEdmm2rcYPgs6rf
Ffz1BPOKkqDpDqbxa70m+JXPxr08pfZDKs+oPJ2En+FS22AU7DFsSmzm65Ld
NjQ1997IduQQw40NVmnPDfD7/b3mUJdx3ksj0xDrP+K+cS5D/c7AKoFb2ObQ
x2Mqj/6JTirpZrjPdJJphjuBBzI/sKH/QIfo8JP9HF/XtGz4K9GTpyYxnrMe
kAZ+4UNizmlJ4A8688kq8zOxv1HJbh/tSK891vupvDfqyrmner/jvQ/uExxp
ZHoZ5z7eh9+cbJ4DPZ1g/Mf/3dz3Dt03tU8AHtjQfDBjnIb3rUuDtvEtPo4v
MA0fQeNc0AO0gB2PPf9BEjxrn9Lgn+j+f7X+f4rq53LxLnL+ENMXOjv6PXzt
F42bkgv9GH06b5pqbZ7JPpfo+UyV4zT2eNVP5wK//qvfM9Qu6N098HvmKtSR
5ETVz+YC//Dh4ct7W+2T1DcnF/f+axrv8+7J6pubC1xhr7MN83R03DT4DPt4
3P3IjH0154Ik/Hu08RlS13YbH1Qdny30Dx2Dk6dqjvm5oBHOjDtgvoZuY6+9
rneXqIzV722qn9T4VUnU29No42us6fG8t4/b3Mv+andQ/T/xoO91pi0KseY0
r8uZ7Kcx7UrCD4G8Ri4Bex3Dz3w1PCc4UcOyif3UNszYbzWNMy0096xcyJcT
VD+TCzpDbjSx7Ghp/gbeEvMhblQZq9lgv9ZppeG3+tJjeI6d8btg/E4wfpsJ
nRfdl5gRsaa11veIDxHfwlbFp/5hSfjTGb/OejJ+Rfz1+BZZh/WIdeFrx6eP
b72Z+Xxv01pr4yE+OeI9+OWQD09YRtzpd4np4Of7oCR8fXfZxsPXzxhicvjr
Rrsfu2+4YdvD58CZEL9DD25j2YcPfqfPupEe9hUOrNbLh2v9cSrnp+GLwL7D
5tuA7FG9XnWjNGxV/BxvpRHH4z666v3J6n+6GLgATkAj+2m+8bk471l69qLo
Y0U+8AI7EtzAJ874tiVxPo0tQ1v7fml39pnBu8BH8BJe8ZLKeyrvJkG7E02/
7LWt9zvc5wHO4Cvk3fYlwcPaWoY9nca6yMp/eL53oDuVtV4D3jkrCVl1UzF0
03nF0D/xyeADwj+GnYPsm23eCy99x/YLtss0ywnkAD5P/JHI3gtty/UsBh5M
9Ljq+v2g5u9dHv5SxhLDe9Zzw6+xubG9j3DBh44fldgBshY+fmUx5M1Vqg/U
Od0KDWfCZsV2xdae5X0C9zzLHOCda3kBT5vjNfndJR/+kH6ac7nOcE4a+l73
YujYPVT/Krx5SfjzsNrjrX+ihw7T2KHEm8oC1g4+jxrmP/CHKoJxGP4FwVma
jTgcvqitem+LyoY0+Me+5iHQHrwcWqv0KXNmbX1m6BfN/tSH/YJ/GT//cfmw
r88rhr2I3QjdtDDfO7EQsYIpxtum+cB5cL+N5yYm19Rz04evl/H4e4mJISuR
mZwdMhiehr7a0fK1ge8N2M+xXdLE87T2ujsz4UNH90Gm4VNBtlfKj4WGo7Vh
+IV4EHJIcNZNI87XRePu0B28qLtoUAwf+Qj7yYmXoKdAd8TTwAtiaqvSsLHw
25R5/SE+17Y+U2Q29wAsmzR+Yxq490waNLayJPC3ne8GmutqGoeftzANQsdd
LE+P1rl/oPNvWIi18XWxZ2I05xm2Jtmw+YkH4VfGJ4D/YEcu/EfrdVfjNd8I
ldYqZ5lXIxfmmafD/+dYBsD/ofOHTA9nmPego9Y3DnHPlTFFfr+WRn7ARHh6
Nmr8SRN1zq9hj5eHTbrTsYe25jXwmXtsR2BPPJCG/4tzH52Grxuf+haNe0Pl
TfNM3ufdo207tDFfQ1ZvTYLPdXAfY5HPLyaxZlu38RMRlyUmu1m/13iNrV7n
LdP5XNM9fGG2+eAj5kH85qyWqSxNAg5oFzsYumxtfIBWwU30SWh3M/iUhG22
RGWx+cocz7uPaXq+z32pxzHHK0nwZtZ+XmV5EnYPevtYv/+Cn51p2x59/Dnv
/0XTC3MgQ44zLkNH8C38649YB33J78zyOssM4wqvwR5WGybg+6fKqx73Onjh
99b4N2PXq6zznl7zO8/77Nd43jf9+xWPRQ5t8z1yfyt8P296vfc972L/Xu15
N/jZzDRi+aemAccmlY1eb7N/s94W/37TeLDFMG70XO2NX6w9W3S1Wuc1vhh5
PvWt/7QR3S3OhQypb573pfFopc8OvoHNhq0Gv8Leu9h7WP2nPb3qfazzWaw2
nM/7nF7zOVae9zKfN3fGfc/3Xl7wumv8nPff9biX/GyOYXzPfS977SVe41Wf
L7/vsH63w2fzmtfnHXCrEk8X/glHFvn9DZ73Na8z3+/cbn2y3Pf9sucA9mcN
30Cd9Vyd+Y3Y6PnQQ9BHgA86qaRFanC2bS5sHuyd6oaXuC50OcPwoRdvT8I3
jg8G3wX21R7Wl7GzFqSh66GDL/fclfQ32/DdJjieFzwj8U8LtuVqjyjGvPBK
eGdj9W3PhAziHGcabvjBTJ/PJp8ld0XsGZ0G2djMvjl8bpz9Tj9HJyZujh50
Tz5iHxOKsc8GXvs39W3NBs87sFrEmIg9HZWGfCRXbox1fOa6y7o2a1R3/AF/
FvpxR5UzVHrrXP+l+lCN65OL3DLshrNV70pDxlxAbML2F/odfvrKfBZ4DLL2
32m8w/j6tlmgI3S0gvW0WmnEjCtjX7Sxma5UfblKQ+vm6OjYvvum0UZX76f6
apVj0vD/kqNGLgH1fW7f6zZ7mZeGj4v93qD2dWnoYd+q7pKLvLmxquurnKe+
71RG5+JMTs+F/QadY6dzZ8QysImb2S7GbiL/AButXS7scPS2ke4HF7Gtm9q+
xv5uYhv8BOtL4Mo63fXT6A358D3hg7pBdV/kfi5iV+jj+MvwlU0XfNf4HNhH
Z++FmByxufaaZ2Em8iB55yONOzMXutRjmYg1kg+03ndIfgu5HofkIt+DeAa+
8zQfuLTUthv+C+ivlua5U3XTNOJwrdLwS+OfxlfdNg1/NfkJ7dKI9dDXxv3o
Fa2tYxxfDF9sWTHmYC589fdav4HfXphGP/OfncZc+PjbWA9izp5p8BNiFUOK
EX/OqD4hjVg1/sd70vhNbsCJqk9KwybE58wYchO6+F6wx8emMQ4/PnKnZRqx
FWL4wEpsoZX7gXm89/iC9vUvPW+cRr4mcUbikeQAcL7Hg6ulobc2d5t44NFp
0Gc91fXT8J/28T1P0PM3TR+0gb1JutumpR5WDHxCz4MX1fYY7hp/bD3P2V31
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
ywo5arpcYzjpW2JbApnD84U+85e9X+D5fxUA9hU=
         "]], PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[{{2976, 2239, 2581, 2667, 3792}, {3716, 2236, 2663, 2570, 
         3618}, {2875, 2665, 2583, 2271, 3742}, {3360, 2562, 2548, 1569, 
         3433}, {3423, 776, 2552, 2652, 3791}, {3618, 2570, 2664, 2237, 
         3718}, {3717, 2237, 2579, 2665, 2875}, {3792, 2667, 2580, 2238, 
         2975}}]}]}, 
     {RGBColor[0.23543330086072323`, 0.3785740560337351, 0.6218819801711535], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
jPGBxyGW4B35TK8Iq6MbHxlngo0pOxtz9nesR19yz+RIsRvgXmJ2sG+nknA5
doMHDI0dm5p0t3RPprwqfa8LOT+RZIPI+8I/sQS2i7gZGnl2dRwNTW6jq+nX
jFnxHfgRaOIO7kuoG1OTnoFF8AuUO1hWs8FGMdadSfO2eu/ed1/uXjinHZ1L
ZP6ujuXfMD/gzs6WFXJbYNwzxnLr6HruPeG1r+WBfMb7XDAv+8V9I/dT7FeH
4KkY/y1OwongReKv8ZlwAnhzViY7OylJp1qcl5jpnAC5gb5N6gvGIw/FGD1q
jiOaFAPdVBN+A8d9U9U+c6+1xfS5xGpV6doZSfdY5MLuTooniE+II273PeX1
UV92rhDcxx0VmHbfXBizr/nhLBCLcka2xH/zg/dXo/3PcuUtnyVmrAl/96oJ
Y4G1+gY9vyq/PqSm3OIK20jW1M/rejqJZ3gH4/RsUrx3S034ARyxX6b7rM9j
zpXcHwQPK4xL33aeAn/1ln0WcdYm30+xX+gNukos/5n3jn3jHos2tIfGhrS6
PXtNvn+T4zXKj0yP9DiMSf6DmK7NtkEzztyKzi9nd6P7Un+p4/QB9lv4r01V
YbfXbTMpV5nGrq937glfgT3Ej+yVC19/WZWdIZ4hh8i40MQXrIl1ggV/XZHd
w3528pir3LbmvpS56cx5FeIV7oixgeDY7VxPG/YcfIa/b2f5g7nIRTX77Jzv
3NHkmvKA5AOH5prrUucryHWR8yL2J//xkLE9doK7f2wFOkz8x9rb7unJj6FL
l9nucZYvsz1kX8hPsV/Y1/G2sUc5x4LOHWGauSj5j1iDmOMh04xxmMeBF2wE
9oGYdJB55i4Wf/XPqvwvthf/zh0Yd2F8Z/GhvxO4N+pmZsqPHZRLTshrpeUw
2Os63j6RcW9PyjvckXSGydERwww2D9zVoY/oJfOBK0faPq9tUpuB1lnkgH4v
9T6Nt8yPsEzwM/gw1kF+psWxG99CtBhvABK5B+J+B5uGjcA+dC0phzjCPL5k
PmlLPhVd52zTHt86pyJfNdE+Atmy58iPerAScfA05weov9jtifEYk/sg7NSl
PlN7ep/6+twN996Bb7kPZt0jvK/EVtTdWf5eHnd6L9rW0MX5AXAqGJU7+cn2
L8SvL1gmjMVc2AHGYFxiEXwX+sOcLW5P7ItfmmzflCx/ztocx8LkArhLnGN6
tmmwMmshH9SG04d6PzuWFH+O9xln/9i7FtPgxSGZMNrYXHdHfMvBO/cG7B/r
/iyX7vPNwitJMcCQXLqxwTjk06q+a3k0ae/ADMj8F7nGvCTXvT62uX+uewsw
5YVB/ziTjv8u+q7OdWf0eq6cGlgKHDU1Uxy0KldMRBvewS74nVONM/EF4EVi
aO7UyO3ik2hzeC4f3tEy4S69V0l8PJdEXxRt6jPh+NlJd7adjItOydV3T/tz
7kvQx++qkgmyeTFT3oNcCHFta1Fx8sHx/mURQ6r7Y+6R1+Wyo+QFsKX4NOrJ
ARBj0X7bN0CZ1nEt98W5xhyeC7PzPRN5nj9mii25N0MvnrJu1DLJ5rBctgab
wzdKhzg3To6cOJu7OuQ62zmWW51/I4+0t2PDl0uKD/H3+P1vcuW5iM/fzNTv
GffFXj7tHM4nVcVRf4x+g50fI0+2n+89W6uKhRmTuPLepO+i7iOXnmverbm+
d1ttP0u5xjT2DRp+t8XmJdnbaUkx8HTuY3PtL/v8Zk3Y+rrguWsSDr8o6Rsj
sNzkJLtE3hvf8U6mHM4/M+XBqcdenVaTn94YY79b1XdjQ5Jyfj2dMyfW4+4A
+w2mO8aYsH0uO9Yu19r38T0+ORFocgIvJLVvSd9/p4J/Yf6e5m0+95HR5i9J
fpX8Cb6R++ilvpOe6+9AiB13y3U+e0f5m0xnhvsTMN3RxnVTkvr+JsphSbhn
OHVJ+GhJlHvkioX6RLneuaQNmfJK5JeWR/lmVd+iHZCE46rGcujYXs6vrsmE
88hpkdPt03bP0qhYn9gHn7WuSX5tp1zfUu6YK1+0zjmjXyX5v12Scrf0xX7y
/1q3gV7gcZqd46XNfLcZ6L3qYznjJ9e6/TzLGXnvb3t1U5LNgqYOm93sMRm7
2Ws8JglvjUjKn3JGNkc5PFP8dk7Ur0y6o7o/U64T7PFMlI8ZHz8e5fleOzIY
bv7xQSuSbPXpue7OGYfxdrFMbky6+wGrnR7l05nyBpWkc7TOfmdaJpx6HXFe
Ujx8ZZQjc32jeTzfXeT6tuwcsGrS93y/TLrnxj9z/4wvI9YiDuS+HN84KNM9
PbmSS5L0nDsY/PVlSffHlyfx8ob5of8645Yzc33nNDrKfpls8qm5dBGd/I+k
71DeMw6ZmAlPXJUUX5H32JbPLCvmIvbnvoX7n235t7Jo7mHOzfWd1phc9fC5
2pgX7LvceYhnjT/bvgfFt9J+rXEI/daYbvuP8enHONh84rBnTQ/zPcMg689e
3l++/wNnjIryJ0nfI/FN07GZ8ixjk2zGQNsQ7qsHOr9azaR76GA5054e6TMy
3OeEb9TA+acm3R8N9TcJ+2SSLee+nfNv8HaiaXgb5nGg/w/eFc72
         "]], PolygonBox[CompressedData["
1:eJwtl3mQlsURxl92v10+vvedATQaoTaAyCLiUWrkMIYVI6dJuEFZELlkATk0
JhACuogHii7qoisgJNFKQCSIgFJJRATlUokgl4JVFhJFLRMiQlIVFjC/xyd/
dFU/0z09Mz093T0Xjp46YEpRkiT1UA5aGJNkY3GS9GmYJIvg74IWonCsNEl+
AT88S5IFKL5dkiRtQ5IMZuwV9GvRuTpNktGMlaFbBx4JfzvUEvws+FHmbkDn
FfBa6J/IqqBW8EuRz0feCntXsfbafJI8hu5G6IpGSXIe9Cdkw9CpZf0drF/O
3BPQ+lLv+Rv4M9AW8C3orGRuBfgkuu8i7wL/V8Yuw9a9yLth6zR4UoMk6cvY
BuwXg3uzlxPY+Bn4dmgpe+mGb04hey1atwD9EX4kVMf8xux5FPwcqA+2q1nv
t+hXgo8zNyAfBj8Aehh7U5jTH34fe1qO7kSoDv0vwO/Az4deAHeBylnrHGzu
k++QT2Nvj2BzfyFJLgHv4ny7ofbwFdichP0q2QT/GDwBPAjcEH4UZ97D+UrY
z7ngi6Fe8DvQWYP9O5izAnlb1pgM35ux55A1Q+cCdJ8B1yLbwth88B50ngAv
gQ7B74em6yzgD+AXor8Afif7u1h7hWrA74OfQrY+Otbkw1fhSxl7ANv/Racx
+AGoE/KxyO+HPxBs+1r8cS26U8HtwVOYcxR/NGBsIHgV+G70fwpVw1ei3zrz
HrXX0ax/BLwI/WdK7UP5cqjuhPMvgTqn9pl8tx4b98BPZ2w1/CXsqUz+gPph
exk6ryK7VP5HVs1+52J/VvRcxcR85I9H++5J9MvhfwW9lHfMNUF/LXv4Zanf
2D3ovx8cG/LxXsmiz3YG/V7wFzL2Vol9uht+Rvz/22H9C7DXCBtzpY+8qe4a
/Pu8x/rK34pJ7I8HXwc/BRsri+zTO+H7ob8MWUvO1Dw6ZhW7GpsMP1vvC/2f
oz8H/ivuoAr588gnIm/DHp4G9yOGN4Jfj+bPgVbCPwgtK/IdPwR/U+q5ZeBm
4Pugv4CXo/Mhsumak/ebnQb/m+jco5wxE34cdBjZ+eAq+I7MWVzkGJ4AXsMe
72avM3k/e9nrbMb+nHfMKnb7oN8L+feg4Yrt6FyyAPkqZH9nzmT0OytZcrYP
CvZdB/AZ5E9GvyX5tEbxEPw2x7CnMvTz0bEiG9fDd4Wmwn/Jeo3kW2h53ndQ
wfxjzF+HbB7L7Sg4xhXrXVkvzXzHumvZuEH+Cr6Lxsg/RPcUeDN4E/hK5b7g
t7cHujw4Jyo3Sqcefg02WnA3uxn7NXzKnA3MLSAfhHwm660D1zO/e7AN2apj
bASyk6y5DzwCXA6ugq5jf78Dj4e/Af3TnO0baAC2P0G/VQPHsGJ5PBTAm8ET
4JvovZb4TehtzMPGW9hqCR1l/qro2qA7P1VwjVGt2Yq8Bv5xaHvOe9LeVGNU
azT2hHyXWbcpNo4X7CP56lPipyO2vw72vWrM8eCap9pXCR1i7t+ic9ObzH8v
OqYV26oxqjVtM/tCNU+1r1O07TPQw5nvXHevGF+iXMnYczn7oBb+o+Bacit7
zpC/GL1X5SjlqnWMLS12jq1TrgKfQPZv6E5wc2y0x9Z29tsGWxcF89ug1vBP
ofNu3jlNuU01VbV1MHSAuVeDP4ZfiY0rg2NcsR6gA/jrLLhjzjXmEHgYOuey
l/OgK5ANwUYNe3kTnUcyx5Riqy/0KPKTwbl8C/gNcA/FR4ljTrGnmFHsaKxn
cE1TbVPO+BHy7lATZGXQHzLHpGJTPUIe2fV6w+j/h7Gu8Elq/mbkrdC/NzgW
/8VYNfyzqml51+A28JenzgU6k872re4w55xRjby3xkpcc1R7egXflcZugl+K
zl50d2LvtM5W8FqyIVvt2cNY+BbQZ+B24FE5v8Ei8M3MjznnsA6qxchXNPCZ
n4dfnbq2yYZsKScoN2jNJdE+kW+aM3ZY8QMuB28EP5g5ByoX6o01DfaJfKOe
6VtkHxd8d3pzenvKecp96jGOILsIPBycsd+vwS9E8+oJ1Rtehc0jRY4hxdKs
1LE1CNrP3G0F92Kp3mjBNVm1eRp4MzjHnMfAY/HvIvj7Ur+9odBBdB/KfBbF
mGLtH8G5aBbrfwU/JnPuVs8zOnPNVO08BfXU20NnSKljZEXqmFZsq4cdhWxS
cC/UhLGDyHowZwZn3w69nHrP2rt63LHBOVe5Vz3tOPAyvdFi+2h5tA3Z0pvR
22nH2OJiv8Gn4W+L7iXVM46I7jHUa6hHmIb+pwX3ghVQQ87TLri3Uo79ouAY
Uiwphhcr9sBHi51jDxfsc/n+uxqY2ofypXrK2eq9VANLXdNV29Vjqtf8iXyI
fLvyC/w41jjG3Jeic43mrFa/hvzGYuekppljXrGvnvyset3Uva1i8HPw4uC7
nY69SvTnpF5La3wE7qb3hf2z0I3wxwrurRRTR9B9DyrJOUYUK52hkeCtzO8E
n8/sK/0h9Jc4lFqmHkW9ym3oNCt1DFQiS6P/Orrj7vCDg2vf/apXwXeuu1fP
rN75B5lru3zcAn5/6tiqYOxL7H+eulapx1SvOVU1odh73qr7S21bZxyI/dbg
GUWusf2De2D1wup5Gqb+c+jvoT+B/gbq6dTb6U9RUP2I/rvIRq1659S9rHLI
LdE+lq9VE4bC3xr9N1GPNhx+W/TfQH++a1L3XOq9ZrPng/A91ZMWuUcfj25F
5reqM3WBvyxzbCgGFAtDUt9dPXge53kxde+rmK9hfsvgWr8JahFck1Sb9MfQ
X6NRZl/uQr+g/QbXFvX06u3fiJYpZ26Cvya4ligGOgT/2fR30xusT/3n1N9T
PdVruo/oWqSaOTD1HrQXxcQuZJ+kzp3qCdUbfj+6t9SfsAf4h6n/uvLJGNWP
1LlHf7qDwX8m/Z3Uc3/Xe6f2pf4Mc/VXiO519ee6A35ndC+hHmBi5p5bvbd6
wv6pewb1Dvpj6K/xPy0JFnY=
         "]]}]}, 
     {RGBColor[0.41367557542647587`, 0.4490872629294324, 0.575890396554404], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHuwllUVxj/O+c73Hc77vp8yNM4YaqNyMRXwQn+golzENBxNRDAxLxiW
o6mpFAhdtLIwFU0lLommWHZqxNSmCzROeSEIkYsWBzQgIR1RG5suwDHr+fk8
Dv2xv72+vddee+2113rW2u+h066ZeHVbrVbrp5929efWa7V71Zbpz7qqVnum
o1Y7VP1bXbXaAo1fUtZqG/V/XqNWW5/+DrUrxL9X/TXqr5Kc68XXLf7jW7Xa
H0uPDxL/I8yrfVI8Y5q12uim/89WP0dtqvSYrj3b1ZZqvK41Q9SvLWq1w0R/
XvTh6sc2vZ7/50bfWWo3qk1nL8mfkDHoQVr/S/HdJF3u07r3wjdU9NFqJ7Vb
xxOj/83S4wTkiV6k+Uekz2S1JU2vv1xzX1C7Tu1b4lmtuQfq/t8jO1yf+a3i
nR09nhfPxLrnFoinprn+7db9xug5pcPrkLlZul4renBlPa+NPnvFs0ft5Dbb
DBq7ndfwHOMrRL+htqdPrXag9hyg8ec0/v26xzdJVktj+6l1iueydtNr2nzP
h4h+W/TS0mPjZb+B4hnY9N39RePj0FG6NcXbV22V+Hob9oMpbd5nV3R4sPR+
Pyg93xtf+Zv4Co2vVr8zcl4Q/xL1x0mP0eLpUOuMfOab4eHcu3PeDsnrI93q
6je024eWxicZR5/xlfvZ0mFu3Wtv0RneKq3je/LxqRq7Wu3vWvt2aXplYfu1
xYYPlPbP+0vrgm7a4n179RexVrLmNU3DP0t7fUY8CyRzpvo+4a/HVvjb8M5a
bZjaXk30Ff/I3PVXtP74+OSa0vQNhWUi7zi1TQ37zE3ivbl0P1g8GzU2X22H
1hb6f4HGT6usy2nRBz94UO0A8exUf1voH3Nv2E9nua/02YdX/g9/o4/1XSj6
9DbrsSD0VPHdon6o9uyqO7Y4x7iG77oLm9W9hnNxD9wH9zi9tI/ukYwLRM8T
vUj0SaJvEP2M+qPwZ+K1zfgxFJuIHqW5GchRv7LN94Ceq6Tnow3remzdNkSf
J8V3rPb+ufrOTuuMrQa1jC/z1M/V3G1aM7m0H66K3FM0f3LT9u1u2F63i35M
/SK1x/DBuv3oHbUz241HxPgO9a/mfz/xPJz4/1VlvlsLx/qY+MCVdY+z9lOx
CbbZ0HTcdkufe6XrBP0/omV/IG6+XTPuLMvaFYl31gzQXtPUHwTGd9mfRpf2
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
         "]], PolygonBox[CompressedData["
1:eJwllltsVlUQhXf7/y2lZ58TCr4gUAMUS0AQNCYWULBUfACFlos3vDVWY4zU
CDXBKoqNJGC1yi1Q5BIflFSjCBiNxBi5gy1CaxQxUUjkIlQfjKjVBP1W1sMk
s/asPWf27NkzZ3h9Y92iwhDCaiSPzE9DKCkO4T4W56G/nIRwf1EIDRjHxhB2
sdaEfTtry7BdiyyHew/4JPYXE+viiNsCvp29EelGv1waQgH2QmQz/GNwWnMh
1CNrsPchN8Ddgv0Q3IlZCFv7hfAY9rXY9rCnCttYOH+Au8F1Rd6jvSfAk3Je
60H/DlmAvhL7XPTByGz0K3COwF8KHoc+A85h9D7ieSvvmP5Gf4i1Q5wvh30b
ehd7GsE14APgXmIcDL8c/I640b4eRX5G3wB/Mb46S0JYz1kCcoDcdLP2C/aP
kYlwB4F3or8L/z3sHcg5vr8JvAl9I3IS3IvsQN8B/0H4F8EfgsuI4TSxrII/
C9uT4D2ygdeDe5AR8Bcrv+gl2L8Cd8OZTlht+OhBH479A/QjxLuaWJ8HT4bf
iHwLf0v03Q1B7sTWLil2TJfYP4Y9j3BfrfhfGZ1z5f5TZJRqBbkNX08jp7AN
Sn3X08At4IeVs7xzrtx3ILUFzsl5uNVIH/x/kOnoc5CiYses2I9Fn+1G/DWB
vwH3z7smnlMtIp34ztj/Nral4KqcOcfBPYlzWY8cQB+HrIB/BlnIt2pSf3s+
37tb30Mqc64J1caJ1Ll8E1kPXpI4lon468L/8uhcbMbHQLh/IZ/D7eOMf6Lv
hf9Fsdcug0ciT7G/lj0V6ENTv5WZ4GHoA5Ap4FJwGXpj4tpsAt/Ct0aAi4ud
I+WqDDwy7zegt3CBtfex7eW+W7m7Aci/OhvnKYHbBK6BexPfeBY8Pfosylk1
+oToWpPPS9h/pAZLC1wDqoWPUsemGmrGvjt1L1ANvKT7SZ2rT/j+MvjTdCd5
1+jU6JpX7avGVGsdyD641fgfBf86vTf4v8M/qLfC2tR+rvl29CLkFHsb2FOF
vjC69sbDKQefJd432N+G3Bsdg2LRm/ueb3+WOtd6UysT9wz1Dr3Z3fDXZs7N
TPytUzyp36Z6lnqXvqlvK8Yy+M+opvPuYepluxL3BsWoWFdEv52MtZvBM1L3
4m2s3YH+eLR+lP3nif0u1p4otM/Z6APVY/p57Sr17ui3qzvV3Z5nrTnnOzqX
uAepFx3EXoi9XDVb6J6o3liQ2aaaVG1eKXWtXgKXZhbp6pm9Ok90L1MMikUz
QrOiHXx95hpTremOKtBHZ87dUdZ2wm3LfLeq+dczn1FnrcP/EHyfAe8vcs9T
7+tkTwXcOXzyBLavU88KcY6jX2RtnXo/MjQ6p8qtesor4MnRs0Q+JkXPOM06
zSzNrjWZe+FG7GnmnqDeME89P7oHqhdqBvyUuCeoN/RH5vL9w7oDzVLwqtQz
QrNCPe5XYrs6+m2rBlWLOqPO2gXnAnhB4r3qeep9EzLnUjPtGvRh0bHojDpr
c/Tb1Zuvhb8fvCTvO92HnsNfS4nf9IDonCl3r+IvB//W6N6hmfAltsLUNvmY
Et2j1as18ysT35nuTm/yNeIZmzrXqrEx6O2p35Z65Eb0rdGztAE5q3nJ/kVF
/sf4QfebuNeqR59GH504l/onqUu9R3s1Q/8Dj06dK83YytQzV7NXPWR/qe9M
d6czz8r85vX21TNfSNwz1DsUw2/RM1ezVz1xO7YHUs9OzYDx4P8BWNEqvg==

         "]]}]}, 
     {RGBColor[0.6111259590441264, 0.518478771549054, 0.45981732759067334`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
mB1uOF+rgpf+A2TaBGQ=
         "]], PolygonBox[CompressedData["
1:eJwtlduLllUUxvd8p5HZe38RakY5RjgWpPSNFEEmqdOF2Wl09CY6EEqgzKHU
jNEZcyw0J9KbLowOGliZqU2WYc5AiCmedczAEMQ/IL2qZkbo9Ht4vFiw1rue
tfdaaz9rvfcufa2tqxBCWIOUkIsxhPV8WFgOYTiFUMO+sxLCJOTlHMIIdg3g
dvw/N4SwEcycYgh9xEzDN4x0oz+F/wy+Mex2zn0G+xz2G9H608hZ7B3INfBX
sGucvzo6tps75uDr5ttx/HO5fx36Q9UQ9taHsAf/avz/kkMH+E7kBvbabGz7
uBCu4qsDf5L8VuAvoC+pupaJ5LQYvUTMbM56E/xN8JOJHwR7GLkb/XOkveKa
VXuJmF+wl5PTCLF3IPV1jmkE+576h78HOYx9AX8rvi3Et6FfTu5VjRru4ax9
YF4H24x/lNhd2DOKvvML9B/0BsQvI+Yg+uns3Pvxn0H/h5wbif0JewQ7Is3E
d2F/jb4XmVn0HfvRX+GOFys+8zv1F/sR/NPJp1G1qYecvwj/JfRmJBVd01D2
G+mtdlPzp/jOY7+P7yvky+gaVMvHYI6T257sXOr5dgHf2mhu9WDPI74R+1v0
J8Qn7C3g2yrmnLh3nm/Pls0pcWsyMgB+E/IcvvHgh0rO+QT3LeDbRux3iBlD
/141lF2zau/FPoj/I77dlp2DculFWpLfTG/Xi/SD70TmgZ2LHMXfiTRxVx/4
LvT5ybrufBJ9Ofi76NcD2IPYC5HN6B3qD2c/TI8H6t3zt/D9iiwue+Y0e5PA
7Cr7jtPUU8CeBrbEGUX0R8GvEveRWck5KbdlnN9B/MXkt9OZ66JnTLOmHq6J
5qC4qB5Mxd6dnZs4J+6J8+K+3vQD9Us9qngGNYu3R3NRnPgd/Y/oWtUj9Wob
mBfAP4g9yl3nsrm6APxZ8Y9v28H3wJ8b1LcTe2rB3z5D/zC7llbqH8Y/mP0W
mjHN2rvYi7BHidmEfiyZO+rRbPQBvq2smPPifsreVZoJzYY4I+7oTfQ2rbds
cVBcvAnmCPGnwL+qs5O5oR2mXaYdo12jmdPsCSOsdtB1ca3q2X6cb7Wqd4p2
i3rYk81JcVM92oo9mj272lF/Zc+QZkk5jClfpFgxhydE16zaNSP96E16o4I5
JW5pJ2o3KqZVuzB5l75E/scaPIOaRfXoG/yPJXOpBf+f0TtTu1M93pw9w5rl
Q2A2JL+p3lY7ULvweoPfUjv8GvGh6l2rN/2P+A3RvRgk/jdih8D/rd5pR2Af
afBba6brwPcl36Wa1qO/rZksecbvF5+jZ6GFO7rQn0eayt7hZbD3Rd+lGMUe
yuaeZupH9FXJteofon/JJ8m56AyddSK5Vwf4djJ5J2o3aofn7Dt1t2ZQszgl
GisOiUvjo/8N2gErsf8HVkjuEw==
         "]]}]}, 
     {RGBColor[0.8085763426617768, 0.5878702801686755, 0.34374425862694274`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNl12IVlUUho8z3/eNfufsCYyQsKjG7rSiCIoURRDUQXRQu9BMy3QcLbUm
UPOnQjFHHSVlNK0pK52xsh8INSsonYjKDCNQUVBypi7qLiId66Lex3eFXmz2
Onuvvdba6+dd+9wxd+nUJTVZlt07IMtqNTfnWXaziD80n69qTevPpSwbUc6y
hlKWzRXzDH2v1zxCPMfFs097Q7R2Rft/a9TozFrN72iMlcwtdVnWrnFMZx6Q
7FOVLFslekPJdIt4hml/v77vyyznH40e8SyX7GUaYsvOlr3eJfmzaq0Lnjmi
G0WXtP5bbjt/11w7KMseH5hle7TfXuP5knheKyzvc9nezf00evU9SWcuiG9N
sk50l3TmF31PkswhOjdZa/s1Foq/faB1ILdW+5u0Pkx0W635mzSfl7z+ku+O
7VfC/lEV62D9csk8rF+RTSc0l6TroPb/Cn+Oq5d8yftVtmyWrwZrHK2xvdDc
4zbZ/7H4V+rsuNz7XYV9fDp8jk70cX98s0lEZ61lE1P8sEI6xmh9teZt4t+u
8Ujme3aGDydL7rPiv0V6vhVfm/hfFj1ftszTmCKeNeI5JF0vav5QPMvFf1I8
s5PjcY/os5LXUGOZzXU+z1nuPrLi+z+q8x2av9G5E9xf6z8k+468In7fJ9/l
uOax4n1McnONNZLTVTLdG7Z1RryI1eIa3497Lgv/EBt89K/0tun7lRQ+qjjX
iBU86B+YfP5tze9p7BSda96huVX7szLrwVeTRW8mTyJXkb0h+C5L11rRW5Nj
SG1QF+jFZvxD3pF/7C0mz7X3p+YZufO0UzJaxLugzjrmhT/Jw/GRt5xFBvkA
zXwmcuPnwn7blttf0NjZqv1dobu54ruRD9wVmjtOKDvW1MW0Ou8R70Nl1yn1
Sp4yk6vYNyfkHxa9O2rqTOjCnp+q1tOj+YZk7FgtG7+qWucl2dmv78Fan1gY
Q3YFjuBLaPZurbfMFbn90B26TlYdky+r9hm+xqYTVePQF1Xn5BNl1/SPVefN
ruRaBo+ob2I6u+w7DUjGgaPiHV62TciamVxj1PHIZHkPJdcDfnpX9Dmtbax1
DS6tOCfZ2xj1yXp/1TXxamH7kL1UdF8y3z7Ju0s6dkvv3fXOEWwmz58pjMk3
iqcxaoM4E7fDEbv7603fKZ5LkZMlrb0gepH2v646n84GDmzPnSfkzuXcPO/L
lumF/fJwYdwAa/BvT2GbyN+huXN/j/gXhp+p/TeT86xT86KKa4T6ASfOhh+Y
zwU9STLXSdenhXOC3NinsxcLY0FRuCeMDRxgdEUvA/O6A/9nVhwzfMpMz4OH
HBoeNL7AJ9QrudwT58EDcAHcANfAt7ZkHNscWN0fOQPOT6t3/5iu+aaoO3xJ
nlID1Br9hj4ySnKWFLZ5ceE4c3fiQI4PizxfrHMTy65FcB+d53PHF2wjNuQp
WA2edpSNNS1Rd6dDb2f4/41kLKOWC81TKr4XcX89uTapUTCGOiGndwRGtEZf
2hw1j96OwL7263pyr+TsFf/F5PhDI+epwDfyZUvy/aj1xogfuLFR603iX695
dMX5QS/oyu2jvuhj7NFTz0Xe4jfqAxwAD95K9s/tuXFocuBDX517xoIYvYER
s3PnSntybwWX8CE5DP52BPb2Ri/jzpwHW8hlcpoc/SC5zg9onloY805qLhfG
c3B9WO519ncm+5W6WR9338DdJXNM2TV+tPD3juQ3UWP4alD0KfoVNvZdd6e+
sLM7uc6aQgZ9C3ykJ26N9xtvOWjs60jeB0e7olb3Jt+/JXoQvFvqrvVqaGJB
rp2KHkQcyF3ylnMLw56+8Cc0ubEwfEtPoa54F2XJfZReDV7iT/IcnHuw7Pdn
Sq4r+sCCeN8eKSyzOeSD52A59cx7FmzEd/Mjr5uif/Heoq6eL4yT4OW86LGX
4t2Cff+/Tw+FncQGvdjzWWHbWnLbwTrvbt47nEc+NQ3mkPfkb3v4DfzlfmAt
+c4eb3RqfEK8YabWuQfTO6hdaOpyb8Rov+YJhfFsvOaXkmXw3kcPMqkj5FPz
3Ot4YWxpze2nY1FryEUfWECsl8Wb+enC/wCNhTHgYPla7++Jsw3x/hob74eJ
Yf/w3LjMf8bVXh7/Bd2BbdTm/qhd6KH1pr8rbG9T4NS2sA0/gKMbI47UxcqK
43skmf4kOV5X4p8CGVPCt3yfD5tXBqbwRj5WuO6ezI3r/ZFDUwKLOLsqOW68
67dE3fANzrQG3hL/dfGvdCH+QSaFDy7UXPtHaYj3OfGcGjGlXsGUq3UadyY/
WGuL9aZ4q/Nmp6ZHB1Y0RD8kD9aFn7EB2dvijUd/od8RhwOBVx/FG7wx3nCt
YQOYRu6MCb/9B6L91MY=
         "]], PolygonBox[CompressedData["
1:eJwtlNtPD2AYx9/6/X5Rv/d1kfPYEHfFhRsm09psKc0cslkosmFRKZvSAcuo
FMOScj50Yg7N5tRmwgUl4x/AcrjgymFc+3z3uHi27/M+h/d5v8/zvHNKKtaW
JzrnNiBR5GTcueYk54pizn30zg0E56rQu9AngHdhzwIvQ4awF0xwrm08QpIi
7N3YWyLO5ZPsC3onEgGncbYb205kMbH9nFUSX4yegZ6ODKDnIY3YDiP54Crs
udjKqKE/WE2qrRV7AXga9rJEq+kZ+g+kGoy7Ow/+SsyxiNXUg283+iZspTj0
gEdkB2/lDYMpzi0NVnsz/pngYaQ4Yj6vwRnkOJJoOQvRbyGl5KvAfhu83ltt
0QTnJoFfctYeNU5fgb8Tnxa1N+vtw9wZSTYO18Glx6cjZjW+wLbyPx99SCr+
59D/gDPJVx2ME3HTS0wl9l9ItjOOB/G9G6y2amq+Az6BNGJLpf7j4N9x641i
FLuAGrrGOZeDzwzwbM72JVoPRsi3X/3kbVnkrAVPQfKIr0V/pLvwWeis5j3g
z8i2mHGwGbwkGLfX8f8EzvVWSwl3rAA/4c0N+HfrPnAtZ/eIbUdPCcapuN1C
zGRwDTJX/cGegH0oxbBm7h34gvwjNhOajTVIU9RyzuJtz/HZSL2nsScTf1b1
gauopwMcxX80wXLEwE/xX+XMx2GfR44H5LqPNHjrgXohDufD31iwt4oDcaEZ
16wXasfwrQ/Gpe6oAx/ylkszdRB8LVht6sFVcF+w2d2L3gueGLddEt+alffo
Q9g+SMBN+KxOsp4d1ds4y8O3VXeiP/a2a9N53w5sU4Nxr56qtzPjdpc4Ftf1
yCJwnc6wXQ7G1XbyXdG+eJsdcSyuT8WtV9noY+gPg82KalAtP+N2t3ZYu1yD
dMbsz9Hf89bbXToL6A3B3qYdTMf3TLC/SD1pD7Yj2hXN+F9ivbe7tXPfsOV4
m7Ue9HLwpWC1awYuape82TSDmsW2YL3STI+ivwnGnf4E/Q3Nwf4+cdwCvhFs
17TDN4P9mfo7NSMHvP0x+mu089p97bB2WT1bTn3/AMX9sMM=
         "]]}]}, 
     {RGBColor[0.9169371767219533, 0.6623429418048832, 0.34250524783805514`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
ipUxb0FsrySd068m9SvXsQf/BdoAnYo=
         "]], PolygonBox[CompressedData["
1:eJwtlElI11EQx1/6d8nf74kRYWqRElSa2iUzsiDINrNLtNliaYulkRpEEhQE
VgQdSttt1bRTQnSoiDKj3RbompqmHapDGBUVtHy+TIeB78x35r15b5aM8uol
26Occ+uQCHI0cG59DDrSFzo3DZkAkRztXB74JpIHl49U4HsKvWWYc0P4nAbP
CQynwregV6GnE5uJrRO9FRkL9x29EK4avQ28D9vdBOdqsE3Cfy56k3fuGnxO
jOXwGa4o0bm98c6VoGfAPcBWBV+JfEL/GBpugt8IzpZ/nHNlPDIJ31vh/9zR
i8Ed3HkIPQr/V+Bm7twa69xkcogH9xAzOmI5K/cj6KVwB/F5At9NzHW4BfiM
hP+NHECvRZ8e2pv0tt/EPAcvJyYkNhHJCixH5XobvRM9BX51tJ2ZCn5JzGJn
Z/7B9w6yjdwL9F/gYm9vu8wZi8GFvLeO/xnBeavQd+MzhfN24jOO809iK4fL
wPYXrgFbGWctJH4Uehp6TsR8TnjLSbk1I33e3qi3riWmBzyArRXuCtKK7wvy
nU2+9fC/4NOx5UbsTy/he1z5xlpP3FO94JPA44n5AL5PfCOxscS8TrAclatq
5LzZxFVwxjn0EiQJPF81U+8F1mvT8N8MTkVqo6ynvoHPhNZ7XfTsjwSruWqv
nI5x1mFvtVJOpfjvUP7R9oZnxD6C3x9rNVKt2vUf4ARkDb6LkHnwHlkBPwMZ
IpcvSAE4O7DaKGflviy0v1dPLQXfQKbGWI2T8d2F3g5/BFsc/u+9/bVqrFr3
hlYL5aBcnoZW64n0fFqizbBmWTVWrVd66z3NkGapK7DZVs1Uu0ZvvaWeawB3
ED8rxv5Qf5mbaGfrT3LAmfAbyG8MMgB/lpgsuC3ccRGcD18TsTdtgn8U2mzX
q19DmxHNiu6oVO0C+zvNiGalPbBZ1x26qyi02dXOqAEnI1+pZRv+g/jP9PbX
solTD6gXtLO0u6pCmxXtFO0W5aBc9Mcpge0s7a5k9Dfo5731mt6ktxVja423
ndAb2I7QrlDPDgc/9rYb6rCt5azBwP5GO0q7qt8bp554p10QWu9r5/aDL3j7
O82gZvGtt9lTzz0EXw2t17TTtNsuB/Z2zaBmcY+3WVCOyrU7sLeoJ9WbP0Ob
TdVEtfkH+9m4Sw==
         "]]}]}, 
     {RGBColor[0.948478771549054, 0.7411969288726351, 0.44028419180206746`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFlluIVlUYhvd/HGf22r+RjKmUYqDjpF6YNBYEgR0uckwNqiEMzBOkoEFq
dwYi40WknaDCbsouHMJRhzJCnTLNmoMjXs90sLrIMfIAER3M3sf3E+H/WWuv
/Z2/93vXnrl685ObylmWVUtZVtF6qpFlzzVn2UmtR/WiuynLvi153RX7piLL
2iX8csqyRXWfd2i9UM2yX6vWm5xn2QatW5J1Odsm3RXaL9f/tZp1eMf5VMm/
KJmlkv9AvsuK4cOG5bDTqdjaZHuy/G7Uc0n7GbGfHutDkpml84l6Xq/nedKf
I/0DsvmKfL0vX9u1HtTZs5I5JpmBuuVXlf1ur2SulmwTH9i9rPWS/v3aj5et
R8zdivkxyX1aOK7rFcdwJHk/mNsefq/pfJ5s7Kk5F872RjxPxXql5Lguh6+O
iAfdvxNNyrIzLV6nRI7Ul/q0ylevZA/oPyq9NQ3rjbY45t+qjnusbjlkHpWN
w4qnJL9tNT+zpz4XJX89c332S35B5pjG9P+I3Cv2Rcz/JddqRL4WaN+qd8/n
1uvRf1/V+dIDYiJXaoxuj+TLku+S/Mfaz5bvq1p/qjlmYt9dMw6o2ynJnZf8
L1pnNxurj+j5rorrsEQyS3LHOZY7D+wMyNedgRPsIItN5EfqxglxUo8dep6U
OYbx0AXX44HtZwrbxw/5kSd1ao2egIGFNfdpfWAabJ/WOlW6fXp3unCfD9Vc
5yHZGG5ybTfkxvb9yXUa1Pn5zDEwY/rd6NEDdedH77q0vzvzGe/o9Ry9e7Bm
LIMxek+tqDt2sVmbYN/4RWco5pG4DkZsrIdiZr5W3E/o/Q9aVyrOdp33JusN
hi71Jg7s4Qcccw5XdAQG4Aye4RNq3hc4fKnmHMHEePAJ9ac2+MDmpphxMNkd
+ZALmMYWvQMj31T8vq9hrAw2PE8dgb/+5Poc17pTdqsTXAdm/XLgn5w4xz7Y
mRwzfjHZB3h8u+I9vqj59JCBA1pjD4bX1Y2DPcEXq3PjY0rIwIvwIzLgE7x2
Zrc4gt6NxZ6ctybj/gXZWZRs5y+tq+qex5u8OCPswNnLw/7ThXNuz43/ZU2e
PWYCGeYC/KF7LfoLVqjHYMgzL9SmFnW7Lfccwbt7i8hXZ2ty50veWwr3fa1k
9uh8p/anCnNJb+T1TjLG9yfbJ07qvy53juRKjORDnNjYEXx2NDgavC2LWMnr
Um68HJbu5y3GyFeF6zka815q9jN7cMQ5WCenct35Li2879Q6LTenfyGbZ3Q2
HDMI54Lx45LZl8ybD+e2XQq+YmaHI2b63BZ3zblK4ClzruAJbPTG/F4JPgC/
5DgeHHk0uHln8HNP5E7Mf0ScxFtOnrk/W4zNWcFRDZ0v1r5I1huKutF/dDvj
bl0cs8eMw48DEcMNriy7ZvSSumEDW9yt3OfkTm1X1lwvasXdyR26K3c92FOT
0dx1o37bAjNg573k+Xw3mUO6Y553xOyje3uyHe7nNwvPw1uFeQq++l7r3GZz
AjHdG3fWgugj8aHPfbU9OJPYzkR85L8p6vZ4wz3rgs9z9/Ff2fk9d70WJs/X
2cj3jtw9/SzZz9moM1gdiX6Bt5GQn5TMi2Pq1+aq/YLjY4Xj+7Iwt6yIbyry
awsuHQsfr0rm5+Cp9uT4ua+wA6cPB68OBk9+khsf4GSrdF8vnBf5fRfxENfa
ZI4dT+Y+9vT9bNSQ+I8U3o/FPX8h7lDy4I6khtwV4Im77L7kPDu0/ljY5onc
31Lw6Rs6u5KMqUbk1B3zcvPbaCj39wT+Ksk9nh1zd0/uGbnJf+dCl7i4e+Ad
8NsduUyL+5p7m7xGol/zI4aJufmvGtxIH+gHHDsz2T4Y6YpvDGoCltpiz3z0
xPcD34a74zsHnqI/G5N71B9zTf/IuTf3ncw9xXvsDNRv1YV1ftScetPL/sDM
sciJeSFH6kud6ec/yXy0TevJwnN1ovD8zo15AS/4JJ7/AYDZl80=
         "]], PolygonBox[CompressedData["
1:eJwlkzloVFEUhs+8NzNi3r0TURIXXEhhFrUxcWlsXCtNYWPACDFLEyUJSGIp
SMRCMG6NWKlNxKUIISKYcUmMQkCwNm5oIQoOESxcon6Hv/h5/7n/2e6559V1
9h/sS8xsJ8iDY8FsM9/RRWbNJbMn0ex00WwYjGRmA6AHfr5gVojycd+bBB8n
dpKzBeJP4VOGT3K2A99G9OXEPsRem+qsDN/NWZkGKuhXsR8Rswf9yGKzaXJ3
g+1F5eyCT5Wk1YMx+E9iVqRq/hd8G+jP6w4VclewT1ArwecWfAvoy8tnK7wT
n1q0BuwL1G4Dr7CH6WkD2j1wJdVZHf7d2C0F5fBcaVDuFzm+8AWwDjuH/jdo
Rj6rEVCEz4AxeCv+z+DnQDt2PbiN//cgPsudU+53lnr7UvlM4FuN3UFv1Zx9
zjRzn32C/wH0iL0Lez34hn4U1OD7D0ygzVXRW049rMJ/PNMsN4Jx6s1mmqXf
0e96MSrWZ9SFPUSO1fBeeqjN1IP34jVL/n5gU14z6EV7HLUL/qb+tm/Rmwrq
4Q28JlOuNeiDQT14Lwm4XtLMfHae8we+c45EO/Mafj9ot3wHerAPgzbqNRBz
B+1GSbmWca0H3L0laDY+k2b4YNTb+Y4Nwd9Fvc1z9Pfwy6CjqJ313f0SpH0A
X+FnqLc31Rstxd4f9RaN1F+CNsPZQKJ/5hra3SDNe/ReT/o8UvmszNSz9+4z
aseejvr3vIbX+pSptu/kR/ho0H/rO+673pRpd31Gh4h9WaVd9Dtcwn4aNQv/
p6eidsx3zXdqnvg/Qf+Cv/Fv+H/08n6V
         "]]}]}, 
     {RGBColor[0.9800203663761548, 0.8200509159403868, 0.5380631357660796], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], PolygonBox[CompressedData["
1:eJwtk0lIlWEUho93Qv3+/xekol2ZbcuyTRREAw3QLqKuiyYtLSiD8lpBkJE2
SVjQsAjkXtsU5ibyWqChKRW2r0UjBNmiogla1KLn5bQ4cIb3O8P7nVPXfHhL
e8rMNiEZpDsyG0M5gIxWm6WxV6LXZ83ywWw99insfqQVfVZsViRWQmajl8Bs
IzZRaXYxMbsK5mmF2Xt819GvIM8yXkO19oK5CfYhTXTw/iXvh9JmDfTyAr0X
3/acWRW+1+AXIW28nY8kxNcgI7wtEj8Se0/q7RKSJTaGr4v3uSqzV8wzgd0E
9gy+SfR66ndjj9PDBfSYN5bzmTRbBntryn2bY59Bswzjuxb9nznrnGyIvEf1
egJ8mdj5xHNrZs3+jXyrSLeT+GXiDZFzrRqL0Ufx5dPe8yP0s+CPo28EU0v8
cey97xZnzHOfeD/4IvNNU+t5tXPXRU9zwb7Dngf/bdgzqgV+Bfpd8hWwR4LH
WpGP2HuwG9EPEl+KPY29L+W+MvYy5BCxJdT4GpxTcas/bKH+VOy9iuM+4vnI
/0I9qJffSKHSdypF7Cj4mZT/4Vrw54JzdwwZJtYcnKsdSB92AVme8xzKNUnN
J9Q6jW8qcQ7EhXz3Es+hXOJQXI7HjhXH4vo2PSxgtg/0cwP9FpietO/wW+Kd
+IbQe8D8Qf+E7M/6jpbB/sA+mfUdHdQ+BOd2EOmInENxKc4atf/k3JVzTsWt
MMKqxpzgM2pWYVqwf+reyN8kDoLfoG5RPd8htjr4LorDisgxwi4k35fgN6Xb
Emed6H8jn0U7qF3sTfxWdQO6Bd2UbkszfQcbR/7Xdbq3yHdEuyIOHoCtCR7T
Teo238R+i+JwgNjn4L2sQ2qIDyS+u9rZEvqvyHdVM2rWfzA8mOA=
         "]]}]}, 
     {RGBColor[1., 0.9069982758504174, 0.6693717672195327], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], PolygonBox[CompressedData["
1:eJwlkDsvhGEUhIf9dld8l0IUGsX+gZW4NEKwCY1oJEIiUahEQVz+gcYlkSiU
wtqITonCP9CjYJUUdKg9k1NMct4zM+ecd2qrm/MbnZL6QQLGC2m9SxqqSNu5
9JtJcyXpqiz18d6H70E3VpUOqBtgF/0o5g60W2gG8Q6DRiot0jthwR/vAu1O
Hpw99n6hqTOvYMc39U8WtXd6d05vBf8Z82fxvoJz/BfgEi5Jg1sDdfTXoMat
77wn4FqgWQmPvZNp3GqNtdZY2wanWdzoWxfYWYZbonecxB/8lya9vVLMbDPv
LY9bnJmzm87C65tnqJ/R9+JfBrfUd+CmFDM/4KfSyNqZObvH7sjanie4EWa+
VCPzB7ijIrL3DYfUA1n83RprP7PY5R33+P8BGzg7Jw==
         "]]}]}}, {{}, {}, {}, {}, {}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{3087, 3052, 3053, 2909, 3315, 3316, 3317, 3352, 2763, 3030, 
         3031, 2998, 3304, 3000, 3302, 2999, 3303, 2783, 3160, 3159, 3598, 
         2821, 3174, 3141, 3142, 3349, 3348, 2829, 3403, 2820, 3118, 3119, 
         3637, 2748, 3204, 3217, 3720, 3721, 3619, 3723, 3722, 2977, 3550, 
         2979, 3548, 2978, 3549, 3645, 3442, 2881, 3441, 2882, 3443, 3650, 
         3073, 2880, 3239, 2879, 3221, 3222, 3220}]},
       "0.7`"],
      Annotation[#, 0.7, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{2921, 3189, 2837, 3188, 2838, 3190, 3323, 3324, 3056, 3472, 
         2914, 3471, 2915, 3473, 3018, 3254, 2913, 3121, 3122, 3123, 3054, 
         3085, 3086, 3048, 2831, 3117, 2830, 3313, 3587, 3314, 3243, 3467, 
         3292, 3510, 2951, 3509, 2950, 3090, 2949, 3524, 2959, 3521, 3523, 
         3522, 2745, 3746, 3745, 3764, 2996, 3786, 3762, 3779, 3780, 3519, 
         3520, 3516, 3518, 3517, 2779, 3683, 3684, 3444, 3446, 3445, 2807, 
         3074, 3075, 2904, 3241, 3311, 3240, 3223}]},
       "0.6`"],
      Annotation[#, 0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzz8vg1EYhvGnQzVRRGKQduv4ikn8222lgw5ImIQFweZ7sBCjVSUmi2ok
rUX4AkqbMDGYDCSV/t7hynXu59x5Tk5p86C6n4mIZZwORZxhIR9xwS/cxiJW
hyMSXuEJXuPySERJ70pO+J0/0MSX/Ikt3Mtd/Q5aeEABRbQHI8Z0XvGW7sKG
/iWvc40nvTPqvKRfwZ7ZlNkuX+Pb3SzPYDp9U37Ek91/8i/msG12w+Nc5zvc
4sTOYzzr/8s9zGNHr8FF/sGAThaHzufpP9xVUJCPOGfWB3HML7I=
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0Dsvw2EUwOFjo8pESDrQ2eUDYDRJF8JAohIDg0SxSCS+gQFBk8Y9/onR
yFKXxSUSid2lysBms/EYnvze9/S8TdPsZGFotiYi8vykIkrpiMWGiP76iMT5
SZ/JsWzeoaPaqWP/e40RH5q4V/VI37XF2z7tpYc3KlTNx7l2vmHV/ov7MCM0
0cy6+auuaUXTfDp/McGJe15XfMe9312mYDbHADnOmLZzqlP6TSuX7jN6oZve
b/Dg/Tnh/Gte1C0y9vZ0n2122eHR7hV1zrUcckC7/TvvF/TYfV67/EfdZLj1
2SBt5kuasvMHQi03YA==
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzzsvBGEUBuCzCY21KyGhoRB6jf+ASESWRqNQiMKu6FzWpXErqCV0bnHX
kRWJEMUuwh/wH4Rk0XmmePLOvHPmzDftY1O5Qioixrmti9ipj/hkl5F0RK2s
4c+z+UxEkRnmmOVDvyrXWGGDdbq8OyqHsxFDlM2VqOieKfPKSzJv9lre0EwL
FbN35H27QA+99PHLppktfpLz2V+Vjfb0yyY5LSdkSX7Jb/I8uJ+U2959t/+e
VPJP+lb9gBzkUHfEHgfsU/X80Xy96zQnHPOmv5CXnHLOWXI2/ZP5JfuWWaBT
1+28i66zZq6Sb+vadJlklz5Hh64oG3T/PkU7xQ==
         "]]},
       "0.3`"],
      Annotation[#, 0.3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0DkvRFEYgOEzo7MllkjEFgXKkagsia1Gwg8wkWhJDAUFQUWrtlTzAywF
0yFBLDFI6DQUgs4wCstzizfvt557zm0cmxyeiIUQ5pArDGG9OIRESQgbPFAU
wiPe1NPyd07yKLawiWf8mQ+lIbyI4xzDob2c+hc+8WP3Xf+XC/XfxOP41ssj
bf6K17iGa1GHKjMHvKK+z6uc4Vb1V3EZqsVnvMt72EZSvsPlvlUpHrQzhJRa
m9oUZ/Ch18kdaMeE/AJZ9ywwH0eX+jGOUKc3xPU8y6c4wVM0Y6eHu5HSP+fr
6F08E53L03zJee7nPvRiVn7NWb7juegOfIub6D/JT5xf4T7L8hb5EjfzAy9E
79Wb54T3taIB93ojaFJfjP6HmX+XCklH
         "]]},
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0ktLlVEUh/EdJoSmHKemB46XOh4v4CwHNtDMQSFqZZjWoEmNdFQOUtFK
QUmDMqvjKAkKJ5X1BRp0mXRTizQQFUyx6DP424OHZ6+1/2u973s4qSv9nX0H
Qgiv8Ck/hMmCELq4iZtxEhfUZznNnXwe55CvPsWtuHY4hKvYyQvhCO9yWv8Y
HsvNFobwhnO5AUUyd9Q1/IH/80f+zbe4mm/zEn7Y9daeEedV/VFe46N6vZy0
b0hvUZ1AEZbNvOabcV5mkH9ypV4PJ8wc0muJGXUHl6nbOcX33T9AAc4gRy8h
d935hnMJD/AMP0Qai+opXuBKvodpPFKX2VuOChTbs+39uvkisnpPcBBfZD/j
vX4/N/IJvJPf4jWZpfh9+I5ZmRUe9pxVnlP/4iz/5X+4bK6Wa1AvN+Puq/O3
+K3YtHuPN3g5PhtJM6XY0yvhavcZVMV3db+DP/H/4m5dJmPvhHMXxnFcPcYL
8T9h5nnM8wve5bvuKzCHLLb1M7Iv42/Fp/UuydWpe7iWe7mNN7GBZ3ItPM9P
sQ+f/F+E
         "]]},
       "0.1`"],
      Annotation[#, 0.1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV1FdsT1EcwPHLA1pFxPZAbSIRo9QeMSuh1N7UrNFasWeLSmwiSKzEpjUi
9iaqYj7Y3hCJiC0eqPI5D99+f+ucc3P+97ZGakZKepEoivr78ys2ihqXiqKm
aILkklH0Bp/VG8m/cHZcFDUsHUWrOZFboLGZ3/p3xX+4HdojX/7PmnizkZmO
ah1wRPyBh/IofmSuGldHPNIwCZut24I0TMZ9cw/xACfkWbwCNbEKK9HGnru5
NU8OzyF+4xki82+5g7wEzuhv462czXv5Me/hl3iB5fKdHMMdcRqdUNle83mt
XjwvxAI0ke/hpjyAD+OrM2uZPyQ+iIG4oP8n3BnGy7txJZ6ICeEOraluzW/O
lefgqpkSarfFxfmd3k3xE/V2OCC+hBu4jAK1OTwXvcIaeRkuxpO4O/fmIxjr
nprJR3MqxuCZ/f+qPec2YR3WyTfxKa7HJ7kbd0VJzMQM3ME9JOjncTmM8cyp
GIsc9bpqubyRj/FfZxaiALvCvYc9zb53fobadKSH39Nsul5frsp9eFrIkRJy
xKqV5RhO5h5cmZM4LbyzvJeb8yDej8FIlJfnljyEj+Kb89d6jnVYg/GeYRye
qOehi9pF88fMXgm/E2qrfdcbLh6BChiGoUjFSIxCxXAvGI0f5s/wWTTADmwP
e9r7u/N+hO8P3/AVxZyRb81n8SUzn/hyuFf1Ovipt4E3Yj0m6k/AC/XlfMHe
mbwMK5CFE2rHMR397dWZ+3EG7wvfFNbI54V3AEXF9e19XXwtvA+4pRarFoMP
znoavgXEhXcu/BaYjVkoop7k3HPintwDcWqvwzvANdR3cyav50W8OLzLaItX
9i8M3ytPtea82jSegrbqU+RTUSXsH/4f8Eezr8TX0cJcIlqinudtzgnhW8A1
/Z/cip/xRWuf89NwZ+Kl+KdXYL9WakuxBClqnThJ/z8HzLeJ
         "]]},
       "0.01`"],
      Annotation[#, 0.01, "Tooltip"]& ], {}, {}}}],
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659261530483962*^9, 3.659261602579603*^9, 
  3.659337255323112*^9, 3.659337297510097*^9, 3.6593373476075897`*^9, 
  3.659337412342636*^9, 3.659337457907804*^9, 3.6593376480236177`*^9, 
  3.659337736814308*^9, 3.659561502167408*^9, 3.659800219525783*^9, 
  3.660974461377479*^9, 3.660974669149186*^9, 3.660974847722517*^9, 
  3.660975351749699*^9, 3.660975470054802*^9, 3.66097555189079*^9, 
  3.660977049083165*^9, 3.6609775680547667`*^9, 3.66097766162398*^9, 
  3.6609778329457207`*^9, 3.6609779608181953`*^9, 3.6609791230298223`*^9, 
  3.661341555739296*^9, 3.661420639149843*^9, 3.661421822020193*^9, 
  3.6614228251204777`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dp", "=", 
  RowBox[{"DensityPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]DISPXY", "*", 
       RowBox[{"UnitStep", "[", "\[Rho]DISPXY", "]"}]}], "+", 
      RowBox[{
       RowBox[{"UnitStep", "[", 
        RowBox[{"x", "-", "1.75"}], "]"}], "*", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"y", "-", "0.75"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5072966684760914`*^9, 3.5072966707622223`*^9}, {
  3.507524649474677*^9, 3.5075246568951015`*^9}, {3.5075247135833435`*^9, 
  3.507524715334444*^9}, {3.507524751485512*^9, 3.507524801318362*^9}, {
  3.507524840147583*^9, 3.507524909941575*^9}, {3.5078036481788836`*^9, 
  3.5078036486459103`*^9}, {3.5078038009006186`*^9, 3.5078038356996093`*^9}, {
  3.5078039422717047`*^9, 3.5078040624615793`*^9}, {3.5091120931286325`*^9, 
  3.5091120949007344`*^9}, {3.5091574690314035`*^9, 3.509157473907682*^9}, {
  3.509162329692417*^9, 3.5091623497335634`*^9}, {3.5091623983443437`*^9, 
  3.509162435803486*^9}, {3.509162546177799*^9, 3.509162585057023*^9}, {
  3.5091626385320816`*^9, 3.509162640416189*^9}, {3.509163377049322*^9, 
  3.509163380923544*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5685641876449314`\\\", \\\",\\\", \\\"1.1428599899745884`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.659261531078279*^9, 3.659261603041902*^9, 
  3.659337255565115*^9, 3.659337298121063*^9, 3.6593373480814867`*^9, 
  3.659337412843136*^9, 3.659337458451532*^9, 3.659337648518368*^9, 
  3.659337737258794*^9, 3.659561503181962*^9, 3.659800220322097*^9, 
  3.660974465508617*^9, 3.6609746692306643`*^9, 3.6609748481754*^9, 
  3.6609753523510427`*^9, 3.66097547040403*^9, 3.660975552245833*^9, 
  3.660977049469667*^9, 3.660977568421391*^9, 3.66097766199265*^9, 
  3.66097783330555*^9, 3.660977961326376*^9, 3.660979123527501*^9, 
  3.661341558419468*^9, 3.661420639949505*^9, 3.6614218235605087`*^9, 
  3.661422825512837*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5685641876449314`\\\", \\\",\\\", \\\"1.1428599899745884`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.659261531078279*^9, 3.659261603041902*^9, 
  3.659337255565115*^9, 3.659337298121063*^9, 3.6593373480814867`*^9, 
  3.659337412843136*^9, 3.659337458451532*^9, 3.659337648518368*^9, 
  3.659337737258794*^9, 3.659561503181962*^9, 3.659800220322097*^9, 
  3.660974465508617*^9, 3.6609746692306643`*^9, 3.6609748481754*^9, 
  3.6609753523510427`*^9, 3.66097547040403*^9, 3.660975552245833*^9, 
  3.660977049469667*^9, 3.660977568421391*^9, 3.66097766199265*^9, 
  3.66097783330555*^9, 3.660977961326376*^9, 3.660979123527501*^9, 
  3.661341558419468*^9, 3.661420639949505*^9, 3.6614218235605087`*^9, 
  3.661422825569549*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5696802558297234`\\\", \\\",\\\", \\\"1.1428578546371697`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.659261531078279*^9, 3.659261603041902*^9, 
  3.659337255565115*^9, 3.659337298121063*^9, 3.6593373480814867`*^9, 
  3.659337412843136*^9, 3.659337458451532*^9, 3.659337648518368*^9, 
  3.659337737258794*^9, 3.659561503181962*^9, 3.659800220322097*^9, 
  3.660974465508617*^9, 3.6609746692306643`*^9, 3.6609748481754*^9, 
  3.6609753523510427`*^9, 3.66097547040403*^9, 3.660975552245833*^9, 
  3.660977049469667*^9, 3.660977568421391*^9, 3.66097766199265*^9, 
  3.66097783330555*^9, 3.660977961326376*^9, 3.660979123527501*^9, 
  3.661341558419468*^9, 3.661420639949505*^9, 3.6614218235605087`*^9, 
  3.661422825570837*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\", \
\\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.659261531078279*^9, 3.659261603041902*^9, 
  3.659337255565115*^9, 3.659337298121063*^9, 3.6593373480814867`*^9, 
  3.659337412843136*^9, 3.659337458451532*^9, 3.659337648518368*^9, 
  3.659337737258794*^9, 3.659561503181962*^9, 3.659800220322097*^9, 
  3.660974465508617*^9, 3.6609746692306643`*^9, 3.6609748481754*^9, 
  3.6609753523510427`*^9, 3.66097547040403*^9, 3.660975552245833*^9, 
  3.660977049469667*^9, 3.660977568421391*^9, 3.66097766199265*^9, 
  3.66097783330555*^9, 3.660977961326376*^9, 3.660979123527501*^9, 
  3.661341558419468*^9, 3.661420639949505*^9, 3.6614218235605087`*^9, 
  3.661422825571867*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxt3X+MbVd12PGrJETFTWOkjBpktZCkroSrJERogmJX3AskaiBNqYqrYkWE
NiFRUAtpg2jkqlA11hM0JDYBDRCBFSCdxFWwwo/cmNRYsXk5GGfsMC/jsXGu
jcdv7GfjH9gG/342dufcfT5ray3X/4y/b+1zzr3n7O/+sfY55/7wL//nN/7q
d81msxe/aDYb/577gpdfdsep/Xn7O8yvuf6cC889tb3A737b5WdefGoZfNb9
P/3W91xwdfDqinfcesWpIfhlFx7930t3gn9z/J8LdoPf+p6jHb5+L/iMt7zh
S9ef2g/+3Hzz5vdd9LXgC156dMSXroKfG//74m3Bf3zHqY2rLjjIfPqO4NMn
jvbw+sPgo6Odc+FH7wz+w/GAp+4KfvxTR/+weXfwz33o7Nd/6KJ7gv/goo+e
//CJbwR/+51H3+Cl9wX/i/ELvuP+4I+d//A7z7jqgeAHj07f2854MPi1R1/3
2gseCv758XjnP9zP33iCTnf+5Hj8T30reHv8/D/77YnPXnz16PK94KHOT47f
5yOPBP/IeAFf9Wjw+nh3dV4f73ceC14f7xWPB++MJ3TV+dHx+//WE8EvGevH
y54Mft14PnY7v/PWowrzm08FXzqen5ecDr52rH9f7vzweL7e/nTwWVddetFH
f+CZ4J8Zz9+VnX/9qLo+9kvfCf79o6939gufDT5+tPn5n+38wMbRDt/0XPCL
Ln7sU597tvNs+q/x1vTv/MDL4KNPc3SGri7xIXgdDj+2Fjet/2E3eLwcZ4cf
tt8PHqv3peGH/a2Cf/yyscRtZf8HwaNe14YfjncYfPe4+/Bja3He+u9dwZc8
Nlaou4MP15/nnuBXrk/AN4Lfv/589wXfPrYX4cfW4hXrz/tA8Hs/OlaIB4NX
68//UPAPjh8v/NhavGb9fTr/p/H6hx9biw+vv9+3g69eb9753vX3fST4B8br
P380+FXrv51/bWy/Ln4s+IPr8/F48BfHr3dr51Pr8/NE8Jlje3fOk/36rs9X
57euG6ingi9en7/TwV9oFzD45Pp8Ph3898c/G88E/+T6/Hb+92N7+tbvBP/2
+nw/G/xnZ64FCP76+vw/Fzzp8OrCs+xF/bsMzn5EPxOc/dgufmwXP2y/H5z9
2C5+bBc/tosf28WP7eLHdvFju/ixXfzYLn5sFz+2ix/bxY/t4sd28WO7+LFd
/NgufmwXP7aLH9vFj+3ix3bxY7v4sV382C5+bBc/tosf28WP7eLHdvFju/ix
XfzYLn5sFz+2ix/bxY/t4sd28WO7+LFd/AietXr/meIBXgbzI8eHYH5gfmB+
5O33g/mR97cK5kfe/0EwP/LxDoP5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfkR13fyA/MD8wPzA/MD8wPzA/MD8wPzA/MD
86PwrPYTmZfFk6vLvw/Buf9Ylv5jWfqPZfiBc/+xLP3HsvQfy9J/LEv/sSz9
x7L0H8vSfyxL/7Es/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/sSz9x7L0H8vS
fyxL/7Es/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/sSz9x7L0H8vSfyxL/7Es
/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/ETxr9fDKMq65MrbD/MjxIZgfmB+Y
H3n7/WB+5P2tgvmR938QzI98vMNgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+xPWd/MD8wPzA/MD8wPzA/MD8wPzA/MD8
wPwoPLsp9QvG9b2fwPzI8SGYHzelcrvB/Mjb7wfzI+9vFcyPvP+DYH7k4x0G
8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
I67v5AfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZH4VmrR8fLvPZ4+IH5keNDMD8w
PzA/8vb7wfzI+1sF8yPv/yCYH/l4h8H8wPzA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPyI6zv5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+VF4VvNQdV6R5+FXl/hQxlk7pV/ZLR7tle1i/aPMP4bwA+f5xxB+4Dz/
cLxY/yjzj6HMP4Yy/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/GMr8Yyjz
j6HMP4Yy/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/GMr8Yyjzj6HMP4Yy
/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/CJ61evmV8CPzMpgfOT4E8wPz
A/Mjb78fzI+8v1UwP/L+D4L5kY93GMwPzA/MD8wPzA/MD8wPzA/MD8wPzA/M
D8wPzA/MD8wPzA/MD8wPzA/MD8wPzI+4vpMfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH4Vnud2v6xg9L5Xn572fwPVvnp/vhB95+/3i1dfKflbBeX6+E37gPD/f
CT9wnp/vlPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6Zn++U+flO
mZ/vlPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6Zn++U+flOmZ/v
lPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6ZnwfPWr27IfzIvAzm
R44Pwbke3xB+YH7k7feD+ZH3twrmR97/QTA/8vEOg/mB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/ID8wPzA/MD8wPz
A/MD8wPzA/MD8wPzo/CsrnPXdYu8znf18+YVtZ/IeavdMk/fK9vvl3HY18r+
VsWz28p+D4Jz/mo3/MA5f7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1
W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JX
uyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/
FTxrH+tE+JF5GcyPHB+C8zjnRKm3J8KPvP1+MD/y/lbB/Mj7PwjmRz7eYTA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/i
+k5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSe5bxSvU+qr3vn/G7PQ9V5Re0n
cP2b87t74Ufe36qMy24r+z8o3t1RjnMYnPO7eyW/u1fyu3slv7tX8rt7Jb+7
V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7
eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/
u1fyu3slv7tX8rvBs1Zvbgw/Mi+D+ZHjQzA/cB7X3Fjq6Y3hB+ZH3t8qmB95
/wfB/MjHOwzmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmB+ZHXN/JD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI/Cs/PSOoT7Wvt9
UZgfOT4E8+O8Mq84r/QTefv9YH7k/a2C+ZH3fxDMj3y8w2B+nJeOe1cwPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/i+k5+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfhSetXpxc/iReRnMjxwfgvmB87z35jKOuTn8
wPzI+1sF8yPv/yCYH/l4h8H8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPyI6zv5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+VF4
djjVS35kXgbzI8eHYH7gnAfq84q8/X4wP/L+VsH8yPs/COZHPt5hMD8OUz91
VzA/DtPnuCeYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H3F9Jz8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Cs/adb8l/Mi8DOZHjg/B/MA5
L3pLmefeEn5gfuT9rYL5kfd/EMyPfLzDYH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfsT1nfzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8KDx7/1QP+ZF5GcyPHB+C+YHzOkHPQ+Xt94P5kfe3CuZH3v9BMD/y
8Q6D+YH5gfmB+YH58f70ue4L5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmR1zfyQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwrN2XW8NPzIvg/mR
40MwP3BeN7u15EFvDT8wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+YH5gfmB+
YH5gfmB+YH5gfmB+FJ69Yqp3/Mi8DOZHjg/B/MB5HbmvW+Tt94P5kfe3CuZH
3v9BMD/y8Q6D+YH5gfmB+YH5gfnxiuTt/cH8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflReNau2+3h
R+ZlMD9yfAjmB873Vdxe1sluDz8wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+
YH5gfmB+YH5gfmB+YH5gfmB+FJ6tpnrGj8zLYH7k+BDMD5zvM+rr3Hn7/WB+
5P2tgvmR938QzI98vMNgfmB+YH5gfmB+YH5gfmB+YH6s0ud+KJgfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfcX0nPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8K
z9p16e/FybwM5keOD8H8wPm+u37fR95+P5gfeX+rYH7k/R8E8yMf7zCYH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0n
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8Kz15T3huVeRnMjxwfgvmB832o3Y+8
/X4wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8wPzA/MD8wP16Txn0PBvPjNcnr
h4P5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/ID8wPzA/MD8wPzA/MD8wPz
A/MD8wPzo/CsnfeT4UfmZTA/cnwI5gfO92WfLPfZnQw/MD/y/lbB/Mj7Pwie
p3p0MvzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflRePbh9Jy29/L190Zh
fuT4EMwPnJ9T6PfR5u33g/mR97cK5kfe/0HwPLWrh+EH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmx4dTv9eZHx9O3+vbwfzA/MD8wPzA/MD8wPzA/MD8iOs7+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gflReNbOa/cj8zKYHzk+BPMD5+d2uh95+/1g
fuT9rYL5kfd/EDxP44zuB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmB+YH5gfmB+YH5kdc38kPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj8Kz
e6d6w4/My2B+5PgQzA+cn2Prz13k7feD+ZH3twrmR97/QfA8jbvvDD8wPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/uTd/zkWB+YH5gfmB+YH5gfmB+
xPWd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPGvnrb+nOfMymB85PgTzA+fn
OvtzSHn7/WB+5P2tgvmR938QzI98vMPgu1M9uSv8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5
gfmB+YH5gflRePaqqZ7wI/MymB85PgTzA+fnnLsfefv9YH7k/a2C+ZH3fxDM
j3y8w+C7U7vZ/cD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/HhV+t6d
+YH5gfmB+YH5Edd38gPzA/MD8wPzA/MD8wPzA/MD8wPzA/Oj8Kydl1PhR+Zl
MD9yfAjmB87P/Z8qz3GeCj8wP/L+VsH8yPs/COZHPt5h8N1pHHEq/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/IjrO/mB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5UXj2wale8CPzMpgfOT4E8wPn92D057rz9vvB
/Mj7WwXzI+//IJgf+XiHwfzA56V28u7wA/MD8wPzA/MD8wPzA/MD8wPzA/MD
8wPzA/MD8wPzA/Pjg+k8PB7MD8wPzI+4vpMfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH4Vn7Xt3PzIvg/mR40MwP3B+L0z3I2+/H8yPvL9VMD/y/g+C+ZGPdxjM
D3xeGjd0PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD/i+k5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSenZrqAT8yL4P5keNDMD9w
fk9Sfw9I3n4/mB95f6tgfuT9HwTzIx/vMJgfmB/4ktQu3hN+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfpxK5+WJYH7E9Z38wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/Cg8a9+r/25Y5mUwP3J8COYHzu8N6+/FydvvB/Mj728V
zI+8/4NgfuTjHQbzA/MDX5LGCd8IPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/4vpOfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH4Unp07
XXd+ZF4G8yPHh2B+4Pweve5H3n4/mB95f6vgeH972v9BMD/y8Q6D4/3tE8f7
2ye+JI2bux843t8+/Y33t08c72+fON7fPnG8v33ieH/7xPH+9onj/e3pvpZv
Bcf729O6Zed4f3vKSz8aHO9vT3mHx4Lj/e1pXNk53t+e2o0n+/Wd/MDx/vaJ
4/3tE8f72yeO97dPHO9vnzje3z5xvL994nh/+8Tx/vaJ4/3tE/Oj8Kx97nvD
j8zLYH7k+BDMD5zfK3lveU/YveEH5kfe3yqYH3n/B8H8yMc7DOYH5ge+JM0j
7w0/8CvTdb43/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPyI
6zv5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+VF4drF2cPIj8zKYHzk+BPMD5/es
9vcM5u33g/mR97cK5kfe/0EwP/LxDoP5gfmBL0l5lfvCD/zK1O7dF35gfmB+
YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+xPWd/MD8uDidt9PB/MD8
wPzA/MD8wPzA/MD8wPwoPGufq/uReRnMjxwfgvmB83uHux95+/1gfuT9rYL5
kfd/EMyPfLzDYH5gfmB+YH5gfuD3p+va/cD8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflReHbSuHny
I/MymB85PgTzA+f3cPf30ubt94P5kfe3CuZH3v9BMD/y8Q6D+YH5gfmB+YH5
gd+f2rn7ww/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj7i+kx+Y
H5gfmB8n03l8OpgfmB+YH5gfmB+YH5gfhWftuP137DMvg/mR40MwP3B+L31/
T3Pefj+YH3l/q2B+5P0fBPMjH+8wmB+YH5gfmB+YH5gf+PZ0HR8IPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+YH5gfmB+YH5gfmB+
YH5gfmB+FJ79pDzL5EfmZTA/cnwI5gfOv9PQ/cjb7wfzI+9vFcyPvP+DYH7k
4x0G8wPzA/MD8wPzA/MD357ate4H5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+ZHXN/JD8wPzA/MD8wPzI+fTOe1Mz8wPzA/MD8wPwrP2n6/GX5kXgbz
I8eHYH7g/Lsl3yzvof9m+IH5kfe3CuZH3v9BMD/y8Q6D+YH5gfmB+YH5gfmB
b0/9/DfDD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj7i+kx+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfhWe/LS8/+ZF5GcyPHB+C+YHz7/j0373I2+8H
8yPvbxXMj7z/g2B+5OMdBvMD8wPzA/MD8wPzA9+exr0Phh+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB9xfSc/MD8wPzA/MD8wPzA/MD9+O53nZ4P5
gfmB+VF41rbrfmReBvMjx4dgfuD8u1bdj7z9fjA/8v5WwfzI+z8I5kc+3mEw
PzA/MD8wPzA/MD/w7Wke2P3A703XqfuB+YH5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+RHXd/ID8wPzA/MD8wPzA/MD8wPzA/MD8wPzo/Ds69N14kfmZTA/cnwI
5gfOv/PWfycpb78fzI+8v1UwP/L+D4L5kY93GMwPzA/MD8wPzA/MD3x7yos8
FH7g96Z266HwA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mjru/kB+YH5gfm
B+YH5gfmB+YH5gfmx9fTeX8umB+Fp/8eDj8yL4P5keNDMD9w/p3D/jthefv9
YH7k/a2C+ZH3fxDMj3y8w2B+YH5gfmB+YH5gfuDbU17w4fADvzf12w+HH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0nPzA/MD8wPzA/MD8wPzA/MD8w
PzA/cPs7e3V8/vX52Zr+Hpvq/2eC/9f6818Z3Orb8eBWn78SnH+3+Vj5Hc5j
5XfVji1+d33+bw5uxW8JXq3Pz63BF310em/lxOvdxXvmji3e5r0yE7fqdhj8
Is99Tvwr6TmtY4u/cF/2xN+X7qM8tvgP6b6YY4tlWuc8tvh7KW99bPHmlIc4
tvhsGlceW3xXug7HFj964fh/nf/d0bd9yxu+Ffw/11+w85+sL8C3g/cvGA/4
SPCzJ8Z/6Pyy8fJ96NHgN45f59zHgt+9/p/Ofzxenfc9HnzinPEDPhF8en35
Op89ft33PBn8hnWFeSr4wjPGE9r5D9cX9HTwDWN1O+vp4MfHr/+lzj807v5t
zwT/3FvHC/id4HeNl++Kzn8wVpe3PBt83fh1X/Bc8IPj7i7vrL63v38S3Or9
5+P6tHp3IrjVu78NbvVuL65vq3f7wa3e3RT1odWzW4JbPfu7qD+tnq2CWz27
Lepb+/evR31s+7k94li8fY47oj63z31H1PdW705GHIu3engyfGn18DB8avXw
zvCt1cM7w8dWD+8KX1s9PBU+t3p4Kvxv9fDu8B9rP1q9vCfaD6z9afW0/04i
Vr+w9qvV428sXrf+mNrHYR73p071RfvZ2s1P9PtZp/j6dEV7avvl89pb298w
fu5ob4e58Uitn8qvv97rjpf9D89rr5Vfn79or4e58Uxtz5VfX7Yv3hDl8++O
9/Ze+XU167/bPI/7bUt/oPwXxsvbf6dzHvfjlv5C+V8cz2f/Xba58VTtT5Rf
/3P/HZ658Vbtb5T/9PgF+u8uzON+39IfKb9uXvp7tudxP3Dpr5R/91jh+3tV
53G/cOnP0vnv79Gbx/3Epb9Tfh3u702ax/3GpT9Ufq19f0/GPO5HLv1lqp/9
ueh53K9c+lPlf2j0qD8HN4/7mUt/q/y7Rh37cw/zuN+59MfKXzdezn6f6zzu
hy79tfL/aNS639c0j/ulS3+u/H8ZP15fx57H/dSlv1d+GJuxvm4xj/uty3hA
+RePF6TnqeZxP3YZLyj/9vF6Pxfz9nncr13GE8qvv3+MJ4Z53M9dxhvKr89f
jDeGedzvXcYjyq/P12O9fNwPXsYryl85nu6Pi5/d7xefyt811o/XPhLxuH98
in//eP3v7fG4n3yK/9R4oN97NOJxf/kU/+XxfPzUYxGP+821H2t9ezzuP5/i
V4zf972PRzzuR9d+jvXpx56IeNyfPsXPWDdvPR73q2uPxur07icjHvev60/G
+vNPnop43M+ufxjr206Px/3tU/zz4+X8jdMRj/vdp/ht4+Fe/HTE4/73Kf69
Y/W6psfjfvgp/hNjffq1ZyIe98dP8V8Y68/3fyficb/8FD82Xo4/7/G4f36K
/+m4uzc/G/G4n36K3zK2l9/9XMTj/vopvh6HfLrHzYfE9d/qq/4X5/nQdvSv
xovG43X7Op7U7/Ojbo+VM/40fsDirR/8Quwf81V5x8v724ryuPV7V8X5qPvD
9lfjthfH4q3aXRNxLN76rb+KOBZv/fy1Ecfas9avXxflsfJY+davXx/lsXjr
x78a8cp1PmCcoz02P9BeY9vX+YNxk+3NJ2xf5xfGSbY331C+zj/8Pq7+xXxE
/4PtD9u+9ds3x/bY9jXu9xT1f+Y7+kds/3U+5PfmbG9+ZPs6X/L7W7Y3f9Jf
Y/05tr863/J7RbY3/7J9nY/5/Rbb1/kZNv7A9oftr/5+SZ3Ped+/8nV+h42P
ary+317c/uv8sHJ9H7i4/df3h9f5pPfpKl/nl9j4scbr+2XF7b/OT7Hxa43X
93OKO16d32Lj5xqv7zcUd7w6P65c3wcnbv91Po3NF2q8vk9L3PHqfBybr9R4
fR+RuOPV+Xxl79swXxI3n8Li9X0v4j5PzQ9U9v4C8z9xXN+nIe7zyi/4PDXf
UDm/P+DGiGNxn08+wuep+QrbY9vLj4lj28uXiWNx+TNxLC6fJo7F5dfEsbh8
mzgWN56qLB8jPyGOxeUjaj4nP79+IsrLN9T8kLh8pLjxMHZ+lXc+sfOHnS/s
/GDj0Xq+8ufdeh63PGt/Hk7c+LCy8saL4ljc+cfON3Z+bK8+YvOD+v0Kz+r+
sP1h57uWb3nlXh4rj5Vveef7ojxWHivf/t4f5bHyWPlWrpfHymPl278/EOWx
8lj5Vs++GeWx8lj5Vg97eaw8Vr7V0wejPFYeK9/q8UNRHiuP1ddWr/v6LLY/
bH81bv3K/mv5Gsd8Uh7//9fDtsIXnOd/W2U9bKush22V9bCtsh62VdbDtsp6
2FZZD9sq62FbZT1sq6yHbZX1sK2yHrZV1sO2ynrYVlkP2yrrYVtlPWyrrIdt
lfWwrbIetlXWw7bKethWWQ/bKuthW2U9rF6P7Vg/Nh/HdX5tXp2v7zLWo+t8
+X1TOXHzX2y+i81vsfksNn+VnzM/Fcfxe2rT/BSbj2LzUVznl+qd+WGd310y
1UPzuTofM79yPc13XG/zEfXB/EJ9Md5Xn4zf1Tfjb/XR+Fl9NR5Wn41n1Xfj
UT7E+/Ymf4zv+IP5ZzzFvzq+wvp7rL/H+nusv6/vC6rjofz+qePl/T1fed54
Jr9/58Zgnxf7vNjnxT4v9nmxz3dmaQfy+1k+Exw+TRx+Thzt5cTGV8YHWH9v
PIHF9e/iWFx/Lo7F9d/iWFx/LY7F9c/iWFx/LI7F9b/iWFx/K47F9a/itb/V
vymv/1O+9Mevxrl93S75/M+U+DJY+5jb66HkD78SbB0y5w9viDyY8bDPW+dD
9X1F4vLLWD4Zyx9j+WIsf5vH28PzxrvqL/Z+Cux5fOz5Y+x5S+z5Mux5Guz5
Aex+aez+UJzvd/z2dF7/cPHyqZ9qfy+PONbvtXblz6b2+1uL1oxeG7w+/Rf+
9ZR/eXixbs4uOzG17w8v/uk6v7C/+PJUL/9mXeBri9+Y6vlfr327dfGPJ2/a
39umf79/2u5g8V8nr9tx7lj88HQd2uc4Oe3Xe/UOF/9tygu0vNad0+e4a+qn
7lr87ZSHaf3XXYvLp7xay7fdvfieKa/X+r27F/9svf0zi+9Za/KNxb9d5zm+
E/w/1sfr/H/WeYNng/fWn++5YOOAH1+fr6P50PoDPf08vmDtxb3BF60963z5
Wqj7gm9ef6/7g9vfzu17PBDcvsc3g9v36Ny+x4PB7Xv0dcrJi7lxFjbOwnkc
Zf3+C8HqIzZuws4XNm7CxknYOAkbJ2HjJGychOXZsTw6/uVp3ISvmPLe+Ixp
3ITfMuWp8WenPDNW3/AFUx4Yq5/42efG/+J3jOfnTHlXfP6UZ8XvmfKi+LIp
r4n5gJ+e8oyYP/hfT3k+zDf8v6e8GeYnfmJqZ/EP53Z2/i+nfh7zH39i6sex
9gI/MvXTWPuCf3bqh7H2CH986mfxl1O/OswfmvpJrL3DP7L+Pp21j/jn19+v
r59rT/Fvrr9vZ+1z483FJ9ffv3Mbb3feWZ+PR4JbO9j50fX56dzaxUeDX7I+
X51bO9n5devz91hwmw90fuf6fHZu7erjwZeuz2/n1s52vnZ9vp8IbvOKzg+v
z3/n1q4+GXzWWuDOrV3t/DPrBqNza2efCv71tXCdW7vb+ffX7dnp4NYOdz6+
bj86t3b56eAH1g1QZ+0r/ofr9uaZYP0PfvX6b2f9Ef6Pa+E765/w1rr9fDZY
f4X/ct2eddZ/4bvX7Xfn5nNn7Xlr5y+LeXJrqD8b44XWTv3tgi+tnerc2qm9
4NZO3Rjji9ZO3bjgY2uHborxRvtcX1vwubUztwS3dubvYjzS2pXVQvvQ2pFb
g41PtCft37++0N60/XRux7k9xjPtcx4stF/te9wR45v2Pe9YaP9aO3Fyob1s
7cLJGP9gceMf7W1rJw4X2uPWTvTxUWsn7lxoz+t4qbUTd8Z4qbULdy30H8ZP
+pfWLpxa6H9au3BqoX9q7cKphf7LeEt/19qFuyNv0Ty/J9axsf7ZeIo/4vwS
X9/++Cbjk415zF+n9lU+svG71vmBE6/7fJTP+aJhPt7f9qUvXhXxnD9q/f0F
MV7ZmOf8VB/fGI+PX/dEjF825jmfOMzHvb8+xi8b85xfHOZHu9m+I8YvG/Oc
bxzmN5xz4f+9NMYvG/OcfxzmRyf9qxfE+GVjnvORw3y8+BsxftmY5/zkML/m
+nOePBHjl415zleux1f/4OIYv2zMc/5yPV78vbNj/LIxz/nMYX7bFe/4+EUx
ftmY5/zmMP+Jy+74ozti/LIxz/nOYX7so+d/dh7jl415zn8O81ved+2Vl8b4
ZWOe86HD/EcvPPfLp3/8nojn/OgwP5r/7l4Q45eNec6XDvP9C166uiLGLxvz
nD8d5i87km0jxi8b85xPHebvPmrM3hnjl415zq8O8xPnXPjUiRi/bMxzvvWo
fpx1/3e/PMYvG/Ocfx3m//wFL3/ftTF+2ZjnfOww/9X3vO13HzvR4zk/O8w/
8NinPnh2jF825mX+vx7PnfES45N3zXP+YGj7+7L4/jw/37DZ8gNvfyTi+XmH
zZZ/+IFHI56ff9hs6/hX9nh+HmKzrcv/0mMRz89HbLZ19xc+HvH8vMRmW0f/
bI/n5yc227r4m56IeH6eYrOtYz/b4/n5is22Dv1HT0Y8P2+x2dZV/9VTEc/P
X2y2vMajPZ6fx9hseY2Pn454fj5js+XdXvt0xPPzGpst73Zvj+fnNzZb3u33
nol4fp5js+Xdfuo7Ec/Pd2y2fMZBj+fnPTZb3u29z0Y8P/+x2fJuP/ZcxPPz
IJvtft/9Hs/Ph2xGfsR4xvjceAbLl+DWTv5F5EvavPHLC+P/Nk+8LuJYXH4F
t3niDTHeaf36zXH/kPGJ/lz/rT93/4j5nf5c/+5+EONP/anxJxbXvxqPihuP
YnHljU/FjU+xuPLGq+LGq1hceeNXceNXLB75mGk8K47F9ddtXtHzN1hc/kZ+
AhuPKG+8gsVr+TZP6eWxuPwQbvOWnh/C4vJHuM1jev4Ii8sv4Tav6eWxuPwT
bn97/gmLy0/hVq96fgqLy1/hVq96eSwuv4Vbver5LSwu/4Vbver5LywuP4Zb
verlsbj8GW717KEoj/lr/evxo8P+zJ3ybRvleSTPz3iu6APr8fPnXvInpfwy
yo/6vz7ybxvleaOWz7o08m8b5fmilq/aiPzbRnmeaJi/8aheXhz5t43y/ND6
+B+7KPJvG+V5oWF+dJY+M4/820Z5PmiYv+Ss+//q9O/eFPE70vNAw3wcnF4R
+beN8vzPMH/70WTvnZF/2yjP+6zzg9/18si/bZTne4b5lZde9IP3R/5tozzP
M8w/P9/8yPlvOFm+Xx+Pfu/LL/vk5yL/tlGe1xnmv/DSsz595v19PJufzxnm
f3rmxX/+jnP7eDU/jzOM47drro/820Z5/mYYx2c759zcx7P5eZthHH/tv+/s
Pl7Nz9cM4/jq4FTk3zbK8zTDOH6696e/1Mez+fmZYRwfPfqpM/t4NT8vM4zj
n2ef+8UHI56fjxnG8c0L33J5H8/m52GG+b/50vUvfMt7+ng1P/8yzP/7uS84
8+Kz+3g1P+8yzP/oc0dV4Poez8+3bLbnd36jj1fz8yybi9eOx3txH6/m51k2
2/M8V/d4fp5lc/GR8Xi/1ser+XmWzcU14/G+v49X8/Msm4v7xuP9eY/n51k2
Fxvj8d7cx6v5eZbNxXz8+919PJqfZ9lcvG083qd7PD/Psrn40Hi8N/bxan6e
ZXNx1Xi8p3o8P88y5Zc+2cer+XmWzcWLxuP9bB+v5udZNhfnjfRgj+fnWTYX
vzIe7yN9vJqfZ9lcXDIe71V9vJqfZ9lc/MV4vLt6PD/Psrk4HI/3O328mp9n
2Vx83/jnFX28mp9n2Vy8cjzeqsfz8yyb7Xmg3+rjVeu3cf2m8Yjxqv7BeNT4
tM3Tvxjjy5aH+ZvIt8mvyTfJR2kvsLj7O+RvjJ/kB42vcI0bD/m8xkPry3PV
VcHGnzGemr5/3b7tt/ev2PGw/sv6rvUkxzPf1Y9pr+t42vqi/sb9w9Z7rCfq
T8St78h/6c/cH2J9qeXF+++fiVuPau1k//0zcetPtrc+pbzvZf3b+pjrk59r
+kC5j6qz817/5ueWPhD54MrKu97i6nNl5Y3HxY2/K2cProu49cLKyls/FHd+
Kiuv/ovLV1ZWXn5T3PWsrLz6IO56Vlbe9RdXHysrbz1SXH62svLqr7j8bmXl
5YPF5YsrKy+/LH7ZlH+urLz5rDg/Kytvfixu/F1Zeflzcfn1ysrLx4vL11dW
Xnsqbj2gsvLWD8StL1RW3nqEuPWKyspb7xC3HlJZeesp4tZbKitvvUZcfqOy
8tZ/xPVXlZW33iSuv6usvHyMuP6ysvLGj9pJcfn9Vm472jmfz/qX/gX7vNbD
xLHvbz3M+Bc7X63e3hTlsfNtPUw+GLt+rV79XVwv7HrX+3esf8lP1/Uw9/Ng
z7Opz+7nUf89LyaOtSfWk7RH+lftl/4U62+Vz8//XBfjCe1/HV/U8crp5O2y
PK/yhRg/qCc1f2P8IV+KjW9wfp9H7/9av/uxyE+K5/v1en2t5bH+u/WTV0T9
b/3SEPWxtfNfjfbT/bjaX+t/+hPjDf2X8Z/+2Pn1ffP9pcfK7/Ude977smJ8
N12fwjPfX34jj4eXcZ2MT3z/+ty1/Rk/5/sXr4zzZTytPcDK3zR9DtcHuz5t
HHFN7A/bH87Pdx8vz3cfj/21ZuF47A/bH9a+WFd0vc0HzJ9x/j670X42L3dj
e2x7bH1J3kf7dNm03q89q2w+or1yv7r2TD5cvgBbD/M8sfbN+r/8A9Z+ef5X
++Z+APkMbL3O87r6V+v/8iPYeKn+vr3xuvaKP9j96sZ/xu/mC9ojcb7h+nvL
+XnD62K8j/lo/CvuumvvxPmM6+/TKm98rDyu9/Mqb/1BeVx/n1R56w/K4/r7
pcpbf1Ae1983Vd76g/K4/v6p8tYflMf191Hr/Lj+fnB+nu8TpX/ZjvvjxfU3
cX/m1J5qz2yvvcv7W5bnAT8f+4v2cdqf9lV58zflcf09Tecj1gOnuP7A9spj
5d1vrbz1DuWx8u7HVt56h/JYefdrK2+9Q3msvPu5lbfeoTxW3v3eylvvUB4r
735w5a13KI+Vd7+48tY7lMfKu59ceesdymPl3W+uvPUO5WM9ZPpP/2x796fb
3vqH7ev6iP6fH9j9AuqlfC023rE+q38yb9fvqb9xf02q35+IcUgeH/R8Rc1H
1HxDzSfUfEHNB9T5fp3P1/l6nY/X+XadT9f5cp0P1/lunc/W+Wqdj9b5Zp1P
1vlinQ/W+V6dz9X5GjY+Ma413sHGR3U9v13Hy+M5F8/zYeM99cn6fzvu1vOe
F9SOqj/Glz5nZeNR9Rmrz9jxbZ+f7/urGG9h4zPjeeXr84dYec97GF+aF+Xx
7fVx/tu4fyf2730z5rueBzH+Mx/F3hdj/up5EfXB+2XEsfGb+anxnvmp8Zf5
p/po/imf7f0l5pueN8HeZ+L+LXHbm7+an3o/hfEdNv+s9z/W8aD5rPNs/IWN
D7Sf+m/tZzxPMv1X55/aT9vj9jGHqLfqkfmieQbO77P6WIxH+MA77W/OFy+j
/rR28S/DR6y+YeVbu/mlKI+Vx+V+syjPB/Xd/JYPOL+/6kSU97yT+a/nUc1/
jdfNf42/fQ7jb965vtj11U8ZL2Fx99eIY3H304hjcffPiGNx98uI43j+dLpf
Ju6PmVjc9VYfsfoY9WHySDsnHusDZXzo/hf1HYu730Uci7u/RRyLu59FHIcv
0/0r8f7uicXdryKOxd2fIo7F3Y8ijsXdfyKOxd1vIo75m9dlrg42ntG/8U1/
iOWhsHZC/2yco/+27qG/9/4u4wHv0zKflu9z/wE2vrD+6H5c63Huh8DGL+6H
c3+v+93cX4GNf9wf535h7zey/oeNn+S/fO88vzoe4wjnrY43aruI1X/lXSf5
KP2ndkG+BOt/tVfaM9dDe4ddP/kX2xuXyr9g+Rasf679veutPNa/y7/Yv/qg
f8fqj/yL/l5/Lj+D1S/5F/VFfXJ/DLYeoz9XX+Q7rQdZ71U/tP/yo56PcL+7
+oK9r8B4XT7b+DHnl7eelx/V3ub7T/t4z/VX3/gsLv+X68Px+H7qv++jfuf3
XX4mnkezf/VFvs94EOf7u5exvfFsfp58J76f8aX2wXjM+lZtD9w/Zz2O//px
8z35LMzf3D9dGe2fz435WPO98l7ON5/4IB/Jl1r/5R+tv9T6Lt9oPUb9zvnc
q8Jv7PP4vPn9lddEeZzr0zXx+Z0n7Q12/eWLfR/tC/+x7+/8+H51fI+dD/ld
+VrtCf+x8+P8qj/aE/MDbH3K+Tbe157oj7D65/y7/tpD5xNrX7WPzr/v53xi
/af5EH/4bn6IzQ+Nb/mkPcjrCSei/9Y/xPND03hLueqD+bD+SX3y/eTrfX7X
y+er6xPah/w+2Buj/tmf8yX/r77Zv/Oj/ub80PFobxzf+VF/8/rMbrQ/Pt//
A1cOKr8=
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxEnXWYVlUXR9+OGWbG7m5MpFu6U1pCREBAQhQUpKRLUgERREoaBZESA7DA
VixsRTEQA7BQ4dvr27/zvH+c5+Q+5967131ngGHWhV363dg3FolENp8XicSt
/qswErmyWCRyRl4k8re1r7b2Odb+x9olrH2Rtf+zdmlrX2Hto9a+1trnW7uL
1X2s/iobiRyz8bLWv8r6kaJIpKK1r7d21NqVrV3a2v/ampLWvtTacRuvZu2K
1k5Yu4a1q1j7uK0pb+1rrR2z8arWLmftpLVrWbuatdPWrmftOtYuZu0brd3K
2llrN7J2I2vnWbuJtZtau8DaLa3d1tqF1m5t7fbWLrJ2W2t3snZnq3tZ/aXd
y4k23sH6Xa2fsnYda9e09gnWvsnat1g7Y+0G1q5v7ZOs3cnat1n7cbv9IVaG
WulqY/1s7Gvbs4e177L2N9buZe2B1v7W2n2tPdja31n7TmsPs/YP1u5t7Xus
vd/a3a3d39r7rD3A2iOs/aO1B1l7tLV/sva91h5r7YPWvsPaQ6z9vbWHW3ui
tX+x9n3WnmztX619t7VHWvuAtUdZe4q1f7P2GGtPs/Yha4+z9gxrH7b2HKsv
sFLW7que3W9dKxdbf5KtmWX177bmXKvL2PxtVs60dmmru1vJt7XNbN2NNnaZ
lfI21stKGWtXsbqfleusXcnqPlaKW7uC1bdbudraFa3ubWWC7fGA9Y/YWSWt
rmxjfXnWNj7e+j/beHmrq9rYHVaqWrua1XdaaWzt2lbfY6WWtWtYPcBKXWvX
tHqglWbWrmP1ICstrF3X6sFWWlu7ntX3Wuli7UZWD7fSwdoNlOsG1q5l9d1W
2lm7vjioaDz3sH4Ta99sdUOrh1mZRryVjla62Xhjq0dYmWqlvebGcR1WWloZ
zfVZaW5ljOobrYzXfCuej+rWViaqbmNlipWbtO9kK225Rs61a3sg354zedRa
5h7O87NGWblfa4mfruvtZGWG6putPKZnfJeVB6x0tnKLlZmap/+gxrpYqW77
V9f6h7gOcTLZ8jjP5v6wPC5Q/sn7fCs9xcxsK7fyblmZm+fj86w8aowtKHL2
HtFa4mfpTGIe1X4wtlA1/CwXCzCwQjV5XKZrZG6plf66zyUR54t+JbuGG9Re
qTgYWxxxrlm3SOfQXxtxjmBjdcRZg7E1qplbpT2Yu9Q+rA9F7R208kTEWYOf
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
iJxfHHO26J8e83Ng+cyYs85eZ8R8jP6FMT8TZi+KeU38ZTFnC6ausPbvYrN4
zGs4ujLmNZxeHXOeyPm1MecDXq6K+TxztWP+jHh+18V8nq8J18ecMxgsGfMa
Bq+J+X7sVTrmbMFFGdWwUyLmexBfKuZxrCureZgqH3PmYLBKzJmAkYoxf6/g
t5Jq+KqqeXJ+g2pyWE01ua0Vc3a4nyuNzeJWNhkz5XQm5y00jjbyd+fWrqDz
Oe+KIo+taWWJlTus9LdSR88GpuqJS3ipr5p8Nox5/shn45jzwXvQQPPM1dUe
xDfRPLw0izlD8NVcNQw20n7s1SLmLMJFS9Vw0VR7EN9KY7DWWjUMtlHN38N1
jDkf5L+Tahi5ycrlMWeqQ8x5Yl17jdGvrDyQp5sVBwtdY84KjHSJOUPkv7Pm
4e4W1cy11bXA8q1aS3w37QEv3VXD122q4au3cgYjPWPOE7ntpRqm+mgedvqq
5tr7qYa1yZbr8fwdSL7nGLZg6nbtUUH5r6K5005wLgZa+dFifyhy7rbw9/BW
D7Byd8zXwOBo5ZV8Dok5N/AyVDVcDIr5uwdf98acD9YN1hj9MdrjRivDFAdr
o5R7zrgv5szB1HDNw84I1czdo+vivJFa21T7whpsjVUf1h7Wc+9hZULM2YKp
8THnj/5EjbXRujLKx5SY8wQ702LOE9w9ICZgYUbM+YOj+620U8x0rWVuqvYg
fqbWEj9JZ8LRg9oP7maphqn5MecDLh5RTW7n6VqZmxtzzrjPh2LOH/1xegbc
5wLFwd2cmLPOutk6h/7imLMFLwtjzh/cLVLN3KPag7kL4vY1xeqfrVxk7V+s
/tVKoTGWtLKVf088wVlbbmVlzNkih6tjzg2MrIj5GuZe0LPjua7RPEw9HnP+
4O4J1XC0Svux1/qYcwMvT6qGqbXag/h1imPdBs3D0caYswjvT8ecD3jZHHN2
YWqLap7rNs3DzjOqyedzViaLhZ0x54b72R5znmDhKZ3Jec9rLXObdD7n7dBa
4n+393uylcX2jr+oZwNHL8ecRdh5RTXs7FZeyfNrYgJGdmmeuZe0B/Gva553
5c2YswV3b6mGu1e1H3u9E3OeYOFd1fDyhvYgfo/GYOc91fD1vmq+Ln0ccy7I
/yeqYWRKMZu3e/07a98TWX+Z1j2b5+2PrGxVHsjTp4qDha9izgqMfBFzhsj/
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
52tdc43Rn21fFz4gF/Yut1IcLNyUcFZgpK0YIv+tNQ93bVQz11TXwnnttJb4
erpv7rO99oOdjgnnDL7+sHfr9yJn5OaE80RuO6uGqan83Kh9zuy1a11v7XVF
/ECdfcYXOV/drPQUN+WUY9iCqVu0x3XKfynN3Z5wnmCkh9YSf69yxrX30n6s
G6y8Mtc/4dzAS9+Ev28w1U81XNypeXi5SzVMDVANC4OUb/a9O+GcwVFvXRfs
D9Ra5vpojPPu0Vrih+h6YWqoapiarmfdycrwhPMER8M0T/8+K40TzlQn5YQc
jE44Q/AyNuEMwdpEcUD+xyecOdgZJQ6IGae1zI3RHsRP0FriR+pMYiZpP1ib
rBqOZooJWHhANfmcoWtlbpqVDrrPqQnnrIMKrMHZZ8bKp1a6WHtKwvlm3f06
h/5DCecIRj6xtV2tnm1lTsLbzM219+VzPtf4Ox/7XP48aV8vrDyccObgaH7C
WYSdR1TD2qPKKzlclHBu4GWB5pnbqmfHc12s+TusLE04czD1mGqYWqj92Gt5
wtmClxWqYWqJ9iB+meJYt1LzcLQ64SzC+DrxAS9rE/4+wNfjquHrSSsjEs7O
BtXk8ynVsLAl4dxwP5sSzhMsrNKZnLdRa5lbo/M5b7PWEj9Pz5Vn+rSeDRw9
k3AWYedZ1bDzvPJKnneICRh5TvPMbdMexO/UPO/KiwlnC+7+ts+Wv4qcu+3a
j72esrENVuL8rHaRM7LLygvag/jdiRw7r6qGr9dU87Xo7YTzQf7fUQ0jbySc
J+77rYTzxLo3NUb/CeWBPL2rOFj4MOGswMj7CWeI/O/RPNy9p5q513UtnPeB
1hL/kfaAl72q4etj1fD1hXIGI58mnCdy+5lqmPpS87DzlWqu/WvVsPZdwrmB
hW8TzhZMfa49OOMbK+s190PCeYKR/VpL/Pfag7kfNQ+D3/B/tvj7F2v/knBu
4OVX1XDxU8LfPfj6WXyw7qDG6M+3d38//67F/9FSHKz9odzDzpGEMwdThzQP
O4dVM3dA18V5v2st8byjfN3g68rXdsYrVv9tpSDpz/0TK/8mnC2Y+ifh3NH/
T2Ovad0K5SOSdJ5gJ5Z0nuAulXQmYCGRdP7g6LiYICae9LXMRZO+B/HJpK8l
/pjOJCad9P3gLpP0GqaKks4HXJyQ9JrcFib9WpkrlnTOuM/8pPNH/2jCnwP3
eWLS4+AuL+mssy6b9HPon2btfeLl5KTzB3enJL2Gu5OSvgdzpyd9LdydkfQa
ps5Meg2b5yU9ZzBydtI5g8Fzkl7D2vlJn4eXC5Jew9GFSa/h7tKkMwELFyed
Pzg6N+l7cMZFSV/L3OVJ5wlGLkn6WuLLJj035O2ypO/HujJJzzFz1yT92cHI
d8bSX1ZfaWNXJb0NV9cmfR6mrkt6DUclkl6T29JJzz37lkw6HzBV1j73vs9z
9q9P+lrmFtg78qONJ62USvpa4svpemGnvGoYbJT0Z32WlYpJZwh2KmiefiWN
kefWSX92PI+qSWcFdqol/T2BqVpJZ4U810g6f3BXJencEFNda5m7QXsQX1Nr
ia+sM4mprf1gqo5qmGqSdCZgoalq8tlY98Rcw6SzxX02SDpz9K9Oeh7IUzPF
wVr9pHPMunpWTlW/ZdJ5gpEbk84crLVQzVxz7cFcK63lebXRM4PBB6x0tnKL
lWlFzkUHK5usvbHIuWtq32vvKjCmLY8dkzl2Oqnm2m9WDWu3Jp2b67UvbMHU
DNtvOv/OkudnXqO5buIJRrpoLfFdtQdz3TUPg3cpx+Tt9qQzBCO9VcNOj6S/
A7wfvZLOHOt6aoz+AO0BF30UB193igPOuEOswFdfzcNCP9XM3abr4rz+Wkv8
g7p/7mmgzoGpScpBWyuDks4THN2TdF7p32ulrnLeVrni/R6WdG7gaETS3xn4
Gp10bsj5yKSzCINDk84QMfdpLXPDtQfxo7SW+CE6k5gx2g++xqqGr0X2Xh+y
HGb4/71W2tvYFCu/8n+arbSz9sSkv5/c54Sk80f/bj0D7nNq0mPhbXzSmWbd
OJ1Df2bS2YKX6UnnD+5mqGZumvZgrgz/99B4/dKuY5aePTx+b2WjlU1WHko6
czA1J+mc0Z+rMfK5Qc+LZzk/6dzA0YKkMwdri8UBjCxMOkMwMi/p/BHzqNYy
94j2IH6R1hLPZwNfW/ha8rDOJ35p0nmCxzVWBouLVWIFdpYnnWP4Wqt5cvi4
avL/pFjhfpYl/f0h5jHtTX+J7oPz1iWdMxhZr5r4J7Qfc0/p2YzSM4U/eNlt
Zbae65akc0M+N2ue/laNjVdORin+d/4feZ6/H4etvt/q56zsVI7J//akswY7
25LOFqw9n/T1zC0xPv+0+KyVHVpL/NM6k5gXtB8cvaga1l4TH7Dwumpy8qru
ibldSWeL+3wl6e85/RXKA4y/oThYeDnpn7Ose0nn0H8n6TzByFtJ5wxG3lbN
3Jvag7mV2pvcv6s4uNujGqY+FhNcy17lm/4HyjFMfaJ59vtUNUx9lXRuyPM+
cUD+D+n58uw/1B6ww5914RLuvlRNPH8OXq25j7SW6/hae7PvN9obNn9MOh/w
ckA1jPyQdLaY+y7pzMHL/qS/n/QP67rI80+KI8/fam/W/ZZ0jriHX608q/5j
xsm/xkge3xPl+fgvVo7y/1HznC9yzOcHnxFHdA48plL+3N+z8n7SPwt4vn8k
nS2Y+l1r6R9NOiuw82/S3xOYiqScFfL8j+Z3a99F2vdP7Qc7x5LOKGweV038
f9qPub+Tzhzn/aU4+tGUnwNreSnPJfnJT3kNL9mUs8JcMuWccZ+ZlN8nc+lU
7r5PsPZnynlhytmCqVjKz4HlRMpZZ694ysfoF0v5mTBbkPKa+JNSzhZMnZzy
GjZPSXkNR6emvIbT01POEzk/M+V8wMtpKZ9nrkTKnxHP76yUz/M14ZyUcwaD
56a8hsEzUr4fe11i3/ssL8Z/+LV3mL8DsPIf/5c25XsQv9fWHMtzBmcWOUcX
2vzFKWcOBq9IORMwcmnK3yv4vSzlNXwVT/k8Ob8y5TU5vCrlNbm9LuUMcT/X
pJwt2Lko5edy3tUpX8vcJSk/n/OuTfla4qdau72VDlauT/mzgalSKecSXkqr
Jp9lU54/8lk+5XzwHpTRPHMlU74H8RU0Dy+VUs4QfFVWDYPltB97VU05i3Bx
g2q4qKg9iK+mMVirYaUo5QzWVM3fw9VLOR/kv75qGKmdcrZgqm7KeWJdHY3R
vzzleSBPDRQHC3HLfSzfGWmccobIf0PNw10j1czV0rVwXhOthbXLjJMVxlLS
9prD3xdZiVp7Fv9H2+ZvtNIm5TmDkZYp54jctlINU201DzvtVHPtN6mGtU4p
5+Zq5Ri2YKq19rhE+b9Cc51TzhOMdNRa4m/WHszdonkY7Ku8ks/uKecGXm5T
DRe3pvzdg69u4oN1XTVGv5/2qGKlh+JgrY9yzxm3p5w5mOqpedjppZq5Lrou
zuuttRW1L6zB1h3qw9pYPe8WVgZYqZ5ypu5MOX+wNlBjNbXuAuVjUMp5gp17
U84T3A0XE7AwNOX8wdE9YoKYIVrL3GDtQfwwrSX+bp1JzDNFztwIKxljJZ3v
TI1POR9wMUE1uR2na2VujJXmus+Hirw92kp/PQPuc6Li4O5hWzPXSsrOWGWc
5lldYJ9rU1LOFrxMTjl/cHe/auYmaQ/miqXtM9Hqj60UpL3+xMqMlHMJUzNV
w92DKWeLHM5OOTcw8oDmmXtcz47nOkfzMDU35fzB3cOq4WiW9mOv+SnnBl4e
UQ1TD2kP4ucpjnULNA9HC1POIrwvs3KXeFmccnZhaolqnutyzcPOCtXkc6Vq
WFibcm64n9Up5wkWHtWZnLdKa5lbpPM5b43WEj895e8qz/QJPRs4es5yWGS5
K7SyxvJ4Im3L41M2N9LKKCubxAKM5Of7+AYrlS22WL6zvFnzvCtbU84W3D2t
Gu42aj/2eiblPMHCs6rhZYv2IP45jcHO86rha7tqvi69JD7I/8uqYWSnlWm6
7xdTzhPrXtAY/aXKA+/xK4qDhddTzgqMvJpyhsj/Ls3D3W7VzO3QtXDea1pL
/BvaA17eVA1fb6mGr/eUMxh5J+U8kdt3VcPU+5qHnQ9Uc+0fWXks5ax9mnJu
YIF3CLZgao/24Iy9Wsvc5ynnCUY+0VriP9MezH2heRj8SXklnyfx/xat/sbK
tylvw8Mn9jXr1Hzn63Nrf2blBGOppf05u4WV023uoPbg5xT2Kw7WDij3nPFD
ypmDqe80Dzvfq2bu5Hx/z7+08qPWblEO+BoG6z/rHFiLpf25v23lt5SzBVO/
ppw/+oc0tl3rHlE+fk85T7DzZ8p5grt/xAQs/J1y/uDoiJgg5i+tZe4P7UH8
Ua0l/rDOJOZf7Qd3/6mGqUTa+YCLZNprchtP+7UyF007Z9xnJO380f9Fz4D7
TKU9Du6Op5x11h3TOfTz084WvGTSzh/c5Vn7w5TPpdO+B3PpjLVZZ6Uw7TzB
4yZrj7YyxspZ+c7cCdb+0rj4wsqJ/M4n42KBlTNs/isbOyffubsq7c+O53qm
je2z+lQbOz2d4+6MtNdw9I3F7rNyku15Vtq5gZez017D1Glp34f4M9Mex7pz
0j4PR+elnUV4vzjtfMDLBWlnF6YuTHvNc70k7fOwc2naa/J5WdprWLgy7dxw
P1eknSdYODftZ3Le5Wlfy9z5aT+f84qnfS3xE63d2kobK1en/dnA0bVpZxF2
rkt7DTvXpz2v5LlU2pmAkRJpn2fumrTvQfwF+f6elLZySb4zV9bKZfnOXDkr
JdO+H3tdme8cVLDyrLWvzndeLsp3LstYeb7IualspUra2/BVVTVf/9fZ150y
FnOK5W4J/2/JynnWf4zfY5nvTD1ha36x9sm2Zr/luaS1izgr7XkgT+czb/3a
VhqIFRipl3Z2yH+dtK85xUpd1cx1tOu8Nt+/B6mvtcQ31B7w0kg1fDVWDV83
pj1nMNI07TyR22aqYaqF5mGnpWquvZVqWGuXdm4uV45hC6aaa4/zlf+LNdc+
7TzBSFutJf4m7cFcB83D4LX23I7YPV5u5Za0cwMvXVTDRae0v3vw1TntfLDu
Zo3Rv972+d32KG7lVsXB2lU2ftjGLuXrg+XrV6tP5WciNA875W2sXL7z2FHX
xXlXWOwhG7/YyhX5/jlVHhZt/A/rX2XlPj33JtyjsVEz35nabu1q+c7Yn1bX
zne+mig/5GOVrVlp5TS7nrI2X9PGBloZLCZg4R4rtcRPa1v7gZ19va29O+3r
mVtr42v4nao2Pkhria9ga/+yseus3Kv94G6IapgaJT7gYrRqcjtS18rcCHHG
fQ4Xf/Tb2Zmv2xlV8/3ztLm4G5Z21lk3VOfQnyC24GWc+IO78aqZG6s9mOPn
uvj5QX5ekPeKz2++F7hfXMLUFNVwN01skcMZ4gZGpmqeuZVpf3Y815mah6kH
084f3M1SDUfTtR97vWn3Wd9KN2tXsftuaO0GVh7QHsTPVhx8rbPn84SVCrZm
k9UbrVSy9i6rX7FSy9rPWL3NShVrv2l7NrL6Biuv8bPzVupYuy7/L9r2W0Le
rH2n1UutrBAv3M/79lkxwOplVjZY3JNWKtraD238Ayt/WH+rlS1WKtv48rSv
J35y2t9VnukqPRs4WiMWYWetath5Qnklz+vFBIw8rnnmVmsP4p/UPO/KU2IL
7jaqhrt12o+9NqedJ1jYohpeNmgP4rdqDHaeVg1f21TzdWm7+CD/O1TDyLNW
Jum+n087T6x7TmP0X7DntNNKdXtWOxUHC6+IFRh5SQyR/xc0D3cvqmbuGV0L
572stcTv0h7w8hZ/JubvVKxdzRh429pNrbxl/flWHrHyupW5Vh628obqeVbe
1vwCK+9aedTKQit7VC+y8qF4eSzt3w8tFktvag/OeE9rmdubdo5g5AOtJf4j
7cHcx5qHwe+UV/L5Rdq5gZcvVcPFp2l/9+Drc/HBus80Rv977cH3aF8pDtb2
K/ec8U3amYOprzUPO/tUM/eJrovzvtXaDcoBX8Ng/QedA2steN+s/s/KT2ln
C6YOpJ0/+gc1Bl/N8j0XxPyadp5g51DaeYK7P8QELBxJO39w9IuYIOaw1jL3
m/Yg/netJf5nnUnMn9oP7v5SDVPH084HXEQyXpPbY7pG5moaV+/add9o5R0r
za3stvEf9Qy4z2jG4+DuaNpZh9O/dQ79VMbZgpeEtd9JO3fJjNfMxTK+B2zy
94v8nRB/NxT+npF+Xsa5hKn8jNdwV5BxtshhUca5gZFiGZ9n7rKMPzue6wkZ
n4epkzLOH9ydnPEajgozvh97nZpxbuDltIzXMHVixvcg/pSMx7Hu9IzPw9GZ
GWcR3s/LOB/wcnbG2YWpczJe81zPz/g87FyQ8Zp8XpjxGhYuzTg33M/FGecJ
Fs7I+Jmcd1HG1zJ3VsbP57xLMr6W+DHWbm7lRiuXZ/zZwFHxjLMIO1dmvIad
qzOeV/Jcx9h4z3hoxfc0GZ9n7oqM70F863x/P66zseszzhbclcx4DXd7bE1L
K/9Yv3TGeYKFslbiGeelRMb3Ib6cxmCnvGr4qqCaP8NVzTgf5P8G1TBSyUrG
StZKlYzzxLrKGqN/bsbzQJ6qKQ4WamecFRipmXGGyH91zcNdDdXMVdS1cF4t
rSW+VMbvm/uso/1gp17GOYOvxhnPGYw0yDhP5LahaphqonnYaaqaa2+mGtZa
Zpybi5Rj2IKpRtrjLOX/PM21zjhPMNJCa4nvlvGcce2ttB/ruiqvzHXIODfw
0i7j7xtM3aQaLjpqHl46qYap9y3/baxcY+1blW/2bZfv7NxipY2uC/brG3sf
2FxbisY4r0vG1xPfXdcLUz2slMk4U0P0rOtb6ZVxnuCop+bp366xClp3mnLQ
N+MMwcsdGWcI1gaIA/J/Z8aZg50+4oCY/lrLXD/tQfxdWkt8b51JzEDtB2t3
q4ajYWICFoarJp9Dda3M3Wulru5zcMY5q6sCa3A2QnGwNijjfLPuHp1Df3TG
eYKRkRlnDtZGqWbuPu3BHL+P/zL9PvSxGWcOjsZnnEXYmaAa1iYpr+Tw/oxz
Ay8TNc/cUj07nusUzbe3Mi3jzMHUdNUwNVn7sVcj4+QjY6S9lQ75ztEDVqZq
D+I/tPGbrNxs7QczvgaOZmecRRifLz7g5aGMvw/w9bCV2zLO1yOah50Fqsnn
o6phYUnGueF+FmWcJ1iYpTM5b6HWMjdH53PeYq0lfpyeK8/0MT0bOFqecRZh
Z4Vq2FmlvJLnNWICRlZqnrll2oP4tZrnXXki42zB3TrVcLda+7HXkxnnCRY2
qIaXx7UH8U9pDHY2qoavTar5WrQt43yQ/2dUw8iWjPPEfT+dcZ5Yt1Vj9Ocp
D+TpWcXBws6MswIj2zPOEPl/TvNw97xq5jbrWjhvh9YSv9cY6WhlhrWbGlcf
W7sT3OQ7Uy9ZeVU5g5FXMs4Tud2lGqZetzI34+y8oZprf1M1rL2bcW5g4e2M
swVTu7UHZ7yltcy9l3GeYOQdrSV+j/Zg7n3Nw+DXyiv5/Djj3MDLJ6rh4sOM
v3vwtTfjfLDuI43R36c91lv5VHGw9pVyzxlfZJw5mPpM87DzuWrmPtB1cd6X
Wks87yhfN/i68o3OgbW/9LxftvJdxtmCqf0Z54/+9xrbpHUPKB8HMs4T7BzM
OE9w95uYgIVfMs4fHP0oJoj5WWuZ+0l7EP+r1hL/g84k5pD2g7vDqmHqaMb5
gIt/VJPbv3WtzHXJ93v808qNxtunfH5Z+VbPgPv8V3Fw94nNdbbygrWP6BzY
j2adLXg5nnH+4C6S9Zq5Y1Ze01ws62vhLp71GqYSWa9hM5v1nMFIKuucwWA6
6zWs5WV9Hl7ys17DUbGs13B3QtaZgIXCrPMHR5ms78EZBVlfy9xJWecJRoqy
vpb4C7OeG/J2Ytb3Y90FWc8xc2dk/dnByKlZfwfg97Ss1/B1ZtbnYeqsrNdw
dHbWa3J7ftZzz77nZp0PmDo569cF++dkfS1zp2R9jPPOy/pa4i/K+vXCzsVZ
r2GwXNafddLKpVlnCHYuyfo8/cuyPkaeq2f92fE8uuU7L8WtfVXW3xOYKmHt
/5Tna7LOH9y1Mq4+t5iu/J131tcyd2XW9yH+2qyvhbXP+HtSK79b+/qs7wdT
JbNew1SFrDMBCxVVk8/yuifmymadLe6zTNaZo3961vNAniopDtZKZ51j1pXK
+jn0b8g6TzBSJevMwVpV1cxV1h7MVdNanlcNPTMYHG6loZVGVupmPWcwUivr
PMFdbdXkuZ7mYae+aq69gWpYa5J1bs7RvrAFU3W0xyk68wzNNcs6TzDSWGuJ
b6o9mGuueRjspByTt9ZZZwhG2qiGnRZZfwd4P1plnTnWtdQY/Zu1B1y0VRx8
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
MIE7Dk9cS8UR01pj7IWTkDVtszkvIJ5A+MDLhssNDmaoP7rIvYS4DTtoPrgB
qaeIhYe1FxzNVHw37Y2rEIbwFOKs22Pvcp/8nB+PMRx5HQrcm4gDsaviiOGz
qUc25xqcp/OCqw93HwzhaAxuQ2pchfD0qOYaKA/EwQoOQlyFcISDcIlyjy8Q
9yDc4BR8TCywFj/hnRoj5g7FsdcAxRHTR2s5G6ZWal8YWqU+HOACXKdcPqn+
MI1xb0N0f8F5SI3DMLgY54mFDYofrPngRVyt84K/EJ8hnOEvxM04WmP0R2qM
vZbl++9q4vcyBY8s71nwEeInhKln1O9Y6A5CnIMwgQMPVx1OQtbA3O5i9l5Z
KZXn7OzQOjjDC4hLED/hC+Ln5kL3GOK++97YuJvvs2x8i+1xlZWz85zHndpr
o40Vt3I6P3tu6++x9S/b+C/WHmTtV1jH+VYutzWdcRjZ3GCbe97GrrdyCT9P
bWNDbOxVrquY/wwlPz/5j40PtfHXbDxqscOt/Ya1j9n4MGu/znOxtddYOY//
H2t1OfrWfsbq66xcyP+ptLqClRJ5/o7yLPE6JmzPEbbPm9ZOW/s+a79l7Tds
7Q3E8Pt0rK5upbK137G6JnN8nbX1I23927b+NRurYqUsv+Pbxkfb+Ls2frK1
x1h7j7Xft/m6VmrbmgIbH2Xj79j4hzZW30o9Gz/TxsfZ+Ps2voe1VmrY+F6r
G1KsfY6tGc+/edqaT2yssZUmNn6pjU+y8b02/pWNtbDSxsY/s7qplebW/oLa
SktrX2TrJ9r6j2z97/Y877X2bmtfYeOTrf2xtb+zte2sdObnN9jPSkd+9sPq
VlZusvZVtv5+W/+JrT/f2hOs/aG1r7X2FGt/au3rrT3V2p9Z+weLa2/lVost
bePTbPxzmLGxW6z05udgbXy6jX9h4wdt7Ob/NXUnYNvM1R/A73fh9T73PTMv
2bIrW8gakexkTUol2iT7Uki79JJUKNmXRJu0SErZU3jtSylRKVtkiyhLkfzn
85zvfflf1/Ncc+bM+Z3fb2bumTn76f/3nqj+i/ow6sv3FB79/4cmal+PRT36
9N3T51FfPvv6MMJ9sOe5a/9/XM/3X/243fv/AyaKTs9Hffme6XF79v8H6T9m
zv7/YPVM++2+/f/HJqofn76Keu7paagXpN59L/XHD+z/D/G7FQPc/39C3aV+
++H+/1MT1TdQj0jjZngOevwREzVeH0m9++byHPX4w3v8tB7+aA/PVo+ghz/S
w4dOFJ2elfoEWrdelnjb11/SGo/Mb/zirFXPR/0DTx5WbzV9tIaeo57nFyfq
mB6R+gH613dSj8HH3PP+f4+epuvpD+vhY3p43h7+XA9/pYcX6OEv9PDxYjN6
+PM9/NWJGq9Hpz6Euwyqf+UHBrWvfyWcff0ud9UXqx/72X7sURO1rz/mB/vt
Qj3+Sz3+RM9dv710omoFb8DP29b+zf138ya2qp72mJ7mjIk6z7kC61c403um
3z9SjXZ+4f7/ih4+Ncf3HNR8enHu5vqMSqZWN/I7w6ozqobVlcGpQXrsqHg4
dlF0HjrWTam5pVbbsiPNvUq3Panf/npcByl1btRWOqXH35kaJt8b1nF1cebv
8ecPK+b/+8M6rubBNv3at+7/7zG3Xktt1QhYs4eb8PraqI5P6/9/MKyt/PI/
pb6F2ildT3PfRI29Lzno6gw8OFF5xvLPz+3HzpioPL9HJiqnU77xvP3Yx7P/
jcDy/n40rK18rKeS7yX374WJOg+5Pc8mF0dO1w+HNa/84/OGRS9HZ93+XGb1
fB/zu+q3Px7WGO9XPUQ38txNVOy8nI3pw4qVFnP/08BiYC/o4Xai4hkX6vn8
bFhxj2/tr9nMHFugx/9kWLzO6+FZPTyrh+cfVrybuL1v9vQXZr8JD7GwFw0r
xk1c0qLDilESP/fz8BArd1P/27syxxYfVnyTuLqrAotP+ZnvXr6nD6c/sH6s
Tw0rBmePnuZr/TV5rq14lx377ZrDgs/KdXKfPtDU93rhfJf1FtYT9sJ8r/Um
9m3X+3XNQfX9BO+hD1vmEit2UU+7cr77C+YcxY/u1tQ3d7GM0TvWs+M50oN2
r0HJAPoPr93DezT1LbZ/me9wvsv/TO/i1/c0ezUlD9h/Jn2M9Z89fli9bfce
lEyxVM5lK7V92pIlfLuWC58reh5rRK4gI+hZq1/tPk3JIfge0JQ8oLfyPoPq
d7vvoOQQvZf1ut2vKTnE/lW+7f9PJlkpPD/UlLxh/3/p1awfLl765u43qHUv
l3nIMiuH/6/6ca+LXDSn364TucUYa9Yf9doe94bILXqh6omr3+lBTcl1ejdP
SQ9nPXbJR2tkDZc4v8hF09OHWX9e8s5aof9YU3KOPs439tsNIsNcT94Zldyo
lyt6fVwPbkrOwWtG+j/rz2uta4SWDLVO5jJmnay9Se93z+ynmpKj7N9Kxol8
RZ5aLzw/0ZTcpd80uXLxPAvkJj2G9ReeSD9q8M097UajktkOaUp20rf6N/12
s8hss9LLeuNBXUd89IyVAyGuXUy7fe8WPWZfkZ7Ym6BpSn7bNMf0HtZXdsH0
yt50ULLeZuGvn6xexXqWzm5KxntTxuh5rJ/tHT1u68h+t9uOSj48vCl5Tx9t
8uDW4c+Ws0XW88r02d5sULzQ6G27WPpmbz4oeUxv7TcNSmZ8c+jRgfW/PbIp
+RAd2W37jHUM7DzIiTuEz6vSo3uLHv5DP27byKV/7rfbR848oim51Dq+2JTM
acxvXYNRybR3w0UWPaopeVVPcDLsO8P/XsdHJcce05TM+a5cUzR68y6bXuJb
Dkpu3Snw/T3tO/+fjKp3+taDkm/x2GpQcut7AuvtC9abF1984B4w56jk3lXS
53ybHv/VpmRj+8c3JdPqS07O3TU0eOn9rJ/w6ulbvi15zbpGJVf/qd9uNyoZ
Hp2xegv715daT+ETm5LB9DF/uN++Z/Sy/AynVzJZ+/05RzL17pnrUWuM/Pb6
9EXfjhzYlFxt/9SmZO99Mp8ezLP77d+tcVSy99Zqp0V+nt7jHhpWH+0nenjX
UcntZHC9z8ndpzcln+t/Tu7Geyy/w5HZ/2ldo5LDn3R+o5Lnz2hKPh/3Ude7
nQz/3aZkaT3Yn7XeUcnn5Hc93cnCT/e4vUYlw3+jKRleX3c6gS15/7/mHJVM
/q2mZHvjyeZ4k8+/05QMr6/7v53fqOR/sjYcefvMpvQF63ve2kcl89NlfVN8
v+gH+sST8Sd6+kNHJW+T9/WeJ8v/z3pHpTv8IHK+Y3SgvXJ/z40uMO4hr787
Of/86BH6uk+nd49Kd6AfoKUTnBedwpip9PpR6RT0GOPoB4Mef/Co9Iu56YOj
0k3oDfrH0w8ujHz+pX5/1MOzRyWr0xXgyPs/i06hdz19wpY+8b2m9CPXgk6g
hz09YB46/qhk8p9GPjffpdEv9L1ve/jwUekd9Aa4XfqxF0cfwWtWDx8xKn2E
nnHsROkWl0cfsU+fOGGiZHw6x3ETpWdcEf3F/q+ia6BbsIePGpXeQSc4aaL0
AjIIWWfPwKdMlMwzf0//xVHpQeSpkydKvrq6KTlGn3QyC3pyET1Fr+vTvLtG
xROfGcHfNKh+62eE5rBB9aY/fFB6jd7rp3u3hwa8QFfPpv7jc/c0DwfG86Rh
9Zu+oaue43qRn9HVuvTZxhfePNtnLs+suY2b7AffFh+9lr/Zj124K/gzbfV6
1dNz5qzq/6uPLn3zWzmXnw6qd7W+1fP06/n7sHrkPd2PfWRYPaxP7bdnT1RP
3gcG1cP4r4Pqr6qnr/6or2zqvMb08Pr8Lt6vZdGuxoP1hb5hUOPNi98n2+K5
4JSa8/vBv7WnP6yt/qOHtnU+el8+3OMPCf6aft5Hh3We2wWv/+vBbd1j9+Pw
jNPf9MGu5kPzaObSI3daf33erh6l31B//LFh9a/8XFvj4a/tj1+TNT2W6/TD
KTVOz8Fze/gvXdV8Vmd3Zn89Hx9Wv7m/TKkesX9ObzpwN7X6zelDp1/hr7uC
9QdzTN8ytI/1+CPb6s+E34UZu3hT9wt/x9FvrD9Ij39iWH2jngi9vlF7taWL
4/Olto7rKfVEz//LbfXw+M7U6h+jdwwc+A69Pvrr866e7pJ+/8uj0u/Pnlp9
gi7NuI3b0sPxMe7yjD2nK31cH5m7uuopox8IO8HlGfuu4PE8qq31mUv/mivC
R91sevqt/bXdpK359BoZjarm+td7/HGjWsM802odYDaB65qyF1yVa+1+ufZf
beuYPhebxV/3hmnlu1Orf1082+orsO+0sj9cHRrH4PUa0M9izsTLuGtD/2KP
X6mreW2vy9h5ZxWslrz68WwT7BInjAp2Lif08y7d1LmNgkf7VFdrAh/blr3j
VxmvZroa6IOe/yo93fUTxYMtG7xKfp9fD+0tuZ7sIreEx4ltHYP/SlM2RrLa
eV1df/XM2QTU3LhczYAev0VqSduyoahPfXJbthV4dhG1O9XtZEtRQ3gwvews
6girIcxGor7wuLawmsOr9/DJo+KJ/pS2jsHf0xUf9VzZbCZrFKsD3a/5yFHZ
u6zjt8GrY3xnxp42KpvLB6dXzVow20sbPBzbzl2hua8rWE1Ldpq/hP65rtaE
/idd8bd+67oja2YHUs/0xOm1/UvgXbOvxined2eun3VlI3Kt1Jpj32HbOaMt
+5G6lK/ryk4EHtuJ2IjUSr0n/Nlu1Bv8T2xHahc+18NnjmofzMbzQMayR6G/
NnUOHwjNNdmfk62xbFBnjGrea8NHfcPxnH8Lnq1InTs17tS6ezQ8r2/qvFaI
/erhwM/mnNXWe1VT90Md4XW6qrXHnnJbV7xWjJ3qofBU34y9a6ce/4aubGHq
pN3QlC0GfFx4WM9pbdn48L+xp/nmqMazral/tXNP8+1R2cuOnqvqZYHZzeYL
Ho5dTc0strUnAu8ce9rTeUbYz57J2Fc3ZTdTnwSfJ8OffU3dJPVv0BmrthLb
3b9C843Q75Tjz4Q/2Hxsd/7VHro09j3w42rLdPXM/iPzPBeeMwOb/+Ku1jVZ
I2Wi6vMYe/ao+JsLj/8GZgMEP5E5zceWeM6oYGMnwse6nu7q/fKb0Kntoq4L
+6B6Cmop7JRr/a4cZ09kS7S1v4Q80aZssGp3OKaux2LZsjnid2lXx9VjGN8b
NaK+NypeS4RerY+3zF12xmnDl+2WU4N3v9STcS5sv+Ale/wPRkX3lqyd3VI9
iHNHBc+eu+yd82Q97J7qSxwe+nlCg3ZGYPZQOf4XxF46DJ4tVK2S7Xt4n7bs
oni5DvBLZC41LA4LzUTWxi7KlnJ+bCr22Uh3aAuG/0XqDbC7LDiqWgU/6eEN
uqpHwPYKb4vux6Oyq7KXft27valj1jtv1szGO1/4sOt2uT5y3eXGy4tnywWz
YbL5GusasM8a+0Bo0bH3WreceTzYhBfK+uEWDJ8HmoLv6+F927Itj3OhbeeP
HVi+8/1zV261c2Efvjv78qzvbWpePI1BL58V7wXC37hFch2W6Nfzn2Hlx92T
PO27s108NOePCp53RtmX5dLKTfQv31bO4n6xaS+RcYuFXo6xnOEp2bILswn/
dFSwPGR2b3zm6+GLh5WfLJd4+ab2X51xS4V+YfJM8HKM5R7LO75kWLDc49f2
Yy8dVj7pIj39NYFf2cNzhpVb6rhc5XH+8HLht2FX9n33aZxj7Pjlw8o9lp+8
aH/82mHlpV42LBo5yas1tQ+/YlNrMpd85hXDb82meMktXaznc11gefYrh/aX
w8qd3rCH1+7prxhW7uotPXx94HWaopPHunjP5+bA8ublWMud9/tYI7j9yZ7D
yod1DH952d8N3piNu8q15g+4s+d/S+i/Fx8BXj+ki2R/166up5xMPgh5spvM
qNxGsHzHGbMqJ/fg/E7Wym9jnJvtNyVXDg/5dn4f8pzlON/aVh6n4/wJ6+T3
s1tods92ncC7dOUfMd9tTf1O1s3vw+/K73G3rn4Pckc/zN83rPxPuXtyQuX2
7dHV/bW/V1f3SC6o++AevaGn2aereyEv9Ep5xF3lI4PlJstpfw+Zd1g5pe9q
6/5tgCZ49HID8ThzRuUYopWfZx3r57g8eTnK6gBc24+9cVj77rnc2ANmVH4f
WM6fXELnBPebps5RfrSce1v8XOv1ct7us/xYubHmltOKx/5dzWX/jU35kLbO
tZZz6z6cHPiUGTU3PvIU2T7ZUtlFXxP/Pti5bpvz3ayrayTvVt6dfMgbvFf6
3/Pzw8qpPCV482zTr+HFYeUX/Lqt38f2GfPW8Hg+8Auua1PvN3yW8n0fVo7e
b8n+beXZ3RYecvI2aWpeNLfn+IvJtZKL9dp56l9+EdzSZIlh5WT9vq0xcrve
F5r399stm6KRa/OqUa0fLPZdDsNx/fZPbeXQyJmwbnM5jz+Q/3Ns86bW/47w
3Tnz3NLWb13O86t7/v/L9flLW/kWYufN8d7MuV1TNOLk726LTuz9VaG5ut/e
1daajL83x69JjLb47Gf67Vt7Pi8Nyx+9zKhgPO9ra4z46r9mK8b26ow1j/Fi
ap9OHC54efET5JZRxd9Oxrr1253ERvT4KaOKI32gLb67ZwwaPP4WnFjIO3Mf
5DYt34+bmrE7NwXvE757Z56H2hovDvORbMXKLTeqea3nqNAfLb6lx00Ln0fb
GiPW7vFsxVIdMKw4ql/08F+HFTcnXs5WHJ3Yy/c2xUf81fv8fvr9gzLOeDFY
b+oqpuojw/oXVyVG6+jEaVnXE23N7djv2XiHFZO1eVcxXngenzit47JFI2br
P035FPkTH2/KP7pWbJJgNkZ2SL5evjM+tI+H5pGmYHg+SXz4NJ9syqdqLBv2
p8OfD5OflU17y65o+Fv/1RQevGtTc7F5PtvUWPSbdiWv+J3/tym/rLkWacsv
xSfFf8h/yS/5UlMwP+bUtnyW8LvmHrj+/Ip8jXyFfIZ8h/yAfHeT8QGD8u/x
F27EXtoWPb/ksC08+nnaGotP29ZY9Hyenw39vG359vDk3wPzwS3els+Mv4yv
DMxHxrf2heD55Y7MOS7UFsyXx8f7mZzjUm352Izl3/t8aOZvCzbXcm29k/m2
Xt2Wn4yPjB/sqOD56L4U/NeHZWNlN+TX8g7felDP4z15/viL+I22id+J72rb
+J34kPgdVm0Lj2aHruykX/Mbass/gWad+IX4lXYPzG68Rlt88GRjZgPnD+c/
OmFYdmb+ja9m7C9GRbNXbM8nhA+b9ImhZ8c9ZVg224/3/D8We7RYH7bmmwZl
H0bD3jynKRsx+zA7MZht+dNt2XNPH5Zd9rTwZDM31wWxPcOzFb+5P+9tu5pr
+67sv8bOYfuNTDC7Ldux6/P5tuy5Z+Q+uB93xy575rBsqmy2Z/XwrKllI0TD
rrtnxp0be+1ZGcu2+o2M3bErG+s3h2WbxZPdV3yUPu1sm8e0Zd+0//OMZbMV
96TfNhspO+i3Q6+fMrsle+ZoVtnxxKNu3lZ/QbY4MapnB6/HKBq2R/ZFePZG
9n734uZB2f+MZQPU54Tdh61GzyY2LzYoveHY6QaxZYHFPg1n1XrEXLFZod8t
Nh98xDLpncEuwybDNgNmF1Jrmt3w8uji7Czil9QnZ+M4OrYFNGwR72+qRjBb
yYldbdkZTu9K/6ULn9KVHYA+zqaBD11/77Zqs07GaQ1Ll6YX79xVfU/j1XKE
p6uqz0dfpauuFF1j7eh8dEX66Hu6qrdFN3t3V/Xa6JbqtKGhS36jh8+KzkkH
ujR8vuP+Rq+jV+G/VuRoehldTG2uybil6IJgOis92NroxStEjzP2i23Z+v3e
VomORv/avasaQORyehL9iD61evQp8OuiN9G/9BNwL9isbo5+RCZfNzoRvem8
nuZHbekD55AHoueQ368In/d3VZcKnj5kLBn5A13Viroy9L8If3Wl6DmbRL8B
01/27KpWEZ3hUn6AtuCLXL+2zutn/faCtvSlD3ZV5whMd7ws12HvrmoP0Td+
0tOe35YO86G2aieBP9xW/SPvin27qm1ED/kleTjwL3r48rb4vKmtZ48dfOW2
3tXe4Qd0VTuJbnCzbWA6BL3iwMjydAN1bNRNgqdrkBPlWpLpyP5q7IzldLVQ
bojs/evg14suiedv2pLd1Vghp6ubQealX+BDtzioKx0ADZn8tvD8XVuyuxoZ
5Gs57GRhsvHvwudjXcnl6iyQvdGQ2T/RlfwtX/2PbcnW4D+3Je/KT6Zf3Bme
B3elM5iLrA1/XPSA34Xnp7qSuY29oedxfXQzMvYfQ39PW3K2HFfyr/xE8u+h
XcV0ykUk/8o78z0lV9+Va3tIV7K1sWTjv2Tsg23JwXLPyL++xeTZ+9uSv/E8
vCvZV37Rw23JuODZXcm1xpJn5W6QJcnG94XPEV3JuHJIDoxcKqb/H23JmuAD
2soJIduSYx8YviyTgsm9d7TRi/yG2pJN/9bDizTlN/WtXLArP6zv7Hpt+Z1n
9/DCTcG+14+1JWdbzytD79u6dFd8HuzhReNX9Z3lWwXzky7ZlA/S926xpvyg
vonLd+WL9L1bsSsa39Cl4ov0jRv7I/ki2aOezHuP7UJ9uUkbWnyavq3iM/+R
98P60Zf3iO3iycDqoT2V3zlbllpne8Y+8++8u9iRns47ga1JLbJ9ZpT9Sp20
vWaUXQvN3rF3wXtvbxCd95TYmoz1/mQj+vf4GWyqBppnmQ1KbbR9Y2t6Nu9G
9itr895eJ/TejR/qqm6a3/lGmevUHv++6DLHzKx6OC/kedw0OvWNbBLB/7eH
l+nqXvBHbx293nP35uinxyWflz7oN7999M3Jd0506lV6+C2hP76Htw2fXXr4
baGfM0/VTvlvntl3hOez81S+J/3Oc+e3Rqb0e+ODFxshnvuE4MUpvSfn6Hf+
7uiSO8+sGlDP5x11RsaKo9gpNJ6pd2WuFWaWzCmW4qZB/ZbJi37P4jXgz4qs
Ci/uYqFehll4Vvm+1Zdnm+d38Jsl//ndPtOW3Camnb+X31d8+Wpd+WL5Xvm9
0ZDTfPfZOckA/LRoyFf8gfyafIJf6cqfxVc4JzzJZmvFlzf244HJY3dkLN8m
n6SxZDM+NH41seBvacvPJd6bfMQfQ0Z6Mr6lsc8KTL5apikfhphvshGY7LRc
Uz4GPpC351zEUrPZs/uz+T+WefnOyE/oyWB8Z9ZAfuALQE+Omq+tmE+5Nn77
nk92Zs+WZ48t13cc7Bn0ffccegZ99z2rnlPPJTybs+84Pp5xz5bnjb3Xs+iZ
ZLO9ObBn0/OKDxuyZ4vO6/nyLfRNZMvyfcfHM/t88J4v3yrfLParFwJ71nyf
fKfYhf4X2PPimfCt9Bx5bnwfPTt3BGan4itzj/jEfId8j9h5/JaXy+/Z87Rs
nqmXQuO58x2CZyO6PXOxX/n2LBe7yjY5R3ZF36flY6vxrl8hNhY5YmLa5ZHt
0lT8+RTfhcDwH2wqXr3/aQ8eDSyPTJy5+HMhBmLIxTNPp2M2FX8OL9Z9xYyV
p7Zyxu7ZVMw5+idCLx9NfplYbjllcsdWCV4sN7y0c7HiYsj7n9VkHpl49evZ
kJqKUdf6Qv4aGjlT+zYVW47+ucBy2Z5vKobcXPLgXhf8U1kbnuLM4WcMKgZ+
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
A3j16Il8Hl8Nnt+CXkZH489Q74bdT22TyZj8YcXMi9Gj74gHpoN8oq04ezH2
j4aGLibWHv7s3CP3gu78zYwVoyc3X878OHfePjs5f4RaGfwL3+sKVtdCfJf1
yCd4JOPFI7GL35Cx4oPECY1t5GB29Z3ayuMje4sxFvPHVnxFW7HI4oR/GZr9
xOQ0FZe7X+R2sBw4Mbfi8MjnYnnF9G4U+f/m8L8msb77z6g4GXle60ZWN1Yu
n9hg+Ek5vKn55NfJO/9jUzqdmEuxl/J+nkoc5pyZFbsphlM+zJOJ87xiZsV3
gskVw/CR+y4nVJ9U8cBHt1Wb5SNTS4+4M3j1JNFsNKO28PSLvyde9ISZVc/F
2IOm1u+Nb+z4zPOnrFk/aHnRcpbFdekzPs6lvit42z8HZpN3L9jYxZ/rL87m
L8d7Mtd7IrnRTdXeVIdSX2m50o6h/2vqc072m55RuLvDZ5I29GLlzWtdcp0n
+1nPKL7ge0L/YPiIi5+EJyoX+4HAcr3/mvXbB4ufF+fmOrj2cm/1LN54RsXi
39+8PM/9mfffbb0ryIpoHwq9+PWHck38OyYnWA6Qd/ifYtPzruZzls8ldura
+AXAZFSyq1grNT/le6kHKv+LHPpY5n2xrdqX7Pbk18dDYyt2ig+CLAp2/D9t
8TGXPDO1PuWLkS+fDAz/eMY+3xYNWA1wNHwB5FixUMbJI+Mj52uQW6Y2qJyy
V+XY6yOXooH7b1t1QtHLPwOvE7lUDBYZWP7Zszkvcz6VeR17NvQvtDUXPNxz
oXetHsk54uP6yIOTJyfvjp/C9vnA/2urNiiYrCzP7Q3xa6AhY/v/T/j45qLh
SyI/i+sy7qW2vsXw5nohfMjT8uJ8o+XGgfk48Hgx9HCEVXiyLtg4wumU4MnV
4r0ma4d2VRuUb8K+XDt5drbTgpcDNzWw6/yvXHN4Y+XHTe2qHig/iDy7uQOT
9ecKjdy7uYK3/imZizyPHi0afOTikd3nCSw/D8wXQ16Xv7dhZH7xXmindVUP
FI3cPjR8H7ajwOR8MB7y/OT7/Tb06pNulLkmwn96V3hjyZniw+gF/tvQ23bh
M1dXNUbB8vbUBpXHR7YXn0pfmLuruqJs/vblFsortJ0vePmF8wamMyzUvlxf
1Fj5gDO64s83JE9wgcD0k/lDYw3zB+98Z2Uuugl6tAvn3UFWkZtoLn4iusBk
fJj70FW90d/HlyS+zbrQw8ttdH9m5vrL6xTHxtc2s6uapGD5kuLS+JXoM/bl
SMqVXCQ04MWCp+PgQ9+RW7l4xtpfJPPSL/DEb6KrmqeTcW7DqlW6xaD0n1cH
HnaF56uSd7l0YPRLBXYNFs75yq00lg/LtUAjT9N6lgyMZtnI1XQl8XPmHHWF
NxaPZQKzJ8sJZHP2Ll8+73O5z/qMyn9uuqpVCk9fkoe/1aC24uT4znwLVghe
DqWcTH4lOhoa4+R9qn+69aB0uZUDw78mfODEz/Fh0UHAaNuuxqKRe7RyaLqu
aqGC6WNyRLcZVJ6oOqfbDgon9o5Pjb4GRkt3WiM0ckPBfHO2awamdzmXN3su
uqpzenfWsErmoruhH9dcXTVz4fm6jJWHqmbpdoPit3auz3xd1UIFu26vD40e
AXJZ740vT0wePdH/OqGhJ+JjjXJX39BWzovteoH5MsD7Zty64al24hv7/xsH
Fc+vJp16dNb4hvC/PHhxI7YbBBZLAjbumK7q0Y1rzoHJyeJ85HbK6xT7IwZo
jNsofGZ1dY9cK+M2yVg9pNSkE3ck1mjTwGJ/0IgbmhO8unNijTYMT3mfxsov
IOs7Rzm24oLkr4n5sX1TYPmdcj7F3nw59dzGtdPAjFzqq6mhJm5HTXuwWCAx
POq7ic9Rl0xOqXgbuG2CVyNuy/C5J/Tqm6EVfyP2RowPesflH0zmIQwrr3Tb
0KhZBE9WlLco/kbsjfzF7QLTP+RFjHUQNHQZcSzqEKlBtF5XsFgUNZB2CE95
nPI5ybDigKxNjTV1bODld6gtZi76y0IZK17F8XdkrLiVd2T96gyoOaCegNxI
uZNkePI8mGyvVsyOgcVhuS/isOgudCT6i1olO/f/H55ReYtqfdBl4N4dPD1J
bRT6EX3GsfWDx0e9FHmJ6DfPGsyrXr26IXiqmTJpC20r74ycRkYkA/pXL5U8
+c/gyWny2pwjfcc49RfUSXAOk/mS0ypGxVjxKvQhNONaDe8N7Nn0zHtP+Fen
WL75rsF7Ztl3dg18q7zCrnLWPK+75RlXG3n3wPLE98gzflRXudxqex6dfO2L
8nygGddQ/ajnYlB6FRp6GZ8e3x59Qh6xGltipfg08eTflBdMD7kvOhd44egf
xi6ROCtj1e+SU6yOz7zJn5W3xiflPrjHdFm+O3opnfS2wFdH15Q3SAd0PQ/M
9Z/8rbWld9LLxTXuFf2CvZveIf7KvEtEl5VPSIflq9o/v0/xhsbS7+Vt7Z57
IZfc9blpULn3H8t1k2slFwuOjYENQr3XT7VVc5X9Ae3HMxaPjwWW+/+p0Nja
H9s2Ph283H98Fujhz7ZV63XLHn5LV7VhwZ8MH/Vd1XyFV//W9tDQqAUAdlwN
WfVcP9njj2gL/tSU4m2Oce3Z2Rn72cB4sCV8OM/g27qqE2usOrFH5Dd2VVc1
B9SPbWYVjTq0tp8L/ezMhb8aBUcEb2tf3YHPBYZXN0C9141S61UeOJuP7RcC
HxnYb/udXdVT9RtuZxUs9832qODZH9QmUJfA9ujg8cCXfejqrujVZVXfVX3Y
30+tPi/o5codFT7GfqUtGjGu6omq+3dLarSKVZVXx4YE9r1Da4xvqHjYYzMW
Dux7d1JbfG5NnVV1UPeZVv5k9VL3Tb3W49vK0bM9LvgTggcfm7nwh3NMnVV2
Kt8O34vJ+qWZ68y28vq9/8Wonhy842Cxq+qSqgW62vS6bkfmXsCd2lben7hX
dSdXT13Qr7WV92drX9zpaaFfPfVB4U+YXjjHxC2ckbEnBn9K6OEcuzffrzNC
43sqR5GtxXl8I+cy3veOUuvgzOAXDqzu3Ym5DuQBdhg2HTYTthz5fj9JzUAw
+9C32qp1wFazRPbH9e2+Fbx6CN8MzA6DHi2cY2Pcd0Kjrpq6A76f6qad3VYd
NlvHVst3FY1vKNsMW8+4xhqYDUedNfXWfO/UN/t+8OeEj7FfC/4jM4r2h6GB
+0Hgn7ZVf0AsxPdCg7d6aD8NXr0ENk32zHPb2t8kdiSwumrsjz9uqyab+m9g
MRu25wdWyw3P05PjLAfS+994fA9OjAd6/NYO3lxwPwkfPnprxk/OpdxLOLUN
5EDyuath9vO26pih/VnORQ03eDEeV7VVX+VDMyovU96mWAz13S5uq9aanEs5
nNcGp4aDuA50ajiYRy24i4OHuyj8jUH/xqzlwuDhLg29Wm6XtVXPjWzDRjy2
B4PJP5O1LNqSeeR3OkexIdflnPFg43SP3BN15H6V88L78lwTtekuC0w2cv7q
uqE1hp15TmBj1ZJzTH05Nd+uCt633HXDQy6n2gLqeal1QLYjvzk+J/S+L2zW
6t+pGXddW3Xk1Nm7LvS21wdWo+7GturU4YfvjZEB7VuXffSbhVadCjbz60OP
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
6oQb9385yTcT
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
925V2LwGqOn40cS+E5B8GKrDqaHDWSeOdWPuB1TaOO65soUPZqTXrrEaJl6p
vTOtF5QgTyzL8QuHi01cFeXslHawlgsYwXIl6B0Nit63hYPUhutzo626sT+o
yNDKqBjBknsuBT2b9NUk/+9x/1/c/scHBrB73xqnd6f4uK3mFftyJhUKfjrr
7chek44ZipxN9tozda47d5B83z9rn77RYgCqgxG7F3nw8WOejCtXngqR3MPR
S38Locf0MZZ4xcdH3Xox371ULLpnvX1LoBB9S7vDadMIXF4tMuvHEyquyaq/
dn0rgObUc7M8QMBt58hQnTkNtz3CClYzCAztGOlv9SFwcYJndVqOjguf/swN
YpD3kbqSK5dLwOtW8kvvQTrUZDyqk1x4mO/csqOohsCe73dzW6KY5O/tJ3Zn
ujiYfuejqNVHAgkNjnEWXq1IrqlbqruPDYGYRPmpVAL86tiYI4J2XH5bYRv3
moUJOa+9208S8Gz6tPY3uQMsqvzv2hn0Iok71ahkgI+aFlpDpnUfVGZ+1zWT
6MJpVYfiz7v58P4e1u6V2Y810Q2b9pq1Q/udu3e+I9m/taoLnpRyEPHK6ztX
2IL68tLeC4ZcSJpcjn7wjIfeqgRWZSEDfcFEeXsLGyVX16QsCCfAkn+RumAx
HZLBdD/n7yxoPrR7ymgW4JN2S6ovjQqle3d3O33ugWKo4dxFZULYP99/VnWE
guyXo+MbdTrAcvjA4YsMoP9k/MzvlyhYUpt+qPYJE8Yb2q/JvBbibtiry+sI
Ch4omGrTj5D9N3OmTcV3AcLnrk0rVaHBP93M1Hd6PT4FbDux/jUBqSVDv3dI
MPB6bYRT+IZK+DfeUj4myYfsCrPZZ+1aoNjy69fSuhJEadgK9qZzsWEpZ9pF
8j7kiqU7lb8Vw8+v8fFCUQ62it92nDbYjYCajll3VYvRvfp74jvnSV9N8v8e
n/7M1YSSLoSObhUhIM9jXfotHRWyB/T9zva9rBbi/tG9LC6dj7yohKJRLyru
JyhXpaQKsa8i1D1kiI95Py8nZdyiwjEzqWn9XiGYzfuftpM75FW9CZ3bQIX8
1fqbq4sFiAoyDJDeQnpm1lo35g4a7ouXFCyeIBB1/+jpqNME0tu3lz8epGF+
92j/ZbIDM1KPLXqbQvad+bhlWiod+pWR1hGjPEy9cXdsWjXJGx/phnUxwO9w
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
u8uBwDkfKeS0HpUudKqHTcFRifQp+Yh7vy+40YWHLaL6FnaqLHRMFnr/gEEg
ovCT+OhELgqNyraoNbHQU+h3IZqeBy4Wh6q+oecB8diIEUmx9Wi8E9nrJpuP
Cyqsk++W8TBWzXHqx6UsEO9z4uzuE5Cs26F9NZoLs9xFPr0VLAylGJnqxhOw
SLef1LqKi3KHx3au9g3IvDn6RlkbAZF1/iZUFxeZuTrFX3pZcHvt6HHkJIGY
VfdejTbiYvidqfRmbzb0bLMU3vkTCHpDjtYcw8Wddx6+Qjb12O2jdLhFLR/r
ll/zmrOFh88l+ZXm61iI1I20lckiUKVrmL8+gouaPF0Pwy8sfIp3ORJEx1d5
ebjm3RIuPiibVfYsrsdFUbm0Rs18KPeHGQq8eAheU6cRKszCo+6cPVIldD87
/cH2vEFzZfNNVW8fOv4qt8JBmjefzd0e7xPMRYRs6c3lw/Wona7P3D9IoOJP
my/O8jxE+TmdDk9jweBs4azhy3QdabnKmejKxQrm+eyGPhaOrn21U5k+n6rZ
3kuXLPn5/zL/q/9YHyGgUs5JC0B01opv3sPHfepIwXqXSoQHru7zofWiHa4S
BbRu2TJiV6bLP3/++d30/wFPGpMp
    "]],
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  AxesLabel->{None, None},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659261531379635*^9, 3.659261603299363*^9, 
  3.6593372559775457`*^9, 3.659337298369399*^9, 3.659337348317*^9, 
  3.659337413085596*^9, 3.659337458697318*^9, 3.6593376487602587`*^9, 
  3.6593377374985657`*^9, 3.659561503799135*^9, 3.659800220832807*^9, 
  3.660974465743548*^9, 3.660974671142708*^9, 3.660974848415309*^9, 
  3.660975352759605*^9, 3.660975470642219*^9, 3.6609755524846582`*^9, 
  3.660977049767825*^9, 3.6609775686616707`*^9, 3.660977662239607*^9, 
  3.660977833546731*^9, 3.660977961563416*^9, 3.6609791237681217`*^9, 
  3.6613415584240837`*^9, 3.661420640160942*^9, 3.6614218237949038`*^9, 
  3.6614228257300367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dp", ",", "surf", ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.50780365021*^9, 3.507803662906726*^9}, {
  3.507804088801086*^9, 3.507804089028099*^9}, {3.507804133030616*^9, 
  3.507804134866721*^9}, {3.5091623107823353`*^9, 3.509162315686616*^9}, {
  3.509162909534582*^9, 3.5091629162589664`*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxt3X+MbVd12PGrJETFTWOkjBpktZCkroSrJERogmJX3AskaiBNqYqrYkWE
NiFRUAtpg2jkqlA11hM0JDYBDRCBFSCdxFWwwo/cmNRYsXk5GGfsMC/jsXGu
jcdv7GfjH9gG/342dufcfT5ray3X/4y/b+1zzr3n7O/+sfY55/7wL//nN/7q
d81msxe/aDYb/577gpdfdsep/Xn7O8yvuf6cC889tb3A737b5WdefGoZfNb9
P/3W91xwdfDqinfcesWpIfhlFx7930t3gn9z/J8LdoPf+p6jHb5+L/iMt7zh
S9ef2g/+3Hzz5vdd9LXgC156dMSXroKfG//74m3Bf3zHqY2rLjjIfPqO4NMn
jvbw+sPgo6Odc+FH7wz+w/GAp+4KfvxTR/+weXfwz33o7Nd/6KJ7gv/goo+e
//CJbwR/+51H3+Cl9wX/i/ELvuP+4I+d//A7z7jqgeAHj07f2854MPi1R1/3
2gseCv758XjnP9zP33iCTnf+5Hj8T30reHv8/D/77YnPXnz16PK94KHOT47f
5yOPBP/IeAFf9Wjw+nh3dV4f73ceC14f7xWPB++MJ3TV+dHx+//WE8EvGevH
y54Mft14PnY7v/PWowrzm08FXzqen5ecDr52rH9f7vzweL7e/nTwWVddetFH
f+CZ4J8Zz9+VnX/9qLo+9kvfCf79o6939gufDT5+tPn5n+38wMbRDt/0XPCL
Ln7sU597tvNs+q/x1vTv/MDL4KNPc3SGri7xIXgdDj+2Fjet/2E3eLwcZ4cf
tt8PHqv3peGH/a2Cf/yyscRtZf8HwaNe14YfjncYfPe4+/Bja3He+u9dwZc8
Nlaou4MP15/nnuBXrk/AN4Lfv/589wXfPrYX4cfW4hXrz/tA8Hs/OlaIB4NX
68//UPAPjh8v/NhavGb9fTr/p/H6hx9biw+vv9+3g69eb9753vX3fST4B8br
P380+FXrv51/bWy/Ln4s+IPr8/F48BfHr3dr51Pr8/NE8Jlje3fOk/36rs9X
57euG6ingi9en7/TwV9oFzD45Pp8Ph3898c/G88E/+T6/Hb+92N7+tbvBP/2
+nw/G/xnZ64FCP76+vw/Fzzp8OrCs+xF/bsMzn5EPxOc/dgufmwXP2y/H5z9
2C5+bBc/tosf28WP7eLHdvFju/ixXfzYLn5sFz+2ix/bxY/t4sd28WO7+LFd
/NgufmwXP7aLH9vFj+3ix3bxY7v4sV382C5+bBc/tosf28WP7eLHdvFju/ix
XfzYLn5sFz+2ix/bxY/t4sd28WO7+LFd/AietXr/meIBXgbzI8eHYH5gfmB+
5O33g/mR97cK5kfe/0EwP/LxDoP5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfkR13fyA/MD8wPzA/MD8wPzA/MD8wPzA/MD
86PwrPYTmZfFk6vLvw/Buf9Ylv5jWfqPZfiBc/+xLP3HsvQfy9J/LEv/sSz9
x7L0H8vSfyxL/7Es/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/sSz9x7L0H8vS
fyxL/7Es/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/sSz9x7L0H8vSfyxL/7Es
/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/ETxr9fDKMq65MrbD/MjxIZgfmB+Y
H3n7/WB+5P2tgvmR938QzI98vMNgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+xPWd/MD8wPzA/MD8wPzA/MD8wPzA/MD8
wPwoPLsp9QvG9b2fwPzI8SGYHzelcrvB/Mjb7wfzI+9vFcyPvP+DYH7k4x0G
8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
I67v5AfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZH4VmrR8fLvPZ4+IH5keNDMD8w
PzA/8vb7wfzI+1sF8yPv/yCYH/l4h8H8wPzA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPyI6zv5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+VF4VvNQdV6R5+FXl/hQxlk7pV/ZLR7tle1i/aPMP4bwA+f5xxB+4Dz/
cLxY/yjzj6HMP4Yy/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/GMr8Yyjz
j6HMP4Yy/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/GMr8Yyjzj6HMP4Yy
/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/CJ61evmV8CPzMpgfOT4E8wPz
A/Mjb78fzI+8v1UwP/L+D4L5kY93GMwPzA/MD8wPzA/MD8wPzA/MD8wPzA/M
D8wPzA/MD8wPzA/MD8wPzA/MD8wPzI+4vpMfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH4Vnud2v6xg9L5Xn572fwPVvnp/vhB95+/3i1dfKflbBeX6+E37gPD/f
CT9wnp/vlPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6Zn++U+flO
mZ/vlPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6Zn++U+flOmZ/v
lPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6ZnwfPWr27IfzIvAzm
R44Pwbke3xB+YH7k7feD+ZH3twrmR97/QTA/8vEOg/mB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/ID8wPzA/MD8wPz
A/MD8wPzA/MD8wPzo/CsrnPXdYu8znf18+YVtZ/IeavdMk/fK9vvl3HY18r+
VsWz28p+D4Jz/mo3/MA5f7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1
W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JX
uyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/
FTxrH+tE+JF5GcyPHB+C8zjnRKm3J8KPvP1+MD/y/lbB/Mj7PwjmRz7eYTA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/i
+k5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSe5bxSvU+qr3vn/G7PQ9V5Re0n
cP2b87t74Ufe36qMy24r+z8o3t1RjnMYnPO7eyW/u1fyu3slv7tX8rt7Jb+7
V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7
eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/
u1fyu3slv7tX8rvBs1Zvbgw/Mi+D+ZHjQzA/cB7X3Fjq6Y3hB+ZH3t8qmB95
/wfB/MjHOwzmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmB+ZHXN/JD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI/Cs/PSOoT7Wvt9
UZgfOT4E8+O8Mq84r/QTefv9YH7k/a2C+ZH3fxDMj3y8w2B+nJeOe1cwPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/i+k5+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfhSetXpxc/iReRnMjxwfgvmB87z35jKOuTn8
wPzI+1sF8yPv/yCYH/l4h8H8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPyI6zv5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+VF4
djjVS35kXgbzI8eHYH7gnAfq84q8/X4wP/L+VsH8yPs/COZHPt5hMD8OUz91
VzA/DtPnuCeYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H3F9Jz8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Cs/adb8l/Mi8DOZHjg/B/MA5
L3pLmefeEn5gfuT9rYL5kfd/EMyPfLzDYH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfsT1nfzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8KDx7/1QP+ZF5GcyPHB+C+YHzOkHPQ+Xt94P5kfe3CuZH3v9BMD/y
8Q6D+YH5gfmB+YH58f70ue4L5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmR1zfyQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwrN2XW8NPzIvg/mR
40MwP3BeN7u15EFvDT8wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+YH5gfmB+
YH5gfmB+YH5gfmB+FJ69Yqp3/Mi8DOZHjg/B/MB5HbmvW+Tt94P5kfe3CuZH
3v9BMD/y8Q6D+YH5gfmB+YH5gfnxiuTt/cH8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflReNau2+3h
R+ZlMD9yfAjmB873Vdxe1sluDz8wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+
YH5gfmB+YH5gfmB+YH5gfmB+FJ6tpnrGj8zLYH7k+BDMD5zvM+rr3Hn7/WB+
5P2tgvmR938QzI98vMNgfmB+YH5gfmB+YH5gfmB+YH6s0ud+KJgfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfcX0nPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8K
z9p16e/FybwM5keOD8H8wPm+u37fR95+P5gfeX+rYH7k/R8E8yMf7zCYH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0n
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8Kz15T3huVeRnMjxwfgvmB832o3Y+8
/X4wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8wPzA/MD8wP16Txn0PBvPjNcnr
h4P5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/ID8wPzA/MD8wPzA/MD8wPz
A/MD8wPzo/CsnfeT4UfmZTA/cnwI5gfO92WfLPfZnQw/MD/y/lbB/Mj7Pwie
p3p0MvzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflRePbh9Jy29/L190Zh
fuT4EMwPnJ9T6PfR5u33g/mR97cK5kfe/0HwPLWrh+EH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmx4dTv9eZHx9O3+vbwfzA/MD8wPzA/MD8wPzA/MD8iOs7+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gflReNbOa/cj8zKYHzk+BPMD5+d2uh95+/1g
fuT9rYL5kfd/EDxP44zuB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmB+YH5gfmB+YH5kdc38kPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj8Kz
e6d6w4/My2B+5PgQzA+cn2Prz13k7feD+ZH3twrmR97/QfA8jbvvDD8wPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/uTd/zkWB+YH5gfmB+YH5gfmB+
xPWd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPGvnrb+nOfMymB85PgTzA+fn
OvtzSHn7/WB+5P2tgvmR938QzI98vMPgu1M9uSv8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5
gfmB+YH5gflRePaqqZ7wI/MymB85PgTzA+fnnLsfefv9YH7k/a2C+ZH3fxDM
j3y8w+C7U7vZ/cD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/HhV+t6d
+YH5gfmB+YH5Edd38gPzA/MD8wPzA/MD8wPzA/MD8wPzA/Oj8Kydl1PhR+Zl
MD9yfAjmB87P/Z8qz3GeCj8wP/L+VsH8yPs/COZHPt5h8N1pHHEq/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/IjrO/mB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5UXj2wale8CPzMpgfOT4E8wPn92D057rz9vvB
/Mj7WwXzI+//IJgf+XiHwfzA56V28u7wA/MD8wPzA/MD8wPzA/MD8wPzA/MD
8wPzA/MD8wPzA/Pjg+k8PB7MD8wPzI+4vpMfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH4Vn7Xt3PzIvg/mR40MwP3B+L0z3I2+/H8yPvL9VMD/y/g+C+ZGPdxjM
D3xeGjd0PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD/i+k5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSenZrqAT8yL4P5keNDMD9w
fk9Sfw9I3n4/mB95f6tgfuT9HwTzIx/vMJgfmB/4ktQu3hN+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfpxK5+WJYH7E9Z38wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/Cg8a9+r/25Y5mUwP3J8COYHzu8N6+/FydvvB/Mj728V
zI+8/4NgfuTjHQbzA/MDX5LGCd8IPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/4vpOfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH4Unp07
XXd+ZF4G8yPHh2B+4Pweve5H3n4/mB95f6vgeH972v9BMD/y8Q6D4/3tE8f7
2ye+JI2bux843t8+/Y33t08c72+fON7fPnG8v33ieH/7xPH+9onj/e3pvpZv
Bcf729O6Zed4f3vKSz8aHO9vT3mHx4Lj/e1pXNk53t+e2o0n+/Wd/MDx/vaJ
4/3tE8f72yeO97dPHO9vnzje3z5xvL994nh/+8Tx/vaJ4/3tE/Oj8Kx97nvD
j8zLYH7k+BDMD5zfK3lveU/YveEH5kfe3yqYH3n/B8H8yMc7DOYH5ge+JM0j
7w0/8CvTdb43/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPyI
6zv5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+VF4drF2cPIj8zKYHzk+BPMD5/es
9vcM5u33g/mR97cK5kfe/0EwP/LxDoP5gfmBL0l5lfvCD/zK1O7dF35gfmB+
YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+xPWd/MD8uDidt9PB/MD8
wPzA/MD8wPzA/MD8wPwoPGufq/uReRnMjxwfgvmB83uHux95+/1gfuT9rYL5
kfd/EMyPfLzDYH5gfmB+YH5gfuD3p+va/cD8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflReHbSuHny
I/MymB85PgTzA+f3cPf30ubt94P5kfe3CuZH3v9BMD/y8Q6D+YH5gfmB+YH5
gd+f2rn7ww/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj7i+kx+Y
H5gfmB8n03l8OpgfmB+YH5gfmB+YH5gfhWftuP137DMvg/mR40MwP3B+L31/
T3Pefj+YH3l/q2B+5P0fBPMjH+8wmB+YH5gfmB+YH5gf+PZ0HR8IPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+YH5gfmB+YH5gfmB+
YH5gfmB+FJ79pDzL5EfmZTA/cnwI5gfOv9PQ/cjb7wfzI+9vFcyPvP+DYH7k
4x0G8wPzA/MD8wPzA/MD357ate4H5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+ZHXN/JD8wPzA/MD8wPzI+fTOe1Mz8wPzA/MD8wPwrP2n6/GX5kXgbz
I8eHYH7g/Lsl3yzvof9m+IH5kfe3CuZH3v9BMD/y8Q6D+YH5gfmB+YH5gfmB
b0/9/DfDD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj7i+kx+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfhWe/LS8/+ZF5GcyPHB+C+YHz7/j0373I2+8H
8yPvbxXMj7z/g2B+5OMdBvMD8wPzA/MD8wPzA9+exr0Phh+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB9xfSc/MD8wPzA/MD8wPzA/MD9+O53nZ4P5
gfmB+VF41rbrfmReBvMjx4dgfuD8u1bdj7z9fjA/8v5WwfzI+z8I5kc+3mEw
PzA/MD8wPzA/MD/w7Wke2P3A703XqfuB+YH5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+RHXd/ID8wPzA/MD8wPzA/MD8wPzA/MD8wPzo/Ds69N14kfmZTA/cnwI
5gfOv/PWfycpb78fzI+8v1UwP/L+D4L5kY93GMwPzA/MD8wPzA/MD3x7yos8
FH7g96Z266HwA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mjru/kB+YH5gfm
B+YH5gfmB+YH5gfmx9fTeX8umB+Fp/8eDj8yL4P5keNDMD9w/p3D/jthefv9
YH7k/a2C+ZH3fxDMj3y8w2B+YH5gfmB+YH5gfuDbU17w4fADvzf12w+HH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0nPzA/MD8wPzA/MD8wPzA/MD8w
PzA/cPs7e3V8/vX52Zr+Hpvq/2eC/9f6818Z3Orb8eBWn78SnH+3+Vj5Hc5j
5XfVji1+d33+bw5uxW8JXq3Pz63BF310em/lxOvdxXvmji3e5r0yE7fqdhj8
Is99Tvwr6TmtY4u/cF/2xN+X7qM8tvgP6b6YY4tlWuc8tvh7KW99bPHmlIc4
tvhsGlceW3xXug7HFj964fh/nf/d0bd9yxu+Ffw/11+w85+sL8C3g/cvGA/4
SPCzJ8Z/6Pyy8fJ96NHgN45f59zHgt+9/p/Ofzxenfc9HnzinPEDPhF8en35
Op89ft33PBn8hnWFeSr4wjPGE9r5D9cX9HTwDWN1O+vp4MfHr/+lzj807v5t
zwT/3FvHC/id4HeNl++Kzn8wVpe3PBt83fh1X/Bc8IPj7i7vrL63v38S3Or9
5+P6tHp3IrjVu78NbvVuL65vq3f7wa3e3RT1odWzW4JbPfu7qD+tnq2CWz27
Lepb+/evR31s+7k94li8fY47oj63z31H1PdW705GHIu3engyfGn18DB8avXw
zvCt1cM7w8dWD+8KX1s9PBU+t3p4Kvxv9fDu8B9rP1q9vCfaD6z9afW0/04i
Vr+w9qvV428sXrf+mNrHYR73p071RfvZ2s1P9PtZp/j6dEV7avvl89pb298w
fu5ob4e58Uitn8qvv97rjpf9D89rr5Vfn79or4e58Uxtz5VfX7Yv3hDl8++O
9/Ze+XU167/bPI/7bUt/oPwXxsvbf6dzHvfjlv5C+V8cz2f/Xba58VTtT5Rf
/3P/HZ658Vbtb5T/9PgF+u8uzON+39IfKb9uXvp7tudxP3Dpr5R/91jh+3tV
53G/cOnP0vnv79Gbx/3Epb9Tfh3u702ax/3GpT9Ufq19f0/GPO5HLv1lqp/9
ueh53K9c+lPlf2j0qD8HN4/7mUt/q/y7Rh37cw/zuN+59MfKXzdezn6f6zzu
hy79tfL/aNS639c0j/ulS3+u/H8ZP15fx57H/dSlv1d+GJuxvm4xj/uty3hA
+RePF6TnqeZxP3YZLyj/9vF6Pxfz9nncr13GE8qvv3+MJ4Z53M9dxhvKr89f
jDeGedzvXcYjyq/P12O9fNwPXsYryl85nu6Pi5/d7xefyt811o/XPhLxuH98
in//eP3v7fG4n3yK/9R4oN97NOJxf/kU/+XxfPzUYxGP+821H2t9ezzuP5/i
V4zf972PRzzuR9d+jvXpx56IeNyfPsXPWDdvPR73q2uPxur07icjHvev60/G
+vNPnop43M+ufxjr206Px/3tU/zz4+X8jdMRj/vdp/ht4+Fe/HTE4/73Kf69
Y/W6psfjfvgp/hNjffq1ZyIe98dP8V8Y68/3fyficb/8FD82Xo4/7/G4f36K
/+m4uzc/G/G4n36K3zK2l9/9XMTj/vopvh6HfLrHzYfE9d/qq/4X5/nQdvSv
xovG43X7Op7U7/Ojbo+VM/40fsDirR/8Quwf81V5x8v724ryuPV7V8X5qPvD
9lfjthfH4q3aXRNxLN76rb+KOBZv/fy1Ecfas9avXxflsfJY+davXx/lsXjr
x78a8cp1PmCcoz02P9BeY9vX+YNxk+3NJ2xf5xfGSbY331C+zj/8Pq7+xXxE
/4PtD9u+9ds3x/bY9jXu9xT1f+Y7+kds/3U+5PfmbG9+ZPs6X/L7W7Y3f9Jf
Y/05tr863/J7RbY3/7J9nY/5/Rbb1/kZNv7A9oftr/5+SZ3Ped+/8nV+h42P
ary+317c/uv8sHJ9H7i4/df3h9f5pPfpKl/nl9j4scbr+2XF7b/OT7Hxa43X
93OKO16d32Lj5xqv7zcUd7w6P65c3wcnbv91Po3NF2q8vk9L3PHqfBybr9R4
fR+RuOPV+Xxl79swXxI3n8Li9X0v4j5PzQ9U9v4C8z9xXN+nIe7zyi/4PDXf
UDm/P+DGiGNxn08+wuep+QrbY9vLj4lj28uXiWNx+TNxLC6fJo7F5dfEsbh8
mzgWN56qLB8jPyGOxeUjaj4nP79+IsrLN9T8kLh8pLjxMHZ+lXc+sfOHnS/s
/GDj0Xq+8ufdeh63PGt/Hk7c+LCy8saL4ljc+cfON3Z+bK8+YvOD+v0Kz+r+
sP1h57uWb3nlXh4rj5Vveef7ojxWHivf/t4f5bHyWPlWrpfHymPl278/EOWx
8lj5Vs++GeWx8lj5Vg97eaw8Vr7V0wejPFYeK9/q8UNRHiuP1ddWr/v6LLY/
bH81bv3K/mv5Gsd8Uh7//9fDtsIXnOd/W2U9bKush22V9bCtsh62VdbDtsp6
2FZZD9sq62FbZT1sq6yHbZX1sK2yHrZV1sO2ynrYVlkP2yrrYVtlPWyrrIdt
lfWwrbIetlXWw7bKethWWQ/bKuthW2U9rF6P7Vg/Nh/HdX5tXp2v7zLWo+t8
+X1TOXHzX2y+i81vsfksNn+VnzM/Fcfxe2rT/BSbj2LzUVznl+qd+WGd310y
1UPzuTofM79yPc13XG/zEfXB/EJ9Md5Xn4zf1Tfjb/XR+Fl9NR5Wn41n1Xfj
UT7E+/Ymf4zv+IP5ZzzFvzq+wvp7rL/H+nusv6/vC6rjofz+qePl/T1fed54
Jr9/58Zgnxf7vNjnxT4v9nmxz3dmaQfy+1k+Exw+TRx+Thzt5cTGV8YHWH9v
PIHF9e/iWFx/Lo7F9d/iWFx/LY7F9c/iWFx/LI7F9b/iWFx/K47F9a/itb/V
vymv/1O+9Mevxrl93S75/M+U+DJY+5jb66HkD78SbB0y5w9viDyY8bDPW+dD
9X1F4vLLWD4Zyx9j+WIsf5vH28PzxrvqL/Z+Cux5fOz5Y+x5S+z5Mux5Guz5
Aex+aez+UJzvd/z2dF7/cPHyqZ9qfy+PONbvtXblz6b2+1uL1oxeG7w+/Rf+
9ZR/eXixbs4uOzG17w8v/uk6v7C/+PJUL/9mXeBri9+Y6vlfr327dfGPJ2/a
39umf79/2u5g8V8nr9tx7lj88HQd2uc4Oe3Xe/UOF/9tygu0vNad0+e4a+qn
7lr87ZSHaf3XXYvLp7xay7fdvfieKa/X+r27F/9svf0zi+9Za/KNxb9d5zm+
E/w/1sfr/H/WeYNng/fWn++5YOOAH1+fr6P50PoDPf08vmDtxb3BF60963z5
Wqj7gm9ef6/7g9vfzu17PBDcvsc3g9v36Ny+x4PB7Xv0dcrJi7lxFjbOwnkc
Zf3+C8HqIzZuws4XNm7CxknYOAkbJ2HjJGychOXZsTw6/uVp3ISvmPLe+Ixp
3ITfMuWp8WenPDNW3/AFUx4Yq5/42efG/+J3jOfnTHlXfP6UZ8XvmfKi+LIp
r4n5gJ+e8oyYP/hfT3k+zDf8v6e8GeYnfmJqZ/EP53Z2/i+nfh7zH39i6sex
9gI/MvXTWPuCf3bqh7H2CH986mfxl1O/OswfmvpJrL3DP7L+Pp21j/jn19+v
r59rT/Fvrr9vZ+1z483FJ9ffv3Mbb3feWZ+PR4JbO9j50fX56dzaxUeDX7I+
X51bO9n5devz91hwmw90fuf6fHZu7erjwZeuz2/n1s52vnZ9vp8IbvOKzg+v
z3/n1q4+GXzWWuDOrV3t/DPrBqNza2efCv71tXCdW7vb+ffX7dnp4NYOdz6+
bj86t3b56eAH1g1QZ+0r/ofr9uaZYP0PfvX6b2f9Ef6Pa+E765/w1rr9fDZY
f4X/ct2eddZ/4bvX7Xfn5nNn7Xlr5y+LeXJrqD8b44XWTv3tgi+tnerc2qm9
4NZO3Rjji9ZO3bjgY2uHborxRvtcX1vwubUztwS3dubvYjzS2pXVQvvQ2pFb
g41PtCft37++0N60/XRux7k9xjPtcx4stF/te9wR45v2Pe9YaP9aO3Fyob1s
7cLJGP9gceMf7W1rJw4X2uPWTvTxUWsn7lxoz+t4qbUTd8Z4qbULdy30H8ZP
+pfWLpxa6H9au3BqoX9q7cKphf7LeEt/19qFuyNv0Ty/J9axsf7ZeIo/4vwS
X9/++Cbjk415zF+n9lU+svG71vmBE6/7fJTP+aJhPt7f9qUvXhXxnD9q/f0F
MV7ZmOf8VB/fGI+PX/dEjF825jmfOMzHvb8+xi8b85xfHOZHu9m+I8YvG/Oc
bxzmN5xz4f+9NMYvG/OcfxzmRyf9qxfE+GVjnvORw3y8+BsxftmY5/zkML/m
+nOePBHjl415zleux1f/4OIYv2zMc/5yPV78vbNj/LIxz/nMYX7bFe/4+EUx
ftmY5/zmMP+Jy+74ozti/LIxz/nOYX7so+d/dh7jl415zn8O81ved+2Vl8b4
ZWOe86HD/EcvPPfLp3/8nojn/OgwP5r/7l4Q45eNec6XDvP9C166uiLGLxvz
nD8d5i87km0jxi8b85xPHebvPmrM3hnjl415zq8O8xPnXPjUiRi/bMxzvvWo
fpx1/3e/PMYvG/Ocfx3m//wFL3/ftTF+2ZjnfOww/9X3vO13HzvR4zk/O8w/
8NinPnh2jF825mX+vx7PnfES45N3zXP+YGj7+7L4/jw/37DZ8gNvfyTi+XmH
zZZ/+IFHI56ff9hs6/hX9nh+HmKzrcv/0mMRz89HbLZ19xc+HvH8vMRmW0f/
bI/n5yc227r4m56IeH6eYrOtYz/b4/n5is22Dv1HT0Y8P2+x2dZV/9VTEc/P
X2y2vMajPZ6fx9hseY2Pn454fj5js+XdXvt0xPPzGpst73Zvj+fnNzZb3u33
nol4fp5js+Xdfuo7Ec/Pd2y2fMZBj+fnPTZb3u29z0Y8P/+x2fJuP/ZcxPPz
IJvtft/9Hs/Ph2xGfsR4xvjceAbLl+DWTv5F5EvavPHLC+P/Nk+8LuJYXH4F
t3niDTHeaf36zXH/kPGJ/lz/rT93/4j5nf5c/+5+EONP/anxJxbXvxqPihuP
YnHljU/FjU+xuPLGq+LGq1hceeNXceNXLB75mGk8K47F9ddtXtHzN1hc/kZ+
AhuPKG+8gsVr+TZP6eWxuPwQbvOWnh/C4vJHuM1jev4Ii8sv4Tav6eWxuPwT
bn97/gmLy0/hVq96fgqLy1/hVq96eSwuv4Vbver5LSwu/4Vbver5LywuP4Zb
verlsbj8GW717KEoj/lr/evxo8P+zJ3ybRvleSTPz3iu6APr8fPnXvInpfwy
yo/6vz7ybxvleaOWz7o08m8b5fmilq/aiPzbRnmeaJi/8aheXhz5t43y/ND6
+B+7KPJvG+V5oWF+dJY+M4/820Z5PmiYv+Ss+//q9O/eFPE70vNAw3wcnF4R
+beN8vzPMH/70WTvnZF/2yjP+6zzg9/18si/bZTne4b5lZde9IP3R/5tozzP
M8w/P9/8yPlvOFm+Xx+Pfu/LL/vk5yL/tlGe1xnmv/DSsz595v19PJufzxnm
f3rmxX/+jnP7eDU/jzOM47drro/820Z5/mYYx2c759zcx7P5eZthHH/tv+/s
Pl7Nz9cM4/jq4FTk3zbK8zTDOH6696e/1Mez+fmZYRwfPfqpM/t4NT8vM4zj
n2ef+8UHI56fjxnG8c0L33J5H8/m52GG+b/50vUvfMt7+ng1P/8yzP/7uS84
8+Kz+3g1P+8yzP/oc0dV4Poez8+3bLbnd36jj1fz8yybi9eOx3txH6/m51k2
2/M8V/d4fp5lc/GR8Xi/1ser+XmWzcU14/G+v49X8/Msm4v7xuP9eY/n51k2
Fxvj8d7cx6v5eZbNxXz8+919PJqfZ9lcvG083qd7PD/Psrn40Hi8N/bxan6e
ZXNx1Xi8p3o8P88y5Zc+2cer+XmWzcWLxuP9bB+v5udZNhfnjfRgj+fnWTYX
vzIe7yN9vJqfZ9lcXDIe71V9vJqfZ9lc/MV4vLt6PD/Psrk4HI/3O328mp9n
2Vx83/jnFX28mp9n2Vy8cjzeqsfz8yyb7Xmg3+rjVeu3cf2m8Yjxqv7BeNT4
tM3Tvxjjy5aH+ZvIt8mvyTfJR2kvsLj7O+RvjJ/kB42vcI0bD/m8xkPry3PV
VcHGnzGemr5/3b7tt/ev2PGw/sv6rvUkxzPf1Y9pr+t42vqi/sb9w9Z7rCfq
T8St78h/6c/cH2J9qeXF+++fiVuPau1k//0zcetPtrc+pbzvZf3b+pjrk59r
+kC5j6qz817/5ueWPhD54MrKu97i6nNl5Y3HxY2/K2cProu49cLKyls/FHd+
Kiuv/ovLV1ZWXn5T3PWsrLz6IO56Vlbe9RdXHysrbz1SXH62svLqr7j8bmXl
5YPF5YsrKy+/LH7ZlH+urLz5rDg/Kytvfixu/F1Zeflzcfn1ysrLx4vL11dW
Xnsqbj2gsvLWD8StL1RW3nqEuPWKyspb7xC3HlJZeesp4tZbKitvvUZcfqOy
8tZ/xPVXlZW33iSuv6usvHyMuP6ysvLGj9pJcfn9Vm472jmfz/qX/gX7vNbD
xLHvbz3M+Bc7X63e3hTlsfNtPUw+GLt+rV79XVwv7HrX+3esf8lP1/Uw9/Ng
z7Opz+7nUf89LyaOtSfWk7RH+lftl/4U62+Vz8//XBfjCe1/HV/U8crp5O2y
PK/yhRg/qCc1f2P8IV+KjW9wfp9H7/9av/uxyE+K5/v1en2t5bH+u/WTV0T9
b/3SEPWxtfNfjfbT/bjaX+t/+hPjDf2X8Z/+2Pn1ffP9pcfK7/Ude977smJ8
N12fwjPfX34jj4eXcZ2MT3z/+ty1/Rk/5/sXr4zzZTytPcDK3zR9DtcHuz5t
HHFN7A/bH87Pdx8vz3cfj/21ZuF47A/bH9a+WFd0vc0HzJ9x/j670X42L3dj
e2x7bH1J3kf7dNm03q89q2w+or1yv7r2TD5cvgBbD/M8sfbN+r/8A9Z+ef5X
++Z+APkMbL3O87r6V+v/8iPYeKn+vr3xuvaKP9j96sZ/xu/mC9ojcb7h+nvL
+XnD62K8j/lo/CvuumvvxPmM6+/TKm98rDyu9/Mqb/1BeVx/n1R56w/K4/r7
pcpbf1Ae1983Vd76g/K4/v6p8tYflMf191Hr/Lj+fnB+nu8TpX/ZjvvjxfU3
cX/m1J5qz2yvvcv7W5bnAT8f+4v2cdqf9lV58zflcf09Tecj1gOnuP7A9spj
5d1vrbz1DuWx8u7HVt56h/JYefdrK2+9Q3msvPu5lbfeoTxW3v3eylvvUB4r
735w5a13KI+Vd7+48tY7lMfKu59ceesdymPl3W+uvPUO5WM9ZPpP/2x796fb
3vqH7ev6iP6fH9j9AuqlfC023rE+q38yb9fvqb9xf02q35+IcUgeH/R8Rc1H
1HxDzSfUfEHNB9T5fp3P1/l6nY/X+XadT9f5cp0P1/lunc/W+Wqdj9b5Zp1P
1vlinQ/W+V6dz9X5GjY+Ma413sHGR3U9v13Hy+M5F8/zYeM99cn6fzvu1vOe
F9SOqj/Glz5nZeNR9Rmrz9jxbZ+f7/urGG9h4zPjeeXr84dYec97GF+aF+Xx
7fVx/tu4fyf2730z5rueBzH+Mx/F3hdj/up5EfXB+2XEsfGb+anxnvmp8Zf5
p/po/imf7f0l5pueN8HeZ+L+LXHbm7+an3o/hfEdNv+s9z/W8aD5rPNs/IWN
D7Sf+m/tZzxPMv1X55/aT9vj9jGHqLfqkfmieQbO77P6WIxH+MA77W/OFy+j
/rR28S/DR6y+YeVbu/mlKI+Vx+V+syjPB/Xd/JYPOL+/6kSU97yT+a/nUc1/
jdfNf42/fQ7jb965vtj11U8ZL2Fx99eIY3H304hjcffPiGNx98uI43j+dLpf
Ju6PmVjc9VYfsfoY9WHySDsnHusDZXzo/hf1HYu730Uci7u/RRyLu59FHIcv
0/0r8f7uicXdryKOxd2fIo7F3Y8ijsXdfyKOxd1vIo75m9dlrg42ntG/8U1/
iOWhsHZC/2yco/+27qG/9/4u4wHv0zKflu9z/wE2vrD+6H5c63Huh8DGL+6H
c3+v+93cX4GNf9wf535h7zey/oeNn+S/fO88vzoe4wjnrY43aruI1X/lXSf5
KP2ndkG+BOt/tVfaM9dDe4ddP/kX2xuXyr9g+Rasf679veutPNa/y7/Yv/qg
f8fqj/yL/l5/Lj+D1S/5F/VFfXJ/DLYeoz9XX+Q7rQdZ71U/tP/yo56PcL+7
+oK9r8B4XT7b+DHnl7eelx/V3ub7T/t4z/VX3/gsLv+X68Px+H7qv++jfuf3
XX4mnkezf/VFvs94EOf7u5exvfFsfp58J76f8aX2wXjM+lZtD9w/Zz2O//px
8z35LMzf3D9dGe2fz435WPO98l7ON5/4IB/Jl1r/5R+tv9T6Lt9oPUb9zvnc
q8Jv7PP4vPn9lddEeZzr0zXx+Z0n7Q12/eWLfR/tC/+x7+/8+H51fI+dD/ld
+VrtCf+x8+P8qj/aE/MDbH3K+Tbe157oj7D65/y7/tpD5xNrX7WPzr/v53xi
/af5EH/4bn6IzQ+Nb/mkPcjrCSei/9Y/xPND03hLueqD+bD+SX3y/eTrfX7X
y+er6xPah/w+2Buj/tmf8yX/r77Zv/Oj/ub80PFobxzf+VF/8/rMbrQ/Pt//
A1cOKr8=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxEnXWYVlUXR9+OGWbG7m5MpFu6U1pCREBAQhQUpKRLUgERREoaBZESA7DA
VixsRTEQA7BQ4dvr27/zvH+c5+Q+5967131ngGHWhV363dg3FolENp8XicSt
/qswErmyWCRyRl4k8re1r7b2Odb+x9olrH2Rtf+zdmlrX2Hto9a+1trnW7uL
1X2s/iobiRyz8bLWv8r6kaJIpKK1r7d21NqVrV3a2v/ampLWvtTacRuvZu2K
1k5Yu4a1q1j7uK0pb+1rrR2z8arWLmftpLVrWbuatdPWrmftOtYuZu0brd3K
2llrN7J2I2vnWbuJtZtau8DaLa3d1tqF1m5t7fbWLrJ2W2t3snZnq3tZ/aXd
y4k23sH6Xa2fsnYda9e09gnWvsnat1g7Y+0G1q5v7ZOs3cnat1n7cbv9IVaG
WulqY/1s7Gvbs4e177L2N9buZe2B1v7W2n2tPdja31n7TmsPs/YP1u5t7Xus
vd/a3a3d39r7rD3A2iOs/aO1B1l7tLV/sva91h5r7YPWvsPaQ6z9vbWHW3ui
tX+x9n3WnmztX619t7VHWvuAtUdZe4q1f7P2GGtPs/Yha4+z9gxrH7b2HKsv
sFLW7que3W9dKxdbf5KtmWX177bmXKvL2PxtVs60dmmru1vJt7XNbN2NNnaZ
lfI21stKGWtXsbqfleusXcnqPlaKW7uC1bdbudraFa3ubWWC7fGA9Y/YWSWt
rmxjfXnWNj7e+j/beHmrq9rYHVaqWrua1XdaaWzt2lbfY6WWtWtYPcBKXWvX
tHqglWbWrmP1ICstrF3X6sFWWlu7ntX3Wuli7UZWD7fSwdoNlOsG1q5l9d1W
2lm7vjioaDz3sH4Ta99sdUOrh1mZRryVjla62Xhjq0dYmWqlvebGcR1WWloZ
zfVZaW5ljOobrYzXfCuej+rWViaqbmNlipWbtO9kK225Rs61a3sg354zedRa
5h7O87NGWblfa4mfruvtZGWG6putPKZnfJeVB6x0tnKLlZmap/+gxrpYqW77
V9f6h7gOcTLZ8jjP5v6wPC5Q/sn7fCs9xcxsK7fyblmZm+fj86w8aowtKHL2
HtFa4mfpTGIe1X4wtlA1/CwXCzCwQjV5XKZrZG6plf66zyUR54t+JbuGG9Re
qTgYWxxxrlm3SOfQXxtxjmBjdcRZg7E1qplbpT2Yu9Q+rA9F7R208kTEWYOf
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
iJxfHHO26J8e83Ng+cyYs85eZ8R8jP6FMT8TZi+KeU38ZTFnC6ausPbvYrN4
zGs4ujLmNZxeHXOeyPm1MecDXq6K+TxztWP+jHh+18V8nq8J18ecMxgsGfMa
Bq+J+X7sVTrmbMFFGdWwUyLmexBfKuZxrCureZgqH3PmYLBKzJmAkYoxf6/g
t5Jq+KqqeXJ+g2pyWE01ua0Vc3a4nyuNzeJWNhkz5XQm5y00jjbyd+fWrqDz
Oe+KIo+taWWJlTus9LdSR88GpuqJS3ipr5p8Nox5/shn45jzwXvQQPPM1dUe
xDfRPLw0izlD8NVcNQw20n7s1SLmLMJFS9Vw0VR7EN9KY7DWWjUMtlHN38N1
jDkf5L+Tahi5ycrlMWeqQ8x5Yl17jdGvrDyQp5sVBwtdY84KjHSJOUPkv7Pm
4e4W1cy11bXA8q1aS3w37QEv3VXD122q4au3cgYjPWPOE7ntpRqm+mgedvqq
5tr7qYa1yZbr8fwdSL7nGLZg6nbtUUH5r6K5005wLgZa+dFifyhy7rbw9/BW
D7Byd8zXwOBo5ZV8Dok5N/AyVDVcDIr5uwdf98acD9YN1hj9MdrjRivDFAdr
o5R7zrgv5szB1HDNw84I1czdo+vivJFa21T7whpsjVUf1h7Wc+9hZULM2YKp
8THnj/5EjbXRujLKx5SY8wQ702LOE9w9ICZgYUbM+YOj+620U8x0rWVuqvYg
fqbWEj9JZ8LRg9oP7maphqn5MecDLh5RTW7n6VqZmxtzzrjPh2LOH/1xegbc
5wLFwd2cmLPOutk6h/7imLMFLwtjzh/cLVLN3KPag7kL4vY1xeqfrVxk7V+s
/tVKoTGWtLKVf088wVlbbmVlzNkih6tjzg2MrIj5GuZe0LPjua7RPEw9HnP+
4O4J1XC0Svux1/qYcwMvT6qGqbXag/h1imPdBs3D0caYswjvT8ecD3jZHHN2
YWqLap7rNs3DzjOqyedzViaLhZ0x54b72R5znmDhKZ3Jec9rLXObdD7n7dBa
4n+393uylcX2jr+oZwNHL8ecRdh5RTXs7FZeyfNrYgJGdmmeuZe0B/Gva553
5c2YswV3b6mGu1e1H3u9E3OeYOFd1fDyhvYgfo/GYOc91fD1vmq+Ln0ccy7I
/yeqYWRKMZu3e/07a98TWX+Z1j2b5+2PrGxVHsjTp4qDha9izgqMfBFzhsj/
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
52tdc43Rn21fFz4gF/Yut1IcLNyUcFZgpK0YIv+tNQ93bVQz11TXwnnttJb4
erpv7rO99oOdjgnnDL7+sHfr9yJn5OaE80RuO6uGqan83Kh9zuy1a11v7XVF
/ECdfcYXOV/drPQUN+WUY9iCqVu0x3XKfynN3Z5wnmCkh9YSf69yxrX30n6s
G6y8Mtc/4dzAS9+Ev28w1U81XNypeXi5SzVMDVANC4OUb/a9O+GcwVFvXRfs
D9Ra5vpojPPu0Vrih+h6YWqoapiarmfdycrwhPMER8M0T/8+K40TzlQn5YQc
jE44Q/AyNuEMwdpEcUD+xyecOdgZJQ6IGae1zI3RHsRP0FriR+pMYiZpP1ib
rBqOZooJWHhANfmcoWtlbpqVDrrPqQnnrIMKrMHZZ8bKp1a6WHtKwvlm3f06
h/5DCecIRj6xtV2tnm1lTsLbzM219+VzPtf4Ox/7XP48aV8vrDyccObgaH7C
WYSdR1TD2qPKKzlclHBu4GWB5pnbqmfHc12s+TusLE04czD1mGqYWqj92Gt5
wtmClxWqYWqJ9iB+meJYt1LzcLQ64SzC+DrxAS9rE/4+wNfjquHrSSsjEs7O
BtXk8ynVsLAl4dxwP5sSzhMsrNKZnLdRa5lbo/M5b7PWEj9Pz5Vn+rSeDRw9
k3AWYedZ1bDzvPJKnneICRh5TvPMbdMexO/UPO/KiwlnC+7+ts+Wv4qcu+3a
j72esrENVuL8rHaRM7LLygvag/jdiRw7r6qGr9dU87Xo7YTzQf7fUQ0jbySc
J+77rYTzxLo3NUb/CeWBPL2rOFj4MOGswMj7CWeI/O/RPNy9p5q513UtnPeB
1hL/kfaAl72q4etj1fD1hXIGI58mnCdy+5lqmPpS87DzlWqu/WvVsPZdwrmB
hW8TzhZMfa49OOMbK+s190PCeYKR/VpL/Pfag7kfNQ+D3/B/tvj7F2v/knBu
4OVX1XDxU8LfPfj6WXyw7qDG6M+3d38//67F/9FSHKz9odzDzpGEMwdThzQP
O4dVM3dA18V5v2st8byjfN3g68rXdsYrVv9tpSDpz/0TK/8mnC2Y+ifh3NH/
T2Ovad0K5SOSdJ5gJ5Z0nuAulXQmYCGRdP7g6LiYICae9LXMRZO+B/HJpK8l
/pjOJCad9P3gLpP0GqaKks4HXJyQ9JrcFib9WpkrlnTOuM/8pPNH/2jCnwP3
eWLS4+AuL+mssy6b9HPon2btfeLl5KTzB3enJL2Gu5OSvgdzpyd9LdydkfQa
ps5Meg2b5yU9ZzBydtI5g8Fzkl7D2vlJn4eXC5Jew9GFSa/h7tKkMwELFyed
Pzg6N+l7cMZFSV/L3OVJ5wlGLkn6WuLLJj035O2ypO/HujJJzzFz1yT92cHI
d8bSX1ZfaWNXJb0NV9cmfR6mrkt6DUclkl6T29JJzz37lkw6HzBV1j73vs9z
9q9P+lrmFtg78qONJ62USvpa4svpemGnvGoYbJT0Z32WlYpJZwh2KmiefiWN
kefWSX92PI+qSWcFdqol/T2BqVpJZ4U810g6f3BXJencEFNda5m7QXsQX1Nr
ia+sM4mprf1gqo5qmGqSdCZgoalq8tlY98Rcw6SzxX02SDpz9K9Oeh7IUzPF
wVr9pHPMunpWTlW/ZdJ5gpEbk84crLVQzVxz7cFcK63lebXRM4PBB6x0tnKL
lWlFzkUHK5usvbHIuWtq32vvKjCmLY8dkzl2Oqnm2m9WDWu3Jp2b67UvbMHU
DNtvOv/OkudnXqO5buIJRrpoLfFdtQdz3TUPg3cpx+Tt9qQzBCO9VcNOj6S/
A7wfvZLOHOt6aoz+AO0BF30UB193igPOuEOswFdfzcNCP9XM3abr4rz+Wkv8
g7p/7mmgzoGpScpBWyuDks4THN2TdF7p32ulrnLeVrni/R6WdG7gaETS3xn4
Gp10bsj5yKSzCINDk84QMfdpLXPDtQfxo7SW+CE6k5gx2g++xqqGr0X2Xh+y
HGb4/71W2tvYFCu/8n+arbSz9sSkv5/c54Sk80f/bj0D7nNq0mPhbXzSmWbd
OJ1Df2bS2YKX6UnnD+5mqGZumvZgrgz/99B4/dKuY5aePTx+b2WjlU1WHko6
czA1J+mc0Z+rMfK5Qc+LZzk/6dzA0YKkMwdri8UBjCxMOkMwMi/p/BHzqNYy
94j2IH6R1hLPZwNfW/ha8rDOJ35p0nmCxzVWBouLVWIFdpYnnWP4Wqt5cvi4
avL/pFjhfpYl/f0h5jHtTX+J7oPz1iWdMxhZr5r4J7Qfc0/p2YzSM4U/eNlt
Zbae65akc0M+N2ue/laNjVdORin+d/4feZ6/H4etvt/q56zsVI7J//akswY7
25LOFqw9n/T1zC0xPv+0+KyVHVpL/NM6k5gXtB8cvaga1l4TH7Dwumpy8qru
ibldSWeL+3wl6e85/RXKA4y/oThYeDnpn7Ose0nn0H8n6TzByFtJ5wxG3lbN
3Jvag7mV2pvcv6s4uNujGqY+FhNcy17lm/4HyjFMfaJ59vtUNUx9lXRuyPM+
cUD+D+n58uw/1B6ww5914RLuvlRNPH8OXq25j7SW6/hae7PvN9obNn9MOh/w
ckA1jPyQdLaY+y7pzMHL/qS/n/QP67rI80+KI8/fam/W/ZZ0jriHX608q/5j
xsm/xkge3xPl+fgvVo7y/1HznC9yzOcHnxFHdA48plL+3N+z8n7SPwt4vn8k
nS2Y+l1r6R9NOiuw82/S3xOYiqScFfL8j+Z3a99F2vdP7Qc7x5LOKGweV038
f9qPub+Tzhzn/aU4+tGUnwNreSnPJfnJT3kNL9mUs8JcMuWccZ+ZlN8nc+lU
7r5PsPZnynlhytmCqVjKz4HlRMpZZ694ysfoF0v5mTBbkPKa+JNSzhZMnZzy
GjZPSXkNR6emvIbT01POEzk/M+V8wMtpKZ9nrkTKnxHP76yUz/M14ZyUcwaD
56a8hsEzUr4fe11i3/ssL8Z/+LV3mL8DsPIf/5c25XsQv9fWHMtzBmcWOUcX
2vzFKWcOBq9IORMwcmnK3yv4vSzlNXwVT/k8Ob8y5TU5vCrlNbm9LuUMcT/X
pJwt2Lko5edy3tUpX8vcJSk/n/OuTfla4qdau72VDlauT/mzgalSKecSXkqr
Jp9lU54/8lk+5XzwHpTRPHMlU74H8RU0Dy+VUs4QfFVWDYPltB97VU05i3Bx
g2q4qKg9iK+mMVirYaUo5QzWVM3fw9VLOR/kv75qGKmdcrZgqm7KeWJdHY3R
vzzleSBPDRQHC3HLfSzfGWmccobIf0PNw10j1czV0rVwXhOthbXLjJMVxlLS
9prD3xdZiVp7Fv9H2+ZvtNIm5TmDkZYp54jctlINU201DzvtVHPtN6mGtU4p
5+Zq5Ri2YKq19rhE+b9Cc51TzhOMdNRa4m/WHszdonkY7Ku8ks/uKecGXm5T
DRe3pvzdg69u4oN1XTVGv5/2qGKlh+JgrY9yzxm3p5w5mOqpedjppZq5Lrou
zuuttRW1L6zB1h3qw9pYPe8WVgZYqZ5ypu5MOX+wNlBjNbXuAuVjUMp5gp17
U84T3A0XE7AwNOX8wdE9YoKYIVrL3GDtQfwwrSX+bp1JzDNFztwIKxljJZ3v
TI1POR9wMUE1uR2na2VujJXmus+Hirw92kp/PQPuc6Li4O5hWzPXSsrOWGWc
5lldYJ9rU1LOFrxMTjl/cHe/auYmaQ/miqXtM9Hqj60UpL3+xMqMlHMJUzNV
w92DKWeLHM5OOTcw8oDmmXtcz47nOkfzMDU35fzB3cOq4WiW9mOv+SnnBl4e
UQ1TD2kP4ucpjnULNA9HC1POIrwvs3KXeFmccnZhaolqnutyzcPOCtXkc6Vq
WFibcm64n9Up5wkWHtWZnLdKa5lbpPM5b43WEj895e8qz/QJPRs4es5yWGS5
K7SyxvJ4Im3L41M2N9LKKCubxAKM5Of7+AYrlS22WL6zvFnzvCtbU84W3D2t
Gu42aj/2eiblPMHCs6rhZYv2IP45jcHO86rha7tqvi69JD7I/8uqYWSnlWm6
7xdTzhPrXtAY/aXKA+/xK4qDhddTzgqMvJpyhsj/Ls3D3W7VzO3QtXDea1pL
/BvaA17eVA1fb6mGr/eUMxh5J+U8kdt3VcPU+5qHnQ9Uc+0fWXks5ax9mnJu
YIF3CLZgao/24Iy9Wsvc5ynnCUY+0VriP9MezH2heRj8SXklnyfx/xat/sbK
tylvw8Mn9jXr1Hzn63Nrf2blBGOppf05u4WV023uoPbg5xT2Kw7WDij3nPFD
ypmDqe80Dzvfq2bu5Hx/z7+08qPWblEO+BoG6z/rHFiLpf25v23lt5SzBVO/
ppw/+oc0tl3rHlE+fk85T7DzZ8p5grt/xAQs/J1y/uDoiJgg5i+tZe4P7UH8
Ua0l/rDOJOZf7Qd3/6mGqUTa+YCLZNprchtP+7UyF007Z9xnJO380f9Fz4D7
TKU9Du6Op5x11h3TOfTz084WvGTSzh/c5Vn7w5TPpdO+B3PpjLVZZ6Uw7TzB
4yZrj7YyxspZ+c7cCdb+0rj4wsqJ/M4n42KBlTNs/isbOyffubsq7c+O53qm
je2z+lQbOz2d4+6MtNdw9I3F7rNyku15Vtq5gZez017D1Glp34f4M9Mex7pz
0j4PR+elnUV4vzjtfMDLBWlnF6YuTHvNc70k7fOwc2naa/J5WdprWLgy7dxw
P1eknSdYODftZ3Le5Wlfy9z5aT+f84qnfS3xE63d2kobK1en/dnA0bVpZxF2
rkt7DTvXpz2v5LlU2pmAkRJpn2fumrTvQfwF+f6elLZySb4zV9bKZfnOXDkr
JdO+H3tdme8cVLDyrLWvzndeLsp3LstYeb7IualspUra2/BVVTVf/9fZ150y
FnOK5W4J/2/JynnWf4zfY5nvTD1ha36x9sm2Zr/luaS1izgr7XkgT+czb/3a
VhqIFRipl3Z2yH+dtK85xUpd1cx1tOu8Nt+/B6mvtcQ31B7w0kg1fDVWDV83
pj1nMNI07TyR22aqYaqF5mGnpWquvZVqWGuXdm4uV45hC6aaa4/zlf+LNdc+
7TzBSFutJf4m7cFcB83D4LX23I7YPV5u5Za0cwMvXVTDRae0v3vw1TntfLDu
Zo3Rv972+d32KG7lVsXB2lU2ftjGLuXrg+XrV6tP5WciNA875W2sXL7z2FHX
xXlXWOwhG7/YyhX5/jlVHhZt/A/rX2XlPj33JtyjsVEz35nabu1q+c7Yn1bX
zne+mig/5GOVrVlp5TS7nrI2X9PGBloZLCZg4R4rtcRPa1v7gZ19va29O+3r
mVtr42v4nao2Pkhria9ga/+yseus3Kv94G6IapgaJT7gYrRqcjtS18rcCHHG
fQ4Xf/Tb2Zmv2xlV8/3ztLm4G5Z21lk3VOfQnyC24GWc+IO78aqZG6s9mOPn
uvj5QX5ekPeKz2++F7hfXMLUFNVwN01skcMZ4gZGpmqeuZVpf3Y815mah6kH
084f3M1SDUfTtR97vWn3Wd9KN2tXsftuaO0GVh7QHsTPVhx8rbPn84SVCrZm
k9UbrVSy9i6rX7FSy9rPWL3NShVrv2l7NrL6Biuv8bPzVupYuy7/L9r2W0Le
rH2n1UutrBAv3M/79lkxwOplVjZY3JNWKtraD238Ayt/WH+rlS1WKtv48rSv
J35y2t9VnukqPRs4WiMWYWetath5Qnklz+vFBIw8rnnmVmsP4p/UPO/KU2IL
7jaqhrt12o+9NqedJ1jYohpeNmgP4rdqDHaeVg1f21TzdWm7+CD/O1TDyLNW
Jum+n087T6x7TmP0X7DntNNKdXtWOxUHC6+IFRh5SQyR/xc0D3cvqmbuGV0L
572stcTv0h7w8hZ/JubvVKxdzRh429pNrbxl/flWHrHyupW5Vh628obqeVbe
1vwCK+9aedTKQit7VC+y8qF4eSzt3w8tFktvag/OeE9rmdubdo5g5AOtJf4j
7cHcx5qHwe+UV/L5Rdq5gZcvVcPFp2l/9+Drc/HBus80Rv977cH3aF8pDtb2
K/ec8U3amYOprzUPO/tUM/eJrovzvtXaDcoBX8Ng/QedA2steN+s/s/KT2ln
C6YOpJ0/+gc1Bl/N8j0XxPyadp5g51DaeYK7P8QELBxJO39w9IuYIOaw1jL3
m/Yg/netJf5nnUnMn9oP7v5SDVPH084HXEQyXpPbY7pG5moaV+/add9o5R0r
za3stvEf9Qy4z2jG4+DuaNpZh9O/dQ79VMbZgpeEtd9JO3fJjNfMxTK+B2zy
94v8nRB/NxT+npF+Xsa5hKn8jNdwV5BxtshhUca5gZFiGZ9n7rKMPzue6wkZ
n4epkzLOH9ydnPEajgozvh97nZpxbuDltIzXMHVixvcg/pSMx7Hu9IzPw9GZ
GWcR3s/LOB/wcnbG2YWpczJe81zPz/g87FyQ8Zp8XpjxGhYuzTg33M/FGecJ
Fs7I+Jmcd1HG1zJ3VsbP57xLMr6W+DHWbm7lRiuXZ/zZwFHxjLMIO1dmvIad
qzOeV/Jcx9h4z3hoxfc0GZ9n7oqM70F863x/P66zseszzhbclcx4DXd7bE1L
K/9Yv3TGeYKFslbiGeelRMb3Ib6cxmCnvGr4qqCaP8NVzTgf5P8G1TBSyUrG
StZKlYzzxLrKGqN/bsbzQJ6qKQ4WamecFRipmXGGyH91zcNdDdXMVdS1cF4t
rSW+VMbvm/uso/1gp17GOYOvxhnPGYw0yDhP5LahaphqonnYaaqaa2+mGtZa
Zpybi5Rj2IKpRtrjLOX/PM21zjhPMNJCa4nvlvGcce2ttB/ruiqvzHXIODfw
0i7j7xtM3aQaLjpqHl46qYap9y3/baxcY+1blW/2bZfv7NxipY2uC/brG3sf
2FxbisY4r0vG1xPfXdcLUz2slMk4U0P0rOtb6ZVxnuCop+bp366xClp3mnLQ
N+MMwcsdGWcI1gaIA/J/Z8aZg50+4oCY/lrLXD/tQfxdWkt8b51JzEDtB2t3
q4ajYWICFoarJp9Dda3M3Wulru5zcMY5q6sCa3A2QnGwNijjfLPuHp1Df3TG
eYKRkRlnDtZGqWbuPu3BHL+P/zL9PvSxGWcOjsZnnEXYmaAa1iYpr+Tw/oxz
Ay8TNc/cUj07nusUzbe3Mi3jzMHUdNUwNVn7sVcj4+QjY6S9lQ75ztEDVqZq
D+I/tPGbrNxs7QczvgaOZmecRRifLz7g5aGMvw/w9bCV2zLO1yOah50Fqsnn
o6phYUnGueF+FmWcJ1iYpTM5b6HWMjdH53PeYq0lfpyeK8/0MT0bOFqecRZh
Z4Vq2FmlvJLnNWICRlZqnrll2oP4tZrnXXki42zB3TrVcLda+7HXkxnnCRY2
qIaXx7UH8U9pDHY2qoavTar5WrQt43yQ/2dUw8iWjPPEfT+dcZ5Yt1Vj9Ocp
D+TpWcXBws6MswIj2zPOEPl/TvNw97xq5jbrWjhvh9YSv9cY6WhlhrWbGlcf
W7sT3OQ7Uy9ZeVU5g5FXMs4Tud2lGqZetzI34+y8oZprf1M1rL2bcW5g4e2M
swVTu7UHZ7yltcy9l3GeYOQdrSV+j/Zg7n3Nw+DXyiv5/Djj3MDLJ6rh4sOM
v3vwtTfjfLDuI43R36c91lv5VHGw9pVyzxlfZJw5mPpM87DzuWrmPtB1cd6X
Wks87yhfN/i68o3OgbW/9LxftvJdxtmCqf0Z54/+9xrbpHUPKB8HMs4T7BzM
OE9w95uYgIVfMs4fHP0oJoj5WWuZ+0l7EP+r1hL/g84k5pD2g7vDqmHqaMb5
gIt/VJPbv3WtzHXJ93v808qNxtunfH5Z+VbPgPv8V3Fw94nNdbbygrWP6BzY
j2adLXg5nnH+4C6S9Zq5Y1Ze01ws62vhLp71GqYSWa9hM5v1nMFIKuucwWA6
6zWs5WV9Hl7ys17DUbGs13B3QtaZgIXCrPMHR5ms78EZBVlfy9xJWecJRoqy
vpb4C7OeG/J2Ytb3Y90FWc8xc2dk/dnByKlZfwfg97Ss1/B1ZtbnYeqsrNdw
dHbWa3J7ftZzz77nZp0PmDo569cF++dkfS1zp2R9jPPOy/pa4i/K+vXCzsVZ
r2GwXNafddLKpVlnCHYuyfo8/cuyPkaeq2f92fE8uuU7L8WtfVXW3xOYKmHt
/5Tna7LOH9y1Mq4+t5iu/J131tcyd2XW9yH+2qyvhbXP+HtSK79b+/qs7wdT
JbNew1SFrDMBCxVVk8/yuifmymadLe6zTNaZo3961vNAniopDtZKZ51j1pXK
+jn0b8g6TzBSJevMwVpV1cxV1h7MVdNanlcNPTMYHG6loZVGVupmPWcwUivr
PMFdbdXkuZ7mYae+aq69gWpYa5J1bs7RvrAFU3W0xyk68wzNNcs6TzDSWGuJ
b6o9mGuueRjspByTt9ZZZwhG2qiGnRZZfwd4P1plnTnWtdQY/Zu1B1y0VRx8
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
MIE7Dk9cS8UR01pj7IWTkDVtszkvIJ5A+MDLhssNDmaoP7rIvYS4DTtoPrgB
qaeIhYe1FxzNVHw37Y2rEIbwFOKs22Pvcp/8nB+PMRx5HQrcm4gDsaviiOGz
qUc25xqcp/OCqw93HwzhaAxuQ2pchfD0qOYaKA/EwQoOQlyFcISDcIlyjy8Q
9yDc4BR8TCywFj/hnRoj5g7FsdcAxRHTR2s5G6ZWal8YWqU+HOACXKdcPqn+
MI1xb0N0f8F5SI3DMLgY54mFDYofrPngRVyt84K/EJ8hnOEvxM04WmP0R2qM
vZbl++9q4vcyBY8s71nwEeInhKln1O9Y6A5CnIMwgQMPVx1OQtbA3O5i9l5Z
KZXn7OzQOjjDC4hLED/hC+Ln5kL3GOK++97YuJvvs2x8i+1xlZWz85zHndpr
o40Vt3I6P3tu6++x9S/b+C/WHmTtV1jH+VYutzWdcRjZ3GCbe97GrrdyCT9P
bWNDbOxVrquY/wwlPz/5j40PtfHXbDxqscOt/Ya1j9n4MGu/znOxtddYOY//
H2t1OfrWfsbq66xcyP+ptLqClRJ5/o7yLPE6JmzPEbbPm9ZOW/s+a79l7Tds
7Q3E8Pt0rK5upbK137G6JnN8nbX1I23927b+NRurYqUsv+Pbxkfb+Ls2frK1
x1h7j7Xft/m6VmrbmgIbH2Xj79j4hzZW30o9Gz/TxsfZ+Ps2voe1VmrY+F6r
G1KsfY6tGc+/edqaT2yssZUmNn6pjU+y8b02/pWNtbDSxsY/s7qplebW/oLa
SktrX2TrJ9r6j2z97/Y877X2bmtfYeOTrf2xtb+zte2sdObnN9jPSkd+9sPq
VlZusvZVtv5+W/+JrT/f2hOs/aG1r7X2FGt/au3rrT3V2p9Z+weLa2/lVost
bePTbPxzmLGxW6z05udgbXy6jX9h4wdt7Ob/NXUnYNvM1R/A73fh9T73PTMv
2bIrW8gakexkTUol2iT7Uki79JJUKNmXRJu0SErZU3jtSylRKVtkiyhLkfzn
85zvfflf1/Ncc+bM+Z3fb2bumTn76f/3nqj+i/ow6sv3FB79/4cmal+PRT36
9N3T51FfPvv6MMJ9sOe5a/9/XM/3X/243fv/AyaKTs9Hffme6XF79v8H6T9m
zv7/YPVM++2+/f/HJqofn76Keu7paagXpN59L/XHD+z/D/G7FQPc/39C3aV+
++H+/1MT1TdQj0jjZngOevwREzVeH0m9++byHPX4w3v8tB7+aA/PVo+ghz/S
w4dOFJ2elfoEWrdelnjb11/SGo/Mb/zirFXPR/0DTx5WbzV9tIaeo57nFyfq
mB6R+gH613dSj8HH3PP+f4+epuvpD+vhY3p43h7+XA9/pYcX6OEv9PDxYjN6
+PM9/NWJGq9Hpz6Euwyqf+UHBrWvfyWcff0ud9UXqx/72X7sURO1rz/mB/vt
Qj3+Sz3+RM9dv710omoFb8DP29b+zf138ya2qp72mJ7mjIk6z7kC61c403um
3z9SjXZ+4f7/ih4+Ncf3HNR8enHu5vqMSqZWN/I7w6ozqobVlcGpQXrsqHg4
dlF0HjrWTam5pVbbsiPNvUq3Panf/npcByl1btRWOqXH35kaJt8b1nF1cebv
8ecPK+b/+8M6rubBNv3at+7/7zG3Xktt1QhYs4eb8PraqI5P6/9/MKyt/PI/
pb6F2ildT3PfRI29Lzno6gw8OFF5xvLPz+3HzpioPL9HJiqnU77xvP3Yx7P/
jcDy/n40rK18rKeS7yX374WJOg+5Pc8mF0dO1w+HNa/84/OGRS9HZ93+XGb1
fB/zu+q3Px7WGO9XPUQ38txNVOy8nI3pw4qVFnP/08BiYC/o4Xai4hkX6vn8
bFhxj2/tr9nMHFugx/9kWLzO6+FZPTyrh+cfVrybuL1v9vQXZr8JD7GwFw0r
xk1c0qLDilESP/fz8BArd1P/27syxxYfVnyTuLqrAotP+ZnvXr6nD6c/sH6s
Tw0rBmePnuZr/TV5rq14lx377ZrDgs/KdXKfPtDU93rhfJf1FtYT9sJ8r/Um
9m3X+3XNQfX9BO+hD1vmEit2UU+7cr77C+YcxY/u1tQ3d7GM0TvWs+M50oN2
r0HJAPoPr93DezT1LbZ/me9wvsv/TO/i1/c0ezUlD9h/Jn2M9Z89fli9bfce
lEyxVM5lK7V92pIlfLuWC58reh5rRK4gI+hZq1/tPk3JIfge0JQ8oLfyPoPq
d7vvoOQQvZf1ut2vKTnE/lW+7f9PJlkpPD/UlLxh/3/p1awfLl765u43qHUv
l3nIMiuH/6/6ca+LXDSn364TucUYa9Yf9doe94bILXqh6omr3+lBTcl1ejdP
SQ9nPXbJR2tkDZc4v8hF09OHWX9e8s5aof9YU3KOPs439tsNIsNcT94Zldyo
lyt6fVwPbkrOwWtG+j/rz2uta4SWDLVO5jJmnay9Se93z+ynmpKj7N9Kxol8
RZ5aLzw/0ZTcpd80uXLxPAvkJj2G9ReeSD9q8M097UajktkOaUp20rf6N/12
s8hss9LLeuNBXUd89IyVAyGuXUy7fe8WPWZfkZ7Ym6BpSn7bNMf0HtZXdsH0
yt50ULLeZuGvn6xexXqWzm5KxntTxuh5rJ/tHT1u68h+t9uOSj48vCl5Tx9t
8uDW4c+Ws0XW88r02d5sULzQ6G27WPpmbz4oeUxv7TcNSmZ8c+jRgfW/PbIp
+RAd2W37jHUM7DzIiTuEz6vSo3uLHv5DP27byKV/7rfbR848oim51Dq+2JTM
acxvXYNRybR3w0UWPaopeVVPcDLsO8P/XsdHJcce05TM+a5cUzR68y6bXuJb
Dkpu3Snw/T3tO/+fjKp3+taDkm/x2GpQcut7AuvtC9abF1984B4w56jk3lXS
53ybHv/VpmRj+8c3JdPqS07O3TU0eOn9rJ/w6ulbvi15zbpGJVf/qd9uNyoZ
Hp2xegv715daT+ETm5LB9DF/uN++Z/Sy/AynVzJZ+/05RzL17pnrUWuM/Pb6
9EXfjhzYlFxt/9SmZO99Mp8ezLP77d+tcVSy99Zqp0V+nt7jHhpWH+0nenjX
UcntZHC9z8ndpzcln+t/Tu7Geyy/w5HZ/2ldo5LDn3R+o5Lnz2hKPh/3Ude7
nQz/3aZkaT3Yn7XeUcnn5Hc93cnCT/e4vUYlw3+jKRleX3c6gS15/7/mHJVM
/q2mZHvjyeZ4k8+/05QMr6/7v53fqOR/sjYcefvMpvQF63ve2kcl89NlfVN8
v+gH+sST8Sd6+kNHJW+T9/WeJ8v/z3pHpTv8IHK+Y3SgvXJ/z40uMO4hr787
Of/86BH6uk+nd49Kd6AfoKUTnBedwpip9PpR6RT0GOPoB4Mef/Co9Iu56YOj
0k3oDfrH0w8ujHz+pX5/1MOzRyWr0xXgyPs/i06hdz19wpY+8b2m9CPXgk6g
hz09YB46/qhk8p9GPjffpdEv9L1ve/jwUekd9Aa4XfqxF0cfwWtWDx8xKn2E
nnHsROkWl0cfsU+fOGGiZHw6x3ETpWdcEf3F/q+ia6BbsIePGpXeQSc4aaL0
AjIIWWfPwKdMlMwzf0//xVHpQeSpkydKvrq6KTlGn3QyC3pyET1Fr+vTvLtG
xROfGcHfNKh+62eE5rBB9aY/fFB6jd7rp3u3hwa8QFfPpv7jc/c0DwfG86Rh
9Zu+oaue43qRn9HVuvTZxhfePNtnLs+suY2b7AffFh+9lr/Zj124K/gzbfV6
1dNz5qzq/6uPLn3zWzmXnw6qd7W+1fP06/n7sHrkPd2PfWRYPaxP7bdnT1RP
3gcG1cP4r4Pqr6qnr/6or2zqvMb08Pr8Lt6vZdGuxoP1hb5hUOPNi98n2+K5
4JSa8/vBv7WnP6yt/qOHtnU+el8+3OMPCf6aft5Hh3We2wWv/+vBbd1j9+Pw
jNPf9MGu5kPzaObSI3daf33erh6l31B//LFh9a/8XFvj4a/tj1+TNT2W6/TD
KTVOz8Fze/gvXdV8Vmd3Zn89Hx9Wv7m/TKkesX9ObzpwN7X6zelDp1/hr7uC
9QdzTN8ytI/1+CPb6s+E34UZu3hT9wt/x9FvrD9Ij39iWH2jngi9vlF7taWL
4/Olto7rKfVEz//LbfXw+M7U6h+jdwwc+A69Pvrr866e7pJ+/8uj0u/Pnlp9
gi7NuI3b0sPxMe7yjD2nK31cH5m7uuopox8IO8HlGfuu4PE8qq31mUv/mivC
R91sevqt/bXdpK359BoZjarm+td7/HGjWsM802odYDaB65qyF1yVa+1+ufZf
beuYPhebxV/3hmnlu1Orf1082+orsO+0sj9cHRrH4PUa0M9izsTLuGtD/2KP
X6mreW2vy9h5ZxWslrz68WwT7BInjAp2Lif08y7d1LmNgkf7VFdrAh/blr3j
VxmvZroa6IOe/yo93fUTxYMtG7xKfp9fD+0tuZ7sIreEx4ltHYP/SlM2RrLa
eV1df/XM2QTU3LhczYAev0VqSduyoahPfXJbthV4dhG1O9XtZEtRQ3gwvews
6girIcxGor7wuLawmsOr9/DJo+KJ/pS2jsHf0xUf9VzZbCZrFKsD3a/5yFHZ
u6zjt8GrY3xnxp42KpvLB6dXzVow20sbPBzbzl2hua8rWE1Ldpq/hP65rtaE
/idd8bd+67oja2YHUs/0xOm1/UvgXbOvxined2eun3VlI3Kt1Jpj32HbOaMt
+5G6lK/ryk4EHtuJ2IjUSr0n/Nlu1Bv8T2xHahc+18NnjmofzMbzQMayR6G/
NnUOHwjNNdmfk62xbFBnjGrea8NHfcPxnH8Lnq1InTs17tS6ezQ8r2/qvFaI
/erhwM/mnNXWe1VT90Md4XW6qrXHnnJbV7xWjJ3qofBU34y9a6ce/4aubGHq
pN3QlC0GfFx4WM9pbdn48L+xp/nmqMazral/tXNP8+1R2cuOnqvqZYHZzeYL
Ho5dTc0strUnAu8ce9rTeUbYz57J2Fc3ZTdTnwSfJ8OffU3dJPVv0BmrthLb
3b9C843Q75Tjz4Q/2Hxsd/7VHro09j3w42rLdPXM/iPzPBeeMwOb/+Ku1jVZ
I2Wi6vMYe/ao+JsLj/8GZgMEP5E5zceWeM6oYGMnwse6nu7q/fKb0Kntoq4L
+6B6Cmop7JRr/a4cZ09kS7S1v4Q80aZssGp3OKaux2LZsjnid2lXx9VjGN8b
NaK+NypeS4RerY+3zF12xmnDl+2WU4N3v9STcS5sv+Ale/wPRkX3lqyd3VI9
iHNHBc+eu+yd82Q97J7qSxwe+nlCg3ZGYPZQOf4XxF46DJ4tVK2S7Xt4n7bs
oni5DvBLZC41LA4LzUTWxi7KlnJ+bCr22Uh3aAuG/0XqDbC7LDiqWgU/6eEN
uqpHwPYKb4vux6Oyq7KXft27valj1jtv1szGO1/4sOt2uT5y3eXGy4tnywWz
YbL5GusasM8a+0Bo0bH3WreceTzYhBfK+uEWDJ8HmoLv6+F927Itj3OhbeeP
HVi+8/1zV261c2Efvjv78qzvbWpePI1BL58V7wXC37hFch2W6Nfzn2Hlx92T
PO27s108NOePCp53RtmX5dLKTfQv31bO4n6xaS+RcYuFXo6xnOEp2bILswn/
dFSwPGR2b3zm6+GLh5WfLJd4+ab2X51xS4V+YfJM8HKM5R7LO75kWLDc49f2
Yy8dVj7pIj39NYFf2cNzhpVb6rhc5XH+8HLht2FX9n33aZxj7Pjlw8o9lp+8
aH/82mHlpV42LBo5yas1tQ+/YlNrMpd85hXDb82meMktXaznc11gefYrh/aX
w8qd3rCH1+7prxhW7uotPXx94HWaopPHunjP5+bA8ublWMud9/tYI7j9yZ7D
yod1DH952d8N3piNu8q15g+4s+d/S+i/Fx8BXj+ki2R/166up5xMPgh5spvM
qNxGsHzHGbMqJ/fg/E7Wym9jnJvtNyVXDg/5dn4f8pzlON/aVh6n4/wJ6+T3
s1tods92ncC7dOUfMd9tTf1O1s3vw+/K73G3rn4Pckc/zN83rPxPuXtyQuX2
7dHV/bW/V1f3SC6o++AevaGn2aereyEv9Ep5xF3lI4PlJstpfw+Zd1g5pe9q
6/5tgCZ49HID8ThzRuUYopWfZx3r57g8eTnK6gBc24+9cVj77rnc2ANmVH4f
WM6fXELnBPebps5RfrSce1v8XOv1ct7us/xYubHmltOKx/5dzWX/jU35kLbO
tZZz6z6cHPiUGTU3PvIU2T7ZUtlFXxP/Pti5bpvz3ayrayTvVt6dfMgbvFf6
3/Pzw8qpPCV482zTr+HFYeUX/Lqt38f2GfPW8Hg+8Auua1PvN3yW8n0fVo7e
b8n+beXZ3RYecvI2aWpeNLfn+IvJtZKL9dp56l9+EdzSZIlh5WT9vq0xcrve
F5r399stm6KRa/OqUa0fLPZdDsNx/fZPbeXQyJmwbnM5jz+Q/3Ns86bW/47w
3Tnz3NLWb13O86t7/v/L9flLW/kWYufN8d7MuV1TNOLk726LTuz9VaG5ut/e
1daajL83x69JjLb47Gf67Vt7Pi8Nyx+9zKhgPO9ra4z46r9mK8b26ow1j/Fi
ap9OHC54efET5JZRxd9Oxrr1253ERvT4KaOKI32gLb67ZwwaPP4WnFjIO3Mf
5DYt34+bmrE7NwXvE757Z56H2hovDvORbMXKLTeqea3nqNAfLb6lx00Ln0fb
GiPW7vFsxVIdMKw4ql/08F+HFTcnXs5WHJ3Yy/c2xUf81fv8fvr9gzLOeDFY
b+oqpuojw/oXVyVG6+jEaVnXE23N7djv2XiHFZO1eVcxXngenzit47JFI2br
P035FPkTH2/KP7pWbJJgNkZ2SL5evjM+tI+H5pGmYHg+SXz4NJ9syqdqLBv2
p8OfD5OflU17y65o+Fv/1RQevGtTc7F5PtvUWPSbdiWv+J3/tym/rLkWacsv
xSfFf8h/yS/5UlMwP+bUtnyW8LvmHrj+/Ip8jXyFfIZ8h/yAfHeT8QGD8u/x
F27EXtoWPb/ksC08+nnaGotP29ZY9Hyenw39vG359vDk3wPzwS3els+Mv4yv
DMxHxrf2heD55Y7MOS7UFsyXx8f7mZzjUm352Izl3/t8aOZvCzbXcm29k/m2
Xt2Wn4yPjB/sqOD56L4U/NeHZWNlN+TX8g7felDP4z15/viL+I22id+J72rb
+J34kPgdVm0Lj2aHruykX/Mbass/gWad+IX4lXYPzG68Rlt88GRjZgPnD+c/
OmFYdmb+ja9m7C9GRbNXbM8nhA+b9ImhZ8c9ZVg224/3/D8We7RYH7bmmwZl
H0bD3jynKRsx+zA7MZht+dNt2XNPH5Zd9rTwZDM31wWxPcOzFb+5P+9tu5pr
+67sv8bOYfuNTDC7Ldux6/P5tuy5Z+Q+uB93xy575rBsqmy2Z/XwrKllI0TD
rrtnxp0be+1ZGcu2+o2M3bErG+s3h2WbxZPdV3yUPu1sm8e0Zd+0//OMZbMV
96TfNhspO+i3Q6+fMrsle+ZoVtnxxKNu3lZ/QbY4MapnB6/HKBq2R/ZFePZG
9n734uZB2f+MZQPU54Tdh61GzyY2LzYoveHY6QaxZYHFPg1n1XrEXLFZod8t
Nh98xDLpncEuwybDNgNmF1Jrmt3w8uji7Czil9QnZ+M4OrYFNGwR72+qRjBb
yYldbdkZTu9K/6ULn9KVHYA+zqaBD11/77Zqs07GaQ1Ll6YX79xVfU/j1XKE
p6uqz0dfpauuFF1j7eh8dEX66Hu6qrdFN3t3V/Xa6JbqtKGhS36jh8+KzkkH
ujR8vuP+Rq+jV+G/VuRoehldTG2uybil6IJgOis92NroxStEjzP2i23Z+v3e
VomORv/avasaQORyehL9iD61evQp8OuiN9G/9BNwL9isbo5+RCZfNzoRvem8
nuZHbekD55AHoueQ368In/d3VZcKnj5kLBn5A13Viroy9L8If3Wl6DmbRL8B
01/27KpWEZ3hUn6AtuCLXL+2zutn/faCtvSlD3ZV5whMd7ws12HvrmoP0Td+
0tOe35YO86G2aieBP9xW/SPvin27qm1ED/kleTjwL3r48rb4vKmtZ48dfOW2
3tXe4Qd0VTuJbnCzbWA6BL3iwMjydAN1bNRNgqdrkBPlWpLpyP5q7IzldLVQ
bojs/evg14suiedv2pLd1Vghp6ubQealX+BDtzioKx0ADZn8tvD8XVuyuxoZ
5Gs57GRhsvHvwudjXcnl6iyQvdGQ2T/RlfwtX/2PbcnW4D+3Je/KT6Zf3Bme
B3elM5iLrA1/XPSA34Xnp7qSuY29oedxfXQzMvYfQ39PW3K2HFfyr/xE8u+h
XcV0ykUk/8o78z0lV9+Va3tIV7K1sWTjv2Tsg23JwXLPyL++xeTZ+9uSv/E8
vCvZV37Rw23JuODZXcm1xpJn5W6QJcnG94XPEV3JuHJIDoxcKqb/H23JmuAD
2soJIduSYx8YviyTgsm9d7TRi/yG2pJN/9bDizTlN/WtXLArP6zv7Hpt+Z1n
9/DCTcG+14+1JWdbzytD79u6dFd8HuzhReNX9Z3lWwXzky7ZlA/S926xpvyg
vonLd+WL9L1bsSsa39Cl4ov0jRv7I/ki2aOezHuP7UJ9uUkbWnyavq3iM/+R
98P60Zf3iO3iycDqoT2V3zlbllpne8Y+8++8u9iRns47ga1JLbJ9ZpT9Sp20
vWaUXQvN3rF3wXtvbxCd95TYmoz1/mQj+vf4GWyqBppnmQ1KbbR9Y2t6Nu9G
9itr895eJ/TejR/qqm6a3/lGmevUHv++6DLHzKx6OC/kedw0OvWNbBLB/7eH
l+nqXvBHbx293nP35uinxyWflz7oN7999M3Jd0506lV6+C2hP76Htw2fXXr4
baGfM0/VTvlvntl3hOez81S+J/3Oc+e3Rqb0e+ODFxshnvuE4MUpvSfn6Hf+
7uiSO8+sGlDP5x11RsaKo9gpNJ6pd2WuFWaWzCmW4qZB/ZbJi37P4jXgz4qs
Ci/uYqFehll4Vvm+1Zdnm+d38Jsl//ndPtOW3Camnb+X31d8+Wpd+WL5Xvm9
0ZDTfPfZOckA/LRoyFf8gfyafIJf6cqfxVc4JzzJZmvFlzf244HJY3dkLN8m
n6SxZDM+NH41seBvacvPJd6bfMQfQ0Z6Mr6lsc8KTL5apikfhphvshGY7LRc
Uz4GPpC351zEUrPZs/uz+T+WefnOyE/oyWB8Z9ZAfuALQE+Omq+tmE+5Nn77
nk92Zs+WZ48t13cc7Bn0ffccegZ99z2rnlPPJTybs+84Pp5xz5bnjb3Xs+iZ
ZLO9ObBn0/OKDxuyZ4vO6/nyLfRNZMvyfcfHM/t88J4v3yrfLParFwJ71nyf
fKfYhf4X2PPimfCt9Bx5bnwfPTt3BGan4itzj/jEfId8j9h5/JaXy+/Z87Rs
nqmXQuO58x2CZyO6PXOxX/n2LBe7yjY5R3ZF36flY6vxrl8hNhY5YmLa5ZHt
0lT8+RTfhcDwH2wqXr3/aQ8eDSyPTJy5+HMhBmLIxTNPp2M2FX8OL9Z9xYyV
p7Zyxu7ZVMw5+idCLx9NfplYbjllcsdWCV4sN7y0c7HiYsj7n9VkHpl49evZ
kJqKUdf6Qv4aGjlT+zYVW47+ucBy2Z5vKobcXPLgXhf8U1kbnuLM4WcMKgZ+
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
A3j16Il8Hl8Nnt+CXkZH489Q74bdT22TyZj8YcXMi9Gj74gHpoN8oq04ezH2
j4aGLibWHv7s3CP3gu78zYwVoyc3X878OHfePjs5f4RaGfwL3+sKVtdCfJf1
yCd4JOPFI7GL35Cx4oPECY1t5GB29Z3ayuMje4sxFvPHVnxFW7HI4oR/GZr9
xOQ0FZe7X+R2sBw4Mbfi8MjnYnnF9G4U+f/m8L8msb77z6g4GXle60ZWN1Yu
n9hg+Ek5vKn55NfJO/9jUzqdmEuxl/J+nkoc5pyZFbsphlM+zJOJ87xiZsV3
gskVw/CR+y4nVJ9U8cBHt1Wb5SNTS4+4M3j1JNFsNKO28PSLvyde9ISZVc/F
2IOm1u+Nb+z4zPOnrFk/aHnRcpbFdekzPs6lvit42z8HZpN3L9jYxZ/rL87m
L8d7Mtd7IrnRTdXeVIdSX2m50o6h/2vqc072m55RuLvDZ5I29GLlzWtdcp0n
+1nPKL7ge0L/YPiIi5+EJyoX+4HAcr3/mvXbB4ufF+fmOrj2cm/1LN54RsXi
39+8PM/9mfffbb0ryIpoHwq9+PWHck38OyYnWA6Qd/ifYtPzruZzls8ldura
+AXAZFSyq1grNT/le6kHKv+LHPpY5n2xrdqX7Pbk18dDYyt2ig+CLAp2/D9t
8TGXPDO1PuWLkS+fDAz/eMY+3xYNWA1wNHwB5FixUMbJI+Mj52uQW6Y2qJyy
V+XY6yOXooH7b1t1QtHLPwOvE7lUDBYZWP7Zszkvcz6VeR17NvQvtDUXPNxz
oXetHsk54uP6yIOTJyfvjp/C9vnA/2urNiiYrCzP7Q3xa6AhY/v/T/j45qLh
SyI/i+sy7qW2vsXw5nohfMjT8uJ8o+XGgfk48Hgx9HCEVXiyLtg4wumU4MnV
4r0ma4d2VRuUb8K+XDt5drbTgpcDNzWw6/yvXHN4Y+XHTe2qHig/iDy7uQOT
9ecKjdy7uYK3/imZizyPHi0afOTikd3nCSw/D8wXQ16Xv7dhZH7xXmindVUP
FI3cPjR8H7ajwOR8MB7y/OT7/Tb06pNulLkmwn96V3hjyZniw+gF/tvQ23bh
M1dXNUbB8vbUBpXHR7YXn0pfmLuruqJs/vblFsortJ0vePmF8wamMyzUvlxf
1Fj5gDO64s83JE9wgcD0k/lDYw3zB+98Z2Uuugl6tAvn3UFWkZtoLn4iusBk
fJj70FW90d/HlyS+zbrQw8ttdH9m5vrL6xTHxtc2s6uapGD5kuLS+JXoM/bl
SMqVXCQ04MWCp+PgQ9+RW7l4xtpfJPPSL/DEb6KrmqeTcW7DqlW6xaD0n1cH
HnaF56uSd7l0YPRLBXYNFs75yq00lg/LtUAjT9N6lgyMZtnI1XQl8XPmHHWF
NxaPZQKzJ8sJZHP2Ll8+73O5z/qMyn9uuqpVCk9fkoe/1aC24uT4znwLVghe
DqWcTH4lOhoa4+R9qn+69aB0uZUDw78mfODEz/Fh0UHAaNuuxqKRe7RyaLqu
aqGC6WNyRLcZVJ6oOqfbDgon9o5Pjb4GRkt3WiM0ckPBfHO2awamdzmXN3su
uqpzenfWsErmoruhH9dcXTVz4fm6jJWHqmbpdoPit3auz3xd1UIFu26vD40e
AXJZ740vT0wePdH/OqGhJ+JjjXJX39BWzovteoH5MsD7Zty64al24hv7/xsH
Fc+vJp16dNb4hvC/PHhxI7YbBBZLAjbumK7q0Y1rzoHJyeJ85HbK6xT7IwZo
jNsofGZ1dY9cK+M2yVg9pNSkE3ck1mjTwGJ/0IgbmhO8unNijTYMT3mfxsov
IOs7Rzm24oLkr4n5sX1TYPmdcj7F3nw59dzGtdPAjFzqq6mhJm5HTXuwWCAx
POq7ic9Rl0xOqXgbuG2CVyNuy/C5J/Tqm6EVfyP2RowPesflH0zmIQwrr3Tb
0KhZBE9WlLco/kbsjfzF7QLTP+RFjHUQNHQZcSzqEKlBtF5XsFgUNZB2CE95
nPI5ybDigKxNjTV1bODld6gtZi76y0IZK17F8XdkrLiVd2T96gyoOaCegNxI
uZNkePI8mGyvVsyOgcVhuS/isOgudCT6i1olO/f/H55ReYtqfdBl4N4dPD1J
bRT6EX3GsfWDx0e9FHmJ6DfPGsyrXr26IXiqmTJpC20r74ycRkYkA/pXL5U8
+c/gyWny2pwjfcc49RfUSXAOk/mS0ypGxVjxKvQhNONaDe8N7Nn0zHtP+Fen
WL75rsF7Ztl3dg18q7zCrnLWPK+75RlXG3n3wPLE98gzflRXudxqex6dfO2L
8nygGddQ/ajnYlB6FRp6GZ8e3x59Qh6xGltipfg08eTflBdMD7kvOhd44egf
xi6ROCtj1e+SU6yOz7zJn5W3xiflPrjHdFm+O3opnfS2wFdH15Q3SAd0PQ/M
9Z/8rbWld9LLxTXuFf2CvZveIf7KvEtEl5VPSIflq9o/v0/xhsbS7+Vt7Z57
IZfc9blpULn3H8t1k2slFwuOjYENQr3XT7VVc5X9Ae3HMxaPjwWW+/+p0Nja
H9s2Ph283H98Fujhz7ZV63XLHn5LV7VhwZ8MH/Vd1XyFV//W9tDQqAUAdlwN
WfVcP9njj2gL/tSU4m2Oce3Z2Rn72cB4sCV8OM/g27qqE2usOrFH5Dd2VVc1
B9SPbWYVjTq0tp8L/ezMhb8aBUcEb2tf3YHPBYZXN0C9141S61UeOJuP7RcC
HxnYb/udXdVT9RtuZxUs9832qODZH9QmUJfA9ujg8cCXfejqrujVZVXfVX3Y
30+tPi/o5codFT7GfqUtGjGu6omq+3dLarSKVZVXx4YE9r1Da4xvqHjYYzMW
Dux7d1JbfG5NnVV1UPeZVv5k9VL3Tb3W49vK0bM9LvgTggcfm7nwh3NMnVV2
Kt8O34vJ+qWZ68y28vq9/8Wonhy842Cxq+qSqgW62vS6bkfmXsCd2lben7hX
dSdXT13Qr7WV92drX9zpaaFfPfVB4U+YXjjHxC2ckbEnBn9K6OEcuzffrzNC
43sqR5GtxXl8I+cy3veOUuvgzOAXDqzu3Ym5DuQBdhg2HTYTthz5fj9JzUAw
+9C32qp1wFazRPbH9e2+Fbx6CN8MzA6DHi2cY2Pcd0Kjrpq6A76f6qad3VYd
NlvHVst3FY1vKNsMW8+4xhqYDUedNfXWfO/UN/t+8OeEj7FfC/4jM4r2h6GB
+0Hgn7ZVf0AsxPdCg7d6aD8NXr0ENk32zHPb2t8kdiSwumrsjz9uqyab+m9g
MRu25wdWyw3P05PjLAfS+994fA9OjAd6/NYO3lxwPwkfPnprxk/OpdxLOLUN
5EDyuath9vO26pih/VnORQ03eDEeV7VVX+VDMyovU96mWAz13S5uq9aanEs5
nNcGp4aDuA50ajiYRy24i4OHuyj8jUH/xqzlwuDhLg29Wm6XtVXPjWzDRjy2
B4PJP5O1LNqSeeR3OkexIdflnPFg43SP3BN15H6V88L78lwTtekuC0w2cv7q
uqE1hp15TmBj1ZJzTH05Nd+uCt633HXDQy6n2gLqeal1QLYjvzk+J/S+L2zW
6t+pGXddW3Xk1Nm7LvS21wdWo+7GturU4YfvjZEB7VuXffSbhVadCjbz60OP
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
6oQb9385yTcT
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
925V2LwGqOn40cS+E5B8GKrDqaHDWSeOdWPuB1TaOO65soUPZqTXrrEaJl6p
vTOtF5QgTyzL8QuHi01cFeXslHawlgsYwXIl6B0Nit63hYPUhutzo626sT+o
yNDKqBjBknsuBT2b9NUk/+9x/1/c/scHBrB73xqnd6f4uK3mFftyJhUKfjrr
7chek44ZipxN9tozda47d5B83z9rn77RYgCqgxG7F3nw8WOejCtXngqR3MPR
S38Locf0MZZ4xcdH3Xox371ULLpnvX1LoBB9S7vDadMIXF4tMuvHEyquyaq/
dn0rgObUc7M8QMBt58hQnTkNtz3CClYzCAztGOlv9SFwcYJndVqOjguf/swN
YpD3kbqSK5dLwOtW8kvvQTrUZDyqk1x4mO/csqOohsCe73dzW6KY5O/tJ3Zn
ujiYfuejqNVHAgkNjnEWXq1IrqlbqruPDYGYRPmpVAL86tiYI4J2XH5bYRv3
moUJOa+9208S8Gz6tPY3uQMsqvzv2hn0Iok71ahkgI+aFlpDpnUfVGZ+1zWT
6MJpVYfiz7v58P4e1u6V2Y810Q2b9pq1Q/udu3e+I9m/taoLnpRyEPHK6ztX
2IL68tLeC4ZcSJpcjn7wjIfeqgRWZSEDfcFEeXsLGyVX16QsCCfAkn+RumAx
HZLBdD/n7yxoPrR7ymgW4JN2S6ovjQqle3d3O33ugWKo4dxFZULYP99/VnWE
guyXo+MbdTrAcvjA4YsMoP9k/MzvlyhYUpt+qPYJE8Yb2q/JvBbibtiry+sI
Ch4omGrTj5D9N3OmTcV3AcLnrk0rVaHBP93M1Hd6PT4FbDux/jUBqSVDv3dI
MPB6bYRT+IZK+DfeUj4myYfsCrPZZ+1aoNjy69fSuhJEadgK9qZzsWEpZ9pF
8j7kiqU7lb8Vw8+v8fFCUQ62it92nDbYjYCajll3VYvRvfp74jvnSV9N8v8e
n/7M1YSSLoSObhUhIM9jXfotHRWyB/T9zva9rBbi/tG9LC6dj7yohKJRLyru
JyhXpaQKsa8i1D1kiI95Py8nZdyiwjEzqWn9XiGYzfuftpM75FW9CZ3bQIX8
1fqbq4sFiAoyDJDeQnpm1lo35g4a7ouXFCyeIBB1/+jpqNME0tu3lz8epGF+
92j/ZbIDM1KPLXqbQvad+bhlWiod+pWR1hGjPEy9cXdsWjXJGx/phnUxwO9w
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
u8uBwDkfKeS0HpUudKqHTcFRifQp+Yh7vy+40YWHLaL6FnaqLHRMFnr/gEEg
ovCT+OhELgqNyraoNbHQU+h3IZqeBy4Wh6q+oecB8diIEUmx9Wi8E9nrJpuP
Cyqsk++W8TBWzXHqx6UsEO9z4uzuE5Cs26F9NZoLs9xFPr0VLAylGJnqxhOw
SLef1LqKi3KHx3au9g3IvDn6RlkbAZF1/iZUFxeZuTrFX3pZcHvt6HHkJIGY
VfdejTbiYvidqfRmbzb0bLMU3vkTCHpDjtYcw8Wddx6+Qjb12O2jdLhFLR/r
ll/zmrOFh88l+ZXm61iI1I20lckiUKVrmL8+gouaPF0Pwy8sfIp3ORJEx1d5
ebjm3RIuPiibVfYsrsdFUbm0Rs18KPeHGQq8eAheU6cRKszCo+6cPVIldD87
/cH2vEFzZfNNVW8fOv4qt8JBmjefzd0e7xPMRYRs6c3lw/Wona7P3D9IoOJP
my/O8jxE+TmdDk9jweBs4azhy3QdabnKmejKxQrm+eyGPhaOrn21U5k+n6rZ
3kuXLPn5/zL/q/9YHyGgUs5JC0B01opv3sPHfepIwXqXSoQHru7zofWiHa4S
BbRu2TJiV6bLP3/++d30/wFPGpMp
     "]], {{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwt1HdYzt//B/AQopS0JFKi8smWlPX8JApJOxJaRkILlRENkZb23uNua99N
pdAgn/bUnu9K474RDfxO3+t3/jnX47rOdc7r9TznOqJG5hrXlrKwsLAtYWFZ
nNXNr4QKCzLB8v/DVtuol5PYQL+9dccXeXRo37H+s56JwkC38Y1f1HHcYG3A
F2Lry65B8x2GOGA0uLma+PAx/5I49euQNjs4n0s8WB1370SVKcTYGmkexDqB
whzZHZY43n/expZ4t2x/3De+eyi/0hRsRCwdSqvepW6Nu2d2NksT252rm/et
fIg45wzJegEmtGwF7q7ucMCNcgV3OnHOhjWGPj8dcaay7HgocYKrfgc/3zPs
c/iVaETsM665jk/tOd7ppVwe5WeiJjyOa/CDKzotNjm18DHBWxXHcanNG6Vp
VWKZxEH61jN/rvtAM/usoBtxuPY6s8gfPpCc11t2lNh39972tnV+4Opd1hrE
y4SarJfhDpUA7C5cCNzDwwSr81a9s2Uh2Jw57sdCbD68q7lcNRTbHqdQteuY
cDtZJynTHYrp0Y3+t4mfsans4ZkPg8KHE8sjuJkYeLTvZbx0JBIO5V7p4yL9
XHv2xasxGqH7qwaiiS07IwpSRGIQb2kUZ0istCtA+/2dGAQJNrR1czIRZq+V
MrkyFmyPxHnq1jCR17KHQ+JIHKp5uJke7OQ+ur6HicTR4L6OV+E4sfjsxEZe
Bg0b4+Uafqwm9SQ2f2U9lgAuQf+Ui8Q12mqG3a0JkFixQ1VoFRP8h2J6zNmT
cOry7BPbFUyYFVeprrRKQVorS4UI8VzIKVpNSQoudTeoVC1nou3X1T5P9lTc
g6MIH/G089zYqvhUUOXlLfHLSP3BPT7trWnYsi4gNZaFCT9Kpvi2cAaOSmvs
WjfHwCm6mLCAYxYakz1OJc8y8EDFSqcwPgsbORrfyhPTtfg69KqzwLKBo8bs
FwPoFyoIXpsNX56d6mUzDNzhLvRkicwGD+f3A6e+McCdw2ZgW5SDNqHwm93j
DNzIref8y6SDFlXgZkT8Ztas9jp/HqYf31s7PMZA65ipW41cHuqmdY+PjzJg
4/t+3Ns+D4I2M8qTIwwcLxBZzcqZj1DPbQKtAww8PDEa7SRZAF8nKz/pLwwc
+rInsEevCHnP68USOxg4xh9HV39SBFsuSxEhYs13SWFlUUVIslpi9LeNgX7J
kuyQoSJoKpxfXdbCgGLx4/q95sXYon2La3sDA2suLxtjOLwBZSo96l7FwO5s
2bzk+FJc9NDrTclm4I/c6oAPzDIUb82f+JrFwEfDL6LCy8vR/lZWdyexz4IC
932Bcki5XlNOzWBg1HqKT/hIOZrTUqJj0sj5dAO/S87leCo6A8sEBtil7mi7
CrxDo6OVf2AIA7zxmS+jDr2HZL2hMs9TBvaam7HYPKrAjmap4iNPGKC+71bb
6V4Bn8TA5Gt2DEz9rP/VF1aBP5tnWOiPGLA6ckJdsaQCS9nkgtRsyf7SbSvm
WSrR5X3Y744lyXfrtgqe55XQX6LYrWTMgLbj56IFzyrkTs4lPj/JwJDl8K2n
oR+xd/Z6UsafafA8GNhsx/wPbCbBzXqZ0xhccP0k4FKPV+qfKmeNphH2z6+d
3YaNUCyb6phaOY3O7Vk65qrNkIgQ+ven3hSerB4OobO1ovePhlNo7CTkHE0/
V9PasLFLMI2naQJh5TsKtTQ7EKlcxqBzTID/rqHGsrov4Cv19TKV/opqvr5s
0ctd2Pky68LeS+Pwvjr6Pqa2G/e0yvbcfDWGC9+kUybZe4EIjnKv16MQwyg9
M6cXlDi7VUEHhYWPHh4Vp/vg2SXyPPHbCHiyrddb9Peh5uF2qQmuESg56Qu8
M+9HEL95U/GRYYxfmHiVONGPX1G6Sh7nh/BtoKv5udkA9FqSvAMdBiHFas47
2jMA1W5JL/aMAUyXaCZWnxoEvzS1a9vnfvQECURWZw9i+ds9oTOzfWjwcUxy
5h7CaEufeAdfH3L2c1kWWgzBxCFLes/BXpzWWR38rGoIY8nbql7XdWPz2cnK
9XzDKO1JPveTuwvlfU6Wr4yGIRtZe63e6gsieL4V18YP42d6HUtEVzv80lb+
kBwYRgdt75JJiTYMKbhtqhQZwQGe/Ne3vVsQft5UsVJ7BCHBh5t+dzTh1Yt4
/0rXEQxUePvqKzRiYx13ykzeCLaOa9Wr59bjitfyHed6R2Ax/U+IzMo67DDW
elS4ksKGllexDpM14BZJP/VCkkIzm8l4mGc1/qvqWvZJicKDEdH0A/IVaP7W
IyRrROHvejE2SroCjR5RFT7EYSIOTiGSFVD8T+bgBLGNlkjfX64KjOyduBlt
TMH7g5NMTfcH9L0o5Vt5jULC6thjtx5/wKqgfpfKGxTYMi1My/PeY+Du4PjG
OxTa3dqMGna9w5DcwroNNhTORdwXeib6DmY1dam3iUPSc34d4H2Hq7lNS0uJ
DftbRUJmy+HXYTVgZEvhgsrXbVffl2OUkrdJeEChhm3zjz+65YicHR8Te0zh
LctDGVXnMvTt/sg1Zk9B6/qc8XLbMjxk19gv7UDyyBbIKTItww3rkzxPiL0K
qSJJtTLcjb/Pxu1IgaN/iwmrUBm69LdX7XeiMFc3tbU84y3mzyhE3HamcIbO
YZ+WXwqvNSXpKS8prAvisBuKLEV2fT/bKLFN/WjWphel4HQ4LSHuSuGJUHOV
p3YpeN/0ZkcSF5mEh9xllpC+NDi83Ei+y61KlXaU4L7/5qJrHhT2BJRcFIwq
xnRWAv+QF4XPd5LlL7woxrJfbYJC3hS+Kv97JdCsGJ8umvSrEdsFs8ryHy2G
4aW4d0XEDfnbb/F3FOHvfFyFpw8FXcP3BSK8RYjfcKV2ux+Fna1zSpdcCrD1
aOfU/kAKHx3eiAtbFIDGFpNrSGxnzynTe74AhWtEFF4Rj+T/HroqUYBJXcXc
UeJrGQ4uFhX5oPkqzoQGUZCezHznxZoPdx7j8R/BFIZNRC2+29ORQWONexpG
gVfJd3+xCR0Lh28b0og576RtfaZGx1N7v+Ea4qjvT17xitCR5CNxSjCcQmU6
v/PB0lwkll00SSf2XSPe6fw7By3qyzfVR1CwspMMVXiYDex6cH4siuTFJ5K5
1CAbF9yWFHNEU5hpfzpbdjIb/HOa3buIddhXiMpzZyP0pM4lK2KGA3eVfGIW
NO0+Hp0hPnnA4PLZlkwsjMsEMGIoxN/wducszsQW6ngrVyyFQL/rX+uiM0G3
523ZSXyq2f2ozp1MNCxZueYmcfXFwi3GrJlg/tpk0Eks8+1or/O+DDzISA+h
x1HQCArnUF6fAbbcvrw6YnGR6lqRhXSsGKv3GSPmentP+6BvOmRjxxw2xVPI
PbjqjUnZa/zT8/WEPfGZJpXPnZvScP9kwmU5GgUHHeXR26OpcHlqpaNK7Lzh
tf7vnFTkezA4rhHLq3+6uPlsKsS2s2W/Iq57/vTZjYcpWPjkMNBHnGnYY83W
mgS3/OmmBwkU8mQVzDfTkrBN/fEDV+K0mfvZMveTQDt9fDCE2IkjTPg6TxJG
dR5yFBH/2yT7qEo1Ec2qzgm/iO0LDD/3CSfiytX/7FYmUuhPW2o6P5GA9cHK
G/iJO3WXOu52T8BnwZ74fcSHGjUkQ6tokPqtsfImsQDlX00PpMEkYRuXNfHq
sN/ZDddpSKRt63Ik1t3jY8y+nAYdvuRPocSX/pXZbi8fD3aNFOZH4kAxVq6I
tfE4qFEr1UIslkE7UtwTB0N1Qak+YvGWcrNZuzj42wo9niHWnqjeblMYC+5t
b24IJ1FYppp+OvBlLNqGf9RLEGtOb8zIuxAL/cqzS/cS76odV52diUH6J7Xc
48TPIudcNlTEILBr/qAysXzz15VH/GPgMPbWXpN4xcHWlqf7YzBf4HfVmLjd
1E48ZmkMnHSj/5oSN/AYF72vj8ZC2jsDK2Ka9emc1RbR2Lj+5H174okQzu7g
1ChIjAmNBBOrSx3RLHkUBSm5vKxIYlaBqxwDZ6Jw6Yz+iXjiWpFlfhcbImHA
XV+QTnxFQCUs3iISkxZB4TnE7I9OSzE4I7Fl+IZSAXGQ5/rOl8oReKWyYaKM
OI9D+XfLaDietc1RH4j9/aZit7qEIzi5O7mamO0ivdZKPBw9ru/3fSaOTVe1
L3sfBqVjKfZ1xMYrbueuNQ5D4gtvv0Zi3ckiM4MlYSiUsDZrIXbhn07JiAyF
QNd5znbi8rMFt5ccC8XhqwfufSGWoFqNZupCcNVjsrOLWG6r8MK4cQhEAy/8
7iEWNhCW7Z8Jxia6ZXMf8WepW/ztL4NRKCR7bYB4XikwoG5jMPhnklIHiVfR
DuRXpQdhjcWHlCHifJP2h2XHg7A/08VomHh0gK+7sDkQX7oYdYvWCHvSl2MS
CF6BvzOLXnIq4Vn6fABSHr5uWvTIf2KVyZ4B2Cn25+ainc+4JNJEAzAo8ZX+
v/2X35SMzfFHe5h10eL5UnYXFaOU/NHqE2qzWB+lz1gS0eEHEwHd8cX62V6V
Xwy744d26TT+XuJ7m4zVQln8IMv0n13s/4aaSX+Iry+0NLn9FvOZiryxNlTc
F+UXNg23ESfQZ9pDC3zQ9jdvqpn4gWXKsfCzPsg83pPRQCzQK3Qssscbu9d7
b68lfi/wkj1+uTcsFd3lK4nT/ma1JQZ5oelxfW85sXY781ialBf4lwQfLFlc
nySabB7riVVuNPbF9xNmeJjtcbUHArQol9fETkOH/V9OuaP4W+ybROKc1xmy
iYfdICdgrxL2v/ydVQoMXfHmZFiiP/HM56Wen168hGzE9iJPYgXfIs9vjS+w
/4/nisX3fkJST2XV3HMoBRjBljiky1RaROQ5bB5E7LYg9tqSYKt++xlkNivK
6BMv/Xmo6ZaPE2ovpJ3VIR6/v0b7Rb4jIj7d3aBCvMdb/l0ZqwMmJPg65YgP
9z63cTn0CEMBJj+5iHfUqOjUPn+AVe4uVazET859t1rfaAOWP9/VZsn/MHko
Wj/z1j2wlSS9WPw/UtsHc+flboHjwzH318QJqapzqQ038PTzE4FoYuW45Gij
W1fBUvNT15e4W6FJkC6nh28prqw2xG+59P0P39IC0znytgnxqFroY185ZWxQ
GnDTJVZ4LH7IUe4wOo01jc4Q/zOT2Ptxn9sRR5WJqUPE/wfSw2sw
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small, Small, Small}],
       LineBox[CompressedData["
1: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
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  AxesLabel->{None, None},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659261531424879*^9, 3.659261603329925*^9, 
  3.659337256067938*^9, 3.6593372984301147`*^9, 3.659337348398841*^9, 
  3.6593374131461573`*^9, 3.6593374587525167`*^9, 3.659337648825296*^9, 
  3.6593377375429153`*^9, 3.659561503981062*^9, 3.659800221010612*^9, 
  3.660974467650964*^9, 3.66097467131085*^9, 3.660974848471224*^9, 
  3.660975353244588*^9, 3.660975470827622*^9, 3.6609755526747627`*^9, 
  3.66097704998722*^9, 3.660977568883519*^9, 3.660977662519682*^9, 
  3.6609778338300657`*^9, 3.6609779616250563`*^9, 3.6609791238114853`*^9, 
  3.661341560404297*^9, 3.6614206405486794`*^9, 3.661421824763973*^9, 
  3.661422826014001*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<H:\\\\misiek\\\\Articles\\\\SurfaceTracking\\\\figs\\\\j-const_A_02_J_\
02.png\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "150"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5091629959625254`*^9, 3.50916305810608*^9}, {
   3.5091632738114176`*^9, 3.509163274002428*^9}, {3.5091633887299905`*^9, 
   3.5091634161625595`*^9}, {3.5091634851795073`*^9, 
   3.5091634854505224`*^9}, {3.5091636446166267`*^9, 3.509163648769864*^9}, {
   3.5091638984381437`*^9, 3.5091638986661572`*^9}, {3.5091641741659145`*^9, 
   3.509164177705117*^9}, {3.5091642516923494`*^9, 3.5091642523133845`*^9}, {
   3.5091900785307264`*^9, 3.509190082168935*^9}, 3.657506528369314*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"\[Rho]DISPXY", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "2.5"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.507780438797083*^9, 3.507780442959321*^9}, {
  3.5081399530547976`*^9, 3.5081399531268015`*^9}, {3.5091122053520517`*^9, 
  3.5091122208189363`*^9}, {3.509269087566562*^9, 3.5092690881875978`*^9}, {
  3.657506540658061*^9, 3.657506541905232*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJytnXmcztX/92fsJDRkiWgZhb6WkFJxWUomSlGTsiQSLWPfs0UkjW2IRCJL
vkKEsRfZkiWGSo2sw8zYyb7N/b3Heb6v+/v6dB737348bv9cj+s5x7nOeZ1z
3uec99nubd2xcdssERERB3JGRGT9z+fPFcYfmXPpo5p83hd/ulWtUHooy4oR
GR2SN4bgdWa/2LXo4rTQb613hDok/2b8WO5BDw+IPBJ6+fyJAQnRB41f/LXi
XRXb7w+Flp7dH5d81PgXnbtHpC7bFSrb52IoJuGE8VU9S0weuvbH0PApNxol
RJ81nm3Z1UeeePzLUEbmv7+NR7h/3d7IsiAu+WKAp/+YrVVy4pUAbxmds0BM
wvUA3zUk95rEuIwAn/F39scSoiNrKX89M54sAX7Xy7nSMjKyBjjf0fVio1d/
Ktgj1XTms2y1tvMrDTxqOsM31nl5x75Sh01neJ5vHzgTVXWv6Qy/lP3p0wfb
7DSd4UdG3T3oYpnvTWf4jgdCG2627Gc6w1Vn5eisHJ2Vo7NydFaOzsrRWTk6
o1+tye/ff2poWC/4xAbRFfKeOGDf+Sx0cNyELRnJpjP8yfaX1s5ZsMt0hnd5
fMjJwTM2mM7wK+1/LtYy9mvTGU460Vk5OitHZ+XorBydlaOzcnRWjs7K0Rmd
vin5/JDTO3eZzvDeVVd0/HFpkqUD3qJd56uzK22z73z2rVFkbEK+taYzfG3d
u9JW/D3NdIaTHnRWjs7K0Vk5OitHZ+XorBydlaOzcnRWjs7oMan9nHZPVVho
OsM3Hjr465/r5pnO8GdbPFFl1IujLX1w4ue7cnRWjs7K0Vk5OitHZ+XorByd
laOzcnRWjs7K0Zl8w80uC0dn5eisnN9Tznfl6KwcnZWjs3J0Vo7OytFZOTor
R2fl6Kwcncmf6qwcnZWjs3J0Vk46lPNdOTorR2fl6KwcnZWjs3J0Vo7OytFZ
OTqTD9VZOTorR2fl6KwcnZWTPuV8V47OytFZOTorR2fl6KwcnZWjs3J0Jr2q
s3J0Vo7OytFZOTorR2flpFs535Wjs3J0Vo7OytFZOTorR2fl6Ey6VGfl6Kwc
nZWjs3J0Vo7OytFZOflRznfl6KwcnZWjs3J0Vo7OytGZ31edlaOzcnRWjs7K
0Vk5OitHZ+XorJx8Kue7cnRWjs7K0Vk5OitHZ35HdVaOzsrRWTk6K0dn5eis
HJ2Vo7NydFZO/pXzXTk6K0dn5eisHJ2JT3VWjs7K0Vk5OitHZ+XorBydlaOz
cnRWjs7K0UU535Wjs3J0Vo7O/D/VWTk6K0dn5eisHJ2Vo7NydFaOzsrRWTk6
K0dn5eilnO/K0Vk5OvN31Vk5OitHZ+XorBydlaOzcnRWjs7K0Vk5OitHZ+Xo
rBwdlfNd+ZTky6cT406HTny5ZX9C9M7QkOxjYlMPTg099cvNB2MSzhkn/IpK
kXsS4y4E+OKi50clJ6aH1pT+9cuYhL2hig3OFWh5eXaI+OEaj/IKCVmHRcdc
DnC+//zy6YoRESmhn4bt677qniX2nc+BrSIn197fI0R64Bq/8qKZutwIcPJJ
fBpe+TPNsm9NjIuo5ePoCs8Sn2NGXHKkl6MTfNWqnH2jY7J6+a16cc14s/a5
BnRKTgzx+VTzh3Z9fVu6lR+8/4Spy/fPPGrf+fucL8/ULXEoxfzF/P2JS4O/
Px0djoe/b+hY64uNlVON8znqm6rZh8w9ZOVKPGsqpry6qnCYE35N02bpZV/8
y+oh4ckXXP2i6KDhqffKSTe/u73YmStF9qVYucJnnC59d9e868xfAO81OX5b
o+FLbH6r7YL67/OL+tpXwA/p6iU6/fVG/GM5E9ebnwheul/bwaceWWH1GPsX
99q+GW8WWmLpJ3ytOrfHN+0Ya/n9Z//etUB7hGt7QV/4gEp99p0auMnKT9uF
rcu48HkbPJyR7etN4XrleOepq1ZnlF9nnHyPLdHk+MVmM8PrMi78Aw3nRZSc
N8vSrb9r6zWSfr5reFtnkfC2ziIcfTQedKBeqA4anvxqeOyJcuyScvoR5dgZ
X/zqb6F9YUc1HuX0R8ppj8qJ3zePU/tGePKtOvN31Vk5331c+02r5y6+q3/e
bLioYXg9kb9vrnE2slWhNPtu8549L9zzXbewnYTX7PXSrvicR6zewlc3Kd3/
2rIDlp9/Xr+7Fmi//C71PX/raRXv2bTQ4g/4h109/mf/87UAJ371f5Iv5dQr
n99V6yH59flPfOXuG/9o+aKvtrt/5bhxODHuTOiNyO2jIiJ2G+8Qc6FdQvTx
0CMf/d5oadx+43z/cOiZnEvjjoTmHD1apdTgsaGil4Z9OTZ6bYj/R/geX2cf
FL05oha/A2/+WcR7yYnnA7+bMudSkYiIU6EG65NOJyf+EWq1rmb/bjMb2+8V
KH3qlZiEQ6Epefs3+6rzBPvO34nnauq5pdExafZ3+Mm+Ca8/m7A1kM7juXJV
TpiRtVa9zHK7apzvGg9cfxcd+P2GsyJG5ggNCRE+MB7Ln71wTFRQH+qP8pGd
cm5MPJml1s4rWUrEJFwKpF859UB5vg03+nVNnhXi819jatVpVz/dvpOPTat7
Rp/pmhYifv5OPIxPtN+MzLST1wL68P9Vf3Sg/OHUZy0X4iFdqoNy0ulbn9X0
Y5d943a1P7RP3zqXb1ztsw++cbLPv63jZMKrPUmtdnNlXPLZQLsjXs1vkc2R
TyVEX7T2CI8vl+18RsblQLtYmVnfbgTKHd1VB9JBe4Ez3gjo5uqJz86QP9Uh
sF4TynEqY0BkIDzti3zD6Yeod9uH/ZG3aOVwe8Een/20/JQBz6SHqMfkb1W/
yuvzfz3duO1T+GHj9BxfjLPxCuEblf38jSGTRoe+apcxNjrm7xB2i/TAtRyx
q1pe1A/l6I5dr7Sv1ReTm8+08qCe560yvnzLO4ZZeRD+94SGFZJSxln6tByp
H3x2bP9o4WYrFlj90HqC3dB6BVf7if787pdPRP02YehoKxetP9gF6q+Wu3Ls
IPF1S788uW+VdLOPfB6++FXB34+nmg7wm616pt21+ahx4pn1VvGP1/6RavWG
8ItGjC29rU7Y3ur4h/JTnan/aj/Jl9oB0uEbP6j9JDzpObpywIErT6fbd9L/
br5Rhbe2TLN4tb+gHaqdoZ/T+glXu0391/CUN+FX9Iuf0uz8cutvCB99W9mV
TdvMMfsLz5On9Yc9a04M74tz9a1m8deadu/3vbU36m1K+5Hjr21abBz73ze+
8otXp02x9qP1kPaj5Qj37a/wtQuNB+7bFxGwnydzvZSceDOk9Yf+Szn1zbd+
rf0R9UntKty3Pujr333+SbWH1BOtP6RP7Qlc+3fsgo6HGadpPLb/UDg6q92D
a7kQv+oJ1/EA4z0dPzBOUF5pT47XkqtlqYVOyrW86KewWwV6PJra7t8Lrf9i
nnG9zrZuda7MDdF+sX/3DHjo+j0XJ4QYR6lfCK7lxfhV27vtFxWdCe8bn2h7
QU9tL4w3NDzjNC0XxhX0w1ouWl7YZw2Pnppfykl14/+rbtQn7O31F14f9Eix
z8P7gZ1uqa2r/n0gYqOVE/Xz3hKrO7S9vMI4+qRsTF4dl3+O6Us81dpvSzsy
5TP7/wG/E34Ep+eftQu3Wdw83voL7X/Rzcd1HRb7gP1Trn4V+i3qc3LN1a+k
TEqz/MK7/D5nTKdeqVYe5C9PTJcTZ1vNMY4+C554d0zbPzuEqFdqP0m/ti/q
s5Yv4dS+UU9UZ9uPLZz6oO2C+NW+wTU89l/tBlzrM/ZEx9uE09+F+9ZT1L8N
Vz858ej4Gd3UzlNOmh7SwWeXpVV3l789yb4Tz6sPvLHv51ab7P+jW80P0u69
LWqVjQN0PMB3tT/YQw0PD9grN69U3eCaX+yhli/htb+A+/a/BcI7++mbl2l7
/O916jDHTqofALuh7Z3xkurG/1d7Tno0PHZeOfVc+2vixR7U+nxhWsyRFZYO
+Mm7e59JHLPIxlWB9uXGA8r5PR0/YB99PDBfcPGrfwmu5YX9pL6oDr7+VOsh
POA/cfVE84ud9PlLtR5ST3zp1/6CeLV8sZ/K0d9Xf9TewgN+ITdO0HhIj4an
nmj4LavfGluy2LnAOZc3u9x7/9QXzoZ2N5372V9P/GThk9r/tKT/mbOh17M8
tTSh37+N9+96MbJCr7Oh1lGbOo6pud74oolF499sdTZgV32/+/8rfl/6feuP
Pr+Wz+/n858wPvOdm1D74/Mb+9Z3fP4H33qTb73M59/wrT/65pW+9RGfn8G3
n983rvbtH/DNd3z71X3+Yd96n28/hm9c7Vu/9q2P+Oqhb93BNx/3rTf5/NK+
cy4+v7TPn+zbL+3zM/v2afj8z75xFONt2nv/nM3adb56NNSr+Ohv9yZuNnty
/2vbbqxrkhYqUfmXdkvjfrXw0QXufPHniYdDDV35Eb7CoHb1S88/HOob+1vP
iIh9xscl/vBOyYUHjRPP/N1Tr9e840AoVs45nnfnHDusPrUuOuaw8cZnPi7Q
LUdyaCjzGscX5EnJsXzGbxYP8edy5/iIBz41f9KoiAf2WDzw6p36VTxVZHdo
SqNzDWISUi3+Q8PLDD8UlxRKZJ8P+9PnDX5+TrFtoe0HL+yKSz5uPPrpxGGj
Xtlg8di634txbeeV2WHx2D7rt7eOKnXqJ4sH/k6l719KGb42dNSVI/Hnf334
Fyfv/D6Usfx6+ZioM8YHD/3wkZrnvjNOPC2Or9uWPnNWaNHV+Khhz4XPgQ45
feqd2hkTQ11mZi31afRCa3eR+/q0+6PhQfOHwteV6vPN+qiDVk/gjxb4442P
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
yzEgOnc4/P/Nj6TpR39NP/qvkvTbPgdJP/pr+s2PJ+lHf00/+i+f9lyx26sH
ddZzK+jc49mcxzN+CMeDznpeG52zVsx1e0xS0I/BPkfVefehnK8k9wj6MXz+
opnjc06LKx70Y2j60bmnpB+dV0v60VnTj86afnTW9Nt6TdLzZ9fNyhKI55Lb
110796LCFxousnlCrJunR2yYtfvS3sk2r2jh5unL3HlM0r/KzZcfdvf5EL6R
07ueO4du8xA3T9f0PCz7nSgv9oP99fKCzwcfWGfz7fdcOeQccnhLm4nLbF+K
nXd35wsoLz5b979UsVGZr+z7A27++2XmvUBvWb5+kv2olOMBmUdjN/hcdnHJ
8Jzl0u37U87fkmPEzmtbfgjvy3rP+XMazfu4yYR3jlj4Nk7/1VvylL7royPm
x2Af/rFj5Xo/sDAcfpbzw+xouWvlC7elWPzsF3pjeue8O0ccMb8Hn4MKFlv/
9CdHLHwPxy+XGNEiV9bDFq64+/uENmltyjU/aDoXcfsod5dYtOHu+PD+sXdd
ukaWXPhAwf7h8IVdPuouL/Hpc5MOGT/t8pXQ84ND1VMOWDytnA6NK+R7KCX3
Xxa+lauHx0r0WtNn9l7TAXtQpX+nh4sfTDG/WX+Xj6RsD88/vSfsX0pz4aeJ
f6mDC793TKHHeketsXiKOh1Wt4tbPuDmeovH7l+ReOAl41a1vzBvubULeHSp
X3vVvTbP2gW83LA/IpMbT7T5oe6TJB72Oy1356CxV3scry77rHK5dtf3xptb
/my12fxE9Z2uZbbnGvt0+Q0Wz0vus5+7h5x4erny2Vi0Yv5yW9dZPPjNqo4u
VWNAWlg3ePV2c2b035Ro8bNPqY/Eb/cZt668YVzsMtPT7veKvue2hwZ+YnrC
i2XeU1TP6kOci2/xokHpcz7eYu0ov7Mnyxte2le913YL/6CzA13P7lj0/sZ1
xl8Z+Pf9ERHpocmZ56MHGr9D/FFw9rHfd+nrt7oN32Tt6Lv4k8fjkg+G2j8x
eMuYjuH9Y/Dpjzz1zc1vfw7vw3TxFB3dt+jD878L+5MdL+XuL2ro2W9MPLEu
/WpXdf+w7c/02D3lpKeW7OOiHJvK7xL/ZUkn8ZTx+NMKeHSuLX42O08ufjDC
qx+Pchkq/jfKRTnh1X9I/DoeID0jpL+29WLpr+E6niEe7PmU2mUOtP2PrpYe
5///Is/2mPYbU61+so908sXGw/N0T7Xwto83x7SlOe87avUHXrtBjQfjThy0
eNin99306TXSpy608PCZ7rwe5aj7+ihH5cSv+9lIp2+fm67LoI/ukyce5djb
ua7frJl5n+Fos8OFXfkTHju/3tmZvG6cg13q4drZKGd/CN9E9mHSHss4O/NG
nT11PoycY+39oBtX/JB5L9Bgs2/PyDiKdpTP2bFv3X0+8CjH+zlOudQU/eFb
XLsu7OwJ5XVIxjnYgcXOXk3KfIdijNn5d/E/if5bxJ8P99nPTm5cVDDxy2dG
PBseR7Hu9lyDN+978Xyq9Y99dt3+7NMDfg/Mr7M+uf3qrKQDgfh1/QKu423i
0XMN8MrnEh6Z8GiQjy6Q+9jbP+0M2BOth7Qj5YSf7HR9IfPdioHWX7widpX0
271WvecuG1s23epPWzdemurG7dRz1vtyZ96XMtDCw+e68JTvRbdudX306h8f
mh3m/V39zXcxz9slu3xnnH78nR0DukZdnmDtgvW4Fe7+E+rDF4wXMt/v+MK4
5pd6y2cPGT/Qn3Y+OPyv11PD/eZmV88ruHpOexkk62Xoif5XzpQuvTFtptVD
n52Jd/VzXIMOW2bOCJ/LqOfG/20aVe2+ukPYDvd09bzbR9VunqiXZryT+51H
Gw/dUOBS2J5j51bPzD6zZbM0s8NXpD+1cYjrLzo1+GF8bEy6lbuei6HeKif8
eLdOqlzbBeUOH/b+hbaneofHw/Euntwrer+TvDdsP/O4cenebh8P2FV4ktWT
P108s2WfP+ePruecV/PZD6aH5zuufJucG33mk8fXhM+5OB7ZuERq0V+WW3jG
ewXrdOu57KvlZoe1fKk/gfOMjC+FEw/1Wbn2g7S7am4+9V3lZaMeH7/SyquF
K8+cwxJqt2k739ppPlcfzgyaU7Vi+lLjdp930Tr7tjROtHg+dPXrvg869y7b
Z4aFb+CZp+s5L8qFelLS9YM2PnE6L4r5PS11zcbwuSTHY7r8NrNMww3G6e/W
5fj9vbInFxunXN7vFfPrx9+vNY5uv+7eFzMj/ZvwOSMX/5NrtjVKjB1p5c66
eaTzA5DfKDlfRn7fkf6L8Gof7DyRjIftPJFwOwfkCb/A2SvlnSQ9/O4rMq4g
fj33Aa/u8avwWXtrypK+OX63+p/NtceZbWbmv71HkoWr6uIZsySxzNrGO4zz
u3/We/vE8vrh+csil6+ei+Y8mrb4R+sXpki7IF/fSTuyeYf013BtR/Bxzs6s
yXq607hP1obPc7l8LfrktmqTR6wwO0M9T3Hnyq19ST0h/FZPOUbLPgrC1/C0
9+tit6mHL0l/R/j3PPso1P6QHuXE4wv/uZQL/DVJD79b25Mvn33TeR/9TsNJ
uQrdff9PoR0vprz/2cBaNq4rcLVp6EqfD0NvLp9VZvD5z4yv2BN1fM3YDaGH
+/TYu+NinHHsXqEt33ZvNaS18Vklnps74cxPgd/1cR2/+fp937zDZ+d9/bXP
/+mbj/jG2/T3I9w4pFLFbqc7Hgv3x/A5yX32RjUP+1ngabvadR//efg8M/y9
gu+OGTQ/fE8rfM+1A02rF/rB9mHArz//c92Ssz+0cxpw0sm6tXL2tStnnU85
+4CVsy6iHD++cuoNfsUaQ6s+f+eLh2z8BM+VvCTf4Mrh84rwKs/+WeynUeHz
fvAz1Qdv+3Bn+HwdPKnDxvQmJ3+yffyt5Hw0+VVOfpWTX+XkVznzZ+Xo0MfV
3wETO84+1GaP6QBvPuzkc+2Hhc9/wpc8VfzBe7/cFfbrOT6pUPt5k+LC5w36
yD438qWcfCknX8rJl3J7R1XsNvXzn+/lDt5HYe+cCrd3TvX+Cqcn85dVmfOa
EaYb/KnM+V0n003nO9Qf5bRH5eRXOflVTntUTv1UTjkqpxyVo6dy9FSOnsrR
U/fpUT+Vo7NydFZu93MJR2fl6KwcnZWjs3J0Vo7OytFTOXr67gFWjp7LZP8b
/Kacs0NnDQ/X8Oiv4eEannLR8HANT3lpeLiGpxw1PFzDU74aHq7hKXcND9fw
1AcND9fw1BMND9fw1B8ND9fwtF8NT31TTn1TTn3zcf1d6ttTsq+PeqWc+qOc
eqKc+qCccldO+SqnHJVTXsopF+Xor9zuARNu74HK/j17P1S4vRMq3NbVhNs7
ocLtnVDh9k6ocPRRbu+ECrd3QoXbO6HC7Z1Q4fZOqHB7z1v2v6GbcnRTjm7K
0U05uilHN+XophzdlKObcnRTjm7K0U05uhWW/W/ophzdlKObcnRTjm7K0U05
uilHN+XophzdlKObcnRTjj1Ujt1Tjs4VZL+c3csjHJ2Vo7NydFaOzsrRWTk6
K0dn5eisHJ2Vo7NydFZu78UIt/dihKPzTtmfhs7K0Vk5OitHZ+XorBydlaOz
cnRWjs7K0Vk5OitHZ+XorBydlds7v7LPzd75FW7v/Aq3d36F2zu/wu2dX+Ho
qdze+RVu7/wKt3d+hds7v8LtnV/h9s6vcHvnVzh+Cj6HFs52MGu1VDuHBn+w
eP433qu8z9Zr4Zde/2rcu9G7bL8C/OXnqsx99KEJoR3uHIv6QzhfoXyF2/ev
vKLbjx7ww7h90srZv6ucfaUB/4xbl1WOPxo/xoBW/3752MA9oU/cOED9G5wf
UM6+cOXst1bOPlrl7PtU3tWd/1G/RJLrd5U/4/aLK2cftnL21ypnP6hy7rNT
f4W9GyWc81Q6H+ecknL2wSjnnkmdh3LPsHLuIVfOfZHKry7/53lrkme+2cQz
r6zhmT8+6JknfuyZDzL/0XkQ4TR8eXcOSsN39cwHv3LndjR8mmc+WMSdM9Hw
LTzzwSRn35Rj3/55vpklwH3zvg9ce9b5zgVn35Tvc/ZN+WvOvin/xdk35XxX
vtzZN+UVnH1TPt3ZN+Xxzr4pf8bZt8D8ztk35eWdfdN5zUPuHKnyqe58o/I7
3bm7wDzOfQ/M4z65ZScD8zhnJwOc9yyEYyeVd3b2UOcdR905PeXN3Pkx5XxX
/rSzn8pbOPupvKizn8rrODup4/al7lyi8n+583LKp7lzXMr5rryeO/eiPMKd
x1Be0NlnHfcOc/ZZ+Y2nb50PVN7FnVtTnurOUynne2D8786fBMbzrl9Qftj1
CzqefNX1C8q3u35BeV3XLyhf5s5lKS/szgsp57vyeN6PE77I2dPAeNXZc+VT
nN1WXtDZZ+XD3Pk05Td23jo3pXy5O8+jnP5Xxyf0v8rpvxk/LBhX9pV+5b62
88k6ruDcqfLWbh+/jgc4t6Cc83vKGRcp57xZYJ3CtXflu/8f+zXOR6l9nuXq
s9oNzjOg56fvz51Yf+tBOyev41jGY8o576Sc/lQ5+7/53ds+fXnI+03X27ot
vG/aY3E/fL7A1m213Jk3Kec8tnLma5R77FujQseOht/dhi8ulD3jjod+tPTA
vzub++1Bu16wc79af9g/Rzneeheyu52LgMdnvvM7xO4B0XInXuXsN1JOepQz
bldeyO0H8K1PEf7Wuy19Q2dcPdHw6Kuce8ID93g7e6Sc/lc55yp1HDjK2Tft
r3e7+JUzn1VO/fRxbS8r3bxD+7XVHm73OOu83n1Xnt2Nr5Tjr6Ad3fFY/cFP
Hgm/bw6vW+XcVz8kh9/hhecbmBp/b8fwuRf493nuXPJugYN2flvrM/FTH3Jl
vrc7xuLRekU7+ud11WA9JH4td9Lve09H7Rv3t/93ex/25D/ziAj2c5PfxzL3
B35m+63hL7h98r5+Bx21vXdz+2X5+76h7S9GXki1/bJw9oczb/XNf/V38Qtp
ePxCyrk3Xjn39mu5wH3ruYF1MTfeU27vkek8woX3rVtpOvHDBNYHXb8ZWBd2
8Svn/LPy424cqJxzsJpOxofK0YvyWs++dHc/DvxlefdTy9fH2b9l9fPZvOPa
LJlm9Y1y/NKd/+L9COXHnP9H7d4JDx/hsbf0d9Tn5NQrE59akBpiHAWfcuLI
X03SjoRGu/2OWt84J+xb39T6gA7oU6dItR4vZF1j/sbAuMvNi5Vzzt+3/qvp
wU+lHH+acsYhmv4Wbp6onPtWlGd19w4E5umuf9R2x/kQzVcrj9/jdQ/3teu7
3DxU00M9p9yfnvfIlpmj5ofwj2l9xi4pj3fziMC42uU3sN/G6ePbz6PppB8J
+Kk87Y7zh5RL9hf/9/t6w+38m7YLuI4fVnnGCUmuXmn4bK4clVPffOuwmn7u
Y/qf8jTn3wiMb52Oyut76iF+cq2H+IGV41fU+Ol/A/2aCx/w/7t2p5z6qfFw
fhJe3/X7jM/hgxK7979UMXzvHvyN+X+vuNZ9h9U/rYfYK+XMQ5VjH5TTXnzz
UF//rpz29c/7ZIL+VeLR8Ls889NI1x41PPNf5Sdc/6v1GbsU8IM5/0NABxeP
cuqbctaJAusCzl+q6azn5vWB+uxZN2fc4vMDBNZTXDtSTv+o4zHsgG+crOlk
nq6cdRDlnFvW9HM+WTnnJwP22fUjyvFXKKedKqedBvZhvn15esM+QX+Fj/v8
S75xkW/c4vP/oJuWo28+4hvP+8bbvnG13Zsk974yr4E3d/escs8F6fnK3afK
dz7zjRzQ/pHYA3ZfCbyluweV/hF+9OPPpuc5tCxU140PydeNOzvfk3fPHrsH
xPL7731nauz41b7zGe/uKcXvAZ9+8ljRtV+vsXPyqhv3sATW3ZzfSTnflT/r
xtXaLjq5c17KR7h6opxznso5x6Kceq68kCvfwP5DV77Kc/GuitTnpq6clHN+
TPk7rnyV3+vKV+3zZO55Ed7JlZPy+1z5Ks/n5unKr7tyV/6w8yeoHT7g/AnK
F7t+XPlGzpkLn+/6ceWfO3ulvLGb7+s6Qn03P1J+/fyt8Ybyt9z5GeWNnd1R
/rizP8pnrr81H9R1gT3Ov6f8SXcOSHke176Un3PtS/k+166UN+V9E/F39XPt
SPkc146UJ/DOiPD+rh0p13n6SjdP99ntO908mvAX706sMqTqYZvPYlez31xW
efxfh+w+F+LZ4O6fgQf8sS7+gP3p585dS/rnud/7n66bcD6c9ES78+89uRdR
zoNjf+Cdcr+ZHJV7pd2D4DvXr34tzpHB62Qp3/KvuofsnDv8qDvPxTlZeP+q
Be/8MD78jh68yKffL+7cP3zfOLzs62NzPt81/P4dfNeHRXe3GrzZzkvCNz/X
4+Mbdy+1c+vodrDKbRfK3HvY/KjwndkKR4buCL8zCJ+Yv0Wn7cP/sHzBT7lz
VeQLvi2u0Qd390+y36Vchhf4re2Ekn/YOWL4W2+XOnZ+/++WHvhdf1T49qGX
frP44T+6+mbv8ck+GbjvvgKth+isnHiU2z02Oo9w/ZFy8quc/CpnnKOc+qbc
7scWHus5xxHr2W+Dzsqpn8rRTTn1UznnWJVTbwPnOFw/qJxy0XzBNbzd/ybj
B8pLOeWlnPJSTrkop1yUx3rOR6C/cvQP+KOc/srRXzk6B/zSTmfl6Knc3rnz
3MMc8Lvynp1we7dOuL1bJzzWc27C3q3z3Kus3N6nE27v0Ok+HN6hE27v0AlH
Hx2/oY9y9FGOPspjPecg0EE5OihHh8D+H6eDcvKr3O6rl/Eh+VVu9xAKj/Wc
U7D75IWTL+WkXznp96VTx5OkU3msZ5+/3aMunPQoJz3KSY+OJ2M9+9753cB+
GBe/Lx4dX9k9pcK3y/y6iZtfD5X5cqybL2NX6a931S4+vcnC8Psd8N4rF/5Q
7rXdNp7R/ho7oP0v9UE56VFO/MrtPQ7hRz3zZeyAbzyg/RE6KO/lmV9jB5Sj
m3Lqp3J0U45ugfm40035FM/8HT2Vo6dy9Aycx3R6+vKr/c52jx+gqMcPYO+l
Ch/q8QPY+6TCiV/tHvEr7+vxA/C7yvndwHk0jx+A9KgdO+HxA5BO5aRTOelU
nujxD5D+wLkw7s0Q3sXjNyBfysmXcvKlnHwp7+DxM5Bf5eRXOfkNnM9y+Q3s
53T5VTtMfpWTX+X2bovwhh4/BjooRwfl6KAcHQL7P50Oyo96/CHoo9zejZV+
x96NFd7L41exd2OF27uxwu3dWOH23o1wex9WuL0Pq/tLPX4bex/W088qt/dh
9VwV79p4uPp5fP7zoh4/OeHhDyx6r3uxKftt/g5PH3jm7/n5Dtm9cPD7lrfP
1fb7xebHgB+LHLk09auNNn9Xfw56kv7Pcr9d7eoHq83/AJ/o7jOhHAPrKS4e
nx8gsC/Is28QHZSjg3K7b5b7fzL614jummp+Ffi3n4yu8m37A+bf8PmdfOMQ
dLvT3Ru5XfZ3dZJ7UOG13b4a0qn7u46K//BbuX/S/DPOz9bL42eze0GlHibK
/pYabn8L+gTuS3H5Jf5ZL/8r+rknZ9v9eL573vjdyEwdqln88I/d+gv1B17j
iSx5F2TstPz60qOc31W+3bNuiD52j9M379SOHNs99L8AoYHc9g==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
FOusT+yLDM0cj6h/n7Brym8cmHn9rs6cu/sU/GVqmyl5k9yNT8xvVjL9LHD1
iCkUL9wVebaPU+f+lAPsBh0WucHdlKdJvSYjFCOXnW/5C16P3PZCdmN0Yl0p
Pal4SXHTFdB5meMq5dyUe5gactI9c+x/WvwOrbXCFcWFNyXOpUhOhsX6K5/3
QPAvijXR2sgnVVzWOXM8rRi7f8l5wkfB/1acmDh+k82+IOJH9f8q9drr+2wI
OVac+GvFa3KG9Kd0X2I/4Deu18unLZw7Uw5NuRfFcN3jWeno/+dRTkidD1Re
UN95YHzr6yPX1Fz5t4r9BPkLPTPnzHqVbZfGhqxKBgfHOkwNO6A17Jp5zc7l
X8/E+Vnl+xrGev4S89Ez2t93Zv5GnyqfEftNMXydkFXJbOd4b4fYi0NjPy5O
HEMqflScfX/ivOigsmXqbMWtrEtzxn4tdx/lT+sn/qbKkfFXmsW9awDf078r
9LHEse5g+L9Dh+T+bi3KjqUls/eG3L6c+9tqX1fnXU151yJ4zVLHwr155vay
fa22jP8X96pKf9F3y9z5z065859ar07Q7bl3BM8vhN8ifL++jPE715+B74Y2
hl8X3BP+T4llQvKgmP6RWPNzMsf1WgeteZf4Rsp36DsoF63nroxvKt9D+kY5
Z+mk3sHvRf9xWq/Mcf3E0C2K3bvG+s+PfdoS+nj01/6V36F88XEl2y/l7j8q
eX/0C/lXTl46S35pl8hRKFfxUm7dOTN8GMm08hPKlyuHvgvt+NTfQd+8Lut2
sd5Zsd6V/pUtuDDkRHq+XLHNWp7bb9H+UF6xfeRnlPPYpuK8omKcKhXbccWM
mzPrH/lFVSu26StyX4sv/dQh9JJ0do3ce/3twt9CMnZWfIs6sSe7hA8wgf5d
w5eYAu4YNn00+O/MtQLFs7LfsuOy8W1Crw7WezPnwaQb+9J2AO+dOX8lP7xZ
Ztun3IVyGDJkspkPao7hv43UGofP9gx0l/DlZkDLYddk356L/ah92aDwvKfK
p1bcLD2sXJH8YPkYFe9TyYjsXevEuTvtrzsTf0t9x+0r9q/eCv0t3advMyOz
DyMfo0bFPtKq8I013vDc8ZlkQ3k11RK0p0rytVLn+i4qu/azHvwRvC253iLy
zKpZjYB+wPXj4AfAX4Stk81TTvlR+KNkr7juBr4MPE15AfBI6ULwI+D7wevA
V4MvlZ4DPwl+UHYWPBM8Gfwz+IHwRdeAHwof9T3wWPDd4LXgZ8CTwN+D50iu
wX/InwOPBn8Lfhb8qPwF8CzwY+BNZfsR8jPk4yv33E6+s3SHfD6uaygvmNo3
k492AFhicQl4Web6iHIjDdN/lrJ0PvzFmddTuZd/gbdknCqZdd6/4XejzzuZ
627DKs6d5LSMdlLEm9KFN4V/JT9rbOgf6fYemfWbbMHNmX2BnTLX81TX+yJ1
bUu+n3xA+W+SrZmhh3YMObs/cxz8jb5b5nhdvmVSuCal2tRq5RLANaAPhwwp
1r83+us5GTLlK1uWPHbNyFtOifH1Hj1btex8qfK33yZ+74mpfdq7y/ZbNb7k
UzWzqjGm6lGqS8muyz+Vnzo3dPlPsS4rgi89qDyDdLxyAJqH5qc9MDmzLbgh
c45U6629XCtyrXqXamHfJ9alkn/VfuTLyaeXbz9a+QH9vsT1zpmxthp/SWDp
zzt4x6uJ95HwQvDVPPdg/PYHFDuwzgOh/4JWEvevGbpGOue5iute48FvVzyX
LWM/jor5q4/0o+IQ6Sb5mFUi3lENrih7znpGe1k5RNXRhDWm5K4ImW8Sv1d9
5R8uZaw/K46tN4fe6K/cSOK8ivzhNeB7oLeE7MmPrYQOkb+l2oTqEa9n9lvk
L8r/bRX+tvxu+YzyEeUfqvak3FT/itdHsdJS7ZWQpW9T54/k9yv2/1A5JNkm
xVG0Z/W95VvQZgIr0BW0WeCqysXQntdaQHeMPa7atOrI8jve4p2zwQvl6xeO
Lb6Lbyq/uY50UeZ1aMtazYWeltpWjuL60cx+o+Y5MPyZ++CNoW1inIcyj7kh
9uNMrv+G3lW27GyId0kPSQ71Xf5mrE0lx4Qa52zufZY6r6Z36Z3KA6mupm+o
/Jd8oXGZc2zyE26Tzsw8f8UB4+W/JubfFzGjbIT4fybWIfo+wnq+DmtxofQm
3+WSwn6b/LcbYk+VM/uBeud7hXWDfrdygUPCP1Su76bcdWTlsg6rWIcvgh5c
cb3vVejhtHvAr1W8Xlq3JzL7c9J7yjdqH2kPjsxcE1GdQjWFBsoflVwfUX1B
OcNXYszeJed4ZaPl76i2qzx6PdbghcxnF7SntTdHhz36quy4e5/o04BnDpA9
hraMXNmKinVdDfpMzZxfV35guuSr4pqj1q1axTVK+V17VVzHnFWxLpVO0W+U
PtQ4T4Kfyp17WFu4bqIajWol0pXSmc/K/lRc35wCLQrXXJvmzm/sWXaeX3pP
OvQx6LDcfpHysZI5yZ7mXL3iWqry+bVjDafJn6w43/hkxbUh5c9VM1LOvE/J
eXLVg5Q/V21I+XudbdAZh27MoVNq3+9q8Lmp/UnV+OSD9aHPpYV9d8UdtcOW
SZ90Key7y7dXvVL1ZdWomxTOgc5VPrBwPkX5E9X0FWepBqIzJzqXcjn0gsL7
/7OKz2yoVqiaYcfCftgH8GvmPvcxXzn7wjrlO8kk/F0T54QXFK4RKn+ruq1+
Y0PZ3NxncF7lfsYzbUrO46nWIB9S9RrVIPqWXHdQfeHWkusRqjepNvFW5ACl
Z5UPVK1NNQjVoVoX9nUkYy1jX6yM/KH0sXKJP2f2YZT/VD1n58Q5tB1zn09Z
GLln+bryeY/j+p7U++74wnVr7bWzCvtMq8HNwQNS70f5wNJDOh/SGP4t8OdU
7Cu3iLikfsW1b/Hb0Wdy6rrMuPDNNmj/hO4toDNSn4cpp67FSVdn0LML+2qq
zXUo7NupBjQl/LrfGad9YR9UdcBzCvuLqqlNDb/6z7K/hfzqCRXn+RWnK6Y4
t7D/p/rg3LALW0PnpfZ5toHOTn1uZCvoeYV9StX+FqQ+l1JN+r6wP6q65/mF
7co/Nb7wjT9nDq+G71RdNir1uZRa0M6F7ZPqfaeCH0xdAxoR/vMn8gMLnxtQ
HfDpsGuby86ZKzcuue1U2OapznhmYR9a9c0x4fd+Q//lYR93Tl1Tkh++Hv4J
hc9JqLY4NHzyD+EvTX2+pTa0FX2Gp65DvQVdJTuQ2hbLtzw5c/1NvvSv8jnC
x/4RvCTzWabbNc+yfePfUuf2lcfWfpSfqT30RGFZldwelFuetY/GVby/tAe1
Fz/g+XekB0Qlp+C9oBcW9lNVn2oQel76oWvZZ6IGSH9XfIbkRWi9is94zIZu
XXGcMrlifasYSvng9xlvDfx9Uudq5YckmXWF9tEBueNW6TGdrVDtSf6P/CDV
UFTX0D5SPkK2WP65chzKdSimeJv+b4Prpq5jK975qeyzTMrzKN/TpnDcpdp9
28Kxk2r3pxeOqVT7/jr2/ljp5LCtsrEjwz7Kjij3IRutGGQb2laJbcENZccg
D2euL7xbst5TLkt5CeUndHZLvpx8usNyn/tSTUp2ULkl1exOZj4jU9dGlbtW
jLM683kV1ZRVW9bZsz9LPqdSPfwu+V+qdSl/qrzjdpnP0l2S+exji9DV+8Wz
kh+d7VD+UOMqB658+ezC+TTlu5RT3blwXkB7X2dElDvRubWtMsdiyiupRn0M
9xZAD6L/dallQ/MYFLZDORPlcXpnPruiXOQi6KH0vzG1/Oh83h4l53zqw78q
ta38V+51Vs39MHh/lXyWRnlF5RKVk1deS37T3ML5nAGJ88/b5J6n6oY6J6Pa
5RGZc6f9Q9/W45krUtt91RqU01Y9cVXh84Kq//4R75XfqnzpgFhbndlSyKM8
o87M6Fso3lUsOT5+r3KbyokpH6PzP8oDKt/7Q/ii8kl1HlV5NJ1l07k++fDy
PXSeU3HqtZnzeDpHM6/wOYIFifejagTCin8ace+a1L6QzqbqTJLyY8rZKten
uvau9Omcep8q/3hNzO2mkFXl3nYsnOsZF3tBdYll8KrQ9k+ti3YoHGNrv2wX
30Yx+P8A1ROMkQ==
          "]], Polygon3DBox[CompressedData["
1:eJw1mwf8l+P6x5/vM0VGW+TICFkZ2RINRET20ba1RGU1tIyyM1PRRqiMymwS
kb03xzg4h0PWEcf/8/a5/q+Xy++6nvt+7ud+nu99X/fn+lxXW/UZ2HVAmiTJ
+VmS5Po7XP+bUUuSupJLpe+g69tL3pW8J/lR17qqX1fpH1RJUuMmSX8NwkCn
lUkyWPduLtlU+kuSY9XlDrUNUv8/1be77BN0/yrZn+jvp7KfUf/xamuZ+Zk8
633J27q2ldr3kf6E+v8hu5vs42U/I7uL7KNkt9P9x0jfTtdbcJ/kHUlvPT9T
24HS31D/GUWSdFD/jpKf1X+m2utqbn+qz83S91S/PSTn6Nq5kofU/zT1PV2y
hfRPdE8r6W3po/He0D29ZM9V35Gy71afE2SfKKmkL5D0STzG5tLnSI5P3KeU
/rru7yn9bt0/TPfP1rXjEvcppL9S+n3vUvsQtb8s+1TZU2VfIPsHzecY2V00
n5Wyd9ff3SSnq/0MySOF536GZEvpa9S/kfTW6nOW+r9a+veYob4Xyf5Ife6X
/QBzlr6nrg1V3wslrfm9dG2e2uYzpvSddf/u+nZdNW6l9htl/yF7juz3ZbdW
n0vV93Ldf7DsPWVfLHuU7Day/8Z19d9J8or083X/09L3kv6W2r/T35/Vf6Ku
na8x/yH7c9n1Nd+5svfQeJfIHqPrB6n/XrKHyb5SdjvZe8seLnuC7A6y95E9
Qva1sg+V/YLsG2XfIDlA+vaSc6UPUnsr3kfPOUDP/lbXjtK1j3XtST23sewX
9XeZ+o/mfSS7Fl5f/Hb8hj+pfbnsMYn7tJK+WnK99Osk+0n/u/qcr/GPjvGf
LzwX+uwv/bnCfT/QPA7Xs1fIHpt4zN2kf1z4t+I3OV36g7n327b89tLbSG7T
+L0kJ+Zen2fEemb9vatr2/DuevbZGr+ervWQfbbsbSuv19Nj/bIeZ8d+YE3n
0muF19+p6r+5+n+uv1P1rCmSIRp7Vqz/+zWfZmrfX+37Sc6UfRaOR+1d9Odk
XduM9ay/vyZeU93V/qbGaC57b11/XO2/6+8fsvdUex+19yr9rKHq93rsh0PU
PivW3/TYT1PUt6nsheq/o/T5av9Q9trc32qR/n4ku7va92D9yX5N9kX6e2fN
73Rhbv+Dv9lJf59V+8+az7rE9/TUOB10fUPp4yRn5PaHc6Ufpj6/yj6wtK9a
If1l3T9R9v9kL5bdV/Zq/a2vvrto3Mcqr5fLYn2xHk7Ex6jtHslJldfLqFhf
rN+TNd7BmkdbyUnS1+jaxMRr/MDC36u19EN1/6O6/xv9PVLPf08yUc/uLRnB
etT9PaW/qHtuSjxGm8L7ZXSsP8ZbE+t7bLS/GOtznOSgIvxzzXvoQOl9JGOk
j5WcLv0yfLD0tup/uObSQPpmujZKzx8dZwZnx2TJ+dJ/09//Su5T3/slvxQe
7zTd8yq/v9q+l8xU2yxJ2zz2bpwPrBPWSwv2qPTO+h5DZX8vu7n05rpnS8mr
ktckx5U+nw5W3zUav6vsYeq/ra6tX7qd78V3e0XtzXPvZfb0qdJX5f6W9Okl
vZ9kgvQ2nGnSD2AO0rvr2gm5198N0n9hDUgfpGu7yWarnIeeey/vLNld+kl8
U55V8/t04Xtp3pMlx0g/mbO55j703TT3s66WLJe+VN9vEPMN/7Werg2v+R35
/XtILpV+Mj5QY+6jOXVJ/S58j8P19wi1bcCa1/VT1X4tZ6nG20b6fpIOsRde
Uv999YyR+LfM/qyj7Gs532R3DX9/Ss3P5NndJBdIny2ZoPGPYM+oz02s28rr
Z1bN62aE9Cs0Xr3EvuO5yvdwL31YX/hr3vWC8Mf/1LWvpK9T+0zdf6Lsibrn
Jkk/3T8y1udu6vNlZn+Ffzwpc3smu7fsnpnX50DJ7bp3kuQ86WlhfNA9s72N
/m4NFpG8mdl/cv7/XfoAtfeX3KJ7b01tj9Pz20m/mz3DvpDMqdlnHq17DuH8
lAxRn6GSf+SeaztdO1f3d9L371fzfkxLY4NWktNSY4QRnElq+wifrP4N1adx
rN0VsrfL/SyeOVr6Z5LdZbcHE6r9P5nX6m+SH6XvJNkRbCj5UPK1+rdX25Fg
MvXvU3os3uNN2dvnfgZjj2EPx/nIGXg4+CfOP64dJv21OB/xZ52kvyeZJn06
vwnnmeSuxNdOlP4BZ7L0mZJTpL9fuC/XTgaPaT5tNZ8dJdtL/15zOJi1q79P
x3k7WPYQziTp/9J7fJPYx0+J8521NDjOY3wavq2z5Kjc78tvx5iMvXnutYpv
GyP5p9pnq+1b6TezXirvV/btUtaC/n4j+1fJlerzeuAV/PER0t8I/46PPlL6
25Kp0u+UHA82yu2rwPRg+/UldSSXaKxLJe8U7ss3O6Ewvpquvm9JrmE/lMZb
7WL/Xqy/09RWT/feE+/DepsZ+287jdGX/aVxdlf/H8FzsjfBX1f2N5xXnGm7
SL8v97vxjjdL3xV8xd5R+6bgmdiv+KjNpLdU+6NqXyzZoXKfJpJdKt+7s+QJ
tT0u2Un6w/H7MEYz6bvp2hK1PZUa343Cv+vZLSWXle4DTgf3cy/PbBo4nrkM
So39VkW8Mlz3fFzz+sqkX5U7luHM+FjvvDEYIzDNSmKh3L50kmSw9H9nxitN
ZG+dG/9yP+NspHs3l/032bsE3ngsN35pp3selX6d5O2aYxLOzeWl9+N/Aj8s
Krx2WZ+TSq/3zXT/LHwOvjfuP4j9lflMY720kf6U7q9bOR4iLtoQvF44DiKu
WBgyOPwpbXurzzMa/2nJXpVjhpXSV6SOJcCAYEF8Jr5zP9nPyX5Wsm/lb8S3
+iHwHj7+E7V9HL7/QbW3kL4w8NrRki9kfy45SnqP1L7oxprPywck/6r5ex2h
MV8qfDaxX7aO85W+n0n2lP43jTFPYzwg2YLzA/wivbPkM3y+7lla8zdNSseP
TdR2qMxf1PdqcKjay8CL24E5weKSFvh/1iRxpWRr8IJkAXhUsiXrWXJ9ap+J
7xxfeL2x7oiHZut5TaXnkjvAqrq2TPrS1PvtbF17VM9ei88ojHnBvsTsxO5H
hH9rpPYjpd+rPv1kP6g+W1Wew2nEj5nndoH63Ky+X0j2zR3DEctdwbplr0Z8
tUr37wO+l4xQ20jJAdJXqX2C2l9P3b81e0xj7aCxXmC/Ft7rl6n/gZX37ADp
AzPvZWI6YruxYDniudzYnxhgXeY1dpH+Xpx57SHol2Sez3g9d2/136Tm9U1M
SGx4laS99McjfsQn4Bt21fx+BwupfXXlOABsD8b/KbOvYe2el9nn4EOIFeFP
uJ/fAN83OPNv0zp3LMOa/l7Xnigcn7In2Bv4s3663p9zU/oD8T3wYbw/e+JS
tQ3LvFeeCvz0Qurvu4fmuyl4VM95XvbV7CPOCkkn3TMH/CM5JTPGYD2eAzaQ
bC/9Po03QOMtSm03zo1N6+v+ptLnqr1/4jXL2r1f9kDZj6WeL2v4TI11VuZ2
1gxr54zM64k91Ft6n8x7C5/dN/M7twz8xNrsldk33JeaS+mRGVPdE+cJe5L7
wVXgq2PUdqykB/iStsAr82VvE7Ev8d106dNS+1A4p5mpuQ5wHhjuUPXrqLZ7
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
Wz5M/Azy/60Dv4/LHJuRv2cu9KH+5f8Aq0D5tQ==
          "]], Polygon3DBox[CompressedData["
1:eJwtlmd0FkUUhjfZ5FsRQg0BRAWlVwVBQlcInCNwEAMe4YAI4SA9AQWRJp0E
pIRO6EV6CUF6lV5Cb6F36VVAevB5vfvj/XbuM/fOzLc7M/d+FBMXHRvsOM4i
FIpmhTjOyyDHmcnzVzp6oGV0xLmO089znFy0c6P8KB9KCjhOCD6TeU4h5h6x
03gOgcWj2/DVxD6m/QQlMcYt2J+wh9iP0ETYJsbqCVuDHcs6imNvRN1hK2Gd
YMWwN6CfYMmwDrDC2BcYbwLsGOw4Gsp4m+F9YRuxO+NXEns3ioftgPWGlceO
QDnRCcaIpa8EsSVof8r/iON/xKIQ2DKeOYlbynMSSkKX8JtKzGn4GfQ7fnlh
JeirgiozRnnsQ6g5fovxacG8wcxXEVYDnxEoDb9e2BlpZ6D9Ls9eWiP6B55K
7DsoA5rPHHtg1fU96O+LwmF3YGthT7H/1feA9WCe48x3BP4JYwbBwmE5xPHv
AC8KO0N7KO1dxO1Gg2H7YbVhCdjPWdNI7OUS46xHxeCrsM+h0fgdxD6kb07s
Ndg82FXsaygRtsSzNZRgrNI8F2Pfw28zfq/weY2mwy7DpsPOYp9Dw2FjWW8k
7DXKwf85TXxmWBg6jH9L+Af4VaD9BX0BFMo8kdhptINpp2sPaq6AvWu98+z0
1USVsM+jcfQfYc6jKIHxqsGi6S+HsjJvVeyszJkFHaX9I/4f45cJOyM6AmsF
ywfbRwxN5zk/L7V2+hLwKU37BaLbSeVnISwGu6tnY2isffjWhA1iHa9Y52js
MWgu/gtQOmws9knUDb9t+G1FZRnjLmwD7Dn2CzQVdh22GHYT+xYaA9sGKwX7
QXGMV0o+zN0G1oP+bLSzo7Pw4bC9+O1DQ+j7G7YQdh37BhoNuwFbBruDfReN
gzmefesyqCRzFA3YudH5uevaXTGV9iP4HuxQFEBziesJn01/b559GO83lFPf
ARYeYvte+z+c2A+xd+pbYpfBfoC26+WjIDSL8a7C5tC+hM9lNBJ2BTYLdgH7
IhoBq8Q4FVEdVJe56vG8z3u4qD2GUhm2L/ZbYovSVxw1haXzPKC9R3sIzwTt
QcbbDajq2vr1P07o3aMMIXbOw9AbfIYxZnn84kP+f23OQe0fGq14xqCysMwB
+5ZLXPu2+saN8UmFRcEGY2dkzVmwFzFea1h3z/ar9u0F9Bfsje4xxosJtX0/
HnbFfy918X+u8wArjk7h1we/Z7Az2EVQGqw3bCgqg9062HLHftZ5XWcSFqa7
F9YFO53YAv571ftNZY7Z8Ib4JBIbhd9T+FTaU9AK2gV4RutuJXawa2dSZ7M6
sadg/WGbsbeggbBjsLbaO9jzUE/YFuboB9uE3YU5SmHvwq+ya3er7tgc+F2E
TXZtL2tP14c9hZ3Q+UYniO1JbBqsj2vnQOehIn5z4S1g07Ab4heCXQhe0F9T
O/oK035M+yDtvDpL+MXphekb873ewjoqx+nu1t2EnRNFoBXE3odtpZ1ZuYuw
DsQ+hO3Sfah7G9Yx1M7RXj9O8TGe5Y/9tPOg3KiVfz/Pdy0fKy9/65+PP1zL
x8rLjTz7v71h67DXowH+/bLRz0XKSc39e3wL7Uwoo+4U/z5Idu1e1/3exM9R
6/wzrrP+vWdndQftbCgraulZzbBGdyRyUTO/Zljpn2ed66awGcoZwXYG3+c9
NnLt+1bi2QbeVtL/4N0s130jf8IbYpeTn+5WWDHi8wQsVytnj4GV1JgBy43D
tOdhJ1FNz87oziA753GqL4LtnhzhWh2geqCWZ/dzV1iK9jTqD9sO+wzWXvUL
auPv5wGu5U/l0aqe5Vbl2FEohXlSAnbvLsLvmZ/jv8NvL+xL2C/Y3VF72Die
Y1F+4iJYZ33XzmBB7IFogNaP30R8JqAi2Lnx+xq/1bQLwdaqNtE9GWxrLkdf
rL9Hw/w8PcO1u153/jee5bXXfs5rAWvpx2ucZL9+quNavTbRtdpANUI9YtvR
H88a2uqOR9l0n+LXGL/x/jo74XcQ1hQ2CTsJxfnnN8m176PvNEw1Et94FGy/
aiTWFIndUvc9c/RQTaBaC3spvJPuZ8/qQNWD0app8QvF54ru2oDlitm0HzDe
fZ11z+pb1blR+EXhX4v+JcS359nLszpL9ZbusEGu5Wjl6kGe1Y7TYLf9nNzA
s1pqjGu5SDnpK9hh4mfCzmsv8D9qY09WrqA9VOeUuasH7F3oncxXPmEtDYjZ
Ca/g2r7Q/sjqWS2hmmKO8itKxM7l2fvWe8/k5yPtqxrEDtS5RxH4JDNvZ9hS
7BjmzxNqdaHqwxm6+1XrBGwezdcNPdM51hlHn6vOgf2Msnh2152CFUIFlUdg
Mxmznmv/Tf/xTojl0Cq6C1SLo81+DVzNtbE0ZjvP9ksT1+5/5YH3PKsHVBcM
Ii6f9iD2TZSiMwFfxRzNmHMvSoQdUF0Bq4j9BL+jsHyu1dGqp7X/mmEvxG8B
ysscZWGRvIPh2IV05rD/A12Cy24=
          "]], Polygon3DBox[{{1714, 1207, 1204, 1203, 1190, 1798}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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

          "]], Polygon3DBox[CompressedData["
1:eJwtlVuIV1UUxvc5/PcencaJnlJnvCZ00bDI1NJES9KSrmioPQRpjhM0Boaj
+aZSibeKbJTKMHsotathNAhSQthLmtpTNgWaOYIigYKV1u/jWw+Ls7691ll7
73X59qhnlz3ZVaeUViMN5A7AAL7XkDvRt+eUbkcfh/yGw7aSUs36ZHAPeg/2
sei3Ib9iX8/aXxUCfgT9dezt6G3Icew7wXPQH0bOg4fjMx99ATIC/S3st6D/
QIyXwO+Dp4KnIGfx35Gt34v8CT6Az4OcZwn+M+P/w+hDsP+CfS1r58ADkEHo
17AfQf8RWQH+BBnJ/534v4D+LvZ7ku+ou+4pPttCZC/6G9iHJd/phPKRnRvl
oA+8FXxr8h20/xT+aWKv0+DL2MaA+8CbkIXFZ9BZ2tjvP+wTwWfBXyJL4jxV
7fyeId5c1k6h/4z9ZfRN2XcdjBzFvhk8NHntJ/AafPor52Q5+kbsl9AHhv/b
2bF15pPgIw3XXz4b8b9L50recwL6Hw376kyq/zf8fwjf75BlxfvdnJzzdeg3
ZdvUE68V+wh/i3ShXyHe7OSadMf5dJfLyhG4F7wSfAy8Crwlu5d0x2MN+8j3
xuTzziruPZ3pxaj3RXBHxP8wu5aq6T/am7Wnucsq7I+jj8beqd5A5qi3irFi
VnHfbv1fO77qMRl9EjId/VGkA3s3/zyGfj+yGL0VuaF4JhRrZdjlL117aG/1
sHpZObma3W+D0FtVc857sOE6qB5N0W9DIh+qn2ZGs6MaLI/5bIt+7Yt6D415
1Lx+n91rXyDPFeNXse0Dd4BbkP2V7zivuOfUe+pp4SeKc6eeVe++k80Nd4PH
F9dMtVPOuiL/mn1xwL/s/xFr19eukfpf/KHcLU3uF/FHS3IONG8Ds22jK/NF
LzJG94150nmmofcgzxTzl+Z1OPJ78I3+vU+cgO3NbJt8mrDNQBbpPuAr2TEU
65Xk/lC/qpdm1a7PPvV77Tvtiv5Tb8yv3S+ax2Zs10W/7mZtWG2O+Rj9b9Ye
El+w9lVxzpS7Scn98kGxTXtoL9VEtZkW/NCpHKA/hf2B4nyKSxRTsT8Fj6o9
c5pF8Z1mT2ufRfzW2jXQ/s3ZXDiiNt+9l821OvPu4EPZVAPVQvGlj4x44ijx
SXvt+23Ink1xSCmeOc2e9twV8eU7Nvhc861ctcR7of/1FomTxE3icHH57Mp8
Kn4Xt/YH3yxGPq88g5rfnfFe6A250PCMalYnIpey+bs96q/3TXwqbmwO/lRO
ldt5tfthR7x34+I9Er/rLJoRzYpmVLOaKveT6qNeEgc8j/518buqO+V43xRL
b2x/w/2ofyv1Z8yTuEOcK+4Vn6g3eiPe/1uM5m8=
          "]], 
         Polygon3DBox[{{1542, 255, 563, 562, 1541}, {1721, 1217, 1031, 227, 
          1525}, {1466, 449, 1645, 1316, 1317}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0zlM02EYx/GXQuuNx2giiLZQpBQFvDmKjnIYEweReKAOxSDGOKCTLuqg
m/FedXMwgXgknhiNq6J4XwOJi5MLxBg/b0j49vt7nvf8/1uq+od2HCkJIXzE
NSHmkz6m+Dq/KgthkZyQJ+RK+SfneYleK3/hpakQ2hMhFDBovIPHeIuxNl7M
z/g8L8NtdFr7T283L0iGUI4BuYZPcBOf4wJf5i6+xX08yof5OWednbPfCN6o
r8R72bfAFaUhjOtV8nJU4a16Ba/EOznNGVRjIp7PWdTivXoV1+GDnCudeVef
8Dk+O77iG74j78xR/JCvcgfOuOdr9TCPcZFHuN1Yr3xTnud9ZTxHrd4meTNa
0Ipd+m2801gaD9QXOItu7MWleI84bqyGz6oPyXfkYTnjnDSK8lzu5b/e0Tb+
zS38i+vjc3AFz7a+xPobWKi+yM0oj98X5sd7x/0wJ87Havdcg7vWNnITmvHY
nmv5Kd83tk5ejw3YiNP2rbb+FPdjEIlZnt387cYfWbM1vk91iscxaf60/qTv
pC+epZ7Sf2HOQ/1OvS5046VeTzxPP2nOE3VO3YA87unXcx2OwdHhKA8hFX9r
PIAikvHd8kEcgK3Cft4HVwl/fEzzHrW/0GhCgzOPl838j/0HsHFbEg==
       "]], 
      Line3DBox[{578, 64, 425, 1220, 311, 1139, 405, 1723, 370, 1630, 580, 
       1221, 579, 1157, 578}], 
      Line3DBox[{594, 71, 461, 1532, 239, 446, 87, 350, 289, 339, 587, 586, 
       585, 584, 583, 1724, 582, 581, 428, 595, 336, 313, 594}], 
      Line3DBox[{269, 332, 1224, 279, 1102, 593, 269}], 
      Line3DBox[{1601, 597, 598, 368, 357, 54, 1727, 596, 231, 355, 1601}], 
      Line3DBox[{1606, 600, 601, 602, 603, 1608, 134, 1729, 363, 243, 362, 
       118, 1728, 599, 374, 361, 1606}], Line3DBox[{312, 392, 312}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1225, 1597, 1598, 1799, 1580, 1628, 1993, 1415, 1579, 1796, 
       2003, 1629, 1581, 1730, 1978, 1226, 1788, 1800, 1582, 1994, 1416, 1227,
        1801, 1802, 1803, 1417, 1228, 1804, 1805, 1731, 1895, 1229, 1797, 
       1806, 1650, 2007, 1418, 1230, 2016, 1720}], 
      Line3DBox[{1239, 1787, 1807, 1732, 1979, 1238, 1981, 1540, 1808, 1733, 
       1980, 1240, 1021, 1809, 1427, 1241, 1810, 1811, 1734, 1896, 1242, 1983,
        1545, 1633, 2005, 1735, 1982, 1546, 1618, 1785, 2001, 1619, 1997, 
       1591, 1592}], 
      Line3DBox[{1250, 1812, 1736, 1897, 1249, 1813, 1814, 1737, 1898, 1251, 
       2011, 1680, 1681, 1738, 2010, 1252, 1986, 1789, 1815, 1551, 1739, 1985,
        1550, 1795, 2002, 1527, 1622, 1999, 1593, 1659, 1594, 1998, 1552, 
       1679, 2009, 1725}], 
      Line3DBox[{274, 1049, 272, 1166, 472, 1167, 275, 1150, 420, 1151, 233, 
       1052, 277, 1053, 475, 1171, 234, 476, 1057, 279, 1058, 235, 1176, 1177,
        492, 1178, 491, 2008, 1258, 1816, 1440, 1259, 440, 459, 236, 281}], 
      Line3DBox[{1278, 1791, 1996, 1588, 1561, 1990, 1277, 1992, 1563, 1589, 
       1564, 1991, 1279, 854, 1900, 1280, 1818, 1741, 1901, 1902, 1281, 1819, 
       1742, 1903, 1904, 1282, 1743, 1905, 1906, 1283, 1820, 1445, 1284, 1446,
        1285, 1447, 1286, 1448, 1287, 1565, 1605, 430, 431, 350}], 
      Line3DBox[{1294, 1821, 1822, 1449, 1292, 1823, 1824, 1825, 1450, 1296, 
       1826, 1827, 1451, 1298, 1829, 1830, 1831, 1452, 1300, 1832, 1833, 1834,
        1453, 1302, 1835, 1836, 1454, 1304, 1838, 1456, 1306, 1458, 1308, 
       1460, 1310, 1462, 1312, 1690, 1463, 1692, 1536, 1644, 1671, 1464, 
       1728}], Line3DBox[{1319, 1839, 1840, 1467, 1318, 1841, 1842, 1750, 
       1921, 1320, 1843, 1844, 1468, 1321, 1845, 1846, 1847, 1469, 1322, 1848,
        1849, 1751, 1922, 1323, 1850, 1851, 1470, 1324, 1852, 1471, 1325, 
       1472, 1326, 1473, 1327, 1474, 1328, 1475, 1329, 1643, 1476, 1656, 1538,
        1609, 1649, 1477, 1729}], 
      Line3DBox[{1331, 1853, 1752, 1923, 1330, 1854, 1855, 1753, 1924, 1332, 
       1856, 1857, 1479, 1333, 1858, 1859, 1754, 1925, 1334, 1860, 1861, 1755,
        1926, 1335, 1862, 1863, 1480, 1336, 1864, 1481, 1337, 1482, 1338, 
       1483, 1339, 1484, 1340, 1485, 1341, 1486, 1342, 1570, 1487, 1571, 1627,
        1569, 1660, 1625}], 
      Line3DBox[{1344, 1865, 1756, 1927, 1343, 1866, 1867, 1757, 1928, 1345, 
       1868, 1758, 1929, 1346, 1869, 1870, 1759, 1930, 1347, 1871, 1872, 1760,
        1931, 1348, 1873, 1761, 1932, 1349, 1874, 1488, 1350, 1489, 1351, 
       1490, 1352, 1491, 1353, 1492, 1354, 1493, 1355, 1695, 1494, 1696, 1539,
        1661, 1663, 1665, 1664, 1573}], 
      Line3DBox[{1357, 1875, 1762, 1933, 1356, 1876, 1763, 1934, 1935, 1358, 
       1877, 1764, 1936, 1359, 1878, 1879, 1765, 1937, 1360, 1880, 1766, 1938,
        1939, 1361, 1881, 1767, 1940, 1362, 1882, 1495, 1363, 1496, 1364, 
       1497, 1365, 1498, 1366, 1499, 1367, 1500, 1368, 1501, 1369, 1574, 1662,
        1575, 1703, 1370}], 
      Line3DBox[{1372, 1768, 1941, 1942, 1371, 1883, 1769, 1943, 1944, 1373, 
       1884, 1770, 1945, 1374, 1885, 1771, 1946, 1947, 1375, 1886, 1772, 1948,
        1949, 1376, 1887, 1773, 1950, 1377, 1888, 1502, 1378, 1503, 1379, 
       1504, 1380, 1505, 1381, 1506, 1382, 1507, 1383, 1508, 1384, 1509, 
       1385}], Line3DBox[{1387, 1774, 1951, 1952, 1386, 1889, 1775, 1953, 
       1954, 1388, 1776, 1955, 1956, 1389, 1890, 1777, 1957, 1958, 1390, 1891,
        1778, 1959, 1960, 1391, 1779, 1961, 1962, 1392, 1892, 1510, 1393, 
       1511, 1394, 1512, 1395, 1513, 1396, 1514, 1397, 1515, 1398, 1516, 1399,
        1517, 1400}], 
      Line3DBox[{1414, 1578, 1577, 1413, 1524, 1412, 1523, 1411, 1522, 1410, 
       1521, 1409, 1520, 1408, 1519, 1407, 1518, 1894, 1406, 1976, 1975, 1784,
        1405, 1974, 1973, 1972, 1783, 1404, 1971, 1970, 1782, 1893, 1403, 
       1969, 1968, 1781, 1402, 1967, 1966, 1965, 1780, 1401, 1793, 1964, 1963,
        1792, 1576}], 
      Line3DBox[{1532, 1653, 1272, 1635, 1560, 1587, 1559, 1697, 1271, 1700, 
       1685, 1686, 1684, 1270, 1443, 1269, 1442, 1817, 1268, 2013, 1713, 1717,
        1712, 2014, 1718, 1267, 2015, 1714, 1798, 1899, 1683, 1682, 2012, 
       1266, 1988, 1558, 1586, 1995, 1790, 1989, 1265, 1634, 2006, 1557, 1585,
        1556, 1987, 1630}], 
      Line3DBox[{1562, 1623, 1624, 1047, 1584, 1554, 2000, 1596, 1263, 1127, 
       1530, 1555, 1531, 1117, 1264, 1723}], 
      Line3DBox[{1726, 1547, 1984, 1794}], 
      Line3DBox[{1727, 1670, 1669, 1640, 1528, 1675, 1674, 1610, 1434, 1599, 
       2004, 1632, 1977, 1740, 1678, 1786}], 
      Line3DBox[{1293, 1744, 1907, 1908, 1291, 1745, 1909, 1910, 1911, 1295, 
       1746, 1912, 1913, 1297, 1828, 1747, 1914, 1915, 1299, 1748, 1916, 1917,
        1918, 1301, 1749, 1919, 1920, 1303, 1837, 1455, 1305, 1457, 1307, 
       1459, 1309, 1461, 1311, 1689, 1691, 1702, 1701, 1313, 1693, 1694, 1568,
        1612, 1636}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{606, 1136, 1137, 1075, 1135, 1134, 2003, 1077, 1013, 1981, 
       1015, 629, 832, 1813, 641, 1050, 1167, 1169, 1168, 1170, 1126, 1127, 
       1087, 1104, 1103, 1084, 1067, 1992, 1069, 672, 1909, 867, 1823, 688, 
       883, 1841, 704, 899, 1854, 720, 915, 1866, 736, 931, 1876, 752, 947, 
       1883, 768, 963, 1889, 784, 1965, 978, 799}], 
      Line3DBox[{608, 1016, 1018, 1800, 1078, 1019, 1021, 632, 1184, 2011, 
       1186, 1187, 999, 1151, 1001, 1172, 1080, 1139}], 
      Line3DBox[{611, 815, 1801, 614, 825, 1810, 634, 1033, 1986, 1036, 1040, 
       1128, 1130, 1053, 1099, 1098, 1081, 1059, 1989, 1154, 1062, 661, 856, 
       1818, 677, 872, 1828, 1829, 693, 888, 1845, 709, 904, 1858, 725, 920, 
       1869, 741, 936, 1878, 757, 952, 1885, 773, 968, 1890, 789, 983, 1893, 
       804}], Line3DBox[{617, 818, 1804, 620, 1023, 1983, 1026, 1145, 1193, 
       1194, 1039, 2002, 1123, 1122, 1124, 1101, 1224}], 
      Line3DBox[{623, 1158, 1160, 1806, 1161, 992, 1029, 994, 2001, 1121, 
       1119, 1032, 1095, 1163, 996, 1043, 2009, 1222}], 
      Line3DBox[{626, 1212, 2016, 1213, 1214, 1211, 1216}], 
      Line3DBox[{798, 977, 1071, 1964, 783, 962, 1952, 767, 946, 1942, 751, 
       930, 1933, 735, 914, 1927, 719, 898, 1923, 703, 1840, 882, 687, 1822, 
       866, 1908, 671, 852, 1990, 1065, 657, 326, 1086}], 
      Line3DBox[{801, 980, 1967, 786, 965, 1954, 770, 949, 1944, 754, 933, 
       1935, 738, 917, 1928, 722, 901, 1924, 706, 885, 1921, 690, 1825, 869, 
       1911, 674, 853, 1991, 1068, 658, 845, 1114, 1117, 1116, 651, 840, 1152,
        1150, 1051, 643, 834, 1898, 631, 823, 1980, 1014, 607, 813, 1978, 
       1008, 1012}], 
      Line3DBox[{803, 982, 1969, 788, 967, 1956, 772, 951, 1945, 756, 935, 
       1936, 740, 919, 1929, 724, 1857, 903, 708, 1844, 887, 692, 1827, 871, 
       1913, 676, 855, 1900, 660, 846, 1153, 2006, 1055, 1156, 1157}], 
      Line3DBox[{806, 985, 1971, 791, 970, 1958, 775, 954, 1947, 759, 938, 
       1937, 743, 922, 1930, 727, 906, 1925, 711, 1847, 890, 695, 1831, 874, 
       1915, 679, 858, 1902, 663, 847, 1988, 1061, 652, 841, 1131, 1057, 1097,
        1096, 645, 836, 1985, 1038, 1035, 636, 827, 1896, 616, 1803, 817, 
       613}], Line3DBox[{809, 988, 1974, 794, 973, 1960, 778, 957, 1949, 762, 
       941, 1939, 746, 925, 1931, 730, 909, 1926, 714, 893, 1922, 698, 1834, 
       877, 1918, 682, 861, 1904, 666, 849, 1204, 1207, 2015, 1206, 654, 842, 
       1198, 1177, 1180, 1179, 647, 837, 1998, 1091, 1042, 1147, 1149, 1146, 
       638, 829, 1982, 1028, 1025, 622, 820, 1895, 619}], 
      Line3DBox[{811, 990, 1976, 796, 975, 1962, 780, 959, 1950, 764, 943, 
       1940, 748, 927, 1932, 732, 1863, 911, 716, 1851, 895, 700, 1836, 879, 
       1920, 684, 863, 1906, 668, 850, 2013, 1201, 655, 843, 2008, 1174, 648, 
       838, 1977, 1141, 997, 1164, 1143, 1144, 1089}], 
      Line3DBox[{812, 1894, 991, 797, 1892, 976, 781, 1888, 960, 765, 1882, 
       944, 749, 1874, 928, 733, 1864, 912, 717, 1852, 896, 701, 1838, 1837, 
       880, 685, 1820, 864, 669, 1817, 851, 656, 1816, 844, 649, 1108, 2004, 
       1142, 1107, 1111, 1112, 1984, 1113}], 
      Line3DBox[{998, 1183, 1182, 1196, 1173, 1178, 1175, 1209, 1210, 1200, 
       2014, 1205, 1202, 667, 1905, 862, 683, 1919, 878, 1835, 699, 894, 1850,
        715, 910, 1862, 731, 926, 1873, 747, 942, 1881, 763, 958, 1887, 779, 
       1961, 974, 795, 1975, 989, 810}], 
      Line3DBox[{250, 247, 1581, 306, 251, 1808, 630, 833, 1814, 642, 275, 
       276, 1555, 238, 315, 1589, 286, 673, 1910, 868, 1824, 689, 884, 1842, 
       705, 900, 1855, 721, 916, 1867, 737, 1934, 932, 753, 1943, 948, 769, 
       1953, 964, 785, 1966, 979, 800}], 
      Line3DBox[{1074, 399, 483, 400, 1993, 605, 1010, 1979, 822, 628, 1897, 
       831, 640, 1045, 1166, 839, 650, 337, 2000, 1219}], 
      Line3DBox[{1085, 1110, 1072, 1073, 1070, 1963, 782, 961, 1951, 766, 945,
        1941, 750, 1875, 929, 734, 1865, 913, 718, 1853, 897, 702, 1839, 881, 
       686, 1821, 865, 1907, 670, 1066, 1064, 1996, 1083, 1109, 1048, 1218}], 
      Line3DBox[{1102, 1058, 1005, 1192, 1189, 2012, 1191, 664, 859, 1819, 
       680, 1916, 875, 1832, 696, 891, 1848, 712, 907, 1860, 728, 923, 1871, 
       744, 939, 1880, 760, 955, 1886, 776, 971, 1891, 792, 1972, 986, 807}], 
      Line3DBox[{1133, 1047, 1132, 1079, 1046, 1049, 1044, 639, 1812, 830, 
       627, 1807, 1011, 1022, 1009, 1076, 1106, 1799, 1138, 1007, 1118, 1006, 
       1105, 1140}], 
      Line3DBox[{1220, 1094, 1093, 1052, 1000, 1188, 644, 835, 2010, 1185, 
       633, 1809, 824, 1020, 610, 1994, 814, 1017, 609}], 
      Line3DBox[{1221, 1054, 1987, 1115, 1056, 659, 854, 675, 1912, 870, 1826,
        691, 886, 1843, 707, 902, 1856, 723, 918, 1868, 739, 934, 1877, 755, 
       950, 1884, 771, 1955, 966, 787, 1968, 981, 802}], 
      Line3DBox[{1223, 1120, 1997, 1088, 1030, 993, 1162, 625, 2007, 821, 
       1159, 624}], 
      Line3DBox[{612, 816, 1802, 615, 826, 1811, 635, 1034, 1037, 1815, 1041, 
       1129, 1002, 1171, 1003, 1100, 1082, 1995, 1060, 1155, 1063, 662, 1901, 
       857, 678, 1914, 873, 1830, 694, 889, 1846, 710, 905, 1859, 726, 921, 
       1870, 742, 937, 1879, 758, 1946, 953, 774, 1957, 969, 790, 1970, 984, 
       805}], Line3DBox[{618, 819, 1805, 621, 1024, 1027, 828, 2005, 637, 
       1148, 1195, 995, 1165, 1090, 1999, 1125, 1092, 646, 1181, 1004, 1176, 
       1197, 1199, 653, 1208, 1899, 1190, 1203, 848, 665, 1903, 860, 681, 
       1917, 876, 1833, 697, 892, 1849, 713, 908, 1861, 729, 924, 1872, 745, 
       1938, 940, 761, 1948, 956, 777, 1959, 972, 793, 1973, 987, 
       808}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnXk41t0W90tKkyFNRBJFlJ4mKtNXaBCVkDQYkhRJSYWSFKkkQ2alAUky
VcYMd6ZE5lmmex4QSqWR1/ue+5xz1Xmdns6pp57z3P5Zrs/1u/a9f9Pea6+9
vus32/yg3h6uESNGEHlGjBg1ZE129ZssmnqB8He7unrH3sKBHtCs8scZ1rTi
UZhK7A5vX6S4OD5p2NgFx9Fy1yYup8LnRvJh0rsb6A1eFRf6hImjG6aKzvWh
I+S37PsDIpGw2zOw4dMdOsrtf+O5OUADzW/qp9CD96H78loySZyBfbFHBwqt
KRh9pOM068kDfDAJDruvy8LRuGmUTaNbMaupwgYayahZzPfi/L4ujPj//vX+
afjkT1FnL69MI6SuFjnWJEJC3drMZfXkDhwxip66Z2I9BOxupb/fTYb0eD7p
cbkMnJEZ8yq6j4j7PKMjXs4kwsbgirNNPQ3CO3zIJ+upkGlvnbDtQwPUXcwd
LcVo4Pcw3E/RoiJDhiS9JLsOKxaIKS5UosPSpd1Yu5ICee4wfR56IWoOqH9Q
82AipjrI40J5M7CGrJlkmQ/Z09KBUlZ//usc2rbbTHlmGsFWfXeVfD4TVVUh
ro/5qbAKChPilShFYVpg5zkrBvoceLg0o6kY7R59MTm4EQufvK23DKbhIHBp
jiwVi3oGb/kEERHjNiJC4CgZCemvJr5fSoVIOVGYNnQ/+HiKTjvIEFGSsv5c
ygE6lm95um59Sjv2nhe41y7aAK03FepFa1lf67/r5/bXu57D8crsRW5x5+4T
SLF31mtVscBDP64Zlk/GuLJ9JLlxj1A7SiJhdSALYcfF7HJLyWgcY3628WU1
7J1yAlXLGIiPCNfgkaNA0G7n43hSPcpMO8OkNWg4dqn1psQIGjYeVy7UP/gM
mbf3p0eVkJAYqqtGnsL43tfte7Xzw7jCnsMqhT5JhMwr4ZnLnZg4R5TLXuxG
RfPbBzPHiyfjVPCyLZK5TFwMKs5dPIuKTRTuVZNWFCNrzixWThYDk7ozWsyG
jmc36Pq5/fXOl/2P6+f2p/fnr8ZdP7c/vT8czuE/grt+bn96f/5q3PVz+9P7
w+EczuEczuEczuF/Yb5+0e2TLeRmZGo+vd1YUoMDy2VWBUzs/OZ2skquLyEc
bEK/hpbRdqV2PJp1IZa/jfk1/2c4/i/tu36ILm3eVwnLKrPz45XosE6/NMr0
NA0L6osNzzBrcGYww7+zlwKxVq/87W/o/yt+3X/dfuv7E9pxs8tw12WnaKxq
K6ZdbLOXde9Ert8jvixjEpYfTlozwrcejt4b/HT2MEHXlNTuCUpHT0Z1cIoT
DY3NlwrGejAww6jFM+mjvarvLkWngH0R6Pcym5T8vgeFCbY81JpWiLR88vCe
7AGdN0tOmWzqQulim+CW801YOs4glG5LhfYk4eVC/DSE8hnxWTXRwG2+RXGi
VBFmzx3t8yKaDimVLR+uupMgmjXQssGTBK3ryrsWKlN/+H0cGBUt/tToIcEx
57XA1TF0yOgVjDn3ng4Vvu32/CtImD3pnU7HgkYQN+TG3Rdlwt58gYZaPhGT
tM+dJByvRc4nh6QxGqzv9pwPx6dMJaeOuNaGwvUzj+y/REbrY2H5qSI0NFzi
yik51QqXo8/VmreS4Kq3VfOOMx0slsnl3rn1UGDcaZpvR4G0l9CpQCIdGhUj
1x63asbk0oBxs2Ra4dPhyXv97Vff09/dz0OOYgTTHVEoeO8v0n6XBU/h4Ntk
fsqw7e9svD6DpySakPlkmtZxiQ6ME029IGpFRtvCtKa1C4txa1Rj9cRsJu6+
MZrKr0OBQ8F9eb+J+ZDfyi0xMIoJ8NwI6QijQk2TlC+0tBavCvWFZ9vRsAb7
XLpP0X72+/ut/Ef350e3/5fnwXsPHq4ZX48D2r0u7ar1MLgxf8lqZieKkqu5
lhdloXTLBr2J6u3IBsuAmdQJkSrVcx0jmxFcIKEeHtAOfbPZb60MmXhpuyVu
I4WMgfn7t+ukNSE26WnThr3fPq+JRS0ytmVdxyVtJXlNTybcXfZwG389Tv6t
/Hf35xflrp/bbz/f3T3PxKgFVWCILDKrYdIQZFmiGOj71fHnd/MO64WptdRG
nOtUrm0/2ADeUiZ5DG8nEk22Cadl1EOffJrgMZ+CYxKzy6b0f/U5+d3n9R/y
f2n/fGbFjImvU9BiuFA16xYT+u8la2as/Or8/q39/Nbj/4XnGInnOsdGEVLH
ij6lvHCDv9Ecu563PTCt15yruygFgbWJa07YEVHtTrR+pfftfvJ/yF0/t79s
+9+rne/1u9/an289/nu1871+9w9vv2vr/10XuKnuYa8L4tnrAhwZ73y4L4Kw
W+dQTfYdVcKGptR08yE+V/dOu+CVZ7AoEIo/eL0OCj6XAw+O7sSCKZ7BmwlN
KDwhHVriV4/N+VQT0XGdaL6zd/WLac2wMCtsza6oxcyRs/Vs+b/63g13vr/7
Osy9sV7z3fMWXJBvlV9WRETTqsd7E6Yz8Epmih3X0Pzer7hlnGI9EW6pB+3i
SEwYmhlsdjNsRErOikLaQDve9xH9VtOZw7Yf3FeWY2/ZgJSjyUzrcCqMfeNj
N/zTX/3d/RyOS6ND4lHSYcLtvN4bBaVMfBw0Ve5e8f32xwv8ommj0xsRWe7c
bOBSA81HG0uOtXTCN4NHZSR/OZjqhB2Bz5vBSBqpYfm0E5lmcnM+xLTANdcl
rlesHTX77GqLuZg488JH40R8Cyw+Tk1VDMjGFBOVaAmTLgie3sGf+CIP78o2
0yNHtWP3UgX7C0H/8X3/3ef1rbz7ycKU3ujLhJqRsSN7tXIJ80Ybf/J+0IP8
55FnF7TlEIrixGg0XhJsl2/SY5V2/DQ/x85KkO/xVCJcF+ymXeVqxkIpn1Fh
c5igqp62sBdug8jeW6PrFJvguHeGuJAmCx6JhmlNT9pQ7mhZtV+rEd1rKM/3
rGfB5tjUt4ltpZB1uK9R3M+ASihXdUTP0Pqu7Bnj1YdidH7Ibd0dPvSeqG9W
RwgVT4PUxPa4PMGrLNltg/cZuPfc0j366n+8rnf93P50v5HD/xju+rn96f35
F77rRqRsgRARSqW1n7qI6TBzWdaw4kQnPIkFEVxn2yFTS4hQmZgH+pPaILsh
/sgx9/Y0pXbMCfhNYzIpH0t1rYL1nP8wf3I47vq5/fWuM/sf18/tt7dzWonu
UXb8GYxTXrXIL2iDnBW/0YQuJgzWZ7f32GRiwvY2n9pzLLQa+A8s/UhGp77s
BeFxuThc7Wc6xYOJnVwmFHNRKgraDmufHSQg/J1zg7A3E4+3vUpaLk6FnENK
YBBXNcSvF8RyHaTCTjd239PO4ddlh8xWvo1emEjQyT4/K+04ExlaIVPs3X98
/HM4/tFPeYv5/Rqculp3hzWjCTUVJgslszuxSv7luw1HG7G0T1Nd+0UVdENd
xKzkumBbEuDcz1UJhbMLVoQoMnDht6RUJ1cqYv1HpbYdf4KSnv1BNo105O9K
sZzv/f3WxRz+h3LXz20vNmwbdYpr85B/8KQygCeFhsrJlILcWVQkJPqnpLrX
YUTlYW37WDpUCSJX41soIG3Xlj8+qQZeGZMXjimkYaJXeEPqAc7z8L/OW7Qm
h13nISJ3Xb57qSQRA5SdVmmn6fjY+TbzTMAzqImeUdtl0oZuFdk53XXDr5s4
nMN/Dy8ym34ymacVJ1UckscufQDdIPpNonUXLhk5FelkN6Nn5MHH/Vn5kGVc
mhVtNbTePLPRTby4BdE7zudJn0iH55HnvN5Dx9ffOhCvM7oFfiZO4o/587Bw
W7xD7dDxhxc/MFrR0Iz3RSkJr6TykXSPR/nh/4Cu5D/krp/bvyz/4u+X5a6f
21+Wf/H33a//92rnv/7dZUJbuJ54lCEvdoxv+gISGGv2c1e9ZcFX9GqzS00r
ilZcu3h4uzduRKi7DWzsAlfGy63EmUSkaFQ6sPiJ6Cq0FeR1paN4oHjh6yoq
Rmkm6J/1uImVqQb+UWuYuD0/3t40mQZu8UYFZ4MIzN81wcvemQE3mcVWXeYU
pKQ7+3zSboJWpkrZeiH6P3SOV77QOcZs21wqsp2OSC4zzfOP76Bt6f343AY6
XF71M+Il6SAOvLletjwJR4xNU0W4GZjB1vHJsnV8GmwdH034YeeRSCqkl1kK
9s5tQOxW602vPWmI0XiYaG5Lhdeu1M0rN9bD5aSbkdVrGjod5mpfTKTB4U63
Q0L4ffCwPj3zsGbA2iZy4vIsKhKnzfwgIPkAhxfNurh3FRO/ne2dcuwRBY/P
MycV3niARmO9Hm8+FriNIpTWaVIxzoeWFnygFidJCitVh85zuxrrZp8EFfkD
L0Z9tK6E6Ngsrg4nBrS2HEjmYlFwpSaijuf2Exj4fVATXcfEiq5t1dIgw9jg
bLdG/wNYKp3cqz+/A+1HbGuirYmI0RNKWimTDL8xWpPnb+/Enn0+Mb5hbdCJ
dDqdZ5GHkEyFnJyMTgg3uTxNH90K/+mWgzFTkxFgdSiyZ18XHhmqTmZ0heFF
HKPLyJOJlzE2Dbxnqei0MFhyf1MelI37Ttx4x8D7ekpf5D0q5M8IPadVliMk
8u77xSsZMO6dfsvvOhWa4YXZuyxrkFntJZ0VRAfPk+aW9c5UtDImXYvZ1IDj
M7xOqTXTsJHv8ua96lQcV1otUlv+DBJc65bfaqFCfEYxL5ciFTpZs/lfTGwD
H/Pettj7FKTdrdk7ZRUVi9n6wTts/WAiWz84tljv8FZbIi5P5n8jco0EyjO3
mZMFaPBf7eouoEZEy31uN/9HRKSazgu/QKX9Iz55kh2f/I0dn5SfLpx9r74d
6+2TuZcLN2JP4u2JI7hY2MFgBe64vRN+WxY1L2pigfdyj4ViKxn0aUICykcf
oOX10seXs1hwP7DFQ7mFDEG1Ux/WluXBo9dUtnwvC9LviQM7SWQEPzIcf3DS
U9RfGZi+5CkTfS+Vr8UKUNB8KnbFoytV0Ek8t9J2EhOpV8wz42Uo6DoUNbKt
tQ69tVyiAXp0hAxqTdgoTUX5vJitirqNaA8JpyyOIKPoUFrimBGMHz6evA5r
4QsVjcOFhiuNN28zcfnEb3fb9Ibul7RCn0bzk6Fx4dNJRhoDr4su9473/Xnx
BA7ncA7ncA7ncA7ncA7ncA7ncA7n8F+Br9z7SX7VDBL6TLZKT6C3QpA3NV3A
kw7r6670T/E0HJqbc2OBQxnq0qrWPNn+z/jYgy/iY2Fcm7wWv6bB6sF7JRm3
fCw2q5UrzaOjvlnwqRMvDeYWe7WFxlRB0FsvteEiHSP3SFOrsmlQvRe3ZeaN
FCxefWY0XY8Bc7WFO7xeUlF1kXy8awEBg8kvDUcRGWDYXWLVzaDiwiabTxIG
BfCLStOdbsoERU78vMSsdswdKImp3ZWFF+Zz1htndSJM60Cv4boCbOoJrJA8
S0cuMYSyQ4aOc14Xkk3qGjFVpYl1ZCMNrwy9os5YUFEUw7xXokVCCb+kT3Ih
CdfmvXLsVaT+ox7X/C/ieMnc9pk+8yjY7XIkcZNKM+Zkpez2TKXhqnx1XbUx
Cbpis44KbmvDYT6nHWq/0aHM1lWJs3VVJLauqlSl563BUiKWhC5+VW7egM1F
O28JDDJRp5HVH+7gRpC9cm5GhwILm2InJJx6QIF+gNPp4k33cVXqYucpFxbM
deeeNFhGwZibC7jrjMtgbWSmftuRgboV3jy2TlS8Lb3gKeRRifTiydqnbjKQ
QDwp3thNwfUw1xgvo2pIrVXWOJbPAPeUKVtsTChYMVt5BdebBngqpLluCqVh
vZ1TgbcRFS0r6w9d9m6B96UXvpMWk+FmePykiNi36zKib07ez7s5AbtLpl9b
vZKFksbtcUmhFCgcUObiDytGBbf3ftF4BgzuKkY2XeLEbTicwzmcwzmcwzmc
wzmcwzmcwzn8c9424zd+wZEkxMend559W46KvrD06+9Z0N1GWrw2phUS5651
1dWWQcNK+nXJjk5Is/WYu77QYxaw6/n0suv55LHr+ZSxdeg2bB26CFuH/q39
1DiaPGbmgyqoGa4bMzCegT7PKYVqxlTsKm4nauZUocx87os9I+mQINweT3Sk
Dasv2Ok2eH3j3TqoWKT5PVpPRbrZx7pcVTqSb8Y9CzpRiNn2XBax7nXw71rQ
GXj7+Tf3085kuehWSjpuaAcPpnJX4FVJw4FqSjcSrryN29OVD54jg8o8Mu1w
fq7O7HbthJvWRHO+FAq6Epa92KKUjQrDGwdHv2TCP0O+ddaBOyB2KdiKnqFC
p+7RaH03JkIIFnmz7EvB37mnv0SUik3cclFjnjFwdjLPjAfH7iCo0Tuq2poO
p5FNl5KL6Fi6+gMP7xsyfMbJiPobXMVOx3w18XwWImRED27oq0eQ99kjEs/J
mD8JW/eIMvBpoTlBsbMdS4XPSQmuImFWZKuRfhoN8r6SPOmDlRDZtGHBmlw6
1N84jfpQS8UJU4E3uSI0aB8V9Ow7mQkRkpDI0zIGXrw4836MIB0pL6mtycF5
sHPXniz/gI6nyXcuSKRTUCHaIhGiUQ+hQuEdalfp0JYpl32iSkLep+dHU+uJ
uNR1e8WFiTRwaU9efWY/GY9jAzVMlhMx71yJ1doLVDzWu23r8q4VvbuOixfd
pUAydyDk9UYqVuhU7BwsvY0+34v7qPdoCMhw+FDnxMBsnrhbvF4UnFbkZiSb
1cOktjtDPZMONXZ8SfiL+NJS2dmZkqsoEGD1nua9VQrVc1WkiReYmEky2m5h
Q4TjEsdqcaM2zA5ZmHOR+s/6P2JftDPBM2SOFZmI5vVH4wut6iCldmbx1o9M
1EjrEc8Q2rDGNlmELlOLvjrTETyLO/ByY4OYn1cdWu6302uCyjG3/KGtyNzh
n0M+tg46lq2DNmHroIfLs8oq4xEO0mjHY/gftTxPhvih661nyFQsjk6eSzrS
DoXLhNXPTElY1ar5qquYhmlf1CF3YNchJ4jek3yb3YINV/kFXmhSEGx04vze
WTREu1wt2yHYhvSzyrbJr0jYebs0f1c5De4NN5bou7egmRpoZd5NhMjmkdY9
Iox/1Dkv/aJ97qCwWA+jejwzIcZ3MikwatlZJGFDx5onxU6eL5/Ba9aFXSJ3
W6FfslMmeeh9GRMkO+sJbxlG26icU2aWY+/ZJVsnL+5GuKZNjND48yg3JgUI
ZLMwcWNdUxgXBXmLtFaOmZsC++eF8ZHRLGh1rnUoe0nGnLzAy8ofL6JMM331
u70saD8Ps7Wxp6DFw66IkmRBuHnNd47ukWZM568Qe8EYPn97RjECQqX9Ib0y
SnFTOQuXR9dLP2CRoeOyUWbmljxwz5ZcRjdnwaaqgcugh4zle2bfszSrQkJQ
Q54lPxODhzZcz1lJwZPTFvwSxlW4Vb7DKXs8HaykwyUSbjSosusX9bHrF639
ffWLOPxPzrs69joHZJRjqaqfsyzfaZyIaLJfKtADdSOBwYuaDThxLKjzlUgt
1B0cmaoCXYi/UNwUnJiIfVclQ3IEiHhjIpJ+PawTpYfjlUdvboBs35KoKfkk
nD/ztK3yOQOn+A1sHvaR8LFcUaxnTCuKxxY8niBDxybWc0qG20kExhWMsrnI
xGFpy03PzlERxdbrFbL1eiV/Mr3eb9JXNUTHlqHkxiSND2EFqBipE1CQ1T3s
8TfZfk4928+pYfs519njTwx7/DFgjz/DtXMphZwuN70KAenbd+kPzZMa9Akz
d16g4WaNtfc6m3woZ2Br+8sGdEmanTq85vmwflQyu57P5i/q+YSwOdjc6yt1
fhTY40kHezzR+8p4klBTaBjlUor8UdRtF+Vq8HL9I7mqxG/3l4bjMzpPN964
G0A4PWB579NLe6ySK69QGuiBx4KTXNM/pWPzRGbQjPFExGnqC1u4/XQd9A/j
2yQm3F7bkIn2ceoXzi57hv32WnbuH4efdzSzFSqpOzKwu9WphGVSjv1tOuMD
u7oxmu23r2f77epsv708wdRAYmkprt22FBWMLYRYqH/gmexuSLGP3/2Fn+8u
6F5LTmqGbbtT1eb1JDCPykXOFWKAHFy4MXB5KyYcE7br5SdBZZFmSloJHWXU
8ZdPaDTCODDz8oYtJOS7bT4wmosJZXb9E392/RPeV3+rf9JpSNH/pBMN1XGK
RkttmzF2vn51JXH48x3uOylSZdnBFU/qQV7ePyNkHBUPPxzLP7lkyG/9Yt78
Wt0/rKEaO6teHDIiR6PimLBwlzo42XT4/TX59DjVUqsmxFcomDSMGhpHT6yb
OreXAaU9QgfcXJpQ0hZ551DdM9hPzDbnFulAmeXlxHdarTgyK3mDDSkJ9f1F
hFzTLmz9mH5wt18TFhz3dZAil4FcZ3hV06QLxa+PhGV7Z4PPxWB22Nt25F90
7NdxGv7516pfpyt2/wzhjvGTIzoG9wjdB4V52rp6fvhze3S+k/itWUSEMqQj
xMe046l1WstTIh3hfMEjprDagPYT6xbJNUJL6vmyLWtZULXlk4963AL+CyrH
2xWa8V4+R48kwcIhdp6/CzvPfxE7z/9m0TpbJ7s2aN+Nq96d14hlh7wb3Yba
kb5Giy/tewqTEeeLpWSZyHcnFIYWUTAn/XSEbVs5WpWDVk8RY+Dmrv4NSVlU
3IqSXAHbp8h7m/F691MGmrWdBq5r/rz9U9PwQ0I5JSTYXd7Gt8wsFSpiG/11
7DsgFmupL2/VjhTxyAq/zDQ4U08TX6d3YpaC7O593GTsv7rC84BiLtqOSW7J
nN6B61e0jT40kDAzKNHkzLgCHK5sfSQ7rQPVHsmn1pi1Q8bWx/rpmzy8GJ1W
MMW585vX6Tlf1O/NZc+D104dP8JfeR+9k13qg8NZKBNtXVIzlgJRfUIJPfgR
6iIzKu23D91X0XFT50+hoLejWS9bZGh8e3Yr7dMtJtpMI1WyZlHxiCX1wCYv
B1eXlkWuHcfCshp9XVFvCi7Jj9p/ZdJDUC2W8G67w4R2xcv2mbOpuGTYLKv4
php2732nJC2iYk7XvbW0F3RYs+MAi9hxAB92HOBn3d9fjZ/VO7zY/EgjtvUJ
iKlE06A7flbM2zlU1KxZ10kJe4Z2ubxUch8VlOvGYuJD60dqhF3P7tg6iPQH
tY4bGt8XK3nsmZJAwaNtdPVelVrkLPQ5r6/KgACtx7fHY2j9cs8tcObGWoQF
qMlNUKIDvl55mjE//voX5uktKBAk4t3xtoZIKSLMM5ZwZzjQccHozpWTJW1I
umt41Y5AxCLdx+t3nqaDq+tvunJFtq68l6Mr/0O5VvjqBW45zRAMmdzKTM3H
u7MRt8OturByR81Vi3ctGCUYyb1ONAXKhcx9IkNcZLmctBOrGYcs+Afzc/Kw
dXpcU/AQH7Pmxkbn2mZcHSFpy6uUj5dHo095/RuddbMv0cj2QxPISTrOLc55
0J0Zwnvs3/gbfxZ+t85qze2JmYT3SSV1xlNJWHIH3NGNHRgfpTY3KpiEI4LJ
WYNNLZhjIWpDcaVjWkTViFGLaRjvdn3yYps6WJ/JFc6wpyHHoUB2RRAVo26F
GlbG1yBNjnUp8CAd7gMjL6s9psBC9Hi4774CbIyqT2+OYIJhUiob0N+MmStF
nzojD1w7pcs37P/zXE9b6aw4MclKEJy5NR6o0xG1SN0/0oOGp2qGBZ5F6YQE
fcs7eYcY8NUMOcrrS8Nz1Zx7CnzNUON7tWOcPhUJPVJX4hKpENvZN9BGIGFG
9jTarh4ifnukeJd+kYpi5ScMLSUSpkRFW+iWteLW9qMGk5z+sPrzv5v3Rgan
9V0tQCx35/zDVUxwe/rprDhPwdj1BhvCVyUTmM2Dsw1tWUgf6b+uexUF84sc
760QroNlsF70Li4Gupu2CZL9KUgNLHX2bnoGBbtPSunrqdg2kmtL95O/3vwr
2TuufCApEDIJ7US9hBL0zFcaJ7e+B1XzTtRPEL2L8ik1nVruxdgpcjOncdOP
9885nMM5nMM5nMM5nMM5nMM5nMM5/NfkGRkHY+dEV0O7y0Xw02oiHIUlzlo/
Z+HGWmNr5QU07NW8p9XSV4tJGx1mTgiiYdmIidS0RCpqQ0IEbPfUoD93rSR5
Lx3rjNcobX3egjIVrUbXuFyYuHsRLZb+eeIzw/Gt99rLXflI4A/64Bo5ggwL
hS3W877+vRgO53AO53AO53AO53AOH4ZLaTonrpNvhoGItKemAhGMya5pF0Zw
9se/xtOcVHIX0Wqwf7rwnuhxdBinrSfPefPj/dKWy+dUE1OIuLDClUrSa8E7
p+JKSQMGvI1lStR0ibhSIiXsXVYHGUm9uzZrWd/td8tu3T57M7sFgqL5idlH
SZCa/6BqVRQdDjE3hCO8WxB756zXyEoy7grdWnI+mIa25nXuOFaH8TrKtzJq
63EufqpNP334vKMKpebmmI0xqD390ZdPqxkhtT1HPzG6sO7ECirxWBTeqfTI
FJQWY/oagdKFm3+9fTRvqQqemQo3CcVcKjr9o5vxxtVxVuW/yefk8D+Gb0lf
luOzqB79D1VC9ROI6KA+Tn7Vx4S/dfC1LXcfYXkL5cLsOe2YojJavzWqE7zN
0Q8NxrbCD0fnVOxvBWkifLbbMkFTDO2cmUXBYPvLBP4N9TAmy4nZBQ2/vx9+
b8a551KnsbVRjH/FrhIYRzzx+BX3f0f+P1ug/Debpfy14/eMCMjn/VgCFcGt
Xe98KyHOVdoyVrYb+uw8eUN2nrzJV/Lkh3vfPWYteiu3/RDBdrfPGbUGInzC
Lpbfk+/E2b9Yfvhfjc/74nug8uy89P/wu5//wj9Q+gOOUxrRO1/dwy+8Hcnh
2c/dyEwQ2fqvaLb+axpb/zUc/17nO6i7UrF39WPcczAdGRnTCnkhU8Wusk4I
Vazev7C+Gbo7g9XCtrdj0nHuamW57+ePkdU9+CNihvy8Vr8iy7AmDMpatUlI
cvy9n82Fpp6/mHivHSkJi0NFoh9BXs7f4uHP/w7gf80nDW42Z00uhavDWjmz
gQpkKTG4c+SGnxc4/M/FNdjz/lr2vG/Gnvd5hUdqvRysh7b3HoWUVXSItOhR
WpgUFNuKjfG73oBbyfOO0ftosGiz3GAqwInncziH/0pcGNxjKWNbcHW1dcaV
17nwzKo1/vA//F2zv9d9fflF3Vcmu86qO7vOqi+7zmrwMPVUFbcFmokLNoGu
lNOWyk3DuyQlEYlrVISz66Bqs+ug2rHroNrPoclKXSRiQvXDW063G/D4zQB3
fzIT/VfmErwqolFhd2fqtf0sJBor6LmbUyAnbxghIVGFHVGM7sB4BlJ81ndt
JQxfp9QhEEKGIUP+pdY6eXczMqxsU49Pv/bn0XFzOIdz+K/Dh9OPD3e8U2jL
u0QpK+xrnJOzaR0DeauT1dqG/L4ddP9z7/eRwQohXhPZ2YycZ9ONHHXpyGHX
n9nErj8Twq4/87POl8LWv09k69+V2fr3ZcPowU/soE3y6CZj9raU5RcD8rH3
yURzf4Ph4/Dnh4lrEWOUY6PayJiRKicmfq8JPmKrPUccGF7PNS39SLz8ByqU
3vMV8HrVgokwqnkbDb5uPfe786hw/PQ8n55QA5vsZ8oDq+mYsFTuXIsXFRrP
KIfajarRZBFztY5AB8l9G1HcjAo9yXDTGf6laNgusHPxNQaCTWf1OHeT4OZ4
8s3qiDxstVNYbTa9A6Nk98vdd76FprEmUl5SDHg4eNvw89IxLnDRTsLpeqju
O6ji5kXDpMrjsnwVVBhcuvQix4uIizmR271syWDcDOV6vYqKWWxdlTBbV7WQ
rau6VJdjtfwyCZt9zQWVBYjwW2h45P0uGuo0k977nDpCiNYuVS1wZOFppWrM
aRMKLp56ebrVuAib1iw7FBLOxDG3+fPkQyi4rSuemepbgZkn1Dft6Gag9XHy
iY0ZFGSzn7eN7Oct9Cc/bxzO4RzO4RzO4X8Fzvhiff3375j8fb2s88V3Q6b/
pjg1wSwFj88u9nm7ioWmng+VCx0oODp6ZpZgcQ0WCmhNUFdl4Nr0eUvboyi/
3PlyOIdzOIdzOIf/L/Hhvpt2lR0n3/hFnDwrJmZv6KRneJlmKhQaR8W1fj4t
rhgqjFbPsY4aU435IU3c7+bRsW7n+bQqNRoObdWz2GZLRKf43COmmfUQkp2h
PW+QiRXGHUSld0T0iMl+kpvUCvkXmzLbGcPnZS0sn3x09uZWBC6r5daZTIZp
r7dKzhsa0r6oZ7L9F61nIsvjGX6zoQxbQqIDaha1Q3pz529hzztQ8fZ9/6aV
VGSfuFLz8FkdFlxKnjZe49vrz1Sw60aGf1E30pG9z3uKvc+7jb3PS2Tn1ZSy
82oes/Nqhsvv+nv80PyL+CHxizqTql+Jsw3X/7/nt1DZ+S0j5v/7/JZa8pGw
3KI2JK5dFnl/4BFoNOKSs5nDxzN57wqaSjplY9CT/vzQdgIcz533OnSxB4rD
7L+M003ofGBSj861iuM6ztAREtXiv6/sx/ulKoddj2UMNkPKQJM7QDQPAXw1
Rfesu/B/ANm80F0=
    "]],
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 2.5}, {0, 2.5}, {0, All}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6592615315628977`*^9, 3.659261603490961*^9, 
  3.659337256356382*^9, 3.6593372986827593`*^9, 3.659337348624198*^9, 
  3.659337413295122*^9, 3.659337459087503*^9, 3.659337648982342*^9, 
  3.659337737701536*^9, 3.659561504147154*^9, 3.6598002211746197`*^9, 
  3.6609744708920307`*^9, 3.6609746716017227`*^9, 3.660974848580724*^9, 
  3.6609753534230757`*^9, 3.66097547096704*^9, 3.660975552784783*^9, 
  3.660977050269294*^9, 3.660977568993629*^9, 3.660977662677773*^9, 
  3.660977833987173*^9, 3.660977961737988*^9, 3.660979123923901*^9, 
  3.6613416940841827`*^9, 3.66142064083738*^9, 3.6614218270027113`*^9, 
  3.66142282624048*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListContourPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "\[Rho]C"}], "}"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
                 RowBox[{"\[Rho]", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
        "]"}], "\[IndentingNewLine]", "/.", 
       RowBox[{"dat", "[", "j", "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"1", "/", "2"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
      RowBox[{"Mesh", "\[Rule]", "All"}]}], "\[IndentingNewLine]", "]"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0.0", ",", "0.25", ",", "0.001"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.50780432839379*^9, 3.5078043348351583`*^9}, {
   3.507804441746273*^9, 3.50780444519047*^9}, {3.5078044865038333`*^9, 
   3.507804489895027*^9}, {3.5078045203387685`*^9, 3.507804824372158*^9}, {
   3.5078048598311863`*^9, 3.50780486741562*^9}, {3.507805126497439*^9, 
   3.507805129469609*^9}, 3.507809455042017*^9, {3.508139896244548*^9, 
   3.5081398965845675`*^9}, {3.5089373432417974`*^9, 3.508937346467982*^9}, {
   3.5089975975510206`*^9, 3.508997637680316*^9}, {3.50899776606866*^9, 
   3.5089977740431156`*^9}, {3.5089978518785677`*^9, 3.508997861974145*^9}, {
   3.5089979481100717`*^9, 3.5089979752226224`*^9}, {3.508998713295838*^9, 
   3.5089987357911243`*^9}, {3.5091122508076515`*^9, 3.50911227753118*^9}, {
   3.5091575043454227`*^9, 3.5091575065935516`*^9}, 3.657445107103958*^9, 
   3.6574460147094183`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"NT", ",", "NR", ",", "NL"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"C", ",", "\[CapitalOmega]0", ",", 
      RowBox[{"R", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"R", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "}"}], "/.", 
  RowBox[{"dat", "[", "Jtest", "]"}]}]], "Input",
 CellChangeTimes->{{3.5081399770371695`*^9, 3.5081400102520695`*^9}, 
   3.6574460261712008`*^9, {3.658645697444034*^9, 3.6586456989800587`*^9}, {
   3.6586458429143972`*^9, 3.658645904657494*^9}, {3.6586476543823957`*^9, 
   3.658647669117798*^9}, {3.660974930667313*^9, 3.6609749532115498`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0401748148736443`"}], ",", "0.601723861503778`", ",", 
     "0.7705359159539713`", ",", "1.131132704648696`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6592615316783113`*^9, 3.659261603580255*^9, 3.6593372567309504`*^9, 
   3.659337299045519*^9, 3.659337348918653*^9, 3.659337413569717*^9, 
   3.659337460849016*^9, 3.659337649370884*^9, 3.659337737791451*^9, 
   3.65956150429552*^9, 3.659800221306189*^9, 3.6609744774026012`*^9, 
   3.660974671757474*^9, 3.6609748486991653`*^9, {3.660974938801876*^9, 
   3.660974953648918*^9}, 3.660975353958865*^9, 3.660975471039144*^9, 
   3.660975552848024*^9, 3.660977050321705*^9, 3.660977569068117*^9, 
   3.660977662744142*^9, 3.6609778340610123`*^9, 3.660977961820615*^9, 
   3.660979123977222*^9, 3.6613417034530478`*^9, 3.6614206409753237`*^9, 
   3.661421832985629*^9, 3.6614228263699503`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", "\[CapitalOmega]0"}], "}"}], "/.", 
      RowBox[{"dat", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0.0", ",", "0.249", ",", "0.01"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657600492140768*^9, 3.6576005837716703`*^9}, {
   3.658647289010109*^9, 3.6586473617938747`*^9}, {3.6586475302399817`*^9, 
   3.65864754814384*^9}, {3.658647606927536*^9, 3.658647613854493*^9}, 
   3.661341723982383*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Import\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", ButtonNote -> \
\\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508238386*^9, 3.659800221667122*^9, 3.660974492548904*^9, 
   3.6609746718151407`*^9, 3.6609748487366123`*^9, 3.660975353992866*^9, 
   3.6609754711192083`*^9, 3.660975552925095*^9, 3.660977050385841*^9, 
   3.660977569150741*^9, 3.660977662837522*^9, 3.660977834143725*^9, 
   3.660977961904114*^9, 3.660979124036928*^9, {3.661341714408923*^9, 
   3.661341724399625*^9}, 3.661420641527381*^9, 3.661421833807083*^9, 
   3.661422826620164*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508238386*^9, 3.659800221667122*^9, 3.660974492548904*^9, 
   3.6609746718151407`*^9, 3.6609748487366123`*^9, 3.660975353992866*^9, 
   3.6609754711192083`*^9, 3.660975552925095*^9, 3.660977050385841*^9, 
   3.660977569150741*^9, 3.660977662837522*^9, 3.660977834143725*^9, 
   3.660977961904114*^9, 3.660979124036928*^9, {3.661341714408923*^9, 
   3.661341724399625*^9}, 3.661420641527381*^9, 3.661421833807083*^9, 
   3.661422826621318*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Import\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", ButtonNote -> \
\\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508238386*^9, 3.659800221667122*^9, 3.660974492548904*^9, 
   3.6609746718151407`*^9, 3.6609748487366123`*^9, 3.660975353992866*^9, 
   3.6609754711192083`*^9, 3.660975552925095*^9, 3.660977050385841*^9, 
   3.660977569150741*^9, 3.660977662837522*^9, 3.660977834143725*^9, 
   3.660977961904114*^9, 3.660979124036928*^9, {3.661341714408923*^9, 
   3.661341724399625*^9}, 3.661420641527381*^9, 3.661421833807083*^9, 
   3.661422826622566*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508238386*^9, 3.659800221667122*^9, 3.660974492548904*^9, 
   3.6609746718151407`*^9, 3.6609748487366123`*^9, 3.660975353992866*^9, 
   3.6609754711192083`*^9, 3.660975552925095*^9, 3.660977050385841*^9, 
   3.660977569150741*^9, 3.660977662837522*^9, 3.660977834143725*^9, 
   3.660977961904114*^9, 3.660979124036928*^9, {3.661341714408923*^9, 
   3.661341724399625*^9}, 3.661420641527381*^9, 3.661421833807083*^9, 
   3.661422826644326*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Import\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", ButtonNote -> \
\\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508238386*^9, 3.659800221667122*^9, 3.660974492548904*^9, 
   3.6609746718151407`*^9, 3.6609748487366123`*^9, 3.660975353992866*^9, 
   3.6609754711192083`*^9, 3.660975552925095*^9, 3.660977050385841*^9, 
   3.660977569150741*^9, 3.660977662837522*^9, 3.660977834143725*^9, 
   3.660977961904114*^9, 3.660979124036928*^9, {3.661341714408923*^9, 
   3.661341724399625*^9}, 3.661420641527381*^9, 3.661421833807083*^9, 
   3.6614228266666393`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Import\\\", \\\"::\\\", \
\\\"nffil\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508238386*^9, 3.659800221667122*^9, 3.660974492548904*^9, 
   3.6609746718151407`*^9, 3.6609748487366123`*^9, 3.660975353992866*^9, 
   3.6609754711192083`*^9, 3.660975552925095*^9, 3.660977050385841*^9, 
   3.660977569150741*^9, 3.660977662837522*^9, 3.660977834143725*^9, 
   3.660977961904114*^9, 3.660979124036928*^9, {3.661341714408923*^9, 
   3.661341724399625*^9}, 3.661420641527381*^9, 3.661421833807083*^9, 
   3.661422826667459*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508238386*^9, 3.659800221667122*^9, 3.660974492548904*^9, 
   3.6609746718151407`*^9, 3.6609748487366123`*^9, 3.660975353992866*^9, 
   3.6609754711192083`*^9, 3.660975552925095*^9, 3.660977050385841*^9, 
   3.660977569150741*^9, 3.660977662837522*^9, 3.660977834143725*^9, 
   3.660977961904114*^9, 3.660979124036928*^9, {3.661341714408923*^9, 
   3.661341724399625*^9}, 3.661420641527381*^9, 3.661421833807083*^9, 
   3.661422826687763*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508238386*^9, 3.659800221667122*^9, 3.660974492548904*^9, 
   3.6609746718151407`*^9, 3.6609748487366123`*^9, 3.660975353992866*^9, 
   3.6609754711192083`*^9, 3.660975552925095*^9, 3.660977050385841*^9, 
   3.660977569150741*^9, 3.660977662837522*^9, 3.660977834143725*^9, 
   3.660977961904114*^9, 3.660979124036928*^9, {3.661341714408923*^9, 
   3.661341724399625*^9}, 3.661420641527381*^9, 3.661421833807083*^9, 
   3.6614228267089357`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[1.6], 
     LineBox[{{0., 0.}, {0.01, 0.03770891038647304}, {0.02, 
      0.07532982163522556}, {0.03, 0.11277298234191371`}, {0.04, 
      0.1499451517548588}, {0.05, 0.1867478991249179}, {0.06, 
      0.22307597303862428`}, {0.07, 0.258815793074818}, {0.08, 
      0.29384414133835596`}}], 
     LineBox[{{0.2, 0.601723861503778}, {0.21, 0.6132662126252594}, {0.22, 
      0.6222700018385573}, {0.23, 0.6282896917174587}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 0.23}, {0, 0.6282896917174587}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.659261533999935*^9, 3.659261606241768*^9, 3.659337257151372*^9, 
   3.6593373012315283`*^9, 3.6593373511149483`*^9, 3.6593374157916527`*^9, 
   3.659337463078712*^9, 3.659337651595585*^9, 3.659337739999164*^9, 
   3.659561508638349*^9, 3.6598002225016823`*^9, 3.660974492983986*^9, 
   3.660974672259519*^9, 3.660974849156893*^9, 3.660975357672409*^9, 
   3.660975471537773*^9, 3.66097555335367*^9, 3.6609770508616047`*^9, 
   3.660977569572667*^9, 3.660977663257572*^9, 3.660977834567224*^9, 
   3.66097796232719*^9, 3.6609791247526407`*^9, {3.661341715036001*^9, 
   3.661341724593503*^9}, 3.661420641814021*^9, 3.661421834030774*^9, 
   3.661422826818622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{
         RowBox[{"R", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/", 
         RowBox[{"R", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], "}"}], "/.", 
      RowBox[{"dat", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0.0", ",", "0.249", ",", "0.01"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.658647678334565*^9, 3.658647697918109*^9}, 
   3.66134172939021*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508943119*^9, 3.659800222744858*^9, 3.660974499671125*^9, 
   3.6609746724673986`*^9, 3.6609748493757057`*^9, 3.660975357848091*^9, 
   3.660975471620154*^9, 3.660975553430847*^9, 3.660977051103422*^9, 
   3.66097756965604*^9, 3.6609776635058804`*^9, 3.660977834830159*^9, 
   3.6609779625474443`*^9, 3.660979124973089*^9, {3.6613417173606863`*^9, 
   3.661341729814313*^9}, 3.661420642168399*^9, 3.6614218348408957`*^9, 
   3.6614228271421547`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508943119*^9, 3.659800222744858*^9, 3.660974499671125*^9, 
   3.6609746724673986`*^9, 3.6609748493757057`*^9, 3.660975357848091*^9, 
   3.660975471620154*^9, 3.660975553430847*^9, 3.660977051103422*^9, 
   3.66097756965604*^9, 3.6609776635058804`*^9, 3.660977834830159*^9, 
   3.6609779625474443`*^9, 3.660979124973089*^9, {3.6613417173606863`*^9, 
   3.661341729814313*^9}, 3.661420642168399*^9, 3.6614218348408957`*^9, 
   3.661422827158093*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508943119*^9, 3.659800222744858*^9, 3.660974499671125*^9, 
   3.6609746724673986`*^9, 3.6609748493757057`*^9, 3.660975357848091*^9, 
   3.660975471620154*^9, 3.660975553430847*^9, 3.660977051103422*^9, 
   3.66097756965604*^9, 3.6609776635058804`*^9, 3.660977834830159*^9, 
   3.6609779625474443`*^9, 3.660979124973089*^9, {3.6613417173606863`*^9, 
   3.661341729814313*^9}, 3.661420642168399*^9, 3.6614218348408957`*^9, 
   3.661422827178111*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561508943119*^9, 3.659800222744858*^9, 3.660974499671125*^9, 
   3.6609746724673986`*^9, 3.6609748493757057`*^9, 3.660975357848091*^9, 
   3.660975471620154*^9, 3.660975553430847*^9, 3.660977051103422*^9, 
   3.66097756965604*^9, 3.6609776635058804`*^9, 3.660977834830159*^9, 
   3.6609779625474443`*^9, 3.660979124973089*^9, {3.6613417173606863`*^9, 
   3.661341729814313*^9}, 3.661420642168399*^9, 3.6614218348408957`*^9, 
   3.661422827204414*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[1.6], 
     LineBox[{{0., 0.9924827811109717}, {0.01, 0.9916594953844553}, {0.02, 
      0.9891900470669158}, {0.03, 0.9850757626807445}, {0.04, 
      0.9793191743613048}, {0.05, 0.971924507169929}, {0.06, 
      0.9628983662638329}, {0.07, 0.9522506237360708}, {0.08, 
      0.9399954971630629}}], 
     LineBox[{{0.2, 0.6812073532904188}, {0.21, 0.6515612072321872}, {0.22, 
      0.6184603847073158}, {0.23, 0.5691646993930946}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5479987953072006},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 0.23}, {0.5691646993930946, 0.9924827811109717}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.659261534051731*^9, 3.6592616064399843`*^9, 3.6593372574120817`*^9, 
   3.6593373014585667`*^9, 3.6593373513470707`*^9, 3.659337416054242*^9, 
   3.6593374633516407`*^9, 3.6593376518338737`*^9, 3.6593377402254877`*^9, 
   3.65956150924181*^9, 3.659800223051147*^9, 3.6609744999505672`*^9, 
   3.660974672686533*^9, 3.660974849593512*^9, 3.660975358239798*^9, 
   3.660975471858241*^9, 3.660975553648501*^9, 3.660977051308169*^9, 
   3.6609775698989077`*^9, 3.660977663737114*^9, 3.6609778350726767`*^9, 
   3.6609779627659492`*^9, 3.660979125166253*^9, {3.661341717750841*^9, 
   3.6613417300420227`*^9}, 3.661420642207498*^9, 3.661421835020069*^9, 
   3.661422827273294*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalOmega]0", ",", 
        RowBox[{
         RowBox[{"R", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/", 
         RowBox[{"R", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], "}"}], "/.", 
      RowBox[{"dat", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0.0", ",", "0.249", ",", "0.01"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.658647755324985*^9, 3.6586477577083073`*^9}, 
   3.661341743774225*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561509389015*^9, 3.65980022314194*^9, 3.660974672761985*^9, 
   3.66097484966565*^9, 3.660975358288288*^9, 3.660975472105473*^9, 
   3.66097555388343*^9, 3.660977051377396*^9, 3.660977570142078*^9, 
   3.660977663818407*^9, 3.66097783516116*^9, 3.660977962843111*^9, 
   3.660979125239965*^9, {3.661341737397086*^9, 3.661341744281818*^9}, 
   3.6614206423626966`*^9, 3.6614218370379667`*^9, 3.6614228274036303`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561509389015*^9, 3.65980022314194*^9, 3.660974672761985*^9, 
   3.66097484966565*^9, 3.660975358288288*^9, 3.660975472105473*^9, 
   3.66097555388343*^9, 3.660977051377396*^9, 3.660977570142078*^9, 
   3.660977663818407*^9, 3.66097783516116*^9, 3.660977962843111*^9, 
   3.660979125239965*^9, {3.661341737397086*^9, 3.661341744281818*^9}, 
   3.6614206423626966`*^9, 3.6614218370379667`*^9, 3.6614228274195337`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561509389015*^9, 3.65980022314194*^9, 3.660974672761985*^9, 
   3.66097484966565*^9, 3.660975358288288*^9, 3.660975472105473*^9, 
   3.66097555388343*^9, 3.660977051377396*^9, 3.660977570142078*^9, 
   3.660977663818407*^9, 3.66097783516116*^9, 3.660977962843111*^9, 
   3.660979125239965*^9, {3.661341737397086*^9, 3.661341744281818*^9}, 
   3.6614206423626966`*^9, 3.6614218370379667`*^9, 3.661422827440477*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.659561509389015*^9, 3.65980022314194*^9, 3.660974672761985*^9, 
   3.66097484966565*^9, 3.660975358288288*^9, 3.660975472105473*^9, 
   3.66097555388343*^9, 3.660977051377396*^9, 3.660977570142078*^9, 
   3.660977663818407*^9, 3.66097783516116*^9, 3.660977962843111*^9, 
   3.660979125239965*^9, {3.661341737397086*^9, 3.661341744281818*^9}, 
   3.6614206423626966`*^9, 3.6614218370379667`*^9, 3.661422827463479*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[1.6], 
     LineBox[{{0., 0.9924827811109717}, {0.03770891038647304, 
      0.9916594953844553}, {0.07532982163522556, 0.9891900470669158}, {
      0.11277298234191371`, 0.9850757626807445}, {0.1499451517548588, 
      0.9793191743613048}, {0.1867478991249179, 0.971924507169929}, {
      0.22307597303862428`, 0.9628983662638329}, {0.258815793074818, 
      0.9522506237360708}, {0.29384414133835596`, 0.9399954971630629}}], 
     LineBox[{{0.601723861503778, 0.6812073532904188}, {0.6132662126252594, 
      0.6515612072321872}, {0.6222700018385573, 0.6184603847073158}, {
      0.6282896917174587, 0.5691646993930946}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5479987953072006},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 0.6282896917174587}, {0.5691646993930946, 
   0.9924827811109717}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.659261534117659*^9, 3.6592616064909286`*^9, 3.6593372578117847`*^9, 
   3.6593373014941263`*^9, 3.6593373513774767`*^9, 3.65933741609094*^9, 
   3.659337463411622*^9, 3.65933765187084*^9, 3.659337740273892*^9, 
   3.659561509685864*^9, 3.65980022344549*^9, 3.6609746729687653`*^9, 
   3.660974849886139*^9, 3.66097536099611*^9, 3.66097547233708*^9, 
   3.660975554101365*^9, 3.660977051578706*^9, 3.660977570372323*^9, 
   3.6609776640643387`*^9, 3.660977835414653*^9, 3.660977963130529*^9, 
   3.6609791254366693`*^9, {3.661341737773452*^9, 3.6613417445162277`*^9}, 
   3.6614206424034233`*^9, 3.6614218372467337`*^9, 3.66142282759888*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colorlabel", "=", 
  RowBox[{"DensityPlot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", 
      RowBox[{"1", "/", "20"}]}], "}"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "20"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"None", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.509271682018956*^9, 3.509271700472012*^9}, {
   3.5092717365180736`*^9, 3.5092718416060843`*^9}, {3.5092718778861594`*^9, 
   3.5092719136442046`*^9}, {3.5092720228954535`*^9, 3.509272029145811*^9}, {
   3.509272182183564*^9, 3.5092721823625746`*^9}, 3.509272247635308*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxl1jFrVEEUhuHBJr9AraKI/o+QShQEtRGLEBCsJFily5Q2gSlcsVARZHDQ
VAFBf8CFVHaXKJgUgoggom46tVCzk30/OZ+XiD453L33ZeSwZ27cvnrzWErp
5+Gf2d9+Tc5dOPx5sRQ9yPuv1g5/Xtt8lPt4/628d/QL+fef2fVevtvv/yCf
nXHyUX7Zb/8kn+8P/Cy/65//Rb7VX/CrfHRNzSmd2l1e3F1eW6I3epDpjfNR
phfTi+nF9GJ6Mb2YXkwvphfTG01vtt5svdl6s/Vm683Wm603W2+23my92Xqz
9Wbrzdab1Xti9eD46sEd9UYPMr1xPsr0YnoxvZheTC+mF9OL6cX0YnqjOd9i
51vsfIudb7HzLXa+xc632PkWO99i51vsfIudb7HzLXa+xc63qPdef+5EvdGD
TG+cjzK9mF5ML6YX04vpxfRiejG9mN7olE72876v3uhBpjfOR5leTC+mF9OL
6cX0YnoxvZheTG90So8e9Eu90YNMb5yPMr2YXkwvphfTi+nF9GJ6Mb2Y3uiU
Tvf/34/VGz3I9Mb5KNOL6cX0YnoxvZheTC+mF9OL6Y1O6crC+uWF9SfqjR5k
euN8lOnF9GJ6Mb2YXkwvphfTi+nF9Eazr6rtq2r7qtq+qravqu2ravuq2r6q
tq+q7atq+6ravqq2r6rtq2r7qqr3zey4F5+qN3qQ6Y3zUaYX04vpxfRiejG9
mF5ML6YX0xvNfm62n5vt52b7udl+brafm+3nZvu52X5utp+b7edm+7nZfm62
n5vt56be6xs71zZ2nqk3epDpjfNRphfTi+nF9GJ6Mb2YXkwvphfTG53Sw76u
t9QbPcj0xvko04vpxfRiejG9mF5ML6YX04vpje9b59+3Vuz75cr8/b/ZfCpz
/6/N7R+b2891P+Z+tz+f+5hj5v7+fN5k/r3p6H0uzc/ju8z8Yv/HluY49v67
Pz5/8t/zuZ95CtdUz+c3/nw+7y/i3Lx3
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJxTTMoPSmViYGD4CcTMQPzRY4/NXO179mbrX60Ru7Hb/vH/vhUBdx/YzwtK
kjCKvmyfKmHm0cJ60P5WjfzZa3uf2lf4+kTMvXneXj87qXH9iwv2wcplq/Zy
vbRP/2nTfNzygv3PO16GLv237Oc4XLE5+valvc+1p1d311yyn+luP+dI4kP7
X1MWMPB0vLAvkbjgs0nomv0SdyGmreFP7Fs2NhqXtT613/rniJP+g1v2XAW2
J2fbP7P/2/dw4/yjD+1v72arfZn7wN7BQ8ygMfq5ffjTajclkzv2XsGH/9x4
/Nh+xfFtPBann9tX7Z5/lS3jmr3Rwq65uonP7ae8D7uuPPG5/YQZUspiRZfs
3Rbd6BGIf2Uv4D5D5XLSM/s3BcZRXOwX7HNUzT0LA9/YcwX433O9/dieK7Yx
7fKFM/b/hIyE7t1/Y3/LTnTr94z79lLzpnf1Vp60fybhPTXT7I19dJWMu57N
FXszzqnVDnJH7V+dsVWpyX9tv2im+nWREwfsj6cU/p/48oD9aDiPhvNoOI+G
82g4j4bzaDiPhvNoOI+G82g4j4bzaDiPhvNoOI+G82g4j4bzaDgPnnAW6tWP
ifK7Yf+ytSZIS2mv/TQexwkHEh7jDH9prWM/Z194bb//yzPj+MVn7G+9+nC5
/M8hmpuPSxyX+aSqx+V+ptelZ37b3LafMGtzvULtHnsbtow5HPKP7Jt+M/Lz
LHhtb+Dezrpr6zH7C+obX7J8PkiyelzhQKr5pLqf1HyHyz0AF9+n/A==
    "]],
  AspectRatio->NCache[
    Rational[1, 20], 0.05],
  AxesLabel->{None, None},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{None, None}, {Automatic, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "ScalingFunctions" -> None},
  PlotRange->NCache[{{0, 1}, {0, 
      Rational[1, 20]}}, {{0, 1}, {0, 0.05}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6592615341523027`*^9, 3.659261606535654*^9, 
  3.659337257906208*^9, 3.6593373015238123`*^9, 3.659337351404449*^9, 
  3.659337416123746*^9, 3.65933746346557*^9, 3.659337652071515*^9, 
  3.659337740329156*^9, 3.659561509793766*^9, 3.6598002235186787`*^9, 
  3.660974673042891*^9, 3.6609748499591837`*^9, 3.6609753610685987`*^9, 
  3.660975472413786*^9, 3.660975554169114*^9, 3.660977051634266*^9, 
  3.660977570448594*^9, 3.660977664144156*^9, 3.660977835499168*^9, 
  3.6609779631972733`*^9, 3.660979125500167*^9, 3.661420642555338*^9, 
  3.661421841343485*^9, 3.6614228277235622`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListDensityPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.9", ",", "0.0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Rho]C"}], "}"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
                    RowBox[{"\[Rho]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], 
              "\[IndentingNewLine]", ",", "1"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "/.", 
          RowBox[{"dat", "[", "jj", "]"}]}]}], "\[IndentingNewLine]", "}"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
       RowBox[{"Mesh", "\[Rule]", "False"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Show", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ListPolarPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Pi", "/", "2"}], "-", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}], "/.", 
           RowBox[{"dat", "[", "jj", "]"}]}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ListPolarPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Pi", "/", "2"}], "-", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "NR"}], "]"}], "]"}]}], "}"}]}], "}"}], "/.", 
           RowBox[{"dat", "[", "jj", "]"}]}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"powSpline", "[", "jj", "]"}], "[", 
          RowBox[{
           RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
         RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"DotDashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"\"\<C=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"C", "/.", 
         RowBox[{"dat", "[", "jj", "]"}]}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Rho]C", "/.", 
         RowBox[{"dat", "[", "jj", "]"}]}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[CapitalOmega]0", "/.", 
         RowBox[{"dat", "[", "jj", "]"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], 
   RowBox[{"(*", 
    RowBox[{"Show", " ", "ends"}], " ", "*)"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"jj", ",", "0.0", ",", "0.235", ",", "0.001"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5089983087857013`*^9, 3.508998347632923*^9}, {
   3.50899838149286*^9, 3.5089984075673513`*^9}, {3.509000527550607*^9, 
   3.509000587621043*^9}, {3.5090941579688005`*^9, 3.5090941744057407`*^9}, {
   3.5090942053555107`*^9, 3.509094230026922*^9}, {3.509112307494894*^9, 
   3.50911232595795*^9}, {3.5091124296988835`*^9, 3.509112431296975*^9}, {
   3.509157533351082*^9, 3.5091575356152115`*^9}, {3.5092692785114837`*^9, 
   3.5092692832817564`*^9}, {3.5092693788352222`*^9, 3.509269380934342*^9}, {
   3.509269435505463*^9, 3.509269435948488*^9}, {3.5092695099217196`*^9, 
   3.5092695553893204`*^9}, {3.50926959839778*^9, 3.5092696035640755`*^9}, 
   3.6584835491284747`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`jj$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`jj$$], 0., 0.235, 0.001}}, Typeset`size$$ = {
    450., {127., 136.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`jj$64371$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`jj$$ = 0.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`jj$$, $CellContext`jj$64371$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        ListDensityPlot[{{{1.9, 0., 1}, {2, 1, 1}}, 
          ReplaceAll[
           Join[{{0, 0, $CellContext`\[Rho]C}}, 
            Flatten[
             Table[{Part[$CellContext`r, $CellContext`i, $CellContext`j] Sin[
                 Part[$CellContext`\[Theta], $CellContext`i]], 
               Part[$CellContext`r, $CellContext`i, $CellContext`j] Cos[
                 Part[$CellContext`\[Theta], $CellContext`i]], 
               If[$CellContext`j == $CellContext`NR, 0, 
                
                Part[$CellContext`\[Rho], $CellContext`i, $CellContext`j]]}, \
{$CellContext`i, 1, $CellContext`NT}, {$CellContext`j, 1, $CellContext`NR}], 
             1]], 
           $CellContext`dat[$CellContext`jj$$]]}, AspectRatio -> 1/2, 
         PlotRange -> {{0, 2}, {0, 1}, {0, 1}}, ColorFunction -> "Rainbow", 
         Mesh -> False], 
        Show[
         Table[
          ListPolarPlot[
           ReplaceAll[
            Table[{Pi/2 - Part[$CellContext`\[Theta], $CellContext`i], 
              
              Part[$CellContext`r, $CellContext`i, $CellContext`j]}, \
{$CellContext`i, 1, $CellContext`NT}], 
            $CellContext`dat[$CellContext`jj$$]], Joined -> True, 
           InterpolationOrder -> 1, 
           PlotStyle -> {Thin, Black}], {$CellContext`j, 
           1, $CellContext`NR}]], 
        Show[
         Table[
          ListPolarPlot[
           
           ReplaceAll[{{0, 0}, {
             Pi/2 - Part[$CellContext`\[Theta], $CellContext`i], 
              Part[$CellContext`r, $CellContext`i, $CellContext`NR]}}, 
            $CellContext`dat[$CellContext`jj$$]], Joined -> True, 
           PlotStyle -> {Thin, Black}], {$CellContext`i, 
           1, $CellContext`NT}]], 
        PolarPlot[{
          $CellContext`powSpline[$CellContext`jj$$][
          Pi/2 - $CellContext`\[Theta]\[Theta]], Sqrt[Pi]/
          2}, {$CellContext`\[Theta]\[Theta], 0, Pi/2}, AspectRatio -> 1, 
         PlotStyle -> {{Thick, Black}, {DotDashed, Black}}, 
         PlotRange -> {{0, 1.5}, {0, 1.5}}], Frame -> True, FrameLabel -> 
        StringJoin["C=", 
          ToString[
           ReplaceAll[C, 
            $CellContext`dat[$CellContext`jj$$]]], 
          ", \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=", 
          ToString[
           ReplaceAll[$CellContext`\[Rho]C, 
            $CellContext`dat[$CellContext`jj$$]]], 
          ", \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=", 
          ToString[
           ReplaceAll[$CellContext`\[CapitalOmega]0, 
            $CellContext`dat[$CellContext`jj$$]]]]], 
      "Specifications" :> {{$CellContext`jj$$, 0., 0.235, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {179., 187.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.659261534189321*^9, 3.6592616065968723`*^9, 
  3.6593372579463873`*^9, 3.659337301559771*^9, 3.659337351437179*^9, 
  3.659337416163629*^9, 3.659337463574185*^9, 3.6593376521088753`*^9, 
  3.659337740386945*^9, 3.659561509836813*^9, 3.65980022366606*^9, 
  3.660974673080769*^9, 3.660974849993031*^9, 3.6609753610952663`*^9, 
  3.660975472445387*^9, 3.660975554202819*^9, 3.660977051670939*^9, 
  3.660977570479013*^9, 3.66097766418118*^9, 3.6609778355345163`*^9, 
  3.660977963227868*^9, 3.660979125535001*^9, 3.661420642691984*^9, 
  3.6614218421037817`*^9, 3.661422827860139*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "\[Rho]C"}], "}"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
                 RowBox[{"\[Rho]", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
        "]"}], "\[IndentingNewLine]", "/.", 
       RowBox[{"dat", "[", "j", "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0.0", ",", "0.299", ",", "0.001"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.508998803951023*^9, 3.5089988168257594`*^9}, {
   3.508998876745187*^9, 3.508998885093664*^9}, {3.5091125712769814`*^9, 
   3.5091125871268883`*^9}, {3.6574451377656183`*^9, 3.657445138341198*^9}, 
   3.6575241669973803`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"grid1", "=", 
   RowBox[{"Show", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListPolarPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Pi", "/", "2"}], "-", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}], "/.", 
         RowBox[{"dat", "[", "Jtest", "]"}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5089992527896953`*^9, 3.508999395205841*^9}, {
   3.5089995705998726`*^9, 3.50899960517085*^9}, {3.5089997234786167`*^9, 
   3.508999723754633*^9}, {3.5089997699462748`*^9, 3.5089997702182903`*^9}, {
   3.509000053571497*^9, 3.5090000825841565`*^9}, 3.5090004787048135`*^9, {
   3.5091123856413636`*^9, 3.509112387345461*^9}, {3.5091575949676065`*^9, 
   3.5091575973357415`*^9}, {3.65744515744598*^9, 3.6574451590776453`*^9}, {
   3.65750744651896*^9, 3.65750744927064*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"grid2", "=", 
   RowBox[{"Show", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListPolarPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Pi", "/", "2"}], "-", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "NR"}], "]"}], "]"}]}], "}"}]}], "}"}], "/.", 
         RowBox[{"dat", "[", "Jtest", "]"}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.508999425535576*^9, 3.508999611411207*^9}, {
   3.5089997288759255`*^9, 3.50899972911994*^9}, {3.5090001211253614`*^9, 
   3.509000165571903*^9}, 3.509000481127952*^9, {3.509112391450696*^9, 
   3.5091123929477816`*^9}, {3.5091576030820704`*^9, 3.509157604767167*^9}, {
   3.657445164612012*^9, 3.657445165109147*^9}, {3.657507454054987*^9, 
   3.6575074560395*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dp", ",", "grid1", ",", "grid2", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"\"\<NT=\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<\\tNR=\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<\\tNL=\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<\\tJ=\>\"", "<>", 
     RowBox[{"ToString", "[", "Jtest", "]"}]}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"2", "/", "3"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.508999583620618*^9, 3.50899958751384*^9}, {
  3.508999740352582*^9, 3.5089997411516275`*^9}, {3.509000032215276*^9, 
  3.5090000342463923`*^9}, {3.657600385182806*^9, 3.6576004656131773`*^9}, {
  3.6584836881404257`*^9, 3.658483739364356*^9}, {3.6584837944605074`*^9, 
  3.6584837950435405`*^9}, {3.659261062283946*^9, 3.6592610668272676`*^9}, {
  3.6592613548885117`*^9, 3.6592613568562098`*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxt3X+MbVd12PGrJETFTWOkjBpktZCkroSrJERogmJX3AskaiBNqYqrYkWE
NiFRUAtpg2jkqlA11hM0JDYBDRCBFSCdxFWwwo/cmNRYsXk5GGfsMC/jsXGu
jcdv7GfjH9gG/342dufcfT5ray3X/4y/b+1zzr3n7O/+sfY55/7wL//nN/7q
d81msxe/aDYb/577gpdfdsep/Xn7O8yvuf6cC889tb3A737b5WdefGoZfNb9
P/3W91xwdfDqinfcesWpIfhlFx7930t3gn9z/J8LdoPf+p6jHb5+L/iMt7zh
S9ef2g/+3Hzz5vdd9LXgC156dMSXroKfG//74m3Bf3zHqY2rLjjIfPqO4NMn
jvbw+sPgo6Odc+FH7wz+w/GAp+4KfvxTR/+weXfwz33o7Nd/6KJ7gv/goo+e
//CJbwR/+51H3+Cl9wX/i/ELvuP+4I+d//A7z7jqgeAHj07f2854MPi1R1/3
2gseCv758XjnP9zP33iCTnf+5Hj8T30reHv8/D/77YnPXnz16PK94KHOT47f
5yOPBP/IeAFf9Wjw+nh3dV4f73ceC14f7xWPB++MJ3TV+dHx+//WE8EvGevH
y54Mft14PnY7v/PWowrzm08FXzqen5ecDr52rH9f7vzweL7e/nTwWVddetFH
f+CZ4J8Zz9+VnX/9qLo+9kvfCf79o6939gufDT5+tPn5n+38wMbRDt/0XPCL
Ln7sU597tvNs+q/x1vTv/MDL4KNPc3SGri7xIXgdDj+2Fjet/2E3eLwcZ4cf
tt8PHqv3peGH/a2Cf/yyscRtZf8HwaNe14YfjncYfPe4+/Bja3He+u9dwZc8
Nlaou4MP15/nnuBXrk/AN4Lfv/589wXfPrYX4cfW4hXrz/tA8Hs/OlaIB4NX
68//UPAPjh8v/NhavGb9fTr/p/H6hx9biw+vv9+3g69eb9753vX3fST4B8br
P380+FXrv51/bWy/Ln4s+IPr8/F48BfHr3dr51Pr8/NE8Jlje3fOk/36rs9X
57euG6ingi9en7/TwV9oFzD45Pp8Ph3898c/G88E/+T6/Hb+92N7+tbvBP/2
+nw/G/xnZ64FCP76+vw/Fzzp8OrCs+xF/bsMzn5EPxOc/dgufmwXP2y/H5z9
2C5+bBc/tosf28WP7eLHdvFju/ixXfzYLn5sFz+2ix/bxY/t4sd28WO7+LFd
/NgufmwXP7aLH9vFj+3ix3bxY7v4sV382C5+bBc/tosf28WP7eLHdvFju/ix
XfzYLn5sFz+2ix/bxY/t4sd28WO7+LFd/AietXr/meIBXgbzI8eHYH5gfmB+
5O33g/mR97cK5kfe/0EwP/LxDoP5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfkR13fyA/MD8wPzA/MD8wPzA/MD8wPzA/MD
86PwrPYTmZfFk6vLvw/Buf9Ylv5jWfqPZfiBc/+xLP3HsvQfy9J/LEv/sSz9
x7L0H8vSfyxL/7Es/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/sSz9x7L0H8vS
fyxL/7Es/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/sSz9x7L0H8vSfyxL/7Es
/cey9B/L0n8sS/+xLP3HsvQfy9J/LEv/ETxr9fDKMq65MrbD/MjxIZgfmB+Y
H3n7/WB+5P2tgvmR938QzI98vMNgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+xPWd/MD8wPzA/MD8wPzA/MD8wPzA/MD8
wPwoPLsp9QvG9b2fwPzI8SGYHzelcrvB/Mjb7wfzI+9vFcyPvP+DYH7k4x0G
8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
I67v5AfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZH4VmrR8fLvPZ4+IH5keNDMD8w
PzA/8vb7wfzI+1sF8yPv/yCYH/l4h8H8wPzA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPyI6zv5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+VF4VvNQdV6R5+FXl/hQxlk7pV/ZLR7tle1i/aPMP4bwA+f5xxB+4Dz/
cLxY/yjzj6HMP4Yy/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/GMr8Yyjz
j6HMP4Yy/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/GMr8Yyjzj6HMP4Yy
/xjK/GMo84+hzD+GMv8YyvxjKPOPocw/hjL/CJ61evmV8CPzMpgfOT4E8wPz
A/Mjb78fzI+8v1UwP/L+D4L5kY93GMwPzA/MD8wPzA/MD8wPzA/MD8wPzA/M
D8wPzA/MD8wPzA/MD8wPzA/MD8wPzI+4vpMfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH4Vnud2v6xg9L5Xn572fwPVvnp/vhB95+/3i1dfKflbBeX6+E37gPD/f
CT9wnp/vlPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6Zn++U+flO
mZ/vlPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6Zn++U+flOmZ/v
lPn5Tpmf75T5+U6Zn++U+flOmZ/vlPn5Tpmf75T5+U6ZnwfPWr27IfzIvAzm
R44Pwbke3xB+YH7k7feD+ZH3twrmR97/QTA/8vEOg/mB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/ID8wPzA/MD8wPz
A/MD8wPzA/MD8wPzo/CsrnPXdYu8znf18+YVtZ/IeavdMk/fK9vvl3HY18r+
VsWz28p+D4Jz/mo3/MA5f7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1
W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JX
uyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/tVvyV7slf7Vb8le7JX+1W/JXuyV/
FTxrH+tE+JF5GcyPHB+C8zjnRKm3J8KPvP1+MD/y/lbB/Mj7PwjmRz7eYTA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/i
+k5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSe5bxSvU+qr3vn/G7PQ9V5Re0n
cP2b87t74Ufe36qMy24r+z8o3t1RjnMYnPO7eyW/u1fyu3slv7tX8rt7Jb+7
V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7
eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/u1fyu3slv7tX8rt7Jb+7V/K7eyW/
u1fyu3slv7tX8rvBs1Zvbgw/Mi+D+ZHjQzA/cB7X3Fjq6Y3hB+ZH3t8qmB95
/wfB/MjHOwzmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmB+ZHXN/JD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI/Cs/PSOoT7Wvt9
UZgfOT4E8+O8Mq84r/QTefv9YH7k/a2C+ZH3fxDMj3y8w2B+nJeOe1cwPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/i+k5+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfhSetXpxc/iReRnMjxwfgvmB87z35jKOuTn8
wPzI+1sF8yPv/yCYH/l4h8H8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPyI6zv5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+VF4
djjVS35kXgbzI8eHYH7gnAfq84q8/X4wP/L+VsH8yPs/COZHPt5hMD8OUz91
VzA/DtPnuCeYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H3F9Jz8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Cs/adb8l/Mi8DOZHjg/B/MA5
L3pLmefeEn5gfuT9rYL5kfd/EMyPfLzDYH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfsT1nfzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8KDx7/1QP+ZF5GcyPHB+C+YHzOkHPQ+Xt94P5kfe3CuZH3v9BMD/y
8Q6D+YH5gfmB+YH58f70ue4L5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmR1zfyQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwrN2XW8NPzIvg/mR
40MwP3BeN7u15EFvDT8wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+YH5gfmB+
YH5gfmB+YH5gfmB+FJ69Yqp3/Mi8DOZHjg/B/MB5HbmvW+Tt94P5kfe3CuZH
3v9BMD/y8Q6D+YH5gfmB+YH5gfnxiuTt/cH8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflReNau2+3h
R+ZlMD9yfAjmB873Vdxe1sluDz8wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+
YH5gfmB+YH5gfmB+YH5gfmB+FJ6tpnrGj8zLYH7k+BDMD5zvM+rr3Hn7/WB+
5P2tgvmR938QzI98vMNgfmB+YH5gfmB+YH5gfmB+YH6s0ud+KJgfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfcX0nPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8K
z9p16e/FybwM5keOD8H8wPm+u37fR95+P5gfeX+rYH7k/R8E8yMf7zCYH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0n
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8Kz15T3huVeRnMjxwfgvmB832o3Y+8
/X4wP/L+VsH8yPs/COZHPt5hMD8wPzA/MD8wPzA/MD8wP16Txn0PBvPjNcnr
h4P5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/ID8wPzA/MD8wPzA/MD8wPz
A/MD8wPzo/CsnfeT4UfmZTA/cnwI5gfO92WfLPfZnQw/MD/y/lbB/Mj7Pwie
p3p0MvzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflRePbh9Jy29/L190Zh
fuT4EMwPnJ9T6PfR5u33g/mR97cK5kfe/0HwPLWrh+EH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmx4dTv9eZHx9O3+vbwfzA/MD8wPzA/MD8wPzA/MD8iOs7+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gflReNbOa/cj8zKYHzk+BPMD5+d2uh95+/1g
fuT9rYL5kfd/EDxP44zuB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmB+YH5gfmB+YH5kdc38kPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj8Kz
e6d6w4/My2B+5PgQzA+cn2Prz13k7feD+ZH3twrmR97/QfA8jbvvDD8wPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD/uTd/zkWB+YH5gfmB+YH5gfmB+
xPWd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPGvnrb+nOfMymB85PgTzA+fn
OvtzSHn7/WB+5P2tgvmR938QzI98vMPgu1M9uSv8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5
gfmB+YH5gflRePaqqZ7wI/MymB85PgTzA+fnnLsfefv9YH7k/a2C+ZH3fxDM
j3y8w+C7U7vZ/cD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/HhV+t6d
+YH5gfmB+YH5Edd38gPzA/MD8wPzA/MD8wPzA/MD8wPzA/Oj8Kydl1PhR+Zl
MD9yfAjmB87P/Z8qz3GeCj8wP/L+VsH8yPs/COZHPt5h8N1pHHEq/MD8wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/IjrO/mB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5UXj2wale8CPzMpgfOT4E8wPn92D057rz9vvB
/Mj7WwXzI+//IJgf+XiHwfzA56V28u7wA/MD8wPzA/MD8wPzA/MD8wPzA/MD
8wPzA/MD8wPzA/Pjg+k8PB7MD8wPzI+4vpMfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH4Vn7Xt3PzIvg/mR40MwP3B+L0z3I2+/H8yPvL9VMD/y/g+C+ZGPdxjM
D3xeGjd0PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD/i+k5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSenZrqAT8yL4P5keNDMD9w
fk9Sfw9I3n4/mB95f6tgfuT9HwTzIx/vMJgfmB/4ktQu3hN+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfpxK5+WJYH7E9Z38wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/Cg8a9+r/25Y5mUwP3J8COYHzu8N6+/FydvvB/Mj728V
zI+8/4NgfuTjHQbzA/MDX5LGCd8IPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPzA/4vpOfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH4Unp07
XXd+ZF4G8yPHh2B+4Pweve5H3n4/mB95f6vgeH972v9BMD/y8Q6D4/3tE8f7
2ye+JI2bux843t8+/Y33t08c72+fON7fPnG8v33ieH/7xPH+9onj/e3pvpZv
Bcf729O6Zed4f3vKSz8aHO9vT3mHx4Lj/e1pXNk53t+e2o0n+/Wd/MDx/vaJ
4/3tE8f72yeO97dPHO9vnzje3z5xvL994nh/+8Tx/vaJ4/3tE/Oj8Kx97nvD
j8zLYH7k+BDMD5zfK3lveU/YveEH5kfe3yqYH3n/B8H8yMc7DOYH5ge+JM0j
7w0/8CvTdb43/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPyI
6zv5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+VF4drF2cPIj8zKYHzk+BPMD5/es
9vcM5u33g/mR97cK5kfe/0EwP/LxDoP5gfmBL0l5lfvCD/zK1O7dF35gfmB+
YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+xPWd/MD8uDidt9PB/MD8
wPzA/MD8wPzA/MD8wPwoPGufq/uReRnMjxwfgvmB83uHux95+/1gfuT9rYL5
kfd/EMyPfLzDYH5gfmB+YH5gfuD3p+va/cD8wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/MD8iOs7+YH5gfmB+YH5gfmB+YH5gfmB+YH5gflReHbSuHny
I/MymB85PgTzA+f3cPf30ubt94P5kfe3CuZH3v9BMD/y8Q6D+YH5gfmB+YH5
gd+f2rn7ww/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj7i+kx+Y
H5gfmB8n03l8OpgfmB+YH5gfmB+YH5gfhWftuP137DMvg/mR40MwP3B+L31/
T3Pefj+YH3l/q2B+5P0fBPMjH+8wmB+YH5gfmB+YH5gf+PZ0HR8IPzA/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+L6Tn5gfmB+YH5gfmB+YH5gfmB+
YH5gfmB+FJ79pDzL5EfmZTA/cnwI5gfOv9PQ/cjb7wfzI+9vFcyPvP+DYH7k
4x0G8wPzA/MD8wPzA/MD357ate4H5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+ZHXN/JD8wPzA/MD8wPzI+fTOe1Mz8wPzA/MD8wPwrP2n6/GX5kXgbz
I8eHYH7g/Lsl3yzvof9m+IH5kfe3CuZH3v9BMD/y8Q6D+YH5gfmB+YH5gfmB
b0/9/DfDD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mj7i+kx+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfhWe/LS8/+ZF5GcyPHB+C+YHz7/j0373I2+8H
8yPvbxXMj7z/g2B+5OMdBvMD8wPzA/MD8wPzA9+exr0Phh+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB9xfSc/MD8wPzA/MD8wPzA/MD9+O53nZ4P5
gfmB+VF41rbrfmReBvMjx4dgfuD8u1bdj7z9fjA/8v5WwfzI+z8I5kc+3mEw
PzA/MD8wPzA/MD/w7Wke2P3A703XqfuB+YH5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+RHXd/ID8wPzA/MD8wPzA/MD8wPzA/MD8wPzo/Ds69N14kfmZTA/cnwI
5gfOv/PWfycpb78fzI+8v1UwP/L+D4L5kY93GMwPzA/MD8wPzA/MD3x7yos8
FH7g96Z266HwA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mjru/kB+YH5gfm
B+YH5gfmB+YH5gfmx9fTeX8umB+Fp/8eDj8yL4P5keNDMD9w/p3D/jthefv9
YH7k/a2C+ZH3fxDMj3y8w2B+YH5gfmB+YH5gfuDbU17w4fADvzf12w+HH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0nPzA/MD8wPzA/MD8wPzA/MD8w
PzA/cPs7e3V8/vX52Zr+Hpvq/2eC/9f6818Z3Orb8eBWn78SnH+3+Vj5Hc5j
5XfVji1+d33+bw5uxW8JXq3Pz63BF310em/lxOvdxXvmji3e5r0yE7fqdhj8
Is99Tvwr6TmtY4u/cF/2xN+X7qM8tvgP6b6YY4tlWuc8tvh7KW99bPHmlIc4
tvhsGlceW3xXug7HFj964fh/nf/d0bd9yxu+Ffw/11+w85+sL8C3g/cvGA/4
SPCzJ8Z/6Pyy8fJ96NHgN45f59zHgt+9/p/Ofzxenfc9HnzinPEDPhF8en35
Op89ft33PBn8hnWFeSr4wjPGE9r5D9cX9HTwDWN1O+vp4MfHr/+lzj807v5t
zwT/3FvHC/id4HeNl++Kzn8wVpe3PBt83fh1X/Bc8IPj7i7vrL63v38S3Or9
5+P6tHp3IrjVu78NbvVuL65vq3f7wa3e3RT1odWzW4JbPfu7qD+tnq2CWz27
Lepb+/evR31s+7k94li8fY47oj63z31H1PdW705GHIu3engyfGn18DB8avXw
zvCt1cM7w8dWD+8KX1s9PBU+t3p4Kvxv9fDu8B9rP1q9vCfaD6z9afW0/04i
Vr+w9qvV428sXrf+mNrHYR73p071RfvZ2s1P9PtZp/j6dEV7avvl89pb298w
fu5ob4e58Uitn8qvv97rjpf9D89rr5Vfn79or4e58Uxtz5VfX7Yv3hDl8++O
9/Ze+XU167/bPI/7bUt/oPwXxsvbf6dzHvfjlv5C+V8cz2f/Xba58VTtT5Rf
/3P/HZ658Vbtb5T/9PgF+u8uzON+39IfKb9uXvp7tudxP3Dpr5R/91jh+3tV
53G/cOnP0vnv79Gbx/3Epb9Tfh3u702ax/3GpT9Ufq19f0/GPO5HLv1lqp/9
ueh53K9c+lPlf2j0qD8HN4/7mUt/q/y7Rh37cw/zuN+59MfKXzdezn6f6zzu
hy79tfL/aNS639c0j/ulS3+u/H8ZP15fx57H/dSlv1d+GJuxvm4xj/uty3hA
+RePF6TnqeZxP3YZLyj/9vF6Pxfz9nncr13GE8qvv3+MJ4Z53M9dxhvKr89f
jDeGedzvXcYjyq/P12O9fNwPXsYryl85nu6Pi5/d7xefyt811o/XPhLxuH98
in//eP3v7fG4n3yK/9R4oN97NOJxf/kU/+XxfPzUYxGP+821H2t9ezzuP5/i
V4zf972PRzzuR9d+jvXpx56IeNyfPsXPWDdvPR73q2uPxur07icjHvev60/G
+vNPnop43M+ufxjr206Px/3tU/zz4+X8jdMRj/vdp/ht4+Fe/HTE4/73Kf69
Y/W6psfjfvgp/hNjffq1ZyIe98dP8V8Y68/3fyficb/8FD82Xo4/7/G4f36K
/+m4uzc/G/G4n36K3zK2l9/9XMTj/vopvh6HfLrHzYfE9d/qq/4X5/nQdvSv
xovG43X7Op7U7/Ojbo+VM/40fsDirR/8Quwf81V5x8v724ryuPV7V8X5qPvD
9lfjthfH4q3aXRNxLN76rb+KOBZv/fy1Ecfas9avXxflsfJY+davXx/lsXjr
x78a8cp1PmCcoz02P9BeY9vX+YNxk+3NJ2xf5xfGSbY331C+zj/8Pq7+xXxE
/4PtD9u+9ds3x/bY9jXu9xT1f+Y7+kds/3U+5PfmbG9+ZPs6X/L7W7Y3f9Jf
Y/05tr863/J7RbY3/7J9nY/5/Rbb1/kZNv7A9oftr/5+SZ3Ped+/8nV+h42P
ary+317c/uv8sHJ9H7i4/df3h9f5pPfpKl/nl9j4scbr+2XF7b/OT7Hxa43X
93OKO16d32Lj5xqv7zcUd7w6P65c3wcnbv91Po3NF2q8vk9L3PHqfBybr9R4
fR+RuOPV+Xxl79swXxI3n8Li9X0v4j5PzQ9U9v4C8z9xXN+nIe7zyi/4PDXf
UDm/P+DGiGNxn08+wuep+QrbY9vLj4lj28uXiWNx+TNxLC6fJo7F5dfEsbh8
mzgWN56qLB8jPyGOxeUjaj4nP79+IsrLN9T8kLh8pLjxMHZ+lXc+sfOHnS/s
/GDj0Xq+8ufdeh63PGt/Hk7c+LCy8saL4ljc+cfON3Z+bK8+YvOD+v0Kz+r+
sP1h57uWb3nlXh4rj5Vveef7ojxWHivf/t4f5bHyWPlWrpfHymPl278/EOWx
8lj5Vs++GeWx8lj5Vg97eaw8Vr7V0wejPFYeK9/q8UNRHiuP1ddWr/v6LLY/
bH81bv3K/mv5Gsd8Uh7//9fDtsIXnOd/W2U9bKush22V9bCtsh62VdbDtsp6
2FZZD9sq62FbZT1sq6yHbZX1sK2yHrZV1sO2ynrYVlkP2yrrYVtlPWyrrIdt
lfWwrbIetlXWw7bKethWWQ/bKuthW2U9rF6P7Vg/Nh/HdX5tXp2v7zLWo+t8
+X1TOXHzX2y+i81vsfksNn+VnzM/Fcfxe2rT/BSbj2LzUVznl+qd+WGd310y
1UPzuTofM79yPc13XG/zEfXB/EJ9Md5Xn4zf1Tfjb/XR+Fl9NR5Wn41n1Xfj
UT7E+/Ymf4zv+IP5ZzzFvzq+wvp7rL/H+nusv6/vC6rjofz+qePl/T1fed54
Jr9/58Zgnxf7vNjnxT4v9nmxz3dmaQfy+1k+Exw+TRx+Thzt5cTGV8YHWH9v
PIHF9e/iWFx/Lo7F9d/iWFx/LY7F9c/iWFx/LI7F9b/iWFx/K47F9a/itb/V
vymv/1O+9Mevxrl93S75/M+U+DJY+5jb66HkD78SbB0y5w9viDyY8bDPW+dD
9X1F4vLLWD4Zyx9j+WIsf5vH28PzxrvqL/Z+Cux5fOz5Y+x5S+z5Mux5Guz5
Aex+aez+UJzvd/z2dF7/cPHyqZ9qfy+PONbvtXblz6b2+1uL1oxeG7w+/Rf+
9ZR/eXixbs4uOzG17w8v/uk6v7C/+PJUL/9mXeBri9+Y6vlfr327dfGPJ2/a
39umf79/2u5g8V8nr9tx7lj88HQd2uc4Oe3Xe/UOF/9tygu0vNad0+e4a+qn
7lr87ZSHaf3XXYvLp7xay7fdvfieKa/X+r27F/9svf0zi+9Za/KNxb9d5zm+
E/w/1sfr/H/WeYNng/fWn++5YOOAH1+fr6P50PoDPf08vmDtxb3BF60963z5
Wqj7gm9ef6/7g9vfzu17PBDcvsc3g9v36Ny+x4PB7Xv0dcrJi7lxFjbOwnkc
Zf3+C8HqIzZuws4XNm7CxknYOAkbJ2HjJGychOXZsTw6/uVp3ISvmPLe+Ixp
3ITfMuWp8WenPDNW3/AFUx4Yq5/42efG/+J3jOfnTHlXfP6UZ8XvmfKi+LIp
r4n5gJ+e8oyYP/hfT3k+zDf8v6e8GeYnfmJqZ/EP53Z2/i+nfh7zH39i6sex
9gI/MvXTWPuCf3bqh7H2CH986mfxl1O/OswfmvpJrL3DP7L+Pp21j/jn19+v
r59rT/Fvrr9vZ+1z483FJ9ffv3Mbb3feWZ+PR4JbO9j50fX56dzaxUeDX7I+
X51bO9n5devz91hwmw90fuf6fHZu7erjwZeuz2/n1s52vnZ9vp8IbvOKzg+v
z3/n1q4+GXzWWuDOrV3t/DPrBqNza2efCv71tXCdW7vb+ffX7dnp4NYOdz6+
bj86t3b56eAH1g1QZ+0r/ofr9uaZYP0PfvX6b2f9Ef6Pa+E765/w1rr9fDZY
f4X/ct2eddZ/4bvX7Xfn5nNn7Xlr5y+LeXJrqD8b44XWTv3tgi+tnerc2qm9
4NZO3Rjji9ZO3bjgY2uHborxRvtcX1vwubUztwS3dubvYjzS2pXVQvvQ2pFb
g41PtCft37++0N60/XRux7k9xjPtcx4stF/te9wR45v2Pe9YaP9aO3Fyob1s
7cLJGP9gceMf7W1rJw4X2uPWTvTxUWsn7lxoz+t4qbUTd8Z4qbULdy30H8ZP
+pfWLpxa6H9au3BqoX9q7cKphf7LeEt/19qFuyNv0Ty/J9axsf7ZeIo/4vwS
X9/++Cbjk415zF+n9lU+svG71vmBE6/7fJTP+aJhPt7f9qUvXhXxnD9q/f0F
MV7ZmOf8VB/fGI+PX/dEjF825jmfOMzHvb8+xi8b85xfHOZHu9m+I8YvG/Oc
bxzmN5xz4f+9NMYvG/OcfxzmRyf9qxfE+GVjnvORw3y8+BsxftmY5/zkML/m
+nOePBHjl415zleux1f/4OIYv2zMc/5yPV78vbNj/LIxz/nMYX7bFe/4+EUx
ftmY5/zmMP+Jy+74ozti/LIxz/nOYX7so+d/dh7jl415zn8O81ved+2Vl8b4
ZWOe86HD/EcvPPfLp3/8nojn/OgwP5r/7l4Q45eNec6XDvP9C166uiLGLxvz
nD8d5i87km0jxi8b85xPHebvPmrM3hnjl415zq8O8xPnXPjUiRi/bMxzvvWo
fpx1/3e/PMYvG/Ocfx3m//wFL3/ftTF+2ZjnfOww/9X3vO13HzvR4zk/O8w/
8NinPnh2jF825mX+vx7PnfES45N3zXP+YGj7+7L4/jw/37DZ8gNvfyTi+XmH
zZZ/+IFHI56ff9hs6/hX9nh+HmKzrcv/0mMRz89HbLZ19xc+HvH8vMRmW0f/
bI/n5yc227r4m56IeH6eYrOtYz/b4/n5is22Dv1HT0Y8P2+x2dZV/9VTEc/P
X2y2vMajPZ6fx9hseY2Pn454fj5js+XdXvt0xPPzGpst73Zvj+fnNzZb3u33
nol4fp5js+Xdfuo7Ec/Pd2y2fMZBj+fnPTZb3u29z0Y8P/+x2fJuP/ZcxPPz
IJvtft/9Hs/Ph2xGfsR4xvjceAbLl+DWTv5F5EvavPHLC+P/Nk+8LuJYXH4F
t3niDTHeaf36zXH/kPGJ/lz/rT93/4j5nf5c/+5+EONP/anxJxbXvxqPihuP
YnHljU/FjU+xuPLGq+LGq1hceeNXceNXLB75mGk8K47F9ddtXtHzN1hc/kZ+
AhuPKG+8gsVr+TZP6eWxuPwQbvOWnh/C4vJHuM1jev4Ii8sv4Tav6eWxuPwT
bn97/gmLy0/hVq96fgqLy1/hVq96eSwuv4Vbver5LSwu/4Vbver5LywuP4Zb
verlsbj8GW717KEoj/lr/evxo8P+zJ3ybRvleSTPz3iu6APr8fPnXvInpfwy
yo/6vz7ybxvleaOWz7o08m8b5fmilq/aiPzbRnmeaJi/8aheXhz5t43y/ND6
+B+7KPJvG+V5oWF+dJY+M4/820Z5PmiYv+Ss+//q9O/eFPE70vNAw3wcnF4R
+beN8vzPMH/70WTvnZF/2yjP+6zzg9/18si/bZTne4b5lZde9IP3R/5tozzP
M8w/P9/8yPlvOFm+Xx+Pfu/LL/vk5yL/tlGe1xnmv/DSsz595v19PJufzxnm
f3rmxX/+jnP7eDU/jzOM47drro/820Z5/mYYx2c759zcx7P5eZthHH/tv+/s
Pl7Nz9cM4/jq4FTk3zbK8zTDOH6696e/1Mez+fmZYRwfPfqpM/t4NT8vM4zj
n2ef+8UHI56fjxnG8c0L33J5H8/m52GG+b/50vUvfMt7+ng1P/8yzP/7uS84
8+Kz+3g1P+8yzP/oc0dV4Poez8+3bLbnd36jj1fz8yybi9eOx3txH6/m51k2
2/M8V/d4fp5lc/GR8Xi/1ser+XmWzcU14/G+v49X8/Msm4v7xuP9eY/n51k2
Fxvj8d7cx6v5eZbNxXz8+919PJqfZ9lcvG083qd7PD/Psrn40Hi8N/bxan6e
ZXNx1Xi8p3o8P88y5Zc+2cer+XmWzcWLxuP9bB+v5udZNhfnjfRgj+fnWTYX
vzIe7yN9vJqfZ9lcXDIe71V9vJqfZ9lc/MV4vLt6PD/Psrk4HI/3O328mp9n
2Vx83/jnFX28mp9n2Vy8cjzeqsfz8yyb7Xmg3+rjVeu3cf2m8Yjxqv7BeNT4
tM3Tvxjjy5aH+ZvIt8mvyTfJR2kvsLj7O+RvjJ/kB42vcI0bD/m8xkPry3PV
VcHGnzGemr5/3b7tt/ev2PGw/sv6rvUkxzPf1Y9pr+t42vqi/sb9w9Z7rCfq
T8St78h/6c/cH2J9qeXF+++fiVuPau1k//0zcetPtrc+pbzvZf3b+pjrk59r
+kC5j6qz817/5ueWPhD54MrKu97i6nNl5Y3HxY2/K2cProu49cLKyls/FHd+
Kiuv/ovLV1ZWXn5T3PWsrLz6IO56Vlbe9RdXHysrbz1SXH62svLqr7j8bmXl
5YPF5YsrKy+/LH7ZlH+urLz5rDg/Kytvfixu/F1Zeflzcfn1ysrLx4vL11dW
Xnsqbj2gsvLWD8StL1RW3nqEuPWKyspb7xC3HlJZeesp4tZbKitvvUZcfqOy
8tZ/xPVXlZW33iSuv6usvHyMuP6ysvLGj9pJcfn9Vm472jmfz/qX/gX7vNbD
xLHvbz3M+Bc7X63e3hTlsfNtPUw+GLt+rV79XVwv7HrX+3esf8lP1/Uw9/Ng
z7Opz+7nUf89LyaOtSfWk7RH+lftl/4U62+Vz8//XBfjCe1/HV/U8crp5O2y
PK/yhRg/qCc1f2P8IV+KjW9wfp9H7/9av/uxyE+K5/v1en2t5bH+u/WTV0T9
b/3SEPWxtfNfjfbT/bjaX+t/+hPjDf2X8Z/+2Pn1ffP9pcfK7/Ude977smJ8
N12fwjPfX34jj4eXcZ2MT3z/+ty1/Rk/5/sXr4zzZTytPcDK3zR9DtcHuz5t
HHFN7A/bH87Pdx8vz3cfj/21ZuF47A/bH9a+WFd0vc0HzJ9x/j670X42L3dj
e2x7bH1J3kf7dNm03q89q2w+or1yv7r2TD5cvgBbD/M8sfbN+r/8A9Z+ef5X
++Z+APkMbL3O87r6V+v/8iPYeKn+vr3xuvaKP9j96sZ/xu/mC9ojcb7h+nvL
+XnD62K8j/lo/CvuumvvxPmM6+/TKm98rDyu9/Mqb/1BeVx/n1R56w/K4/r7
pcpbf1Ae1983Vd76g/K4/v6p8tYflMf191Hr/Lj+fnB+nu8TpX/ZjvvjxfU3
cX/m1J5qz2yvvcv7W5bnAT8f+4v2cdqf9lV58zflcf09Tecj1gOnuP7A9spj
5d1vrbz1DuWx8u7HVt56h/JYefdrK2+9Q3msvPu5lbfeoTxW3v3eylvvUB4r
735w5a13KI+Vd7+48tY7lMfKu59ceesdymPl3W+uvPUO5WM9ZPpP/2x796fb
3vqH7ev6iP6fH9j9AuqlfC023rE+q38yb9fvqb9xf02q35+IcUgeH/R8Rc1H
1HxDzSfUfEHNB9T5fp3P1/l6nY/X+XadT9f5cp0P1/lunc/W+Wqdj9b5Zp1P
1vlinQ/W+V6dz9X5GjY+Ma413sHGR3U9v13Hy+M5F8/zYeM99cn6fzvu1vOe
F9SOqj/Glz5nZeNR9Rmrz9jxbZ+f7/urGG9h4zPjeeXr84dYec97GF+aF+Xx
7fVx/tu4fyf2730z5rueBzH+Mx/F3hdj/up5EfXB+2XEsfGb+anxnvmp8Zf5
p/po/imf7f0l5pueN8HeZ+L+LXHbm7+an3o/hfEdNv+s9z/W8aD5rPNs/IWN
D7Sf+m/tZzxPMv1X55/aT9vj9jGHqLfqkfmieQbO77P6WIxH+MA77W/OFy+j
/rR28S/DR6y+YeVbu/mlKI+Vx+V+syjPB/Xd/JYPOL+/6kSU97yT+a/nUc1/
jdfNf42/fQ7jb965vtj11U8ZL2Fx99eIY3H304hjcffPiGNx98uI43j+dLpf
Ju6PmVjc9VYfsfoY9WHySDsnHusDZXzo/hf1HYu730Uci7u/RRyLu59FHIcv
0/0r8f7uicXdryKOxd2fIo7F3Y8ijsXdfyKOxd1vIo75m9dlrg42ntG/8U1/
iOWhsHZC/2yco/+27qG/9/4u4wHv0zKflu9z/wE2vrD+6H5c63Huh8DGL+6H
c3+v+93cX4GNf9wf535h7zey/oeNn+S/fO88vzoe4wjnrY43aruI1X/lXSf5
KP2ndkG+BOt/tVfaM9dDe4ddP/kX2xuXyr9g+Rasf679veutPNa/y7/Yv/qg
f8fqj/yL/l5/Lj+D1S/5F/VFfXJ/DLYeoz9XX+Q7rQdZ71U/tP/yo56PcL+7
+oK9r8B4XT7b+DHnl7eelx/V3ub7T/t4z/VX3/gsLv+X68Px+H7qv++jfuf3
XX4mnkezf/VFvs94EOf7u5exvfFsfp58J76f8aX2wXjM+lZtD9w/Zz2O//px
8z35LMzf3D9dGe2fz435WPO98l7ON5/4IB/Jl1r/5R+tv9T6Lt9oPUb9zvnc
q8Jv7PP4vPn9lddEeZzr0zXx+Z0n7Q12/eWLfR/tC/+x7+/8+H51fI+dD/ld
+VrtCf+x8+P8qj/aE/MDbH3K+Tbe157oj7D65/y7/tpD5xNrX7WPzr/v53xi
/af5EH/4bn6IzQ+Nb/mkPcjrCSei/9Y/xPND03hLueqD+bD+SX3y/eTrfX7X
y+er6xPah/w+2Buj/tmf8yX/r77Zv/Oj/ub80PFobxzf+VF/8/rMbrQ/Pt//
A1cOKr8=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxEnXWYVlUXR9+OGWbG7m5MpFu6U1pCREBAQhQUpKRLUgERREoaBZESA7DA
VixsRTEQA7BQ4dvr27/zvH+c5+Q+5967131ngGHWhV363dg3FolENp8XicSt
/qswErmyWCRyRl4k8re1r7b2Odb+x9olrH2Rtf+zdmlrX2Hto9a+1trnW7uL
1X2s/iobiRyz8bLWv8r6kaJIpKK1r7d21NqVrV3a2v/ampLWvtTacRuvZu2K
1k5Yu4a1q1j7uK0pb+1rrR2z8arWLmftpLVrWbuatdPWrmftOtYuZu0brd3K
2llrN7J2I2vnWbuJtZtau8DaLa3d1tqF1m5t7fbWLrJ2W2t3snZnq3tZ/aXd
y4k23sH6Xa2fsnYda9e09gnWvsnat1g7Y+0G1q5v7ZOs3cnat1n7cbv9IVaG
WulqY/1s7Gvbs4e177L2N9buZe2B1v7W2n2tPdja31n7TmsPs/YP1u5t7Xus
vd/a3a3d39r7rD3A2iOs/aO1B1l7tLV/sva91h5r7YPWvsPaQ6z9vbWHW3ui
tX+x9n3WnmztX619t7VHWvuAtUdZe4q1f7P2GGtPs/Yha4+z9gxrH7b2HKsv
sFLW7que3W9dKxdbf5KtmWX177bmXKvL2PxtVs60dmmru1vJt7XNbN2NNnaZ
lfI21stKGWtXsbqfleusXcnqPlaKW7uC1bdbudraFa3ubWWC7fGA9Y/YWSWt
rmxjfXnWNj7e+j/beHmrq9rYHVaqWrua1XdaaWzt2lbfY6WWtWtYPcBKXWvX
tHqglWbWrmP1ICstrF3X6sFWWlu7ntX3Wuli7UZWD7fSwdoNlOsG1q5l9d1W
2lm7vjioaDz3sH4Ta99sdUOrh1mZRryVjla62Xhjq0dYmWqlvebGcR1WWloZ
zfVZaW5ljOobrYzXfCuej+rWViaqbmNlipWbtO9kK225Rs61a3sg354zedRa
5h7O87NGWblfa4mfruvtZGWG6putPKZnfJeVB6x0tnKLlZmap/+gxrpYqW77
V9f6h7gOcTLZ8jjP5v6wPC5Q/sn7fCs9xcxsK7fyblmZm+fj86w8aowtKHL2
HtFa4mfpTGIe1X4wtlA1/CwXCzCwQjV5XKZrZG6plf66zyUR54t+JbuGG9Re
qTgYWxxxrlm3SOfQXxtxjmBjdcRZg7E1qplbpT2Yu9Q+rA9F7R208kTEWYOf
9RFnEGZOsfs+2cp91l6Q53l7ysomcQMvZxRYDizXj9j8m3pmPNfNmh9rZWvE
mYOpp1XD1EaxwF7PRJwteHlWNUxt0R7Eb1Mc657TPBxtjziLMP6S+ICXnRF/
H+DrBdXw9bLmYecV1eRzl2pYGFvk9/IGObV7e9TKXGs/rzM5r6GtOavIWduh
8zlvvI2Ns/Kn8bZOz5Vn+paeDRy9E3EWYedd1bDznvJKnj8QEzCyR/PMva09
iP9Q87wreyPOFtx9rBru3td+7PVpxHmChc9Uw8tH2oP4zzUGO1+ohq8vVfO1
6Ey7v8P2ni/lM73Qudhv5euI88R9zzEultj8k9bepzH4elF5IE/fRTwWFn6K
OCsw8mPEGSL/32se7n5QzdxXuhbOO6C1xB/UHvDys2r4+kU1fB1RzmDkt4jz
RG4Pqd5u5XfNw84fqrn2P1XD2jl8H2L3/xjf50ScLZg6rD044y+tZW6xrXvd
6mNWjmot3N1tewy0sojvVSK+BvaKRT2v5DMRdW7gJRn1Gi6iUX/34CsedT5Y
F4v6GP2CqO/xiZVU1ONgLT/queeMbNSZg6l01OdhJxP1mrlI1K+L8/KivpZ4
3lG+bvB1pTDq58DaRVF/7r9aOTHqbMHUCVHnj/5JUR/7UuueVT5OjTpPsHOh
PecLrKy053N21JmAhTOjzh0cnRJ1Jog5v8jHz7CxucbhCr5Hsv5ZUV9L/MlR
P5OYc6K+H9ydG/Uapi6JOh9wcWnUa3J7cdSvlbkLo84Z93lB1PmjXxT1Z8B9
Xhb1OLg7P+qss+68qJ9D/8qoswUvV0SdP7grHvWaucujvgdzV0V9LdxdHfUa
ppbxPbHV19pYqajnDEY+KnLuSlj7+qi3Ya205uGljGo4Kqsa7ipGnQlYKB91
/uCoZNT34IxyWstc5ajzBCMVtJb4hlHPCXmrpP1Y18DK6ZqrEfVnByM3RP0d
gN9qquGrpuZhqpZqOKqtmtyuzvM961v5xu59X5EzVUXXBft1tBZ2qmqM8ybY
2nvtfXzY2Gmk64Wdxqph8JaoP+PrrDSNOkOw00Tz9JtpjDzfrmfH82gRdVZg
p1XU3xOYahd1Vshzm6jzB3c3Rp0bYlprLXMttQfxbbWW+OY6k5ibtB9MtVcN
U7dGcyx0VU0+u+iemOts5RrdZ6eoMwdr1ZUH8tRNcbDWMeocs66DzqHfM+o8
wchtUWcO1nqoZq679mCul9byvHrrmcHgCisDrdxtpb9yBiN9o84T3PVTTZ7v
1Dzs3KWaax+gGtYGRZ2bOtoXtmDqDu1RVWfW0NxEY2OEsTHP2LhHa4n/js8c
/gxj7bV5zt0QKxOUY/J2X9QZgpGRqmFnWNTfAd6PEVFnjnXDNUZ/ovaAi1GK
g6/x4oAzxkadFfgarXlYGKOauZNP8LOGWhmntcSv1P1zT5N0Dkw9qhz0sTIl
6jzB0f1R55X+VI110LqKysdMKzdHnaMHo/7OwNdDUeeGnM+OOoswOD3qDMHa
LK1l7gHtQfwcrSV+ms4kZq72g6+HVcPXoqjzAReLVZPbhbpW5hZE/f3kPh+J
On/0J+sZcJ9LFAd386PONOvm6Rz6y6POFrw8FnX+4G6ZauaWag/m+DrJ92j/
/55Mzx4e/7PyqpXXrBRYvmJWnuDPU8bXGGNvvrEXPcFz+LiVXXpePMv1UecG
jjZEnTlY2ywOYGRj1BmCkXVR54+Yp7SWuSe1B/GbtJb4j+0a9lo53coTUb8G
4rdGnSd43C5W4OJ5sUL/mahzDF87NE8Od6om/6+IFe5nW9TfH2Ke1t70t+g+
OO+lqHMGIy+rJv5FKzM0t1vPZo6e6UPi5Rz788sj9izX2bN9Q9yQz9c1T/9N
jc1XTuYo/h1xw/uxJ+o8wdqHyjH5fz/qzMHO21Fni5j3tJa5d7UH8R9oLfFv
6UxiPtJ+cLRXNax9aWWtGPhKNTlZn+fjX1i5zPJ0qZXV1v406u85rD2rPMD4
14qDhU+i/jnLuo91Dv39UecJRr6JOmcw8q1q5vZpD+ae097k/jvFwd33qmHq
FzHBtfysfNM/oBzD1K+aZ7/fVMPUH1ZeUJ7/EgfkPx3z58uz/0l7wA5/1oVL
uDuiGu4OaT/mDmot1/Gn9mbfv7U3bB6POh/wEol5DSPHos4Wc/9GnTl4+Sfq
7yf9TMyvizxHYx5Hno9qb9alYs4T95CMOR/04zFnCO4SMa+Zi8V8D+Yutjxf
ZGWwtbMxPwcez475c//Byo9R/yzg+ebHnC2Yyov5WvoL7J140hj6jLzlOUcn
2vypMWeFPJ9n786jtm5Dnu+7SfsWi/l+sHNyzBmFzVNiXhN/Usz3ZK4w5szB
ZkHM4+ifFvNzYO38mOeS/FwQ8xpezos5K8ydFXPOuM9zY36fzJ0Ty933JTFn
iJxfHHO26J8e83Ng+cyYs85eZ8R8jP6FMT8TZi+KeU38ZTFnC6ausPbvYrN4
zGs4ujLmNZxeHXOeyPm1MecDXq6K+TxztWP+jHh+18V8nq8J18ecMxgsGfMa
Bq+J+X7sVTrmbMFFGdWwUyLmexBfKuZxrCureZgqH3PmYLBKzJmAkYoxf6/g
t5Jq+KqqeXJ+g2pyWE01ua0Vc3a4nyuNzeJWNhkz5XQm5y00jjbyd+fWrqDz
Oe+KIo+taWWJlTus9LdSR88GpuqJS3ipr5p8Nox5/shn45jzwXvQQPPM1dUe
xDfRPLw0izlD8NVcNQw20n7s1SLmLMJFS9Vw0VR7EN9KY7DWWjUMtlHN38N1
jDkf5L+Tahi5ycrlMWeqQ8x5Yl17jdGvrDyQp5sVBwtdY84KjHSJOUPkv7Pm
4e4W1cy11bXA8q1aS3w37QEv3VXD122q4au3cgYjPWPOE7ntpRqm+mgedvqq
5tr7qYa1yZbr8fwdSL7nGLZg6nbtUUH5r6K5005wLgZa+dFifyhy7rbw9/BW
D7Byd8zXwOBo5ZV8Dok5N/AyVDVcDIr5uwdf98acD9YN1hj9MdrjRivDFAdr
o5R7zrgv5szB1HDNw84I1czdo+vivJFa21T7whpsjVUf1h7Wc+9hZULM2YKp
8THnj/5EjbXRujLKx5SY8wQ702LOE9w9ICZgYUbM+YOj+620U8x0rWVuqvYg
fqbWEj9JZ8LRg9oP7maphqn5MecDLh5RTW7n6VqZmxtzzrjPh2LOH/1xegbc
5wLFwd2cmLPOutk6h/7imLMFLwtjzh/cLVLN3KPag7kL4vY1xeqfrVxk7V+s
/tVKoTGWtLKVf088wVlbbmVlzNkih6tjzg2MrIj5GuZe0LPjua7RPEw9HnP+
4O4J1XC0Svux1/qYcwMvT6qGqbXag/h1imPdBs3D0caYswjvT8ecD3jZHHN2
YWqLap7rNs3DzjOqyedzViaLhZ0x54b72R5znmDhKZ3Jec9rLXObdD7n7dBa
4n+393uylcX2jr+oZwNHL8ecRdh5RTXs7FZeyfNrYgJGdmmeuZe0B/Gva553
5c2YswV3b6mGu1e1H3u9E3OeYOFd1fDyhvYgfo/GYOc91fD1vmq+Ln0ccy7I
/yeqYWRKMZu3e/07a98TWX+Z1j2b5+2PrGxVHsjTp4qDha9izgqMfBFzhsj/
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
52tdc43Rn21fFz4gF/Yut1IcLNyUcFZgpK0YIv+tNQ93bVQz11TXwnnttJb4
erpv7rO99oOdjgnnDL7+sHfr9yJn5OaE80RuO6uGqan83Kh9zuy1a11v7XVF
/ECdfcYXOV/drPQUN+WUY9iCqVu0x3XKfynN3Z5wnmCkh9YSf69yxrX30n6s
G6y8Mtc/4dzAS9+Ev28w1U81XNypeXi5SzVMDVANC4OUb/a9O+GcwVFvXRfs
D9Ra5vpojPPu0Vrih+h6YWqoapiarmfdycrwhPMER8M0T/8+K40TzlQn5YQc
jE44Q/AyNuEMwdpEcUD+xyecOdgZJQ6IGae1zI3RHsRP0FriR+pMYiZpP1ib
rBqOZooJWHhANfmcoWtlbpqVDrrPqQnnrIMKrMHZZ8bKp1a6WHtKwvlm3f06
h/5DCecIRj6xtV2tnm1lTsLbzM219+VzPtf4Ox/7XP48aV8vrDyccObgaH7C
WYSdR1TD2qPKKzlclHBu4GWB5pnbqmfHc12s+TusLE04czD1mGqYWqj92Gt5
wtmClxWqYWqJ9iB+meJYt1LzcLQ64SzC+DrxAS9rE/4+wNfjquHrSSsjEs7O
BtXk8ynVsLAl4dxwP5sSzhMsrNKZnLdRa5lbo/M5b7PWEj9Pz5Vn+rSeDRw9
k3AWYedZ1bDzvPJKnneICRh5TvPMbdMexO/UPO/KiwlnC+7+ts+Wv4qcu+3a
j72esrENVuL8rHaRM7LLygvag/jdiRw7r6qGr9dU87Xo7YTzQf7fUQ0jbySc
J+77rYTzxLo3NUb/CeWBPL2rOFj4MOGswMj7CWeI/O/RPNy9p5q513UtnPeB
1hL/kfaAl72q4etj1fD1hXIGI58mnCdy+5lqmPpS87DzlWqu/WvVsPZdwrmB
hW8TzhZMfa49OOMbK+s190PCeYKR/VpL/Pfag7kfNQ+D3/B/tvj7F2v/knBu
4OVX1XDxU8LfPfj6WXyw7qDG6M+3d38//67F/9FSHKz9odzDzpGEMwdThzQP
O4dVM3dA18V5v2st8byjfN3g68rXdsYrVv9tpSDpz/0TK/8mnC2Y+ifh3NH/
T2Ovad0K5SOSdJ5gJ5Z0nuAulXQmYCGRdP7g6LiYICae9LXMRZO+B/HJpK8l
/pjOJCad9P3gLpP0GqaKks4HXJyQ9JrcFib9WpkrlnTOuM/8pPNH/2jCnwP3
eWLS4+AuL+mssy6b9HPon2btfeLl5KTzB3enJL2Gu5OSvgdzpyd9LdydkfQa
ps5Meg2b5yU9ZzBydtI5g8Fzkl7D2vlJn4eXC5Jew9GFSa/h7tKkMwELFyed
Pzg6N+l7cMZFSV/L3OVJ5wlGLkn6WuLLJj035O2ypO/HujJJzzFz1yT92cHI
d8bSX1ZfaWNXJb0NV9cmfR6mrkt6DUclkl6T29JJzz37lkw6HzBV1j73vs9z
9q9P+lrmFtg78qONJ62USvpa4svpemGnvGoYbJT0Z32WlYpJZwh2KmiefiWN
kefWSX92PI+qSWcFdqol/T2BqVpJZ4U810g6f3BXJencEFNda5m7QXsQX1Nr
ia+sM4mprf1gqo5qmGqSdCZgoalq8tlY98Rcw6SzxX02SDpz9K9Oeh7IUzPF
wVr9pHPMunpWTlW/ZdJ5gpEbk84crLVQzVxz7cFcK63lebXRM4PBB6x0tnKL
lWlFzkUHK5usvbHIuWtq32vvKjCmLY8dkzl2Oqnm2m9WDWu3Jp2b67UvbMHU
DNtvOv/OkudnXqO5buIJRrpoLfFdtQdz3TUPg3cpx+Tt9qQzBCO9VcNOj6S/
A7wfvZLOHOt6aoz+AO0BF30UB193igPOuEOswFdfzcNCP9XM3abr4rz+Wkv8
g7p/7mmgzoGpScpBWyuDks4THN2TdF7p32ulrnLeVrni/R6WdG7gaETS3xn4
Gp10bsj5yKSzCINDk84QMfdpLXPDtQfxo7SW+CE6k5gx2g++xqqGr0X2Xh+y
HGb4/71W2tvYFCu/8n+arbSz9sSkv5/c54Sk80f/bj0D7nNq0mPhbXzSmWbd
OJ1Df2bS2YKX6UnnD+5mqGZumvZgrgz/99B4/dKuY5aePTx+b2WjlU1WHko6
czA1J+mc0Z+rMfK5Qc+LZzk/6dzA0YKkMwdri8UBjCxMOkMwMi/p/BHzqNYy
94j2IH6R1hLPZwNfW/ha8rDOJ35p0nmCxzVWBouLVWIFdpYnnWP4Wqt5cvi4
avL/pFjhfpYl/f0h5jHtTX+J7oPz1iWdMxhZr5r4J7Qfc0/p2YzSM4U/eNlt
Zbae65akc0M+N2ue/laNjVdORin+d/4feZ6/H4etvt/q56zsVI7J//akswY7
25LOFqw9n/T1zC0xPv+0+KyVHVpL/NM6k5gXtB8cvaga1l4TH7Dwumpy8qru
ibldSWeL+3wl6e85/RXKA4y/oThYeDnpn7Ose0nn0H8n6TzByFtJ5wxG3lbN
3Jvag7mV2pvcv6s4uNujGqY+FhNcy17lm/4HyjFMfaJ59vtUNUx9lXRuyPM+
cUD+D+n58uw/1B6ww5914RLuvlRNPH8OXq25j7SW6/hae7PvN9obNn9MOh/w
ckA1jPyQdLaY+y7pzMHL/qS/n/QP67rI80+KI8/fam/W/ZZ0jriHX608q/5j
xsm/xkge3xPl+fgvVo7y/1HznC9yzOcHnxFHdA48plL+3N+z8n7SPwt4vn8k
nS2Y+l1r6R9NOiuw82/S3xOYiqScFfL8j+Z3a99F2vdP7Qc7x5LOKGweV038
f9qPub+Tzhzn/aU4+tGUnwNreSnPJfnJT3kNL9mUs8JcMuWccZ+ZlN8nc+lU
7r5PsPZnynlhytmCqVjKz4HlRMpZZ694ysfoF0v5mTBbkPKa+JNSzhZMnZzy
GjZPSXkNR6emvIbT01POEzk/M+V8wMtpKZ9nrkTKnxHP76yUz/M14ZyUcwaD
56a8hsEzUr4fe11i3/ssL8Z/+LV3mL8DsPIf/5c25XsQv9fWHMtzBmcWOUcX
2vzFKWcOBq9IORMwcmnK3yv4vSzlNXwVT/k8Ob8y5TU5vCrlNbm9LuUMcT/X
pJwt2Lko5edy3tUpX8vcJSk/n/OuTfla4qdau72VDlauT/mzgalSKecSXkqr
Jp9lU54/8lk+5XzwHpTRPHMlU74H8RU0Dy+VUs4QfFVWDYPltB97VU05i3Bx
g2q4qKg9iK+mMVirYaUo5QzWVM3fw9VLOR/kv75qGKmdcrZgqm7KeWJdHY3R
vzzleSBPDRQHC3HLfSzfGWmccobIf0PNw10j1czV0rVwXhOthbXLjJMVxlLS
9prD3xdZiVp7Fv9H2+ZvtNIm5TmDkZYp54jctlINU201DzvtVHPtN6mGtU4p
5+Zq5Ri2YKq19rhE+b9Cc51TzhOMdNRa4m/WHszdonkY7Ku8ks/uKecGXm5T
DRe3pvzdg69u4oN1XTVGv5/2qGKlh+JgrY9yzxm3p5w5mOqpedjppZq5Lrou
zuuttRW1L6zB1h3qw9pYPe8WVgZYqZ5ypu5MOX+wNlBjNbXuAuVjUMp5gp17
U84T3A0XE7AwNOX8wdE9YoKYIVrL3GDtQfwwrSX+bp1JzDNFztwIKxljJZ3v
TI1POR9wMUE1uR2na2VujJXmus+Hirw92kp/PQPuc6Li4O5hWzPXSsrOWGWc
5lldYJ9rU1LOFrxMTjl/cHe/auYmaQ/miqXtM9Hqj60UpL3+xMqMlHMJUzNV
w92DKWeLHM5OOTcw8oDmmXtcz47nOkfzMDU35fzB3cOq4WiW9mOv+SnnBl4e
UQ1TD2kP4ucpjnULNA9HC1POIrwvs3KXeFmccnZhaolqnutyzcPOCtXkc6Vq
WFibcm64n9Up5wkWHtWZnLdKa5lbpPM5b43WEj895e8qz/QJPRs4es5yWGS5
K7SyxvJ4Im3L41M2N9LKKCubxAKM5Of7+AYrlS22WL6zvFnzvCtbU84W3D2t
Gu42aj/2eiblPMHCs6rhZYv2IP45jcHO86rha7tqvi69JD7I/8uqYWSnlWm6
7xdTzhPrXtAY/aXKA+/xK4qDhddTzgqMvJpyhsj/Ls3D3W7VzO3QtXDea1pL
/BvaA17eVA1fb6mGr/eUMxh5J+U8kdt3VcPU+5qHnQ9Uc+0fWXks5ax9mnJu
YIF3CLZgao/24Iy9Wsvc5ynnCUY+0VriP9MezH2heRj8SXklnyfx/xat/sbK
tylvw8Mn9jXr1Hzn63Nrf2blBGOppf05u4WV023uoPbg5xT2Kw7WDij3nPFD
ypmDqe80Dzvfq2bu5Hx/z7+08qPWblEO+BoG6z/rHFiLpf25v23lt5SzBVO/
ppw/+oc0tl3rHlE+fk85T7DzZ8p5grt/xAQs/J1y/uDoiJgg5i+tZe4P7UH8
Ua0l/rDOJOZf7Qd3/6mGqUTa+YCLZNprchtP+7UyF007Z9xnJO380f9Fz4D7
TKU9Du6Op5x11h3TOfTz084WvGTSzh/c5Vn7w5TPpdO+B3PpjLVZZ6Uw7TzB
4yZrj7YyxspZ+c7cCdb+0rj4wsqJ/M4n42KBlTNs/isbOyffubsq7c+O53qm
je2z+lQbOz2d4+6MtNdw9I3F7rNyku15Vtq5gZez017D1Glp34f4M9Mex7pz
0j4PR+elnUV4vzjtfMDLBWlnF6YuTHvNc70k7fOwc2naa/J5WdprWLgy7dxw
P1eknSdYODftZ3Le5Wlfy9z5aT+f84qnfS3xE63d2kobK1en/dnA0bVpZxF2
rkt7DTvXpz2v5LlU2pmAkRJpn2fumrTvQfwF+f6elLZySb4zV9bKZfnOXDkr
JdO+H3tdme8cVLDyrLWvzndeLsp3LstYeb7IualspUra2/BVVTVf/9fZ150y
FnOK5W4J/2/JynnWf4zfY5nvTD1ha36x9sm2Zr/luaS1izgr7XkgT+czb/3a
VhqIFRipl3Z2yH+dtK85xUpd1cx1tOu8Nt+/B6mvtcQ31B7w0kg1fDVWDV83
pj1nMNI07TyR22aqYaqF5mGnpWquvZVqWGuXdm4uV45hC6aaa4/zlf+LNdc+
7TzBSFutJf4m7cFcB83D4LX23I7YPV5u5Za0cwMvXVTDRae0v3vw1TntfLDu
Zo3Rv972+d32KG7lVsXB2lU2ftjGLuXrg+XrV6tP5WciNA875W2sXL7z2FHX
xXlXWOwhG7/YyhX5/jlVHhZt/A/rX2XlPj33JtyjsVEz35nabu1q+c7Yn1bX
zne+mig/5GOVrVlp5TS7nrI2X9PGBloZLCZg4R4rtcRPa1v7gZ19va29O+3r
mVtr42v4nao2Pkhria9ga/+yseus3Kv94G6IapgaJT7gYrRqcjtS18rcCHHG
fQ4Xf/Tb2Zmv2xlV8/3ztLm4G5Z21lk3VOfQnyC24GWc+IO78aqZG6s9mOPn
uvj5QX5ekPeKz2++F7hfXMLUFNVwN01skcMZ4gZGpmqeuZVpf3Y815mah6kH
084f3M1SDUfTtR97vWn3Wd9KN2tXsftuaO0GVh7QHsTPVhx8rbPn84SVCrZm
k9UbrVSy9i6rX7FSy9rPWL3NShVrv2l7NrL6Biuv8bPzVupYuy7/L9r2W0Le
rH2n1UutrBAv3M/79lkxwOplVjZY3JNWKtraD238Ayt/WH+rlS1WKtv48rSv
J35y2t9VnukqPRs4WiMWYWetath5Qnklz+vFBIw8rnnmVmsP4p/UPO/KU2IL
7jaqhrt12o+9NqedJ1jYohpeNmgP4rdqDHaeVg1f21TzdWm7+CD/O1TDyLNW
Jum+n087T6x7TmP0X7DntNNKdXtWOxUHC6+IFRh5SQyR/xc0D3cvqmbuGV0L
572stcTv0h7w8hZ/JubvVKxdzRh429pNrbxl/flWHrHyupW5Vh628obqeVbe
1vwCK+9aedTKQit7VC+y8qF4eSzt3w8tFktvag/OeE9rmdubdo5g5AOtJf4j
7cHcx5qHwe+UV/L5Rdq5gZcvVcPFp2l/9+Drc/HBus80Rv977cH3aF8pDtb2
K/ec8U3amYOprzUPO/tUM/eJrovzvtXaDcoBX8Ng/QedA2steN+s/s/KT2ln
C6YOpJ0/+gc1Bl/N8j0XxPyadp5g51DaeYK7P8QELBxJO39w9IuYIOaw1jL3
m/Yg/netJf5nnUnMn9oP7v5SDVPH084HXEQyXpPbY7pG5moaV+/add9o5R0r
za3stvEf9Qy4z2jG4+DuaNpZh9O/dQ79VMbZgpeEtd9JO3fJjNfMxTK+B2zy
94v8nRB/NxT+npF+Xsa5hKn8jNdwV5BxtshhUca5gZFiGZ9n7rKMPzue6wkZ
n4epkzLOH9ydnPEajgozvh97nZpxbuDltIzXMHVixvcg/pSMx7Hu9IzPw9GZ
GWcR3s/LOB/wcnbG2YWpczJe81zPz/g87FyQ8Zp8XpjxGhYuzTg33M/FGecJ
Fs7I+Jmcd1HG1zJ3VsbP57xLMr6W+DHWbm7lRiuXZ/zZwFHxjLMIO1dmvIad
qzOeV/Jcx9h4z3hoxfc0GZ9n7oqM70F863x/P66zseszzhbclcx4DXd7bE1L
K/9Yv3TGeYKFslbiGeelRMb3Ib6cxmCnvGr4qqCaP8NVzTgf5P8G1TBSyUrG
StZKlYzzxLrKGqN/bsbzQJ6qKQ4WamecFRipmXGGyH91zcNdDdXMVdS1cF4t
rSW+VMbvm/uso/1gp17GOYOvxhnPGYw0yDhP5LahaphqonnYaaqaa2+mGtZa
Zpybi5Rj2IKpRtrjLOX/PM21zjhPMNJCa4nvlvGcce2ttB/ruiqvzHXIODfw
0i7j7xtM3aQaLjpqHl46qYap9y3/baxcY+1blW/2bZfv7NxipY2uC/brG3sf
2FxbisY4r0vG1xPfXdcLUz2slMk4U0P0rOtb6ZVxnuCop+bp366xClp3mnLQ
N+MMwcsdGWcI1gaIA/J/Z8aZg50+4oCY/lrLXD/tQfxdWkt8b51JzEDtB2t3
q4ajYWICFoarJp9Dda3M3Wulru5zcMY5q6sCa3A2QnGwNijjfLPuHp1Df3TG
eYKRkRlnDtZGqWbuPu3BHL+P/zL9PvSxGWcOjsZnnEXYmaAa1iYpr+Tw/oxz
Ay8TNc/cUj07nusUzbe3Mi3jzMHUdNUwNVn7sVcj4+QjY6S9lQ75ztEDVqZq
D+I/tPGbrNxs7QczvgaOZmecRRifLz7g5aGMvw/w9bCV2zLO1yOah50Fqsnn
o6phYUnGueF+FmWcJ1iYpTM5b6HWMjdH53PeYq0lfpyeK8/0MT0bOFqecRZh
Z4Vq2FmlvJLnNWICRlZqnrll2oP4tZrnXXki42zB3TrVcLda+7HXkxnnCRY2
qIaXx7UH8U9pDHY2qoavTar5WrQt43yQ/2dUw8iWjPPEfT+dcZ5Yt1Vj9Ocp
D+TpWcXBws6MswIj2zPOEPl/TvNw97xq5jbrWjhvh9YSv9cY6WhlhrWbGlcf
W7sT3OQ7Uy9ZeVU5g5FXMs4Tud2lGqZetzI34+y8oZprf1M1rL2bcW5g4e2M
swVTu7UHZ7yltcy9l3GeYOQdrSV+j/Zg7n3Nw+DXyiv5/Djj3MDLJ6rh4sOM
v3vwtTfjfLDuI43R36c91lv5VHGw9pVyzxlfZJw5mPpM87DzuWrmPtB1cd6X
Wks87yhfN/i68o3OgbW/9LxftvJdxtmCqf0Z54/+9xrbpHUPKB8HMs4T7BzM
OE9w95uYgIVfMs4fHP0oJoj5WWuZ+0l7EP+r1hL/g84k5pD2g7vDqmHqaMb5
gIt/VJPbv3WtzHXJ93v808qNxtunfH5Z+VbPgPv8V3Fw94nNdbbygrWP6BzY
j2adLXg5nnH+4C6S9Zq5Y1Ze01ws62vhLp71GqYSWa9hM5v1nMFIKuucwWA6
6zWs5WV9Hl7ys17DUbGs13B3QtaZgIXCrPMHR5ms78EZBVlfy9xJWecJRoqy
vpb4C7OeG/J2Ytb3Y90FWc8xc2dk/dnByKlZfwfg97Ss1/B1ZtbnYeqsrNdw
dHbWa3J7ftZzz77nZp0PmDo569cF++dkfS1zp2R9jPPOy/pa4i/K+vXCzsVZ
r2GwXNafddLKpVlnCHYuyfo8/cuyPkaeq2f92fE8uuU7L8WtfVXW3xOYKmHt
/5Tna7LOH9y1Mq4+t5iu/J131tcyd2XW9yH+2qyvhbXP+HtSK79b+/qs7wdT
JbNew1SFrDMBCxVVk8/yuifmymadLe6zTNaZo3961vNAniopDtZKZ51j1pXK
+jn0b8g6TzBSJevMwVpV1cxV1h7MVdNanlcNPTMYHG6loZVGVupmPWcwUivr
PMFdbdXkuZ7mYae+aq69gWpYa5J1bs7RvrAFU3W0xyk68wzNNcs6TzDSWGuJ
b6o9mGuueRjspByTt9ZZZwhG2qiGnRZZfwd4P1plnTnWtdQY/Zu1B1y0VRx8
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
MIE7Dk9cS8UR01pj7IWTkDVtszkvIJ5A+MDLhssNDmaoP7rIvYS4DTtoPrgB
qaeIhYe1FxzNVHw37Y2rEIbwFOKs22Pvcp/8nB+PMRx5HQrcm4gDsaviiOGz
qUc25xqcp/OCqw93HwzhaAxuQ2pchfD0qOYaKA/EwQoOQlyFcISDcIlyjy8Q
9yDc4BR8TCywFj/hnRoj5g7FsdcAxRHTR2s5G6ZWal8YWqU+HOACXKdcPqn+
MI1xb0N0f8F5SI3DMLgY54mFDYofrPngRVyt84K/EJ8hnOEvxM04WmP0R2qM
vZbl++9q4vcyBY8s71nwEeInhKln1O9Y6A5CnIMwgQMPVx1OQtbA3O5i9l5Z
KZXn7OzQOjjDC4hLED/hC+Ln5kL3GOK++97YuJvvs2x8i+1xlZWz85zHndpr
o40Vt3I6P3tu6++x9S/b+C/WHmTtV1jH+VYutzWdcRjZ3GCbe97GrrdyCT9P
bWNDbOxVrquY/wwlPz/5j40PtfHXbDxqscOt/Ya1j9n4MGu/znOxtddYOY//
H2t1OfrWfsbq66xcyP+ptLqClRJ5/o7yLPE6JmzPEbbPm9ZOW/s+a79l7Tds
7Q3E8Pt0rK5upbK137G6JnN8nbX1I23927b+NRurYqUsv+Pbxkfb+Ls2frK1
x1h7j7Xft/m6VmrbmgIbH2Xj79j4hzZW30o9Gz/TxsfZ+Ps2voe1VmrY+F6r
G1KsfY6tGc+/edqaT2yssZUmNn6pjU+y8b02/pWNtbDSxsY/s7qplebW/oLa
SktrX2TrJ9r6j2z97/Y877X2bmtfYeOTrf2xtb+zte2sdObnN9jPSkd+9sPq
VlZusvZVtv5+W/+JrT/f2hOs/aG1r7X2FGt/au3rrT3V2p9Z+weLa2/lVost
bePTbPxzmLGxW6z05udgbXy6jX9h4wdt7Ob/NXUnYNvM1R/A73fh9T73PTMv
2bIrW8gakexkTUol2iT7Uki79JJUKNmXRJu0SErZU3jtSylRKVtkiyhLkfzn
85zvfflf1/Ncc+bM+Z3fb2bumTn76f/3nqj+i/ow6sv3FB79/4cmal+PRT36
9N3T51FfPvv6MMJ9sOe5a/9/XM/3X/243fv/AyaKTs9Hffme6XF79v8H6T9m
zv7/YPVM++2+/f/HJqofn76Keu7paagXpN59L/XHD+z/D/G7FQPc/39C3aV+
++H+/1MT1TdQj0jjZngOevwREzVeH0m9++byHPX4w3v8tB7+aA/PVo+ghz/S
w4dOFJ2elfoEWrdelnjb11/SGo/Mb/zirFXPR/0DTx5WbzV9tIaeo57nFyfq
mB6R+gH613dSj8HH3PP+f4+epuvpD+vhY3p43h7+XA9/pYcX6OEv9PDxYjN6
+PM9/NWJGq9Hpz6Euwyqf+UHBrWvfyWcff0ud9UXqx/72X7sURO1rz/mB/vt
Qj3+Sz3+RM9dv710omoFb8DP29b+zf138ya2qp72mJ7mjIk6z7kC61c403um
3z9SjXZ+4f7/ih4+Ncf3HNR8enHu5vqMSqZWN/I7w6ozqobVlcGpQXrsqHg4
dlF0HjrWTam5pVbbsiPNvUq3Panf/npcByl1btRWOqXH35kaJt8b1nF1cebv
8ecPK+b/+8M6rubBNv3at+7/7zG3Xktt1QhYs4eb8PraqI5P6/9/MKyt/PI/
pb6F2ildT3PfRI29Lzno6gw8OFF5xvLPz+3HzpioPL9HJiqnU77xvP3Yx7P/
jcDy/n40rK18rKeS7yX374WJOg+5Pc8mF0dO1w+HNa/84/OGRS9HZ93+XGb1
fB/zu+q3Px7WGO9XPUQ38txNVOy8nI3pw4qVFnP/08BiYC/o4Xai4hkX6vn8
bFhxj2/tr9nMHFugx/9kWLzO6+FZPTyrh+cfVrybuL1v9vQXZr8JD7GwFw0r
xk1c0qLDilESP/fz8BArd1P/27syxxYfVnyTuLqrAotP+ZnvXr6nD6c/sH6s
Tw0rBmePnuZr/TV5rq14lx377ZrDgs/KdXKfPtDU93rhfJf1FtYT9sJ8r/Um
9m3X+3XNQfX9BO+hD1vmEit2UU+7cr77C+YcxY/u1tQ3d7GM0TvWs+M50oN2
r0HJAPoPr93DezT1LbZ/me9wvsv/TO/i1/c0ezUlD9h/Jn2M9Z89fli9bfce
lEyxVM5lK7V92pIlfLuWC58reh5rRK4gI+hZq1/tPk3JIfge0JQ8oLfyPoPq
d7vvoOQQvZf1ut2vKTnE/lW+7f9PJlkpPD/UlLxh/3/p1awfLl765u43qHUv
l3nIMiuH/6/6ca+LXDSn364TucUYa9Yf9doe94bILXqh6omr3+lBTcl1ejdP
SQ9nPXbJR2tkDZc4v8hF09OHWX9e8s5aof9YU3KOPs439tsNIsNcT94Zldyo
lyt6fVwPbkrOwWtG+j/rz2uta4SWDLVO5jJmnay9Se93z+ynmpKj7N9Kxol8
RZ5aLzw/0ZTcpd80uXLxPAvkJj2G9ReeSD9q8M097UajktkOaUp20rf6N/12
s8hss9LLeuNBXUd89IyVAyGuXUy7fe8WPWZfkZ7Ym6BpSn7bNMf0HtZXdsH0
yt50ULLeZuGvn6xexXqWzm5KxntTxuh5rJ/tHT1u68h+t9uOSj48vCl5Tx9t
8uDW4c+Ws0XW88r02d5sULzQ6G27WPpmbz4oeUxv7TcNSmZ8c+jRgfW/PbIp
+RAd2W37jHUM7DzIiTuEz6vSo3uLHv5DP27byKV/7rfbR848oim51Dq+2JTM
acxvXYNRybR3w0UWPaopeVVPcDLsO8P/XsdHJcce05TM+a5cUzR68y6bXuJb
Dkpu3Snw/T3tO/+fjKp3+taDkm/x2GpQcut7AuvtC9abF1984B4w56jk3lXS
53ybHv/VpmRj+8c3JdPqS07O3TU0eOn9rJ/w6ulbvi15zbpGJVf/qd9uNyoZ
Hp2xegv715daT+ETm5LB9DF/uN++Z/Sy/AynVzJZ+/05RzL17pnrUWuM/Pb6
9EXfjhzYlFxt/9SmZO99Mp8ezLP77d+tcVSy99Zqp0V+nt7jHhpWH+0nenjX
UcntZHC9z8ndpzcln+t/Tu7Geyy/w5HZ/2ldo5LDn3R+o5Lnz2hKPh/3Ude7
nQz/3aZkaT3Yn7XeUcnn5Hc93cnCT/e4vUYlw3+jKRleX3c6gS15/7/mHJVM
/q2mZHvjyeZ4k8+/05QMr6/7v53fqOR/sjYcefvMpvQF63ve2kcl89NlfVN8
v+gH+sST8Sd6+kNHJW+T9/WeJ8v/z3pHpTv8IHK+Y3SgvXJ/z40uMO4hr787
Of/86BH6uk+nd49Kd6AfoKUTnBedwpip9PpR6RT0GOPoB4Mef/Co9Iu56YOj
0k3oDfrH0w8ujHz+pX5/1MOzRyWr0xXgyPs/i06hdz19wpY+8b2m9CPXgk6g
hz09YB46/qhk8p9GPjffpdEv9L1ve/jwUekd9Aa4XfqxF0cfwWtWDx8xKn2E
nnHsROkWl0cfsU+fOGGiZHw6x3ETpWdcEf3F/q+ia6BbsIePGpXeQSc4aaL0
AjIIWWfPwKdMlMwzf0//xVHpQeSpkydKvrq6KTlGn3QyC3pyET1Fr+vTvLtG
xROfGcHfNKh+62eE5rBB9aY/fFB6jd7rp3u3hwa8QFfPpv7jc/c0DwfG86Rh
9Zu+oaue43qRn9HVuvTZxhfePNtnLs+suY2b7AffFh+9lr/Zj124K/gzbfV6
1dNz5qzq/6uPLn3zWzmXnw6qd7W+1fP06/n7sHrkPd2PfWRYPaxP7bdnT1RP
3gcG1cP4r4Pqr6qnr/6or2zqvMb08Pr8Lt6vZdGuxoP1hb5hUOPNi98n2+K5
4JSa8/vBv7WnP6yt/qOHtnU+el8+3OMPCf6aft5Hh3We2wWv/+vBbd1j9+Pw
jNPf9MGu5kPzaObSI3daf33erh6l31B//LFh9a/8XFvj4a/tj1+TNT2W6/TD
KTVOz8Fze/gvXdV8Vmd3Zn89Hx9Wv7m/TKkesX9ObzpwN7X6zelDp1/hr7uC
9QdzTN8ytI/1+CPb6s+E34UZu3hT9wt/x9FvrD9Ij39iWH2jngi9vlF7taWL
4/Olto7rKfVEz//LbfXw+M7U6h+jdwwc+A69Pvrr866e7pJ+/8uj0u/Pnlp9
gi7NuI3b0sPxMe7yjD2nK31cH5m7uuopox8IO8HlGfuu4PE8qq31mUv/mivC
R91sevqt/bXdpK359BoZjarm+td7/HGjWsM802odYDaB65qyF1yVa+1+ufZf
beuYPhebxV/3hmnlu1Orf1082+orsO+0sj9cHRrH4PUa0M9izsTLuGtD/2KP
X6mreW2vy9h5ZxWslrz68WwT7BInjAp2Lif08y7d1LmNgkf7VFdrAh/blr3j
VxmvZroa6IOe/yo93fUTxYMtG7xKfp9fD+0tuZ7sIreEx4ltHYP/SlM2RrLa
eV1df/XM2QTU3LhczYAev0VqSduyoahPfXJbthV4dhG1O9XtZEtRQ3gwvews
6girIcxGor7wuLawmsOr9/DJo+KJ/pS2jsHf0xUf9VzZbCZrFKsD3a/5yFHZ
u6zjt8GrY3xnxp42KpvLB6dXzVow20sbPBzbzl2hua8rWE1Ldpq/hP65rtaE
/idd8bd+67oja2YHUs/0xOm1/UvgXbOvxined2eun3VlI3Kt1Jpj32HbOaMt
+5G6lK/ryk4EHtuJ2IjUSr0n/Nlu1Bv8T2xHahc+18NnjmofzMbzQMayR6G/
NnUOHwjNNdmfk62xbFBnjGrea8NHfcPxnH8Lnq1InTs17tS6ezQ8r2/qvFaI
/erhwM/mnNXWe1VT90Md4XW6qrXHnnJbV7xWjJ3qofBU34y9a6ce/4aubGHq
pN3QlC0GfFx4WM9pbdn48L+xp/nmqMazral/tXNP8+1R2cuOnqvqZYHZzeYL
Ho5dTc0strUnAu8ce9rTeUbYz57J2Fc3ZTdTnwSfJ8OffU3dJPVv0BmrthLb
3b9C843Q75Tjz4Q/2Hxsd/7VHro09j3w42rLdPXM/iPzPBeeMwOb/+Ku1jVZ
I2Wi6vMYe/ao+JsLj/8GZgMEP5E5zceWeM6oYGMnwse6nu7q/fKb0Kntoq4L
+6B6Cmop7JRr/a4cZ09kS7S1v4Q80aZssGp3OKaux2LZsjnid2lXx9VjGN8b
NaK+NypeS4RerY+3zF12xmnDl+2WU4N3v9STcS5sv+Ale/wPRkX3lqyd3VI9
iHNHBc+eu+yd82Q97J7qSxwe+nlCg3ZGYPZQOf4XxF46DJ4tVK2S7Xt4n7bs
oni5DvBLZC41LA4LzUTWxi7KlnJ+bCr22Uh3aAuG/0XqDbC7LDiqWgU/6eEN
uqpHwPYKb4vux6Oyq7KXft27valj1jtv1szGO1/4sOt2uT5y3eXGy4tnywWz
YbL5GusasM8a+0Bo0bH3WreceTzYhBfK+uEWDJ8HmoLv6+F927Itj3OhbeeP
HVi+8/1zV261c2Efvjv78qzvbWpePI1BL58V7wXC37hFch2W6Nfzn2Hlx92T
PO27s108NOePCp53RtmX5dLKTfQv31bO4n6xaS+RcYuFXo6xnOEp2bILswn/
dFSwPGR2b3zm6+GLh5WfLJd4+ab2X51xS4V+YfJM8HKM5R7LO75kWLDc49f2
Yy8dVj7pIj39NYFf2cNzhpVb6rhc5XH+8HLht2FX9n33aZxj7Pjlw8o9lp+8
aH/82mHlpV42LBo5yas1tQ+/YlNrMpd85hXDb82meMktXaznc11gefYrh/aX
w8qd3rCH1+7prxhW7uotPXx94HWaopPHunjP5+bA8ublWMud9/tYI7j9yZ7D
yod1DH952d8N3piNu8q15g+4s+d/S+i/Fx8BXj+ki2R/166up5xMPgh5spvM
qNxGsHzHGbMqJ/fg/E7Wym9jnJvtNyVXDg/5dn4f8pzlON/aVh6n4/wJ6+T3
s1tods92ncC7dOUfMd9tTf1O1s3vw+/K73G3rn4Pckc/zN83rPxPuXtyQuX2
7dHV/bW/V1f3SC6o++AevaGn2aereyEv9Ep5xF3lI4PlJstpfw+Zd1g5pe9q
6/5tgCZ49HID8ThzRuUYopWfZx3r57g8eTnK6gBc24+9cVj77rnc2ANmVH4f
WM6fXELnBPebps5RfrSce1v8XOv1ct7us/xYubHmltOKx/5dzWX/jU35kLbO
tZZz6z6cHPiUGTU3PvIU2T7ZUtlFXxP/Pti5bpvz3ayrayTvVt6dfMgbvFf6
3/Pzw8qpPCV482zTr+HFYeUX/Lqt38f2GfPW8Hg+8Auua1PvN3yW8n0fVo7e
b8n+beXZ3RYecvI2aWpeNLfn+IvJtZKL9dp56l9+EdzSZIlh5WT9vq0xcrve
F5r399stm6KRa/OqUa0fLPZdDsNx/fZPbeXQyJmwbnM5jz+Q/3Ns86bW/47w
3Tnz3NLWb13O86t7/v/L9flLW/kWYufN8d7MuV1TNOLk726LTuz9VaG5ut/e
1daajL83x69JjLb47Gf67Vt7Pi8Nyx+9zKhgPO9ra4z46r9mK8b26ow1j/Fi
ap9OHC54efET5JZRxd9Oxrr1253ERvT4KaOKI32gLb67ZwwaPP4WnFjIO3Mf
5DYt34+bmrE7NwXvE757Z56H2hovDvORbMXKLTeqea3nqNAfLb6lx00Ln0fb
GiPW7vFsxVIdMKw4ql/08F+HFTcnXs5WHJ3Yy/c2xUf81fv8fvr9gzLOeDFY
b+oqpuojw/oXVyVG6+jEaVnXE23N7djv2XiHFZO1eVcxXngenzit47JFI2br
P035FPkTH2/KP7pWbJJgNkZ2SL5evjM+tI+H5pGmYHg+SXz4NJ9syqdqLBv2
p8OfD5OflU17y65o+Fv/1RQevGtTc7F5PtvUWPSbdiWv+J3/tym/rLkWacsv
xSfFf8h/yS/5UlMwP+bUtnyW8LvmHrj+/Ip8jXyFfIZ8h/yAfHeT8QGD8u/x
F27EXtoWPb/ksC08+nnaGotP29ZY9Hyenw39vG359vDk3wPzwS3els+Mv4yv
DMxHxrf2heD55Y7MOS7UFsyXx8f7mZzjUm352Izl3/t8aOZvCzbXcm29k/m2
Xt2Wn4yPjB/sqOD56L4U/NeHZWNlN+TX8g7felDP4z15/viL+I22id+J72rb
+J34kPgdVm0Lj2aHruykX/Mbass/gWad+IX4lXYPzG68Rlt88GRjZgPnD+c/
OmFYdmb+ja9m7C9GRbNXbM8nhA+b9ImhZ8c9ZVg224/3/D8We7RYH7bmmwZl
H0bD3jynKRsx+zA7MZht+dNt2XNPH5Zd9rTwZDM31wWxPcOzFb+5P+9tu5pr
+67sv8bOYfuNTDC7Ldux6/P5tuy5Z+Q+uB93xy575rBsqmy2Z/XwrKllI0TD
rrtnxp0be+1ZGcu2+o2M3bErG+s3h2WbxZPdV3yUPu1sm8e0Zd+0//OMZbMV
96TfNhspO+i3Q6+fMrsle+ZoVtnxxKNu3lZ/QbY4MapnB6/HKBq2R/ZFePZG
9n734uZB2f+MZQPU54Tdh61GzyY2LzYoveHY6QaxZYHFPg1n1XrEXLFZod8t
Nh98xDLpncEuwybDNgNmF1Jrmt3w8uji7Czil9QnZ+M4OrYFNGwR72+qRjBb
yYldbdkZTu9K/6ULn9KVHYA+zqaBD11/77Zqs07GaQ1Ll6YX79xVfU/j1XKE
p6uqz0dfpauuFF1j7eh8dEX66Hu6qrdFN3t3V/Xa6JbqtKGhS36jh8+KzkkH
ujR8vuP+Rq+jV+G/VuRoehldTG2uybil6IJgOis92NroxStEjzP2i23Z+v3e
VomORv/avasaQORyehL9iD61evQp8OuiN9G/9BNwL9isbo5+RCZfNzoRvem8
nuZHbekD55AHoueQ368In/d3VZcKnj5kLBn5A13Viroy9L8If3Wl6DmbRL8B
01/27KpWEZ3hUn6AtuCLXL+2zutn/faCtvSlD3ZV5whMd7ws12HvrmoP0Td+
0tOe35YO86G2aieBP9xW/SPvin27qm1ED/kleTjwL3r48rb4vKmtZ48dfOW2
3tXe4Qd0VTuJbnCzbWA6BL3iwMjydAN1bNRNgqdrkBPlWpLpyP5q7IzldLVQ
bojs/evg14suiedv2pLd1Vghp6ubQealX+BDtzioKx0ADZn8tvD8XVuyuxoZ
5Gs57GRhsvHvwudjXcnl6iyQvdGQ2T/RlfwtX/2PbcnW4D+3Je/KT6Zf3Bme
B3elM5iLrA1/XPSA34Xnp7qSuY29oedxfXQzMvYfQ39PW3K2HFfyr/xE8u+h
XcV0ykUk/8o78z0lV9+Va3tIV7K1sWTjv2Tsg23JwXLPyL++xeTZ+9uSv/E8
vCvZV37Rw23JuODZXcm1xpJn5W6QJcnG94XPEV3JuHJIDoxcKqb/H23JmuAD
2soJIduSYx8YviyTgsm9d7TRi/yG2pJN/9bDizTlN/WtXLArP6zv7Hpt+Z1n
9/DCTcG+14+1JWdbzytD79u6dFd8HuzhReNX9Z3lWwXzky7ZlA/S926xpvyg
vonLd+WL9L1bsSsa39Cl4ov0jRv7I/ki2aOezHuP7UJ9uUkbWnyavq3iM/+R
98P60Zf3iO3iycDqoT2V3zlbllpne8Y+8++8u9iRns47ga1JLbJ9ZpT9Sp20
vWaUXQvN3rF3wXtvbxCd95TYmoz1/mQj+vf4GWyqBppnmQ1KbbR9Y2t6Nu9G
9itr895eJ/TejR/qqm6a3/lGmevUHv++6DLHzKx6OC/kedw0OvWNbBLB/7eH
l+nqXvBHbx293nP35uinxyWflz7oN7999M3Jd0506lV6+C2hP76Htw2fXXr4
baGfM0/VTvlvntl3hOez81S+J/3Oc+e3Rqb0e+ODFxshnvuE4MUpvSfn6Hf+
7uiSO8+sGlDP5x11RsaKo9gpNJ6pd2WuFWaWzCmW4qZB/ZbJi37P4jXgz4qs
Ci/uYqFehll4Vvm+1Zdnm+d38Jsl//ndPtOW3Camnb+X31d8+Wpd+WL5Xvm9
0ZDTfPfZOckA/LRoyFf8gfyafIJf6cqfxVc4JzzJZmvFlzf244HJY3dkLN8m
n6SxZDM+NH41seBvacvPJd6bfMQfQ0Z6Mr6lsc8KTL5apikfhphvshGY7LRc
Uz4GPpC351zEUrPZs/uz+T+WefnOyE/oyWB8Z9ZAfuALQE+Omq+tmE+5Nn77
nk92Zs+WZ48t13cc7Bn0ffccegZ99z2rnlPPJTybs+84Pp5xz5bnjb3Xs+iZ
ZLO9ObBn0/OKDxuyZ4vO6/nyLfRNZMvyfcfHM/t88J4v3yrfLParFwJ71nyf
fKfYhf4X2PPimfCt9Bx5bnwfPTt3BGan4itzj/jEfId8j9h5/JaXy+/Z87Rs
nqmXQuO58x2CZyO6PXOxX/n2LBe7yjY5R3ZF36flY6vxrl8hNhY5YmLa5ZHt
0lT8+RTfhcDwH2wqXr3/aQ8eDSyPTJy5+HMhBmLIxTNPp2M2FX8OL9Z9xYyV
p7Zyxu7ZVMw5+idCLx9NfplYbjllcsdWCV4sN7y0c7HiYsj7n9VkHpl49evZ
kJqKUdf6Qv4aGjlT+zYVW47+ucBy2Z5vKobcXPLgXhf8U1kbnuLM4WcMKgZ+
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
A3j16Il8Hl8Nnt+CXkZH489Q74bdT22TyZj8YcXMi9Gj74gHpoN8oq04ezH2
j4aGLibWHv7s3CP3gu78zYwVoyc3X878OHfePjs5f4RaGfwL3+sKVtdCfJf1
yCd4JOPFI7GL35Cx4oPECY1t5GB29Z3ayuMje4sxFvPHVnxFW7HI4oR/GZr9
xOQ0FZe7X+R2sBw4Mbfi8MjnYnnF9G4U+f/m8L8msb77z6g4GXle60ZWN1Yu
n9hg+Ek5vKn55NfJO/9jUzqdmEuxl/J+nkoc5pyZFbsphlM+zJOJ87xiZsV3
gskVw/CR+y4nVJ9U8cBHt1Wb5SNTS4+4M3j1JNFsNKO28PSLvyde9ISZVc/F
2IOm1u+Nb+z4zPOnrFk/aHnRcpbFdekzPs6lvit42z8HZpN3L9jYxZ/rL87m
L8d7Mtd7IrnRTdXeVIdSX2m50o6h/2vqc072m55RuLvDZ5I29GLlzWtdcp0n
+1nPKL7ge0L/YPiIi5+EJyoX+4HAcr3/mvXbB4ufF+fmOrj2cm/1LN54RsXi
39+8PM/9mfffbb0ryIpoHwq9+PWHck38OyYnWA6Qd/ifYtPzruZzls8ldura
+AXAZFSyq1grNT/le6kHKv+LHPpY5n2xrdqX7Pbk18dDYyt2ig+CLAp2/D9t
8TGXPDO1PuWLkS+fDAz/eMY+3xYNWA1wNHwB5FixUMbJI+Mj52uQW6Y2qJyy
V+XY6yOXooH7b1t1QtHLPwOvE7lUDBYZWP7Zszkvcz6VeR17NvQvtDUXPNxz
oXetHsk54uP6yIOTJyfvjp/C9vnA/2urNiiYrCzP7Q3xa6AhY/v/T/j45qLh
SyI/i+sy7qW2vsXw5nohfMjT8uJ8o+XGgfk48Hgx9HCEVXiyLtg4wumU4MnV
4r0ma4d2VRuUb8K+XDt5drbTgpcDNzWw6/yvXHN4Y+XHTe2qHig/iDy7uQOT
9ecKjdy7uYK3/imZizyPHi0afOTikd3nCSw/D8wXQ16Xv7dhZH7xXmindVUP
FI3cPjR8H7ajwOR8MB7y/OT7/Tb06pNulLkmwn96V3hjyZniw+gF/tvQ23bh
M1dXNUbB8vbUBpXHR7YXn0pfmLuruqJs/vblFsortJ0vePmF8wamMyzUvlxf
1Fj5gDO64s83JE9wgcD0k/lDYw3zB+98Z2Uuugl6tAvn3UFWkZtoLn4iusBk
fJj70FW90d/HlyS+zbrQw8ttdH9m5vrL6xTHxtc2s6uapGD5kuLS+JXoM/bl
SMqVXCQ04MWCp+PgQ9+RW7l4xtpfJPPSL/DEb6KrmqeTcW7DqlW6xaD0n1cH
HnaF56uSd7l0YPRLBXYNFs75yq00lg/LtUAjT9N6lgyMZtnI1XQl8XPmHHWF
NxaPZQKzJ8sJZHP2Ll8+73O5z/qMyn9uuqpVCk9fkoe/1aC24uT4znwLVghe
DqWcTH4lOhoa4+R9qn+69aB0uZUDw78mfODEz/Fh0UHAaNuuxqKRe7RyaLqu
aqGC6WNyRLcZVJ6oOqfbDgon9o5Pjb4GRkt3WiM0ckPBfHO2awamdzmXN3su
uqpzenfWsErmoruhH9dcXTVz4fm6jJWHqmbpdoPit3auz3xd1UIFu26vD40e
AXJZ740vT0wePdH/OqGhJ+JjjXJX39BWzovteoH5MsD7Zty64al24hv7/xsH
Fc+vJp16dNb4hvC/PHhxI7YbBBZLAjbumK7q0Y1rzoHJyeJ85HbK6xT7IwZo
jNsofGZ1dY9cK+M2yVg9pNSkE3ck1mjTwGJ/0IgbmhO8unNijTYMT3mfxsov
IOs7Rzm24oLkr4n5sX1TYPmdcj7F3nw59dzGtdPAjFzqq6mhJm5HTXuwWCAx
POq7ic9Rl0xOqXgbuG2CVyNuy/C5J/Tqm6EVfyP2RowPesflH0zmIQwrr3Tb
0KhZBE9WlLco/kbsjfzF7QLTP+RFjHUQNHQZcSzqEKlBtF5XsFgUNZB2CE95
nPI5ybDigKxNjTV1bODld6gtZi76y0IZK17F8XdkrLiVd2T96gyoOaCegNxI
uZNkePI8mGyvVsyOgcVhuS/isOgudCT6i1olO/f/H55ReYtqfdBl4N4dPD1J
bRT6EX3GsfWDx0e9FHmJ6DfPGsyrXr26IXiqmTJpC20r74ycRkYkA/pXL5U8
+c/gyWny2pwjfcc49RfUSXAOk/mS0ypGxVjxKvQhNONaDe8N7Nn0zHtP+Fen
WL75rsF7Ztl3dg18q7zCrnLWPK+75RlXG3n3wPLE98gzflRXudxqex6dfO2L
8nygGddQ/ajnYlB6FRp6GZ8e3x59Qh6xGltipfg08eTflBdMD7kvOhd44egf
xi6ROCtj1e+SU6yOz7zJn5W3xiflPrjHdFm+O3opnfS2wFdH15Q3SAd0PQ/M
9Z/8rbWld9LLxTXuFf2CvZveIf7KvEtEl5VPSIflq9o/v0/xhsbS7+Vt7Z57
IZfc9blpULn3H8t1k2slFwuOjYENQr3XT7VVc5X9Ae3HMxaPjwWW+/+p0Nja
H9s2Ph283H98Fujhz7ZV63XLHn5LV7VhwZ8MH/Vd1XyFV//W9tDQqAUAdlwN
WfVcP9njj2gL/tSU4m2Oce3Z2Rn72cB4sCV8OM/g27qqE2usOrFH5Dd2VVc1
B9SPbWYVjTq0tp8L/ezMhb8aBUcEb2tf3YHPBYZXN0C9141S61UeOJuP7RcC
HxnYb/udXdVT9RtuZxUs9832qODZH9QmUJfA9ujg8cCXfejqrujVZVXfVX3Y
30+tPi/o5codFT7GfqUtGjGu6omq+3dLarSKVZVXx4YE9r1Da4xvqHjYYzMW
Dux7d1JbfG5NnVV1UPeZVv5k9VL3Tb3W49vK0bM9LvgTggcfm7nwh3NMnVV2
Kt8O34vJ+qWZ68y28vq9/8Wonhy842Cxq+qSqgW62vS6bkfmXsCd2lben7hX
dSdXT13Qr7WV92drX9zpaaFfPfVB4U+YXjjHxC2ckbEnBn9K6OEcuzffrzNC
43sqR5GtxXl8I+cy3veOUuvgzOAXDqzu3Ym5DuQBdhg2HTYTthz5fj9JzUAw
+9C32qp1wFazRPbH9e2+Fbx6CN8MzA6DHi2cY2Pcd0Kjrpq6A76f6qad3VYd
NlvHVst3FY1vKNsMW8+4xhqYDUedNfXWfO/UN/t+8OeEj7FfC/4jM4r2h6GB
+0Hgn7ZVf0AsxPdCg7d6aD8NXr0ENk32zHPb2t8kdiSwumrsjz9uqyab+m9g
MRu25wdWyw3P05PjLAfS+994fA9OjAd6/NYO3lxwPwkfPnprxk/OpdxLOLUN
5EDyuath9vO26pih/VnORQ03eDEeV7VVX+VDMyovU96mWAz13S5uq9aanEs5
nNcGp4aDuA50ajiYRy24i4OHuyj8jUH/xqzlwuDhLg29Wm6XtVXPjWzDRjy2
B4PJP5O1LNqSeeR3OkexIdflnPFg43SP3BN15H6V88L78lwTtekuC0w2cv7q
uqE1hp15TmBj1ZJzTH05Nd+uCt633HXDQy6n2gLqeal1QLYjvzk+J/S+L2zW
6t+pGXddW3Xk1Nm7LvS21wdWo+7GturU4YfvjZEB7VuXffSbhVadCjbz60OP
zxY5Bk9WRIO32m7qRYgP2aSrenHiTNR7uzW/YbQ3ZyxZRVwLuWX9wOzu8mrx
2SHjfh0+4/pxasdN1rRoX87VtW8esS3wcGz2k7U2evjArsZam/gIcRKusfiU
yToXZNeu6rOJ06DPqy+nHt1HuoLFadj+PvCVuRfuG9wdwasfxy6gHpq6F+JU
Vkmer33HxX2gvz20fwgNW8KdgcWkGGvc7ZnDuj7eVb048S1qxoHVsrP2u7N+
ucNgteT8O3ZCas39OWPFs4D/kOv9u1wfsSpiVvBwzJjxPHdlrJpzfp/iTPSU
vzew3ytY/Trz35P1kLfITFtMqXH3h56thc2Fn1OdOXU2xFGoLWdfLTv5y/Bw
t/S0/+zhvw2qH7Q6cmJUbB8KrM+vGnHiTMSniGW5NzweDH/76NWe82+8WnZw
D4eP973vh3e++A5jrQXvR8NfHTg1OsSf0N/sq0fn+GOhIWejcVx8ipgVuBu7
6uvgfMTCoJeH7d94te32zXzvjgzPb3RQZHK+pY+G9z+yBn0Z/tWWvmNrXxwm
WzifAXs2WUz9AvKYWM2nQ69WAfy3sjbj1UnwLdS/jL9JLA3/Bx+EGBV+gnG+
Ax8D27t6lM+6djPKT4KezfLOrvj4bvJFoF8svJ8Nfz4HPPkXxMOw9dMf2dTZ
69nbxauwubOfi3WBH+cgOEe+AL4F/gZ+A3oQf5g6gOz0xrKxi71BwzZOVzUX
PwUbOTs7+zabN1v8ZL+uUeHZ1cXAwLPP6//7eK6/OBa2dTZzdnEwW7dYFHZk
9mE2XXZntmSxK2zW7NXsxGjYeMWfsBezA4snYZNlaxUHwmbKXspmxtbGrsXm
jQ87t5gT9l+2ULZeMPsr2zOe7MDiYayB3ZvtFn/2WPZR/NlN2SnZNNkkxZaw
LY7j/+HHcf6eXzZSNlq2WnZUMRtsdux17JHGsk+Kb0HDZitmw/rZCdm32LnY
BtkL2SvZHsVvwLN9iSeBZ8P8TFfvB88yW6C52PwW66qfCF2eT4CPge9A/5JX
dBWHPDuwvknzd9V/RQyzWOUFA/+pqz4pL4ZmwYwVg4Qnmzke8wevx8lCPbzq
lNJ1jWVPs10oMBujucy/QMbOznOqzo5nbYmu+qCwydGRlwi8aPA39DSL5BzB
tot1L9vwFsu5i4dm91CTZ7Iuj/OZknjsrt4Jxi4S+lPD95RBzWNeujn7iXfu
krGjLB1bivcG2Dx041f18Cf67Q8CqzOjF8qruzrOBqIGDZ33VcGjoVupmUIX
s79sVzxsl+sqllss+HKhN26ZwGzy6go5/puu+qOs0FUPlWUz1rjlA6sr5Pim
U4v+NV3VcqFnrtyVLVSsuPpEFwa3UvC29q+KPZXtla11s8DsrHpnrNpV3PKt
2T9zWvEyl/kdh5d3Cbdi1kC3XDV49hW2HrqMOjGuj+N02NUDs7mymbKXqgHD
3srWqjYMG+u1qdGH5rbwXj1rYytFQwdEv1ZgfRXW7ioeg+0WzzuDe33w6wae
KzqpsfRTuHVCw6YKHteDWTf07KnsqnIE1Zl/Y1d2UTo1myl7qfw/NG3st/B0
bbUK3YP1plWtGWMPTW9Qtlc6qTr0G4Sn4+sHpnOCjbPOdbM2Nlj0jrPNTtYi
j+6oLvdG0QfB9ER1U9RFPTVxF2yyjsNtErytfXIsG52ay+w/7Jfqw7KXbtFV
PVb+cbZO+3sPStY1no7GRqcWLXsdm6jemWiXC72xW4UPvK199ld1LtW7ZC/a
pqsamDfGFgdW74itjg2UDdU+uvE7YJvQvyV8Ts+4NwfPVubYDyPTbZe52EfR
mOeLXeHJfbtlLrZW/N4S+rny29LT40td1SllTxPrwU7KRsoOxnbGFqeWKZiN
C+0Ogd2fjXO/1OTUb+lH6bv0jq5sa2xc6m+yU7Fr2RfL5Dg6tlnH4dmm2NTe
ETz77o7Bvy3zsu/t1FVforNTkxP83akVJ8Juy2bLhgpmr2DrdV5sKuy7bMTj
vFswWzH74ltzXmokvrcrey/e5mNb+1bmNq96iu8PDdr3BfbuALN7rBY+6tCz
1X69q3pZ+oiBxWWJW1GHke2C3QN8ZWwP7A5sArZqKY5rKtpnN1DbkM5JN1Rb
ko2DTUDuxe6B4cD0e3kAH8xY+jvbAV1enofajnvHfmIMOwDcHsHb2h/bDdgI
6OmTOQFd6eBwajvS4+H26V7W0+1fH/1bXTV6NJ0XTP+lj6u5dmP0ePt0Yfzw
ZVtwfP+MlUeyd/D7ZeyHYgtyHV8Xvdz1oSPbul50UnUX6aV0LjWlDgqsFiKd
ky5JZ0VDt+WTOSDXmR6Khk5sawwdVj1GOiT90Tg86cJqQX2se1nHBNMp1aw6
OHOp2Ui33CU10sF0VbWpPhE8HVkdRnqheol0vzmpzegYXU+9q08FpnfC0x/Z
SNyDDaMjGks3VbNKfcZnU6fxM4HVtTqke1nHBP8p+q/13BEdET2909Z4er26
i/TDsW4InqxhPqpajfQyOHR0OrjDgre1T0dUm5F8f0x0PTCd7GaxGj18y6Bw
6O6PrmY8nVLdpiMydk6/PTLPHdizZ7waEPD42X4hNL7v/Ky+3d4H3o/eOWz+
fFTnxW/iPesdyz+AxvvTexfee5vtV105tuU9M9a77aTwZ7Nl5+afZldnl+b3
4hfYK7B3pjoSX8h6Nw49e7v3hN+594bcOnOxP+thc6prN3f5XL/aVS1f/8f6
PagX0RVevTj1yWbnft3eVS+i47vKtTuhq35D13XVf+ikrnBq/qpl51uub5N5
bs8xeGPwWHrul2sEv5i1HJd59f7B721zVy7fyV3hru+3p3VVv8729MB8cvYP
D40eQs6Tz0+tYTyclx5UztP73di5wxvNkjmXkwN/Pr8H/RzpwuzLdOSvB+/3
8P3gJ/uGD6sOoXzGPftjZ3bV01vftye78nfAndWlD2RXPSlPi0+N/5KOolaI
Y3io3XxuD0+dnv6QXek++vx9q6uYB9tvB/Z7wBOPSVzwk73+urItHJQxB/bb
mzIW7s9d9fk7u6vaJd/tql40X4+4YfI4nL6A4iLEQ5wTWr36vu96Tqu+euB1
s/1B4Lu76rN4bnA/DL6bVXNOTKv6KY7hZz3fzVzkePSOuw70QPqbuIcfdXWd
bCd73aUWynk5rs71j3t49357r99EV3UdwXrROWZtP8pYx38Smvu76iH3065q
ZNteL3Foouh2C80FXcVF2P4sMBkdH7RiI+DFQugJ9/MeXm6u6pUFVp/kkjxH
S+a3f3GeL/EQF3Y1Thy2fmlj3EUZSwdyj+hBkoEuCR/PwWX5/Z+a58JzhPcl
ee4uC95zZC0Xhqd818uCV2fz8h7eNj2nwJ8Nzj6ZX++XX3ZlP6dLXBEax8Hk
fMfR6QvD/v6r0NteGTwZis/yksiBfLFkxYkZNX7mjLKto8fDszgnzyN/K3rv
Uj5NfMhlR4bGMy024Kb85l2H63KtTg7s2tNn6cne597tfMNkQLhrg/fc3JRn
yvW7PteK3YCdjv3QP1ui/rCnhcZ9UIcfnm1hzJc+Dndj8H4rF+R3Z56bMxeb
3B1d2fHo/+wA7K7mArMD2N4a+IrcI/eCnk0f16uUnkvfhvPu9X48Nv/ek/r0
qZmPni6sJjy89/OvMxb+toyFXyrzWpea8L4X3vne92A97KydzdG71HsV7Jzm
mVXH4J3b73v4uzMKr3+SfTbSm3MPJ2ZVf9w/dPVt8Y0Zz3N75v1jV+8K70zv
C/tsQcb+MXj7eKw2pfKtxBCye5+ad7j3s/ei95F30XcDe2d5l3mn6Rvr/XF3
cOwM8N4nj/TbR/N7U5PfO2eN9MG8N/D5gX8cfndnrPeN98/J6WXpXXNS3mfG
r5kelPd1L79/0Bj3pv58/tqVbd//34LTS/eBruIxxF08GPgToflktg8Ffjgw
Hr4Zj+Rc4Bwj2yyQueZPDMbDof9r5gJvlLEbTq1r55r+IX1yXR/Hbe2Tc8Qo
/N29zPbxrr4L4g30vnXc9+bvwfPbPxY+aNGQnfRV/UdXPVJtnwz8RHjiI9bA
d9o32nEw29c+GbP3tIqB+KfncFr1PQW/lO2/AusJ+kxXPUJtnw3MF6+HIh6r
5diq02scPHnPdXIvyI3PZSzaf/fb/3TVz/OE7B+fnqrPhQYtmDz5dNZjrjmh
N/b58DkhMQzPB4YDsxf9t6vet74jbDov9PAb0w/XsfVic3sx8Hyzqifu/7qy
qdmeNa1saZI3zwzNS131uZg1q/jMTK/blzKOXWBKv3/elMI5xia2QL+df1Yd
0+t56qyi9Z6YJ+8Euv30Hj4n/Y7nmlW4qRnj26FutPrR09Mvelr4iInyDvEe
WDhjxdh43+DvXURXnBHYcXNcErvC3JlrgaxNjJA1oeffZ3+4K+8N7xhz6eXt
nF7R/x8ypa6H/hyuiXfSRN5p8rbg3QvXjZzkfpinyVzW02bNjs8KH89XF1gN
jVGuJxtLm/Wz4TS5Pi+Engzm+qN3v6xtVuZl65s3+Cm5L9Zvu0DW84rgwVtn
f6vc0/nyO3ENJnLNp2bslPyO5gt/dPb1WZ6ee/fRqbVdMPCCwTv3TbPPljtX
6oQb9385yTcT
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1:eJzsu3k0lfHDt4soSkiSIkklijTSQB8pNBElKRpISIVEJCQVJUMJlalCigZl
KJnJHPZonrY93XujUaWQzv3++Zy/nrWe9b7nd87xl7Uud3vfbft7+Vx7LYsc
PfadFBMREVGSExGZQn696fwj77zDEOxuZH8ozOfgs3rGcOqrRgQZv9y95OQQ
BhVnpM5+yYGF0f6CioxGMJu2nWe6DsG4Svz62XQO2NwDbv0pjQgdKa+8dmYI
9JNnptcmcrDqlnqtyL1GcKet/v1g/RBq72X9jFbhwlRwbesO6SZA7luA4OMg
2FO/1Z5W4KFgPnX3v09NOLfg3MBH7UE4m40fDmnkYXPT0bCwoWYMjV+x/+g4
gHrzoOvzjvOhcWLaOTdxKmpCyxheS4U4LJgX3b6EwB2Fn9Ssz1SEnnF53pFC
wPfguwvHQggcUHP9stWQjovKjlGlM/nQy5m2gFJFwOVhz775VQw4pO+S4Kzg
YseLlMeODQQCNurzF8i14sOMP9Eyq9hY8vHLVbdkAluVIvIYizsQFONfO9eI
hbqDhMeCPQQMTj1qc3zcDe7DjrBToj3YTbk/0Z7Px5qpm0LknVkgNFYlh1Z2
gCby0DaXxYNTq8AgIYWN8mEbc+OWVpRJ5Eq0M7l40d3mLOjhwnI7+zbXn4ln
+55fPW3FgcLWa6VPuXxYFt/Tu5RER7RbhPeGm/2Yc6dR8o+7AIfni35onkbD
qrCEK/cX90HXzP/V6VdCKMTl+YQuo2KXdFb/yWWd0O+busBxWAjDvPh4q7MU
jJb7xm7e3IIIBQmlvnoh5GTUmR6dFFTeSaDvYFHRoGytu0tKiN37r3OPcqmw
/XGj/TOjHvvC+yoX9BNYZ6jsc4VBR/McyzTPgUqMb57ZHrWWD+bBzFIdNhNn
Sx76NrNLkGegudusnYtXT5Qkblq0Y5fEOjk19RKssXtz+8VxDm5E2JtzC7tQ
Y+Lw7JxDMV6knmuZJezHtx3FBskreqGXPfBCsb0InH9Rzyx7WJP8/6c8ZeO9
R21HhjC6rb1xdSkHfIcAR9u3jeAX5ycbuQxBhxMSrvaMA6de8vCkNiJg30yG
8tkh/Akar3NK4EDsPXtFaVwj6gSd+UnnhhAsOL6yJZoD+V0XlNUiGvEicc7X
byuHEEKkT9fW5mLTSgnry/Ob0JpyWyuzdhDntTXTHVR5SChRPTxrpAntGzib
zTQGobKnJ8qExkPin42z8n42w/j8sYrifQNwjlXiME/z8VnKQ/WdLBVeLeff
KysIIVN9+NI/TQJUYtnJ63+paN1yzPdsNAHnqMY2uVACF4o3ivrtouPWtIXB
qRM8bKjdxhojfbXocdrN8FYGSvOvqd6Zw8X++k0V6aSvKsVPJx1e0QqtA0Yx
RipshKwzXXYtgUBSneKxA6YdMHirVd6nywJzXkl3limB6bY/psrWdeOVbOjH
K53dqNnGOmKZzcd9v33R2wJZkD/P2p2d0oEI3TsDDUwezjEyohnv2WicPSWE
XtiK3HtSK9s+cFH1oiv/xQ8uZj13viXqyMTvJOOeU1s5mPu0z05xlI+GWhuW
yHU6NsdTz8040w+b/Cl/rl4RYNnbS48CxqjQHxyfEdjTi9HV1dfW5wgx7/eb
ZJoyFfIaU9zruR24pa4WP/ZLCCUXrl+BNwVsm9EpCV+Y+FOzgtlcLMTeWF/j
0X4KrPYXzTC4S4XiHuHKsTEB7g3lHp0vQYOPmUzKj6P12BXlp1BAvn61d2fd
ZH2ngx6z5Mp+/0qkS+8/fVCJD/nqtU0/9FpwT/FAznJqCZ47fDj1LZcLba/k
BJlH7fh+8M6ttXIlsOFXC4oMOXi1+dQiZ6luqEUl0VdaFmPeY9vh07WTvprk
/5UnP1fN3Xx4CBKjH/2f1XCwK3Fb0MzSRhRtS6w64jyEOrNd19ZlkbvL3t1s
SXojPnjv/WdI+spxS9YTBdJX4kzn1T6kryisgEcS54fwLG96c2gEB0s/Jtsu
uNmIr44rp3SoDiFb7fHgoBUXLMWNrX0GTTDWX+HxuXgQa5ozh8L1eaj5xlsx
NrMZzx+nlVDnDkL8elZJaxcP4xGSUrLTKVhVN3pm8YYB7JsjP2P7ZT7q7hcN
uKtTod3kPUXllwBxKiGHV64iEEnREurPpWFYtF5+nw+BjXIPNawiCNTbRMm1
HKej7oZozwweD+H9ha/MqgnI/6Xuq/rJQMTC05n1wxwY/IlnSH4kINWjoHXX
uhXLk+y91Cf64Xx9u75yPIE5n5JkKP4d2JbZyFo3l4X2WSMtDlsILFBsOMgS
64GFTDjLJ6MbW9J+VsZk8PHscYz4riQWGAotr43dO5A5nWWQV8VDhKPU68Re
NhZ2u1vMv9cKl9O7iZ4XXPh+swz3mM2DsXzNKQcjJjQ37jhWv4KDP6WNN2bM
JffdvErauAsdssIN6eNm/ZgvWp/ifl+AiotJZ42HqHhFn/2hLbQXtC26S7hv
hUhc2EA/NJMKpVUZBy/EkM9fxnB3HxPCbTjykcslCmZbh1SaP2ei981Rhtgb
IU7uHqEVD1Dwb5rC3/cbqbhheMPi+pAAfrEf3qitoKFfe2qQXFsdRrvD/xam
ETDN/yi+by4DNkI5XcXfFXjkcTXy/W8ebL/5+VjHtiB96y3FtKIS+Okb2Q/d
4uLso2Tn9j/t8P1iXOozXoy1h1thNJeDnbmfeD3HuvFrZZdwhWEx0sr8k+xT
J301yf8rT1qQUf3QZgizX5dpLqRw8II5PaGyuhGqxzXr9ElfvRR03I8kfVXi
kOrsQ/qqtMgz7yjZfZHdrB1qSRxwDAOl95HdJ+935Z7UviEYWGnmsjo4eP1O
a0kUpRFHJdu7yycGYetv5KqbzIX/h+KRU1eaIHe1rbk0fRB2p6+VG3vyEKN7
ofHx1mb8PlG2GmMDsAuT3vP2Kw/MrSzT7WsoKNwQHXxk9gAunJbVV0/gQ8fB
6/5eAyqq1nttXdoowNQ+l2ebNhHgnli9bflmGqqW3QpKtCSQVyX6QDmOwMTn
ulGzYDrUvBYWz63gobRuy5oc0ldOQc9Xpi9iInQqMeUK6eugAa2xKNJXr+xP
lLbcasWZxJm6NS39EFc/b7PmNrnTAmJdF1V0IPuZ7vutQ30IE0lLNllLIF5V
LbPMqgf1EmcPf3Agu/DVxT1SiXw4vZ/raVjNwqzQsATRNR3Y5B56NPs1D3WP
cpcfl+bgpvzyEhU3cl9162t8juZiSm2RycpNPJi4TX8xRZEJDw2PdzflODDT
D8oN20xgz4rTF9bvpuNmyDKTjUv6cYZWuF8rWwD7Gt/UhZ3krnTyffxkYS82
nL361pfcSzvLbfZv/k1BlrPhLadVHbjo0a5YJDIAN+X+/YFXKdCYpvnjjS0T
wTN2TitNFcL44o9lBT8oMJX5MN/vKQW131zdiE4BnI+wTS/Y0HBYdGr+GoM6
iHn7ZKkHkb6y6on12MzA2cCTNeK+FfjdKB7k1MEjv1+jbzXaAuEfIkPvSQkW
9Jeu0zvORXvUxm2f7DpQ55GkweMXo2qlfIbeJzZ0zEUuWZd24+rvqFFnzWIY
mUhOYV2c9NUk/7/5Klqnfcr+Iag557bGtXEgJ0PP921qxO9fBXubTg6BM7DZ
LOw5B+PPI2tsnzTietXVHM/jQ5jw2ao1v4CDlK0ecxpfN8IzY+fMwCVD8PPR
CH+znYt7DkUTjFVNsKz3v0LvHMTOePMtXt+4ED9WmLW0uQm+A2N7T54dxNoN
d4L3JvOQJww8l3SnGQ8YgbKD9QNwjarilivwUTPU5fDGl4KN1d9CSpuEeCu9
75hIEx9/Q2YxzM+Su0Fkms2ZWwIkLbklVriTgE7zdftELxrsD1hb/VMjyJ7b
JBLyiMD7B6WBcpl0DLsdDzt5nQfxHiPpEzUEar40aga6MbF1jfKV75EcTNm6
9oZeI4H9y4+PdFBbYeN5bcOFtH5wwxROM28QSCiKKmxQ6oSRYkND2IM+CDzE
xB2WEmjYNKh3PK8HxWeHnNKku3HpxYHYkgg+2iM9S8ZGWBhPurBo7Es7Xu8J
yShL4OHnXSlm6BYO3kZGxv1c24rD8sl1885ysSPi6xjVlQflmK99S3kMcCTW
NSh/Y8Ol6c1Q0kkC+2pW5t3SokNSYY6k0ygLBq137pfVC5B+63GXcjUVjt7M
X7Oe9SBFIZH7qVKI8HErWzMqBVRrBcP3pe34Vhxyq2/qAETnbSn/FUHB8/VR
npwRBr6amJyWiBFiBW98q/AfBT0rGX8qKpsx7/weukatAL8FvhqyYTT4uSdM
C42qRa9QLvDPfgIvPgytfWrPANyK2BYiFRh436N8t5gHx5bYh80nWhG7iCkv
EVUCY0Wz8n9ruBBLlmzZUNOBo6LuW0IpxXjlId/ytIzcmQp/X71b0oObTTXi
3FnFcNlkPPzXfNJXk/y/8tonR/OubhnC8L5c1cxpXKw/+d4HfxrxWLI16YvZ
EGK16qbc+cbB5ZD852q8RjRbhe201RrC0blmshYbuTDw7Bnz1mhC0+EeVaMf
g/glFphPzefCU2fHj7Z7TaAOhxHD2YPYmnTlyugBHkpsLJ/maDXDj2NqY6c7
iL6xev+0Bh6cAnRnfxI0Q8TptVGu/wCCTE4opVrwoScjkqJLUMDgbxZVCRBi
6S+flCeSBALoOfvLM6jYk54qVFkhAP2LR1r9cQJVstaeytU0bFpzZ0YS6bXy
kvErF/MIaHho1QR9peNBgfLp2ct4WLWh86J/LYH2e3to8T1M7HZS1Hmzm4MR
t+X230mPfYsNk09b3wa9wPs79rn0IybBYf7UYPL6KSEld690onf9tbEIvT40
DO1Lr1AgUJrvfMpheS8cg4LuHHnahSv0Mw+LLvGxnZi77fA68t/PLz147HE7
ziyKevE4mAeqmKmlgT8H4ZFmHTU/WqD1/O3LC6TnTx0oP7HpIQ9KSxZWir5g
QBDuf8aukY37PqGudLJHjV5eXqAuRsfPuLWVp+pZWHhj716WQIBcfoWK0Usq
1CekZSzVemByny/Y1iDEcaUePSKVgrBPMpGPDNvh8ei0W8fMARS8mhdCvUfB
oq/z28VvMuB/xGu0N0iIsBv7bTSmkl2pf1rlfnUTtuvsT975RgD5J5KxPcU0
WDPpEZuba/D544Lju0lP6yw//Kf8CgPKWbJLCy6VI2vRqi0nknhgX/s6cq2y
Fc7r7qmuuVgCR518ust0Lq513UpK39CJDAup30feFoPdYnsuOYqNNb55jsMx
PTi2dI7P0z9FwPA36TLVSV9N8v/KmV1PiZdkr9EvH+yxI3vN9/F07xiy1wJi
Fb4YzBgCle3jILjMBVun+1a5cxOGzFZt0fg6iF1q2uXuZVw4HYuSSnjUBHPv
SxbOFYOIzNzlI6fDw1wfEztP8WZkrJo1fMZtECXjbjMvkedwTvny+w1xzbBu
V1TfSAxgfCfl3sF/PLx3m9nsZUHB1Mu2vIUKA2BMF9ONfcCHxGGPxprNVJjQ
Mz79lBbixiGjlPzlBM6dFaGlT6HBZvf+fWUVBD4vOXdQ3J9AISG648hCOvp2
BlWFn+bj3TkVg/cfCAx+2SSXbsXAynTButNPuei9+zfzRx0B8Ws6OUcvtsCV
3XaC1cbGZfvw+X/zye6ydj539l8bbGtm/W6d2Y+qvdHDg14Etss0aAQs6ALz
Rw7ramkvDO5KTnsgQmBqW/OfgPe9OFaUmTqELpzM02xzO8aHzdNDUkRAPx69
nS7latqOX7pu6a6OPFh9nfLeuoyDj7uf7y940QK53blnVRW5WJUrvmFHDw9f
N6lbCnwYmBCO6rjdY6OrSKhuRP4/lrG4SdItNDySPrP2xB0Wdh7TLLlEvi6H
UxOL4mOoaPjTm59woxsWZ1hxF+hC2G43K9P2pMA4846W+cs2EJZ+v57MGUCO
SOTzqelkD64ftNwizcBnpYXpVqeE6MmdKNwpS4VVl7GDJ7mzTVtSLEcfCNCc
UreYPkKDqbSmQ/hYNb4jMm/pdz6Ovjn8MyeLgerft9Xq6GWYptB3tcePB5W/
C7/OWkE+X3Oay3rHEhQkLTx9v4cDpS3rZynldqJA37LgXGIx3DcVTiw6zIbw
E/vhN0nS994PF77tK8Lzwdr32kP/eedlkv8/yzmzvs1vLx1EzouxRJm1pDd6
7Lx4Us34/Fz2c2LzIM7927VHUYYHkUWLX24SNEFOz78/7d0gzPeu9h7exsOv
Iz8EZvOaYdPvcY8SOIglKQs0re6QvkrrlQvxb0Zp7SNda8VBhPKJ+qFuHrbf
60zVkKZAW/1LwVbfAXjPqtfWsOKDutHIXHKIgl8eym8rHwlREuK8tfcTH5/y
C5J/RlCx2PGIgUKUAL/kp+nNJbtvjljfsLUnDVVfpX6csySQ8+vEraVxBAyF
LrdPB9ORUOqemzXAg7X0Ikn9agJLl6kGCz4z0PO0MbBXlYvlxgfX3GwgPVd9
IFFEjdwBsffk1pHnRgQStvFpBJ4FB2c7dbbDYbtUzu0HLPSZiAXxHAioKlZu
nC3owmvKt5PyrB4Y+3plGnaR929UPppd2Yf5x73UJJ524rFZZl6yNh8GtqtO
zPjWj+L93JRtLW0Y8drsQTPgYVqGyl6TOVzwi4/3/jnago0K0R8WcDmQuTqP
tVmND235jKATRgykPM8wEliz0RjBGbv2iYC8SfInh1QaXrrsTDyzj+x5T6XP
l9cJ8WHjwlVXfKm4OdrPCfzcBevZKtcbOoUIiBZ0O22h4M3jXV+fL2xDPnO6
vvmCAXAlOR9j31Aw0+zpxpIrdNjn+mw5aSWEkW7rZ4VdVJx5skF8/9hHHCh8
GfrbWYCYnnx6lz4d+6QPWWYrVkOSdc/gXiEfmgVd87zaGIhSaNjzI6YUl6VW
XJuxjwdupLyHXTLp+46BLIWdJViQNuV90gsO7kfUl/qt78J0EVjWBhXDP7eG
YaTO/o87F5P8P5OHzlZRLXMYhNG0g670Jzzse89/IpraDJ/hh51F1wYhp6Bt
ahzBg3nLl9IPns3ISatSfUReLya3TkZIXp9mbGKqQ17/pbf4Z+uCQUxlNn7x
aOMhLPblpVhRCi6Y38t892QA4W2Lxdbpkud67spr6VkUKL7SP7fthxAhSvce
dL3mY0HItLg1+6jg/psydGmuEBYNZZGrNAmYc30WPB6lIissKT9WRABLl46q
324EnGQcHMKFNEjLdD7d0MrHPW7ew1M5BGYf8t+hKqSTPZp6zXM3D1477Mpk
yO5T0Y/r1nvDRGlv4HBlBAeznAJmbGoksDz5s9MeeivEF2RslWf2Q9R3Zsj3
aNJLB+9/U6rqgNSBdSt3a7AwnjB33vltBG7EVo3ze7uxuHGq557v3ZD4OGfj
3lw+cvS28RQ8WChZPlc4m+jAisJ3Bu1DPIjFGb1uDWHDuKc5/LdaG56obaoc
EOHBzs7HRz+F7Ob5a+lLBUws2bc1+PU9DkKDk+fdCSU79tuRpyZjdHj7r94g
/q8fOQFfg5WXCMApP+Ww2Y0GFZFUzyfSLCzndLPbjwtRuJsm/HWICoPaoRAX
0y7YGA3W9HGE6LRz8As0p2Bxi2rw+eBWHPxRmjZDbAArc0V/+5RToJYYw8gl
X8fXnWm+6vpCHAvebf0knIoYK9a1eIWPKCp8pvtzpQBndPvVBAF0uDdd8h1a
WIVryl/FXwfxYS/3u3CzARMt12KYu6aVovBD+7jzQh72+zYwts9rx3Qj+tpW
nRL8u39H9IovBwHCOqesMtKnvuK/nI4XI/PsfumpxGT3TfL/Hn9dRv1sNzSA
HaaGw/FjPJyhsPdvMKOAz/nw9bjCIPSO+0cd6uVhW92vHTwZCiQMR9TbRgag
t+q599phHqjflj+W1adgYuydzfwHA1i1pPji6Q18uF+Zd/NkMQWfrdTHiuQH
kGgTtul+AtlHOf7GFQZUMFt9o/1PC/Hzin37bAUCHx6FlL7MoeKPwWDwKT8B
3KLrD5lZENDc6m/DDaGhwvCnS90ZAg/eF1y2jyJgnL3UeqkrHYNBjzdnrufD
xJrdZVtF4Nfypy5OdxkwnHGUZUz27Z2HERXy9QQims7wPlxvQUHR1u38n2wc
evI40LGQwGsfd1HVj20QWLQY/zPpRw/96ciSSwQOXzF/m1bUCf+kLSOEbR+W
uMVkhs4nsEQp5Otp0V5onb5aTfzsQrblgMHQDT5CxOU6bkj0Yzg2ZMZBlQ54
TV1xJyCTB8uFTStbVDgYIS4Y14a1ouD403diaVyY3jURSVXjIaH38duZNkw0
izr1vd/IgfptlruDOIHjv+1VntyhI9Z3iVLFpX64Fa4Vu+ErgHqFmucZGRpK
rKu/qqzvQ3UW1dUuU4hXrqIWn9ZQscFmb4ipaydirzx8yPoiRPnc8QOeRylo
mNX50YTRgjNDf8XUuUK4991kpFMpOPfLgme7nYYIdll1zHwhxL5E3eFRqVht
925V2LwGqOn40cS+E5B8GKrDqaHDWSeOdWPuB1TaOO65soUPZqTXrrEaJl6p
vTOtF5QgTyzL8QuHi01cFeXslHawlgsYwXIl6B0Nit63hYPUhutzo626sT+o
yNDKqBjBknsuBT2b9NUk/+9x/1/c/scHBrB73xqnd6f4uK3mFftyJhUKfjrr
7chek44ZipxN9tozda47d5B83z9rn77RYgCqgxG7F3nw8WOejCtXngqR3MPR
S38Locf0MZZ4xcdH3Xox371ULLpnvX1LoBB9S7vDadMIXF4tMuvHEyquyaq/
dn0rgObUc7M8QMBt58hQnTkNtz3CClYzCAztGOlv9SFwcYJndVqOjguf/swN
YpD3kbqSK5dLwOtW8kvvQTrUZDyqk1x4mO/csqOohsCe73dzW6KY5O/tJ3Zn
ujiYfuejqNVHAgkNjnEWXq1IrqlbqruPDYGYRPmpVAL86tiYI4J2XH5bYRv3
moUJOa+9208S8Gz6tPY3uQMsqvzv2hn0Iok71ahkgI+aFlpDpnUfVGZ+1zWT
6MJpVYfiz7v58P4e1u6V2Y810Q2b9pq1Q/udu3e+I9m/taoLnpRyEPHK6ztX
2IL68tLeC4ZcSJpcjn7wjIfeqgRWZSEDfcFEeXsLGyVX16QsCCfAkn+RumAx
HZLBdD/n7yxoPrR7ymgW4JN2S6ovjQqle3d3O33ugWKo4dxFZULYP99/VnWE
guyXo+MbdTrAcvjA4YsMoP9k/MzvlyhYUpt+qPYJE8Yb2q/JvBbibtiry+sI
Ch4omGrTj5D9N3OmTcV3AcLnrk0rVaHBP93M1Hd6PT4FbDux/jUBqSVDv3dI
MPB6bYRT+IZK+DfeUj4myYfsCrPZZ+1aoNjy69fSuhJEadgK9qZzsWEpZ9pF
8j7kiqU7lb8Vw8+v8fFCUQ62it92nDbYjYCajll3VYvRvfp74jvnSV9N8v8e
n/7M1YSSLoSObhUhIM9jXfotHRWyB/T9zva9rBbi/tG9LC6dj7yohKJRLyru
JyhXpaQKsa8i1D1kiI95Py8nZdyiwjEzqWn9XiGYzfuftpM75FW9CZ3bQIX8
1fqbq4sFiAoyDJDeQnpm1lo35g4a7ouXFCyeIBB1/+jpqNME0tu3lz8epGF+
92j/ZbIDM1KPLXqbQvad+bhlWiod+pWR1hGjPEy9cXdsWjXJGx/phnUxwO9w
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
u8uBwDkfKeS0HpUudKqHTcFRifQp+Yh7vy+40YWHLaL6FnaqLHRMFnr/gEEg
ovCT+OhELgqNyraoNbHQU+h3IZqeBy4Wh6q+oecB8diIEUmx9Wi8E9nrJpuP
Cyqsk++W8TBWzXHqx6UsEO9z4uzuE5Cs26F9NZoLs9xFPr0VLAylGJnqxhOw
SLef1LqKi3KHx3au9g3IvDn6RlkbAZF1/iZUFxeZuTrFX3pZcHvt6HHkJIGY
VfdejTbiYvidqfRmbzb0bLMU3vkTCHpDjtYcw8Wddx6+Qjb12O2jdLhFLR/r
ll/zmrOFh88l+ZXm61iI1I20lckiUKVrmL8+gouaPF0Pwy8sfIp3ORJEx1d5
ebjm3RIuPiibVfYsrsdFUbm0Rs18KPeHGQq8eAheU6cRKszCo+6cPVIldD87
/cH2vEFzZfNNVW8fOv4qt8JBmjefzd0e7xPMRYRs6c3lw/Wona7P3D9IoOJP
my/O8jxE+TmdDk9jweBs4azhy3QdabnKmejKxQrm+eyGPhaOrn21U5k+n6rZ
3kuXLPn5/zL/q/9YHyGgUs5JC0B01opv3sPHfepIwXqXSoQHru7zofWiHa4S
BbRu2TJiV6bLP3/++d30/wFPGpMp
     "]], {{{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{5.8977146443819055`*^-18, 0.09631698949424641}, {
       0.021739722032682332`, 0.09524794560181532}, {0.04391631635577006, 
       0.09119317057139618}, {0.06677726898060397, 0.08373604675911135}, {
       0.09021153311471915, 0.07194129702927228}, {0.11324286341118021`, 
       0.05453488877991214}, {0.13273219586187407`, 0.030295257546948017`}, {
       0.141391588081087, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 
          8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{1.1795429288763811`*^-17, 0.19263397898849283`}, {
       0.043479444065364664`, 0.19049589120363064`}, {0.08783263271154013, 
       0.18238634114279237`}, {0.13355453796120795`, 0.1674720935182227}, {
       0.1804230662294383, 0.14388259405854456`}, {0.22648572682236043`, 
       0.10906977755982428`}, {0.26546439172374814`, 0.060590515093896034`}, {
       0.282783176162174, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 
          8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{1.7693143933145718`*^-17, 0.28895096848273927`}, {
       0.065219166098047, 0.28574383680544596`}, {0.1317489490673102, 
       0.2735795117141886}, {0.20033180694181194`, 0.25120814027733407`}, {
       0.27063459934415746`, 0.21582389108781685`}, {0.33972859023354063`, 
       0.16360466633973642`}, {0.3981965875856222, 0.09088577264084406}, {
       0.42417476424326106`, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 
          8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{2.3590858577527622`*^-17, 0.38526795797698565`}, {
       0.08695888813072933, 0.3809917824072613}, {0.17566526542308025`, 
       0.36477268228558474`}, {0.2671090759224159, 0.3349441870364454}, {
       0.3608461324588766, 0.2877651881170891}, {0.45297145364472086`, 
       0.21813955511964855`}, {0.5309287834474963, 0.12118103018779207`}, {
       0.565566352324348, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 
          8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{2.9488573221909526`*^-17, 0.48158494747123204`}, {
       0.10869861016341166`, 0.4762397280090766}, {0.2195815817788503, 
       0.4559658528569809}, {0.3338863449030199, 0.4186802337955568}, {
       0.4510576655735958, 0.35970648514636144`}, {0.566214317055901, 
       0.2726744438995607}, {0.6636609793093703, 0.1514762877347401}, {
       0.706957940405435, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 
          8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{3.5386287866291436`*^-17, 0.5779019369654785}, {
       0.130438332196094, 0.5714876736108919}, {0.2634978981346204, 
       0.5471590234283772}, {0.40066361388362387`, 0.5024162805546681}, {
       0.5412691986883149, 0.4316477821756337}, {0.6794571804670813, 
       0.32720933267947283`}, {0.7963931751712444, 0.18177154528168812`}, {
       0.8483495284865221, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 
          8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{4.128400251067334*^-17, 0.6742189264597249}, {
       0.15217805422877634`, 0.6667356192127073}, {0.3074142144903904, 
       0.6383521939997733}, {0.46744088286422786`, 0.5861523273137795}, {
       0.631480731803034, 0.5035890792049059}, {0.7927000438782615, 
       0.381744221459385}, {0.9291253710331185, 0.21206680282863613`}, {
       0.9897411165676091, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 
          8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{4.7181717155055244`*^-17, 0.7705359159539713}, {
       0.17391777626145866`, 0.7619835648145226}, {0.3513305308461605, 
       0.7295453645711695}, {0.5342181518448318, 0.6698883740728908}, {
       0.7216922649177532, 0.5755303762341782}, {0.9059429072894417, 
       0.4362791102392971}, {1.0618575668949926`, 0.24236206037558414`}, {
       1.131132704648696, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 
          8}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}}, {{{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {4.7181717155055244`*^-17, 
       0.7705359159539713}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.17391777626145866`, 
       0.7619835648145226}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.3513305308461605, 
       0.7295453645711695}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.5342181518448318, 
       0.6698883740728908}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.7216922649177532, 
       0.5755303762341782}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.9059429072894417, 
       0.4362791102392971}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {1.0618575668949926`, 
       0.24236206037558414`}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {1.131132704648696, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}}},
  AspectRatio->NCache[
    Rational[2, 3], 0.6666666666666666],
  AxesLabel->{None, None},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->450,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"NT=8\\tNR=8\\tNL=8\\tJ=0.2\"", TraditionalForm],
  PlotRange->{{0, 1.5}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659261534698501*^9, 3.659261607202243*^9, 
  3.659337260557769*^9, 3.6593373020989733`*^9, 3.6593373518920107`*^9, 
  3.659337416823264*^9, 3.65933746402984*^9, 3.659337652549375*^9, 
  3.6593377408614063`*^9, 3.659561513693432*^9, 3.6598002281904182`*^9, 
  3.660974675343164*^9, 3.660974851160698*^9, 3.6609753619478493`*^9, 
  3.660975473051573*^9, 3.660975555091569*^9, 3.660977053000142*^9, 
  3.660977571662499*^9, 3.6609776647798843`*^9, 3.660977836389366*^9, 
  3.6609779641306257`*^9, 3.660979127078412*^9, 3.661420644699362*^9, 
  3.6614218476341887`*^9, 3.661422829037764*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "/.", 
  RowBox[{"dat", "[", "Jtest", "]"}]}]], "Input",
 CellChangeTimes->{{3.658483759181489*^9, 3.658483764660803*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7705359159539713`", ",", "0.7815793919667908`", ",", 
   "0.8097342655908328`", ",", "0.8568193902325794`", ",", 
   "0.9230790536082872`", ",", "1.005520767214302`", ",", 
   "1.0891652127577578`", ",", "1.131132704648696`"}], "}"}]], "Output",
 CellChangeTimes->{3.6592615347151737`*^9, 3.659261607218904*^9, 
  3.659337260659604*^9, 3.659337302117736*^9, 3.659337351908505*^9, 
  3.659337416996974*^9, 3.659337464070116*^9, 3.659337652565886*^9, 
  3.659337740877349*^9, 3.6595615137204638`*^9, 3.659800228210174*^9, 
  3.660974675434063*^9, 3.660974851178623*^9, 3.660975361965239*^9, 
  3.660975473068968*^9, 3.660975555108428*^9, 3.660977053018099*^9, 
  3.660977571682613*^9, 3.6609776647982264`*^9, 3.660977836408104*^9, 
  3.660977964148974*^9, 3.660979127098312*^9, 3.66142064477028*^9, 
  3.661422829114146*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"jj", "=", "0.0"}], ",", 
     RowBox[{"jj", "<=", "0.235"}], ",", 
     RowBox[{"jj", "=", 
      RowBox[{"jj", "+", "0.1"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"frame", "=", "\[IndentingNewLine]", 
       RowBox[{"GraphicsGrid", "[", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"Show", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ListDensityPlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1.9", ",", "0.0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "\[Rho]C"}], "}"}], "}"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
                    RowBox[{"\[Rho]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], 
                    "\[IndentingNewLine]", ",", "1"}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "/.", 
                  RowBox[{"dat", "[", "jj", "]"}]}]}], "\[IndentingNewLine]", 
                "}"}], "\[IndentingNewLine]", ",", 
               RowBox[{"AspectRatio", "\[Rule]", 
                RowBox[{"1", "/", "2"}]}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "2"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
               RowBox[{"Mesh", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
              "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"Show", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ListPolarPlot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}], "/.", 
                   RowBox[{"dat", "[", "jj", "]"}]}], ",", 
                  RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                  RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{"Show", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ListPolarPlot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "NR"}], "]"}], "]"}]}], "}"}]}], "}"}], 
                   "/.", 
                   RowBox[{"dat", "[", "jj", "]"}]}], ",", 
                  RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{"PolarPlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"powSpline", "[", "jj", "]"}], "[", 
                  RowBox[{
                   RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}],
                  ",", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"DotDashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1.5"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "\[Rule]", "\[IndentingNewLine]", 
              RowBox[{"\"\<J=\>\"", "<>", 
               RowBox[{"ToString", "[", "jj", "]"}], "<>", "\"\<, C=\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"C", "/.", 
                 RowBox[{"dat", "[", "jj", "]"}]}], "]"}], "<>", 
               "\"\<, \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"\[Rho]C", "/.", 
                 RowBox[{"dat", "[", "jj", "]"}]}], "]"}], "<>", 
               "\"\<, \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=\>\"", 
               "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"\[CapitalOmega]0", "/.", 
                 RowBox[{"dat", "[", "jj", "]"}]}], "]"}]}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<j-const, A=\[Infinity]\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"1.5", ",", "0.8"}], "}"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], 
           RowBox[{"(*", 
            RowBox[{"Show", " ", "ends"}], " ", "*)"}], "\[IndentingNewLine]",
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "colorlabel", "}"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"GraphicsGrid", " ", "ends"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"dir", "<>", "\"\<frames//frame_\>\"", "<>", 
         RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"10000", "+", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"1000", "*", "jj"}], "]"}]}], "]"}], "<>", 
         "\"\<.png\>\""}], ",", "frame", ",", 
        RowBox[{"ImageResolution", "\[Rule]", "150"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Frame \>\"", ",", 
        RowBox[{"ToString", "[", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"1000", "*", "jj"}], "]"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5092697946950073`*^9, 3.509269985390915*^9}, {
  3.5092700493395724`*^9, 3.509270106830861*^9}, {3.5092719312292104`*^9, 
  3.509271994100806*^9}, {3.509272054493261*^9, 3.5092720916963882`*^9}, {
  3.509272268199484*^9, 3.509272288916669*^9}, {3.509272800871951*^9, 
  3.509272842234317*^9}, {3.5092728877499204`*^9, 3.50927294840839*^9}, {
  3.509273002664493*^9, 3.5092730065907173`*^9}, {3.509273543452424*^9, 
  3.509273579843506*^9}, {3.509274793935948*^9, 3.509274836934407*^9}, {
  3.6574457487863894`*^9, 3.657445756017482*^9}, {3.65926142353168*^9, 
  3.659261460857604*^9}, {3.66097434937963*^9, 3.660974349603444*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Frame \"\>", "\[InvisibleSpace]", "\<\"0\"\>"}],
  SequenceForm["Frame ", "0"],
  Editable->False]], "Print",
 CellChangeTimes->{3.659261535293871*^9, 3.659261607905464*^9, 
  3.659337262488059*^9, 3.659337302845914*^9, 3.659337352500783*^9, 
  3.659337417617042*^9, 3.659337464657596*^9, 3.659337653458866*^9, 
  3.659337741461273*^9, 3.659561516530101*^9, 3.65980023166628*^9, 
  3.660974676628487*^9, 3.660974852140793*^9, 3.660975362595186*^9, 
  3.660975473690997*^9, 3.6609755559226713`*^9, 3.660977054129683*^9, 
  3.660977572673665*^9, 3.660977665409231*^9, 3.660977837192655*^9, 
  3.6609779649376173`*^9, 3.6609791283205347`*^9, 3.661420646860236*^9, 
  3.661422830636023*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Frame \"\>", "\[InvisibleSpace]", "\<\"100\"\>"}],
  SequenceForm["Frame ", "100"],
  Editable->False]], "Print",
 CellChangeTimes->{3.659261535293871*^9, 3.659261607905464*^9, 
  3.659337262488059*^9, 3.659337302845914*^9, 3.659337352500783*^9, 
  3.659337417617042*^9, 3.659337464657596*^9, 3.659337653458866*^9, 
  3.659337741461273*^9, 3.659561516530101*^9, 3.65980023166628*^9, 
  3.660974676628487*^9, 3.660974852140793*^9, 3.660975362595186*^9, 
  3.660975473690997*^9, 3.6609755559226713`*^9, 3.660977054129683*^9, 
  3.660977572673665*^9, 3.660977665409231*^9, 3.660977837192655*^9, 
  3.6609779649376173`*^9, 3.6609791283205347`*^9, 3.661420646860236*^9, 
  3.661422831898897*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Frame \"\>", "\[InvisibleSpace]", "\<\"200\"\>"}],
  SequenceForm["Frame ", "200"],
  Editable->False]], "Print",
 CellChangeTimes->{3.659261535293871*^9, 3.659261607905464*^9, 
  3.659337262488059*^9, 3.659337302845914*^9, 3.659337352500783*^9, 
  3.659337417617042*^9, 3.659337464657596*^9, 3.659337653458866*^9, 
  3.659337741461273*^9, 3.659561516530101*^9, 3.65980023166628*^9, 
  3.660974676628487*^9, 3.660974852140793*^9, 3.660975362595186*^9, 
  3.660975473690997*^9, 3.6609755559226713`*^9, 3.660977054129683*^9, 
  3.660977572673665*^9, 3.660977665409231*^9, 3.660977837192655*^9, 
  3.6609779649376173`*^9, 3.6609791283205347`*^9, 3.661420646860236*^9, 
  3.661422833157713*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1914, 1138},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 217, 4, 39, "Input"],
Cell[CellGroupData[{
Cell[799, 28, 117, 2, 39, "Input"],
Cell[919, 32, 713, 10, 39, "Output"]
}, Open  ]],
Cell[1647, 45, 1255, 30, 94, "Input"],
Cell[2905, 77, 519, 13, 39, "Input"],
Cell[CellGroupData[{
Cell[3449, 94, 112, 1, 39, "Input"],
Cell[3564, 97, 966, 14, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4567, 116, 106, 1, 39, "Input"],
Cell[4676, 119, 959, 14, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5672, 138, 452, 10, 39, "Input"],
Cell[6127, 150, 1048, 15, 39, "Output"]
}, Open  ]],
Cell[7190, 168, 290, 7, 39, "Input"],
Cell[CellGroupData[{
Cell[7505, 179, 167, 4, 39, "Input"],
Cell[7675, 185, 1035, 16, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8747, 206, 5022, 72, 39, "Input"],
Cell[13772, 280, 1079, 16, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14888, 301, 5404, 78, 39, "Input"],
Cell[20295, 381, 1066, 16, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21398, 402, 3479, 55, 67, "Input"],
Cell[24880, 459, 1127, 16, 39, "Output"]
}, Open  ]],
Cell[26022, 478, 883, 19, 39, "Input"],
Cell[26908, 499, 1009, 24, 39, "Input"],
Cell[27920, 525, 1221, 29, 94, "Input"],
Cell[29144, 556, 910, 23, 39, "Input"],
Cell[30057, 581, 1498, 38, 39, "Input"],
Cell[31558, 621, 786, 18, 39, "Input"],
Cell[32347, 641, 1158, 27, 121, "Input"],
Cell[33508, 670, 1266, 31, 39, "Input"],
Cell[34777, 703, 1121, 26, 39, "Input"],
Cell[CellGroupData[{
Cell[35923, 733, 504, 10, 39, "Input"],
Cell[36430, 745, 1039, 16, 39, "Output"]
}, Open  ]],
Cell[37484, 764, 651, 17, 39, "Input"],
Cell[38138, 783, 736, 16, 39, "Input"],
Cell[38877, 801, 279, 8, 39, "Input"],
Cell[CellGroupData[{
Cell[39181, 813, 610, 14, 64, "Input"],
Cell[39794, 829, 1102, 20, 63, "Output"]
}, Open  ]],
Cell[40911, 852, 1095, 28, 48, "Input"],
Cell[CellGroupData[{
Cell[42031, 884, 135, 2, 39, "Input"],
Cell[42169, 888, 944, 14, 39, "Output"]
}, Open  ]],
Cell[43128, 905, 280, 7, 39, "Input"],
Cell[43411, 914, 2789, 66, 337, "Input"],
Cell[46203, 982, 81, 1, 39, "Input"],
Cell[CellGroupData[{
Cell[46309, 987, 64, 1, 39, "Input"],
Cell[46376, 990, 1075, 15, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47488, 1010, 106, 1, 39, "Input"],
Cell[47597, 1013, 505, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48139, 1025, 121, 2, 39, "Input"],
Cell[48263, 1029, 497, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48797, 1041, 140, 3, 39, "Input"],
Cell[48940, 1046, 1088, 15, 39, "Output"]
}, Open  ]],
Cell[50043, 1064, 1119, 28, 94, "Input"],
Cell[51165, 1094, 300, 6, 39, "Input"],
Cell[51468, 1102, 845, 24, 94, "Input"],
Cell[52316, 1128, 231, 5, 39, "Input"],
Cell[52550, 1135, 975, 28, 94, "Input"],
Cell[53528, 1165, 929, 27, 94, "Input"],
Cell[54460, 1194, 923, 27, 94, "Input"],
Cell[55386, 1223, 931, 27, 94, "Input"],
Cell[56320, 1252, 1798, 44, 121, "Input"],
Cell[58121, 1298, 1121, 30, 121, "Input"],
Cell[59245, 1330, 926, 26, 94, "Input"],
Cell[60174, 1358, 958, 24, 94, "Input"],
Cell[61135, 1384, 94, 1, 39, "Input"],
Cell[CellGroupData[{
Cell[61254, 1389, 677, 17, 39, "Input"],
Cell[61934, 1408, 1247, 20, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63218, 1433, 318, 8, 39, "Input"],
Cell[63539, 1443, 1000, 14, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64576, 1462, 640, 13, 39, "Input"],
Cell[65219, 1477, 485, 10, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65741, 1492, 641, 15, 39, "Input"],
Cell[66385, 1509, 1031, 16, 39, "Output"]
}, Open  ]],
Cell[67431, 1528, 925, 22, 94, "Input"],
Cell[68359, 1552, 659, 16, 67, "Input"],
Cell[69021, 1570, 3772, 83, 445, "Input"],
Cell[72796, 1655, 3817, 89, 553, "Input"],
Cell[76616, 1746, 3836, 88, 337, "Input"],
Cell[80455, 1836, 871, 22, 67, "Input"],
Cell[81329, 1860, 2668, 63, 369, "Input"],
Cell[84000, 1925, 3143, 69, 310, "Input"],
Cell[87146, 1996, 176, 3, 39, "Input"],
Cell[87325, 2001, 1766, 47, 94, "Input"],
Cell[89094, 2050, 1069, 20, 39, "Input"],
Cell[90166, 2072, 1914, 42, 121, "Input"],
Cell[92083, 2116, 2221, 51, 175, "Input"],
Cell[94307, 2169, 1148, 23, 121, "Input"],
Cell[95458, 2194, 7985, 175, 661, "Input"],
Cell[103446, 2371, 260, 6, 39, "Input"],
Cell[103709, 2379, 1609, 34, 148, "Input"],
Cell[105321, 2415, 373, 8, 39, "Input"],
Cell[CellGroupData[{
Cell[105719, 2427, 969, 23, 39, "Input"],
Cell[106691, 2452, 10005, 200, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116733, 2657, 917, 22, 39, "Input"],
Cell[117653, 2681, 9999, 200, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127689, 2886, 4610, 102, 337, "Input"],
Cell[132302, 2990, 13923, 291, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146262, 3286, 851, 21, 39, "Input"],
Cell[147116, 3309, 9900, 200, 84, "Output"]
}, Open  ]],
Cell[157031, 3512, 5621, 131, 337, "Input"],
Cell[162655, 3645, 521, 11, 39, "Input"],
Cell[CellGroupData[{
Cell[163201, 3660, 4019, 88, 391, "Input"],
Cell[167223, 3750, 13492, 281, 84, "Output"]
}, Open  ]],
Cell[180730, 4034, 790, 14, 39, "Input"],
Cell[181523, 4050, 470, 14, 39, "Input"],
Cell[181996, 4066, 2116, 48, 202, "Input"],
Cell[184115, 4116, 2337, 57, 364, "Input"],
Cell[186455, 4175, 1881, 44, 364, "Input"],
Cell[188339, 4221, 523, 11, 39, "Input"],
Cell[188865, 4234, 527, 11, 39, "Input"],
Cell[189395, 4247, 9268, 212, 1066, "Input"],
Cell[CellGroupData[{
Cell[198688, 4463, 129, 2, 39, "Input"],
Cell[198820, 4467, 851, 12, 39, "Output"]
}, Open  ]],
Cell[199686, 4482, 826, 17, 39, "Input"],
Cell[200515, 4501, 516, 11, 39, "Input"],
Cell[201034, 4514, 514, 11, 39, "Input"],
Cell[201551, 4527, 1093, 27, 39, "Input"],
Cell[202647, 4556, 128, 3, 39, "Input"],
Cell[202778, 4561, 451, 12, 39, "Input"],
Cell[203232, 4575, 1136, 22, 39, "Input"],
Cell[204371, 4599, 466, 13, 39, "Input"],
Cell[CellGroupData[{
Cell[204862, 4616, 333, 5, 39, "Input"],
Cell[205198, 4623, 842, 12, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206077, 4640, 133, 2, 39, "Input"],
Cell[206213, 4644, 891, 14, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207141, 4663, 130, 2, 39, "Input"],
Cell[207274, 4667, 845, 12, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208156, 4684, 260, 5, 39, "Input"],
Cell[208419, 4691, 853, 12, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209309, 4708, 563, 15, 39, "Input"],
Cell[209875, 4725, 876, 14, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210788, 4744, 142, 3, 39, "Input"],
Cell[210933, 4749, 864, 13, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211834, 4767, 286, 6, 39, "Input"],
Cell[212123, 4775, 846, 12, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213006, 4792, 238, 5, 39, "Input"],
Cell[213247, 4799, 871, 13, 39, "Output"]
}, Open  ]],
Cell[214133, 4815, 417, 9, 39, "Input"],
Cell[214553, 4826, 179, 3, 39, "Input"],
Cell[CellGroupData[{
Cell[214757, 4833, 1500, 41, 67, "Input"],
Cell[216260, 4876, 1023, 19, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217320, 4900, 229, 6, 39, "Input"],
Cell[217552, 4908, 1045, 19, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218634, 4932, 530, 12, 39, "Input"],
Cell[219167, 4946, 1012, 18, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220216, 4969, 250, 7, 54, "Input"],
Cell[220469, 4978, 960, 17, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221466, 5000, 424, 12, 91, "Input"],
Cell[221893, 5014, 8619, 152, 280, "Output"]
}, Open  ]],
Cell[230527, 5169, 369, 9, 39, "Input"],
Cell[CellGroupData[{
Cell[230921, 5182, 130, 4, 39, "Input"],
Cell[231054, 5188, 885, 14, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231976, 5207, 743, 17, 39, "Input"],
Cell[232722, 5226, 875, 14, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233634, 5245, 2098, 54, 94, "Input"],
Cell[235735, 5301, 1165, 20, 58, "Output"]
}, Open  ]],
Cell[236915, 5324, 575, 12, 39, "Input"],
Cell[237493, 5338, 617, 12, 39, "Input"],
Cell[238113, 5352, 1857, 37, 175, "Input"],
Cell[239973, 5391, 234, 6, 39, "Input"],
Cell[CellGroupData[{
Cell[240232, 5401, 151, 3, 39, "Input"],
Cell[240386, 5406, 733, 11, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241156, 5422, 117, 2, 39, "Input"],
Cell[241276, 5426, 928, 14, 39, "Output"]
}, Open  ]],
Cell[242219, 5443, 2800, 54, 94, "Input"],
Cell[CellGroupData[{
Cell[245044, 5501, 175, 4, 39, "Input"],
Cell[245222, 5507, 866, 13, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246125, 5525, 149, 3, 39, "Input"],
Cell[246277, 5530, 920, 15, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247234, 5550, 129, 2, 39, "Input"],
Cell[247366, 5554, 838, 12, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248241, 5571, 236, 4, 39, "Input"],
Cell[248480, 5577, 830, 12, 39, "Output"]
}, Open  ]],
Cell[249325, 5592, 128, 2, 39, "Input"],
Cell[249456, 5596, 128, 2, 39, "Input"],
Cell[CellGroupData[{
Cell[249609, 5602, 8637, 164, 445, "Input"],
Cell[CellGroupData[{
Cell[258271, 5770, 393, 7, 54, "Print"],
Cell[258667, 5779, 422, 8, 29, "Print"],
Cell[259092, 5789, 395, 7, 54, "Print"],
Cell[259490, 5798, 422, 8, 29, "Print"],
Cell[259915, 5808, 398, 7, 54, "Print"],
Cell[260316, 5817, 422, 8, 29, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260787, 5831, 739, 11, 39, "Input"],
Cell[261529, 5844, 928, 14, 39, "Output"]
}, Open  ]],
Cell[262472, 5861, 896, 16, 39, "Input"],
Cell[263371, 5879, 329, 8, 39, "Input"],
Cell[CellGroupData[{
Cell[263725, 5891, 481, 11, 39, "Input"],
Cell[264209, 5904, 2154, 47, 558, "Output"]
}, Open  ]],
Cell[266378, 5954, 130, 2, 39, "Input"],
Cell[266511, 5958, 1302, 23, 39, "Input"],
Cell[CellGroupData[{
Cell[267838, 5985, 258, 5, 39, "Input"],
Cell[268099, 5992, 1264, 22, 58, "Output"]
}, Open  ]],
Cell[269378, 6017, 134, 2, 39, "Input"],
Cell[269515, 6021, 1724, 32, 121, "Input"],
Cell[CellGroupData[{
Cell[271264, 6057, 203, 3, 39, "Input"],
Cell[271470, 6062, 11607, 224, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283114, 6291, 2252, 47, 67, "Input"],
Cell[285369, 6340, 13424, 252, 463, "Output"]
}, Open  ]],
Cell[298808, 6595, 1070, 28, 39, "Input"],
Cell[CellGroupData[{
Cell[299903, 6627, 2338, 67, 67, "Input"],
Cell[302244, 6696, 44572, 768, 319, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346853, 7469, 276, 7, 39, "Input"],
Cell[347132, 7478, 836, 12, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348005, 7495, 298, 8, 39, "Input"],
Cell[348306, 7505, 810, 11, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349153, 7521, 114, 2, 39, "Input"],
Cell[349270, 7525, 791, 11, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350098, 7541, 852, 22, 39, "Input"],
Cell[350953, 7565, 19784, 334, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370774, 7904, 500, 9, 39, "Input"],
Cell[371277, 7915, 62978, 1072, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434292, 8992, 622, 11, 39, "Input"],
Cell[434917, 9005, 330, 5, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435284, 9015, 2963, 65, 175, "Input"],
Cell[438250, 9082, 3005, 58, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441292, 9145, 2633, 51, 148, "Input"],
Cell[443928, 9198, 1155, 20, 27, "Message"],
Cell[445086, 9220, 9887, 198, 84, "Output"]
}, Open  ]],
Cell[454988, 9421, 577, 16, 39, "Input"],
Cell[CellGroupData[{
Cell[455590, 9441, 1134, 24, 67, "Input"],
Cell[456727, 9467, 1284, 22, 29, "Message"],
Cell[458014, 9491, 1284, 22, 29, "Message"],
Cell[459301, 9515, 1285, 22, 29, "Message"],
Cell[460589, 9539, 1186, 21, 27, "Message"],
Cell[461778, 9562, 94890, 1600, 256, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556705, 11167, 1624, 34, 67, "Input"],
Cell[558332, 11203, 1278, 22, 29, "Message"],
Cell[559613, 11227, 1278, 22, 29, "Message"],
Cell[560894, 11251, 1278, 22, 29, "Message"],
Cell[562175, 11275, 1179, 21, 27, "Message"],
Cell[563357, 11298, 124560, 2055, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687954, 13358, 393, 7, 39, "Input"],
Cell[688350, 13367, 134827, 2225, 411, "Output"]
}, Open  ]],
Cell[823192, 15595, 759, 13, 39, "Input"],
Cell[CellGroupData[{
Cell[823976, 15612, 645, 14, 39, "Input"],
Cell[824624, 15628, 65867, 1074, 451, "Output"]
}, Open  ]],
Cell[890506, 16705, 3622, 79, 499, "Input"],
Cell[CellGroupData[{
Cell[894153, 16788, 723, 17, 39, "Input"],
Cell[894879, 16807, 1015, 20, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[895931, 16832, 645, 16, 39, "Input"],
Cell[896579, 16850, 892, 17, 27, "Message"],
Cell[897474, 16869, 1007, 18, 29, "Message"],
Cell[898484, 16889, 892, 17, 27, "Message"],
Cell[899379, 16908, 1007, 18, 29, "Message"],
Cell[900389, 16928, 894, 17, 27, "Message"],
Cell[901286, 16947, 993, 19, 27, "Message"],
Cell[902282, 16968, 1007, 18, 29, "Message"],
Cell[903292, 16988, 998, 19, 27, "Message"],
Cell[904293, 17009, 1896, 41, 303, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[906226, 17055, 666, 20, 39, "Input"],
Cell[906895, 17077, 1014, 18, 29, "Message"],
Cell[907912, 17097, 1012, 18, 29, "Message"],
Cell[908927, 17117, 1012, 18, 29, "Message"],
Cell[909942, 17137, 1001, 19, 27, "Message"],
Cell[910946, 17158, 1952, 41, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[912935, 17204, 684, 20, 39, "Input"],
Cell[913622, 17226, 977, 17, 29, "Message"],
Cell[914602, 17245, 977, 17, 29, "Message"],
Cell[915582, 17264, 975, 17, 29, "Message"],
Cell[916560, 17283, 964, 18, 27, "Message"],
Cell[917527, 17303, 2124, 43, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[919688, 17351, 1007, 24, 39, "Input"],
Cell[920698, 17377, 5057, 96, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[925792, 17478, 8104, 191, 1012, "Input"],
Cell[933899, 17671, 4679, 96, 386, "Output"]
}, Open  ]],
Cell[938593, 17770, 2954, 70, 499, "Input"],
Cell[941550, 17842, 1565, 36, 67, "Input"],
Cell[943118, 17880, 1375, 34, 39, "Input"],
Cell[CellGroupData[{
Cell[944518, 17918, 1202, 24, 67, "Input"],
Cell[945723, 17944, 131621, 2166, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1077381, 20115, 150, 3, 39, "Input"],
Cell[1077534, 20120, 867, 15, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1078438, 20140, 11127, 236, 1336, "Input"],
Cell[CellGroupData[{
Cell[1089590, 20380, 735, 13, 29, "Print"],
Cell[1090328, 20395, 739, 13, 29, "Print"],
Cell[1091070, 20410, 739, 13, 29, "Print"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
