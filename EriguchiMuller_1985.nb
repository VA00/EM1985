(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1004342,      18957]
NotebookOptionsPosition[    989004,      18488]
NotebookOutlinePosition[    989472,      18506]
CellTagsIndexPosition[    989429,      18503]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Quit", "[", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.507275123100278*^9, 3.507275124377351*^9}, {
   3.507516405718161*^9, 3.5075164068292246`*^9}, 3.658661243355674*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totalTimer", " ", "=", " ", 
  RowBox[{"AbsoluteTime", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.661426013983589*^9, 3.661426023978047*^9}}],

Cell[BoxData["3.661431883691712`16.316225948208544*^9"], "Output",
 CellChangeTimes->{3.6614260582351093`*^9, 3.661426167675644*^9, 
  3.661426257254549*^9, 3.661426443723439*^9, 3.661426886615093*^9, 
  3.66142701208819*^9, 3.661427460971621*^9, 3.661427803186956*^9, 
  3.6614278467517138`*^9, 3.661428283694717*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://adsabs.harvard.edu/abs/1985A%26A...146..260E\>\"", ",", 
     "\"\<HTML\>\""}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Uncomment", " ", "line", " ", "above", " ", "to", " ", "get", " ", 
     "main", " ", "reference", " ", "for", " ", "the", " ", 
     RowBox[{"method", ".", " ", "\[IndentingNewLine]", "Eriguchi"}]}], ",", 
    RowBox[{
     RowBox[{"Y", "."}], ";", "Mueller"}], ",", 
    RowBox[{"E", "."}], ",", " ", 
    RowBox[{"Astronomy", " ", "and", " ", "Astrophysics", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ISSN", " ", "0004"}], "-", "6361"}], ")"}]}], ",", 
    RowBox[{"vol", ".", "146"}], ",", 
    RowBox[{"no", ".", "2"}], ",", 
    RowBox[{"May", " ", "1985"}], ",", 
    RowBox[{
     RowBox[{"p", ".", "260"}], "-", "268."}]}], "\[IndentingNewLine]", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070894618835497`*^9, 3.507089487266001*^9}, {
   3.5070895585460787`*^9, 3.5070895775531654`*^9}, {3.5070898472195897`*^9, 
   3.507089858139214*^9}, {3.507093004962202*^9, 3.507093010187501*^9}, {
   3.641640499664193*^9, 3.64164051394601*^9}, 3.658486283601878*^9, 
   3.6584943465411386`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"conv", " ", "\[Rule]", " ", 
     RowBox[{
     "convert", " ", "rationals", " ", "onto", " ", "machine", " ", 
      "precision", " ", "numbers"}]}], ";", " ", 
    RowBox[{
    "if", " ", "you", " ", "prefer", " ", "to", " ", "keep", " ", 
     "rationals"}]}], ",", " ", "use", " ", ",", ",", 
   RowBox[{
    RowBox[{"identity", "''"}], " ", "conv"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.5077785992268653`*^9, 3.507778656450138*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$OperatingSystem"], "Input",
 CellChangeTimes->{{3.6578705493581047`*^9, 3.6578705527542987`*^9}}],

Cell[BoxData["\<\"Unix\"\>"], "Output",
 CellChangeTimes->{3.661426060893629*^9, 3.661426170291276*^9, 
  3.661426259232723*^9, 3.661426446347468*^9, 3.6614268898061743`*^9, 
  3.6614270150093727`*^9, 3.66142746499253*^9, 3.661427805856489*^9, 
  3.661427849229191*^9, 3.661428287592388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$HomeDirectory"], "Input",
 CellChangeTimes->{{3.658484359260812*^9, 3.658484360819901*^9}}],

Cell[BoxData["\<\"/home/misiek\"\>"], "Output",
 CellChangeTimes->{3.661426060967128*^9, 3.6614261703608932`*^9, 
  3.661426259300795*^9, 3.661426446371758*^9, 3.661426889876392*^9, 
  3.661427015067354*^9, 3.6614274650465612`*^9, 3.661427805913762*^9, 
  3.6614278492901087`*^9, 3.66142828763023*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "==", "\"\<Windows\>\""}], ",", 
    "\"\<H:\\\\misiek/RotatingStars/EM/SolidRotation/\>\"", ",", " ", 
    "\"\</home/misiek/RotatingStars/EM/SolidRotation/\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.657346712678154*^9, 3.65734672862111*^9}, {
  3.657437235641415*^9, 3.657437244809177*^9}, {3.65787054333876*^9, 
  3.657870589762415*^9}}],

Cell[BoxData["\<\"/home/misiek/RotatingStars/EM/SolidRotation/\"\>"], "Output",
 CellChangeTimes->{3.6614260610587673`*^9, 3.66142617043757*^9, 
  3.661426259375033*^9, 3.6614264463919363`*^9, 3.6614268899424458`*^9, 
  3.66142701511662*^9, 3.661427465113785*^9, 3.661427805967433*^9, 
  3.6614278493499804`*^9, 3.661428287664836*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"conv", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"N", "[", "#", "]"}], "&"}], ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.507692044454732*^9, 3.507692056254407*^9}, {
   3.507692114099715*^9, 3.507692114388732*^9}, 3.659261504592897*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conv", "=", 
  RowBox[{"(", 
   RowBox[{"#", " ", "&"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.507692108428391*^9, 3.5076921254843664`*^9}}],

Cell[BoxData[
 RowBox[{"#1", "&"}]], "Output",
 CellChangeTimes->{3.6614260611290283`*^9, 3.6614261705061007`*^9, 
  3.661426259457242*^9, 3.661426446423312*^9, 3.661426890018818*^9, 
  3.661427015177326*^9, 3.6614274651883183`*^9, 3.661427806040801*^9, 
  3.661427849417777*^9, 3.66142828771804*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NT", "=", "9", 
  RowBox[{"(*", " ", 
   RowBox[{"angular", " ", "rays", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MAX", " ", "NT"}], "=", 
      RowBox[{"24", " ", "tested"}]}], ")"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5069999391570945`*^9, 3.506999940024144*^9}, {
   3.5070872597915974`*^9, 3.507087273088358*^9}, {3.507088373617304*^9, 
   3.5070883773745193`*^9}, {3.507091257554256*^9, 3.5070912576542616`*^9}, {
   3.5070914434238873`*^9, 3.50709146200895*^9}, {3.5071013966661797`*^9, 
   3.5071013967751865`*^9}, {3.5071022943815265`*^9, 
   3.5071022952205744`*^9}, {3.5072072782850547`*^9, 3.507207278568071*^9}, {
   3.5072714146471663`*^9, 3.5072714147641735`*^9}, {3.507271535965105*^9, 
   3.5072715360491104`*^9}, {3.5072751124826703`*^9, 
   3.5072751142767735`*^9}, {3.507277250019931*^9, 3.507277251340006*^9}, {
   3.507285186155386*^9, 3.507285186234396*^9}, {3.507286271639225*^9, 
   3.507286273807*^9}, {3.507286380520051*^9, 3.507286380838092*^9}, {
   3.5072945761304164`*^9, 3.5072945851729336`*^9}, {3.5072963943164105`*^9, 
   3.5072963952804656`*^9}, {3.5073073659769535`*^9, 3.507307366048958*^9}, {
   3.507438273803265*^9, 3.50743829661957*^9}, {3.507438747277346*^9, 
   3.5074387476483674`*^9}, {3.5074404160177927`*^9, 3.507440416391814*^9}, {
   3.507445302789632*^9, 3.507445306766859*^9}, {3.5074735847524505`*^9, 
   3.5074735848744574`*^9}, {3.5074740968487406`*^9, 
   3.5074740977157907`*^9}, {3.5075147686495256`*^9, 3.507514772305735*^9}, {
   3.507515843162985*^9, 3.5075158434900036`*^9}, {3.507516398653757*^9, 
   3.5075164036060405`*^9}, {3.507517486078954*^9, 3.5075174885660963`*^9}, {
   3.507546831205659*^9, 3.50754683174969*^9}, {3.507550666249011*^9, 
   3.507550667588088*^9}, {3.5075594011716204`*^9, 3.5075594036437616`*^9}, {
   3.5076085447829485`*^9, 3.507608545657999*^9}, {3.5076090661767707`*^9, 
   3.507609066670799*^9}, {3.5076094666806784`*^9, 3.5076094673517165`*^9}, {
   3.5076097443935623`*^9, 3.5076097447795844`*^9}, {3.5076126358009415`*^9, 
   3.5076126366759915`*^9}, {3.507647851236143*^9, 3.5076478522492013`*^9}, {
   3.5076493789035206`*^9, 3.507649379267542*^9}, {3.507650111710435*^9, 
   3.5076501120374537`*^9}, {3.5076507699360833`*^9, 
   3.5076507704241114`*^9}, {3.50768833616263*^9, 3.5076883377807226`*^9}, {
   3.5076905989840555`*^9, 3.50769059957909*^9}, {3.5076924641851215`*^9, 
   3.5076924647271523`*^9}, {3.507694476743233*^9, 3.507694477311266*^9}, {
   3.507695106591258*^9, 3.5076951076253176`*^9}, {3.5076977541396894`*^9, 
   3.507697754290698*^9}, {3.507698468644557*^9, 3.5076984690015774`*^9}, {
   3.5077027493664*^9, 3.5077027498684287`*^9}, 3.5077078120729704`*^9, {
   3.507708789843896*^9, 3.507708790058908*^9}, {3.5077194507418413`*^9, 
   3.5077194514088793`*^9}, 3.507720269608678*^9, {3.507720440969479*^9, 
   3.5077204418715305`*^9}, {3.5077215736542645`*^9, 3.5077215737512703`*^9}, 
   3.507734399144841*^9, {3.507735192213202*^9, 3.5077351928632393`*^9}, {
   3.507778700099635*^9, 3.507778701497715*^9}, {3.5078948226079855`*^9, 
   3.507894823527038*^9}, {3.507905574224943*^9, 3.5079055747759743`*^9}, {
   3.508136938787391*^9, 3.5081369391024094`*^9}, {3.5089079653014755`*^9, 
   3.50890796538348*^9}, {3.5255048094689565`*^9, 3.525504810454013*^9}, {
   3.657280008943184*^9, 3.657280009686226*^9}, {3.6572810220961328`*^9, 
   3.657281045383465*^9}, {3.657286140764904*^9, 3.6572861419549723`*^9}, {
   3.657437250937127*^9, 3.657437251753129*^9}, {3.657439378690579*^9, 
   3.6574393862419643`*^9}, {3.657446588005608*^9, 3.657446602340404*^9}, {
   3.65752372649645*^9, 3.657523731888152*^9}, {3.657524245739304*^9, 
   3.657524246554991*^9}, {3.658482980745965*^9, 3.6584829810729837`*^9}, {
   3.65848501609138*^9, 3.6584850171224394`*^9}, {3.658643026674111*^9, 
   3.658643039041862*^9}, {3.658661229780395*^9, 3.658661230226905*^9}, {
   3.659251949408882*^9, 3.659251950800624*^9}, {3.6592591726884127`*^9, 
   3.65925917460809*^9}, {3.659261657268848*^9, 3.659261661428274*^9}, 
   3.659337226271578*^9, 3.659337787674045*^9, {3.6596905701770563`*^9, 
   3.659690582784438*^9}, {3.660974197747651*^9, 3.6609741981948557`*^9}, {
   3.6609745871838913`*^9, 3.6609745872788353`*^9}, {3.6609747236462393`*^9, 
   3.660974723981893*^9}, {3.6609752338011208`*^9, 3.660975283207003*^9}, {
   3.660975436294873*^9, 3.660975436694044*^9}, {3.660975501766226*^9, 
   3.6609755093488417`*^9}, {3.660975609797689*^9, 3.6609756116994963`*^9}, {
   3.660975772226019*^9, 3.660975772353629*^9}, {3.6609761257588882`*^9, 
   3.660976126286375*^9}, {3.6609766406495028`*^9, 3.660976643192506*^9}, {
   3.6609776237592907`*^9, 3.660977624638331*^9}, {3.6609779123003283`*^9, 
   3.6609779125865088`*^9}, {3.660978264855836*^9, 3.660978265111657*^9}, {
   3.6609930833466797`*^9, 3.660993084322166*^9}, {3.6613411219134293`*^9, 
   3.661341122281067*^9}, {3.66142051241676*^9, 3.661420513416648*^9}, {
   3.661420972917644*^9, 3.661420973333199*^9}, {3.6614232746384277`*^9, 
   3.661423275205963*^9}, {3.6614253770700827`*^9, 3.661425378029893*^9}, {
   3.661425702043994*^9, 3.6614257027397137`*^9}, {3.661426242024844*^9, 
   3.661426242840111*^9}, {3.661427291169406*^9, 3.661427291441064*^9}}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.6614260611940613`*^9, 3.661426170584332*^9, 
  3.661426259524517*^9, 3.66142644645042*^9, 3.661426890083371*^9, 
  3.661427015230166*^9, 3.661427465248608*^9, 3.661427806094145*^9, 
  3.661427849472616*^9, 3.661428287749096*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NR", "=", "9", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"radial", " ", "slices"}], ",", " ", 
    RowBox[{"including", " ", "surface"}], ",", " ", 
    RowBox[{"without", " ", "center", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MAX", " ", "NR"}], "=", 
       RowBox[{"32", " ", "tested"}]}], " ", ")"}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.507000077681018*^9, 3.507000079730135*^9}, {
   3.50700320429585*^9, 3.507003204507862*^9}, {3.5070872747834544`*^9, 
   3.5070873028100576`*^9}, {3.507088379533643*^9, 3.5070883798556614`*^9}, {
   3.5071013987502995`*^9, 3.5071013997593565`*^9}, {3.507102297657714*^9, 
   3.507102297847725*^9}, {3.5072072812942266`*^9, 3.5072072813922324`*^9}, {
   3.507271416766288*^9, 3.5072714172373147`*^9}, {3.5072718084056883`*^9, 
   3.5072718089177175`*^9}, {3.5072725679671326`*^9, 3.507272569724233*^9}, {
   3.507274700158087*^9, 3.5072747002380915`*^9}, {3.507275117174939*^9, 
   3.507275117283945*^9}, {3.5072772536591387`*^9, 3.5072772540391607`*^9}, {
   3.5072782411236186`*^9, 3.5072782412216244`*^9}, {3.5072851880631285`*^9, 
   3.5072851888927336`*^9}, {3.507286275820256*^9, 3.5072862765083437`*^9}, {
   3.5072863832228947`*^9, 3.5072863842725277`*^9}, {3.5072945788615723`*^9, 
   3.5072945797186213`*^9}, {3.507296397364585*^9, 3.5072963979186163`*^9}, {
   3.507307368732111*^9, 3.507307369221139*^9}, {3.507433169800333*^9, 
   3.5074331703903666`*^9}, {3.507434265493003*^9, 3.507434266420056*^9}, {
   3.5074382762554054`*^9, 3.5074383067501497`*^9}, {3.5074387496184797`*^9, 
   3.50743875976206*^9}, 3.507439980006854*^9, 3.5074404182129183`*^9, 
   3.5074453115891347`*^9, {3.5074730513239403`*^9, 3.5074730530580397`*^9}, {
   3.5074735876546164`*^9, 3.507473587800625*^9}, {3.507474100118928*^9, 
   3.507474100589955*^9}, {3.507514774089837*^9, 3.507514774208844*^9}, {
   3.5075158483542814`*^9, 3.507515849122326*^9}, {3.5075164116545005`*^9, 
   3.507516412893572*^9}, {3.50751749195829*^9, 3.5075174937743945`*^9}, {
   3.50751770331738*^9, 3.5075177044444437`*^9}, {3.5075231882631006`*^9, 
   3.5075231889291387`*^9}, {3.507550669756212*^9, 3.5075506706132607`*^9}, {
   3.507559407249968*^9, 3.5075594098661175`*^9}, {3.507609068643912*^9, 
   3.507609069722974*^9}, {3.5076094697458534`*^9, 3.5076094712319384`*^9}, {
   3.507609746636691*^9, 3.5076097470027113`*^9}, {3.5076126384280915`*^9, 
   3.50761263927814*^9}, {3.507647853647281*^9, 3.5076478540513043`*^9}, {
   3.507649381966696*^9, 3.507649382840746*^9}, {3.5076501135355396`*^9, 
   3.5076501136045437`*^9}, {3.507650771935198*^9, 3.5076507725592337`*^9}, {
   3.5076883415629387`*^9, 3.5076883418029523`*^9}, {3.507690601733213*^9, 
   3.5076906021542373`*^9}, {3.5076924668462734`*^9, 3.507692468231353*^9}, {
   3.5076944726239977`*^9, 3.5076944737960644`*^9}, {3.507702752040553*^9, 
   3.5077027531466165`*^9}, {3.507707814543112*^9, 3.5077078149251337`*^9}, {
   3.507708791706002*^9, 3.5077087920650225`*^9}, {3.5077194529669685`*^9, 
   3.5077194536100054`*^9}, 3.507720271602792*^9, {3.507720444363673*^9, 
   3.5077204445026813`*^9}, {3.5077215755653744`*^9, 3.5077215782265263`*^9}, 
   3.5077351952163734`*^9, 3.507778703930854*^9, {3.5077798356555853`*^9, 
   3.507779836858654*^9}, {3.50780110548645*^9, 3.507801106129487*^9}, {
   3.5078095248940125`*^9, 3.507809528906242*^9}, {3.5078948249121175`*^9, 
   3.5078948256941624`*^9}, {3.507905576984101*^9, 3.5079055771551104`*^9}, {
   3.5081369410985236`*^9, 3.5081369419425716`*^9}, {3.5089079676376085`*^9, 
   3.5089079681216364`*^9}, {3.508909038274846*^9, 3.5089090385158596`*^9}, 
   3.525504812389124*^9, {3.6572800123583794`*^9, 3.657280012630395*^9}, {
   3.6572810478396053`*^9, 3.6572810486396513`*^9}, {3.6572861439950886`*^9, 
   3.6572861449471436`*^9}, {3.657437254041092*^9, 3.657437257528936*^9}, {
   3.6574393817145033`*^9, 3.657439389601565*^9}, {3.657446604869203*^9, 
   3.6574466059409447`*^9}, {3.657523734480571*^9, 3.657523735744114*^9}, {
   3.65752424906739*^9, 3.65752425005939*^9}, {3.6584830087055645`*^9, 
   3.658483009048584*^9}, {3.658485019075551*^9, 3.658485020338623*^9}, {
   3.65864303313802*^9, 3.658643047505837*^9}, {3.658661232483818*^9, 
   3.6586612334269*^9}, {3.659251954704706*^9, 3.659251956093524*^9}, {
   3.659259176944697*^9, 3.659259178176139*^9}, {3.659261664084529*^9, 
   3.659261664692492*^9}, 3.659337228559617*^9, 3.659337793305519*^9, {
   3.659690585040484*^9, 3.659690585136026*^9}, {3.660974200307626*^9, 
   3.660974202179605*^9}, {3.660974589231779*^9, 3.66097458931087*^9}, {
   3.660974725470244*^9, 3.660974725549371*^9}, {3.660975235848104*^9, 
   3.660975285015432*^9}, {3.660975438230484*^9, 3.660975438309503*^9}, {
   3.660975503381742*^9, 3.660975511092698*^9}, {3.660975613300621*^9, 
   3.6609756133953953`*^9}, {3.660975774002877*^9, 3.6609757740662622`*^9}, {
   3.660976128142992*^9, 3.660976128398233*^9}, {3.660976644777296*^9, 
   3.6609766449207487`*^9}, {3.660977626206708*^9, 3.6609776266857147`*^9}, {
   3.66097778918143*^9, 3.6609777893879147`*^9}, {3.6609779142387447`*^9, 
   3.660977914666565*^9}, {3.6609782668563433`*^9, 3.66097826762376*^9}, {
   3.660993086434203*^9, 3.660993086833665*^9}, {3.661341124016808*^9, 
   3.6613411242331867`*^9}, {3.661420515888693*^9, 3.661420520792575*^9}, {
   3.661420975381627*^9, 3.661420975653425*^9}, {3.661423278197856*^9, 
   3.661423279845893*^9}, {3.661425379589943*^9, 3.661425380573811*^9}, {
   3.6614257044439898`*^9, 3.6614257055317373`*^9}, {3.661426873252619*^9, 
   3.661426873755838*^9}, {3.661427457048348*^9, 3.6614274578715763`*^9}}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.6614260612667007`*^9, 3.661426170658863*^9, 
  3.661426259599029*^9, 3.661426446478754*^9, 3.6614268901499166`*^9, 
  3.661427015288087*^9, 3.661427465303672*^9, 3.661427806149057*^9, 
  3.661427849528867*^9, 3.661428287782271*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NL", "=", "6", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "Legendre", " ", "polynomials", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MAX", " ", "NL"}], "=", 
       RowBox[{"20", " ", "tested"}]}], ")"}], ".", " ", 
     RowBox[{"WARNING", ":", " ", 
      RowBox[{"too", " ", "large", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"e", ".", "g", ".", " ", "NL"}], "=", "32"}], ")"}], " ", 
       "number", " ", "of", " ", "Legendere", " ", "polynomials", " ", 
       "might", " ", "cause", " ", "numerical", " ", "instability", " ", 
       "and", " ", "catastrophic", " ", 
       RowBox[{"errors", " ", "!"}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070926671708813`*^9, 3.5070926792195706`*^9}, {
   3.5072072870955586`*^9, 3.5072072884746375`*^9}, {3.507277186070273*^9, 
   3.5072771861632786`*^9}, {3.5072863895416965`*^9, 
   3.5072863896927156`*^9}, {3.5072945899312057`*^9, 
   3.5072945900132103`*^9}, {3.507296401851842*^9, 3.5072964020618534`*^9}, {
   3.507306351360921*^9, 3.5073063519179525`*^9}, {3.507438279746605*^9, 
   3.507438319326869*^9}, {3.5074403859320717`*^9, 3.5074403864451013`*^9}, {
   3.507440420097026*^9, 3.5074404204360456`*^9}, {3.5074453131592245`*^9, 
   3.5074453137352576`*^9}, {3.5074735944540052`*^9, 
   3.5074735948210263`*^9}, {3.50747410208304*^9, 3.507474103265108*^9}, {
   3.507514775865939*^9, 3.507514775960944*^9}, {3.507515851738475*^9, 
   3.507515852209502*^9}, {3.5075225426391726`*^9, 3.5075225429641914`*^9}, {
   3.5076085371745133`*^9, 3.507608538287577*^9}, 3.507647857313491*^9, 
   3.5076507779605427`*^9, 3.5076883443390975`*^9, 3.5076903139567533`*^9, {
   3.5077352011287117`*^9, 3.507735201476732*^9}, {3.507779840043836*^9, 
   3.507779883141301*^9}, {3.5077911438173747`*^9, 3.50779114408339*^9}, {
   3.507801114384959*^9, 3.5078011145999713`*^9}, {3.5079055794792433`*^9, 
   3.5079055795682487`*^9}, {3.6575237392323503`*^9, 3.657523739664226*^9}, {
   3.657524252554977*^9, 3.65752425337064*^9}, {3.658483028065672*^9, 
   3.658483028136676*^9}, {3.658661236675501*^9, 3.658661236803491*^9}, {
   3.659259180032249*^9, 3.6592591805441628`*^9}, {3.6592616676685658`*^9, 
   3.6592616761963177`*^9}, {3.6593372308154907`*^9, 
   3.6593372341272383`*^9}, {3.659337795337673*^9, 3.6593377958645287`*^9}, {
   3.659347632879388*^9, 3.6593476339341784`*^9}, {3.659675593168861*^9, 
   3.659675600192498*^9}, {3.6596757175157003`*^9, 3.6596757197905197`*^9}, {
   3.659676257896892*^9, 3.659676258456184*^9}, {3.659677023054994*^9, 
   3.659677023934681*^9}, {3.659777040911091*^9, 3.65977704711804*^9}, {
   3.660974204323566*^9, 3.660974204738798*^9}, {3.6609745909110203`*^9, 
   3.66097459099111*^9}, {3.660974727006548*^9, 3.660974727069388*^9}, {
   3.6609752376570253`*^9, 3.6609752865833607`*^9}, {3.6609754397986383`*^9, 
   3.660975439861511*^9}, {3.6609755050778637`*^9, 3.6609755127248383`*^9}, {
   3.6609756150606194`*^9, 3.6609756152194977`*^9}, {3.660975775554927*^9, 
   3.6609757756178913`*^9}, {3.660976130238997*^9, 3.660976130686082*^9}, {
   3.660976646520727*^9, 3.660976646584858*^9}, {3.660977526624569*^9, 
   3.6609775271355953`*^9}, {3.6609776283674383`*^9, 3.660977628653458*^9}, {
   3.6609782691122017`*^9, 3.660978269463797*^9}, {3.660993089058323*^9, 
   3.660993089426*^9}, {3.66142052257675*^9, 3.6614205235446577`*^9}, {
   3.6614209774536963`*^9, 3.661420977693576*^9}, {3.661423281654078*^9, 
   3.6614232826460648`*^9}, {3.6614257068200073`*^9, 3.661425708419799*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.661426061331506*^9, 3.661426170737548*^9, 
  3.661426259675568*^9, 3.661426446501835*^9, 3.661426890221951*^9, 
  3.6614270153450947`*^9, 3.6614274653692293`*^9, 3.661427806208816*^9, 
  3.661427849589546*^9, 3.661428287819804*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"R", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<R\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"radius", " ", "of", " ", "the", " ", "stellar", " ", "surface"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.506999862689721*^9, 3.5069998789156485`*^9}, {
   3.506999929860563*^9, 3.5069999357138977`*^9}, {3.506999965950627*^9, 
   3.506999994067235*^9}, {3.5076126405472126`*^9, 3.507612641739281*^9}, {
   3.5077014139120164`*^9, 3.507701452824242*^9}, {3.5077787189717145`*^9, 
   3.507778723534975*^9}, 3.657446616356412*^9, 3.658483035514098*^9, 
   3.658643060146208*^9, 3.66097524788*^9, 3.660975306999943*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"r", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"j", "/", "NR"}], "*", 
        RowBox[{"R", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], "//", "conv"}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"discretized", " ", "radial", " ", "grid", " ", "coordinates"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.50700001338834*^9, 3.5070001173872886`*^9}, {
   3.5074335677190924`*^9, 3.507433568136116*^9}, {3.5074383234761057`*^9, 
   3.507438323745122*^9}, {3.5074460003825316`*^9, 3.507446000771554*^9}, {
   3.507688351675517*^9, 3.5076883577788663`*^9}, {3.5077014548063555`*^9, 
   3.50770145575841*^9}, {3.5077787369807444`*^9, 3.5077787555988092`*^9}, 
   3.657446627445154*^9, 3.660975253032539*^9, 3.6609753112559757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]r", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"R", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/", "NR"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], "//", "conv"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"trapezoidal", " ", "integration", " ", "rule"}], ",", " ", 
    RowBox[{"central", " ", "point", " ", "not", " ", "included"}], ",", " ", 
    RowBox[{"surface", " ", "weigth", " ", "assumed", " ", "ZERO"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.507005420112587*^9, 3.5070054568346877`*^9}, {
   3.507091619952984*^9, 3.507091672230974*^9}, {3.507433574042454*^9, 
   3.507433574468478*^9}, {3.507438331202548*^9, 3.507438331634573*^9}, {
   3.5074460061698627`*^9, 3.507446006508882*^9}, {3.5076883623241262`*^9, 
   3.507688362684147*^9}, {3.507701465362959*^9, 3.507701467877103*^9}, 
   3.657446630676011*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pi", "/", "2"}], "*", 
        RowBox[{"i", "/", 
         RowBox[{"(", 
          RowBox[{"NT", "-", "1"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"NT", "-", "1"}]}], "}"}]}], "]"}], "//", "conv"}]}], ";"}], 
  "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"angular", " ", "grid"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070001792198253`*^9, 3.5070002821447124`*^9}, {
   3.5074335813638725`*^9, 3.507433582003909*^9}, {3.50743833578281*^9, 
   3.5074383384729643`*^9}, {3.5074460113021564`*^9, 
   3.5074460116571765`*^9}, {3.5076883672114058`*^9, 3.507688367563426*^9}, {
   3.5077014832869844`*^9, 3.507701484331044*^9}, {3.5077787717937355`*^9, 
   3.507778776172986*^9}, 3.660975316135915*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]\[Theta]", "=", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"NT", "-", "1"}], ")"}]}], "/", "2"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"NT", "-", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"NT", "-", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"NT", "-", "1"}], ")"}]}], "/", "2"}], "}"}]}], "]"}], " ",
      "//", "conv"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"trapezoidal", " ", "rule"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.50700534603835*^9, 3.507005369691703*^9}, {
   3.5070911960887403`*^9, 3.5070912214471908`*^9}, {3.5070912537560387`*^9, 
   3.507091270163977*^9}, {3.5070913382078695`*^9, 3.5070913704017105`*^9}, {
   3.5070914763377695`*^9, 3.5070914831491594`*^9}, {3.5074335899803658`*^9, 
   3.50743359040739*^9}, {3.5074383423961887`*^9, 3.507438342667204*^9}, {
   3.507446015634404*^9, 3.507446016017426*^9}, {3.50768837270072*^9, 
   3.507688373004737*^9}, {3.507701487939251*^9, 3.507701489240325*^9}, 
   3.657446639509211*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<\[Rho]\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<x\>\"", "<>", 
          RowBox[{"ToString", "[", "j", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "unknown", " ", "densities", " ", "at", " ", "grid", " ", "points"}], ";",
     " ", 
    RowBox[{"zero", " ", "at", " ", "surface"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070013888920145`*^9, 3.5070014724917965`*^9}, {
   3.5070015040926037`*^9, 3.507001520266529*^9}, {3.507546951397534*^9, 
   3.5075469814592533`*^9}, {3.507547058276647*^9, 3.507547062508889*^9}, {
   3.5077787993833137`*^9, 3.507778829751051*^9}, 3.6574466456691427`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"(", 
    RowBox[{"\[CapitalOmega]0", "&"}], ")"}], " ", 
   RowBox[{"(*", 
    RowBox[{"solid", " ", "body", " ", "rotation"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.5074452177997704`*^9, 3.507445232325601*^9}, {
   3.5074452789072657`*^9, 3.5074452869117236`*^9}, {3.5076131645981865`*^9, 
   3.507613172058614*^9}, {3.5079055990643635`*^9, 3.5079056054237275`*^9}, 
   3.6572800346566544`*^9, 3.657281082105565*^9}],

Cell[BoxData[
 RowBox[{"\[CapitalOmega]0", "&"}]], "Output",
 CellChangeTimes->{3.6614260614495687`*^9, 3.661426170851335*^9, 
  3.661426259811605*^9, 3.6614264465494432`*^9, 3.661426890341078*^9, 
  3.6614270154261017`*^9, 3.661427465488092*^9, 3.661427806310389*^9, 
  3.661427849682232*^9, 3.661428287890966*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"\[CapitalOmega]", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[CapitalOmega]0", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"#", "^", "2"}], "/", 
          RowBox[{"A", "^", "2"}]}]}], ")"}]}], "&"}], ")"}]}], "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"j", "-", 
    RowBox[{"const", " ", "rotation", " ", "law"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072952811287403`*^9, 3.5072953005858526`*^9}, {
   3.50744520486003*^9, 3.507445212186449*^9}, {3.507778837502494*^9, 
   3.5077788460819845`*^9}, 3.6572810746401377`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"-", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"\[Zeta]", " ", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "[", "\[Zeta]", "]"}], "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Zeta]", ",", "0", ",", "x"}], "}"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.5072749843903437`*^9, 3.5072749847063622`*^9}, {
   3.507275149987816*^9, 3.5072751501248236`*^9}, {3.507278140165844*^9, 
   3.5072781406658726`*^9}, 3.5072782637329116`*^9, 3.507278337904154*^9, {
   3.507278403673916*^9, 3.50727840374292*^9}, 3.5072786230424633`*^9, {
   3.5072787122795672`*^9, 3.5072787124285755`*^9}, {3.507295401903648*^9, 
   3.507295467771415*^9}, 3.6575237568182487`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Refine", "[", 
   RowBox[{"%", ",", 
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", 
     RowBox[{"A", ">", "0"}]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5074453477942057`*^9, 3.507445378954988*^9}, 
   3.65752375920151*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\[CapitalPhi]C", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox["#", "2"], " ", 
     SuperscriptBox["\[CapitalOmega]0", "2"]}], "&"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"solid", " ", "body", " ", "rotation"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.507295486700498*^9, 3.50729550666364*^9}, {
   3.50729572258899*^9, 3.5072957358227468`*^9}, {3.507690614948969*^9, 
   3.507690618049146*^9}, {3.5079056097499747`*^9, 3.507905614274234*^9}, 
   3.6572800606901436`*^9, 3.6572810965443907`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   SuperscriptBox["#1", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]0", "2"]}], "&"}]], "Output",
 CellChangeTimes->{3.661426061533448*^9, 3.661426170929895*^9, 
  3.661426259897373*^9, 3.661426446586997*^9, 3.661426890422536*^9, 
  3.661427015487241*^9, 3.6614274655636663`*^9, 3.661427806396325*^9, 
  3.6614278497604027`*^9, 3.661428287961512*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"\[CapitalPhi]C", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"A", "^", "2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]0", "^", "2"}], "/", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"#", "^", "2"}], "/", 
          RowBox[{"A", "^", "2"}]}]}], ")"}]}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]0", "2"]}]}], "&"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"centrifugal", " ", "potential"}], ";", " ", 
    RowBox[{"normalized", " ", "to", " ", "zero", " ", "at", " ", 
     RowBox[{"center", " ", "!"}]}]}], " ", "*)"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5074404308956437`*^9, 3.507440452738893*^9}, {
   3.5074406692812786`*^9, 3.50744068417113*^9}, 3.5074454044374456`*^9, {
   3.5074731040269547`*^9, 3.507473107182135*^9}, {3.5074738537558365`*^9, 
   3.507473859466163*^9}, {3.507778850292226*^9, 3.507778865650104*^9}, 
   3.657281090854066*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPhi]C", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.507778873122531*^9, 3.5077788762367096`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.661426061598555*^9, 3.661426171001306*^9, 
  3.661426259972568*^9, 3.661426446617895*^9, 3.661426890499207*^9, 
  3.661427015536961*^9, 3.661427465635268*^9, 3.661427806460065*^9, 
  3.661427849825266*^9, 3.661428288004006*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"\[CapitalPhi]C", "[", "x", "]"}], ",", 
    RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.507778884357174*^9, 3.507778894691765*^9}, 
   3.657523764015202*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"kernel0", "[", 
     RowBox[{
      RowBox[{"ra_", "?", "NumericQ"}], ",", 
      RowBox[{"Cos\[Theta]a_", "?", "NumericQ"}], ",", 
      RowBox[{"rb_", "?", "NumericQ"}], ",", 
      RowBox[{"Cos\[Theta]b_", "?", "NumericQ"}], ",", 
      RowBox[{"nLeg_", "?", "NumericQ"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ra", "\[GreaterEqual]", "rb"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"rb", "^", 
           RowBox[{"(", 
            RowBox[{"2", "n"}], ")"}]}], "/", 
          RowBox[{"ra", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"2", " ", "n"}], ",", " ", "Cos\[Theta]a"}], "]"}], "*", 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"2", "n"}], " ", ",", "Cos\[Theta]b"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "nLeg"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ra", "^", 
           RowBox[{"(", 
            RowBox[{"2", "n"}], ")"}]}], "/", 
          RowBox[{"rb", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"2", " ", "n"}], ",", " ", "Cos\[Theta]a"}], "]"}], "*", 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"2", "n"}], " ", ",", "Cos\[Theta]b"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "nLeg"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.507438428518114*^9, 3.5074385456068115`*^9}, {
   3.5074386156118155`*^9, 3.507438628039526*^9}, {3.5074388330972548`*^9, 
   3.5074388360294223`*^9}, 3.507439050142669*^9, 3.5074391073129387`*^9, {
   3.5074398373596954`*^9, 3.5074398488463526`*^9}, 3.507461132722235*^9, {
   3.5075221409411974`*^9, 3.507522215945487*^9}, {3.5076133116856003`*^9, 
   3.507613316710887*^9}, {3.5076478832459745`*^9, 3.5076478855041037`*^9}, {
   3.507650506376009*^9, 3.507650515165511*^9}, {3.5076508003818245`*^9, 
   3.5076508042450457`*^9}, {3.507702785886489*^9, 3.5077027943709745`*^9}, {
   3.659675776733437*^9, 3.659675782350647*^9}, {3.659689392639531*^9, 
   3.6596893975658293`*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefaultCCompiler", "[", "]"}]], "Input"],

Cell[BoxData["CCompilerDriver`GCCCompiler`GCCCompiler"], "Output",
 CellChangeTimes->{3.661426061694415*^9, 3.661426171098153*^9, 
  3.661426260054377*^9, 3.66142644667066*^9, 3.661426890602786*^9, 
  3.6614270156168127`*^9, 3.661427465747394*^9, 3.6614278065444717`*^9, 
  3.661427849925041*^9, 3.661428288070475*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$CCompiler"], "Input",
 CellChangeTimes->{{3.5076487220409503`*^9, 3.5076487220419507`*^9}}],

Cell[BoxData["Automatic"], "Output",
 CellChangeTimes->{3.661426061770432*^9, 3.6614261711697063`*^9, 
  3.661426260118705*^9, 3.661426446694628*^9, 3.661426890664259*^9, 
  3.661427015653675*^9, 3.661427465817445*^9, 3.6614278066004*^9, 
  3.661427849975418*^9, 3.661428288103498*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", "Automatic"}]], "Input",
 CellChangeTimes->{{3.660975145112666*^9, 3.6609751451214333`*^9}}],

Cell[BoxData["Automatic"], "Output",
 CellChangeTimes->{3.661426061887401*^9, 3.661426171293235*^9, 
  3.66142626018824*^9, 3.661426446718812*^9, 3.661426890742955*^9, 
  3.6614270157035522`*^9, 3.661427465887093*^9, 3.661427806664134*^9, 
  3.661427850033547*^9, 3.6614282881392803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$CCompiler", "=", 
  RowBox[{"DefaultCCompiler", "[", "]"}]}]], "Input",
 CellChangeTimes->{3.5076488032365947`*^9}],

Cell[BoxData["CCompilerDriver`GCCCompiler`GCCCompiler"], "Output",
 CellChangeTimes->{3.661426061947674*^9, 3.661426171357499*^9, 
  3.661426260326007*^9, 3.661426446743034*^9, 3.661426890863566*^9, 
  3.6614270157544203`*^9, 3.66142746595333*^9, 3.661427806724738*^9, 
  3.661427850092667*^9, 3.6614282881790953`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"part1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"rb", "^", 
        RowBox[{"(", 
         RowBox[{"2", "n"}], ")"}]}], "/", 
       RowBox[{"ra", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.507689464916191*^9, 3.507689509395735*^9}, 
   3.5076906369382267`*^9, {3.5076950391223993`*^9, 3.5076950423725853`*^9}, 
   3.6596886062641478`*^9, {3.659688814053831*^9, 3.6596888164206743`*^9}, {
   3.659689126738173*^9, 3.659689128033052*^9}, {3.6596892247531013`*^9, 
   3.659689237839781*^9}, {3.659689621500389*^9, 3.6596896513353357`*^9}, {
   3.659690342085038*^9, 3.659690342434844*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part1NEW", "=", 
   RowBox[{"part1", "//", "HornerForm"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.659688613585133*^9, 3.659688617526916*^9}, 
   3.659688656408658*^9, {3.659689130210526*^9, 3.659689136433375*^9}, {
   3.659689228144617*^9, 3.659689232576748*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part2", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ra", "^", 
        RowBox[{"(", 
         RowBox[{"2", "n"}], ")"}]}], "/", 
       RowBox[{"rb", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5076895216674366`*^9, 3.5076895310359726`*^9}, 
   3.507690639825392*^9, {3.5076950474138737`*^9, 3.5076950489799633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part2NEW", "=", 
   RowBox[{"part2", "//", "HornerForm"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6596769704956617`*^9, 3.659676986222657*^9}, {
  3.659689177425458*^9, 3.6596891839848003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part1Da", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rb", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", 
         RowBox[{"ra", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], ",", "ra"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.507689902179201*^9, 3.507689927845669*^9}, 
   3.5076906419355125`*^9, {3.507695051809125*^9, 3.507695053255208*^9}, {
   3.657437286856653*^9, 3.657437287992927*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part1Db", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rb", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", 
         RowBox[{"ra", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], ",", "rb"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5076899397653503`*^9, 3.5076899421784887`*^9}, 
   3.507690644229644*^9, {3.5076950585145082`*^9, 3.507695060200605*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part2Da", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ra", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", 
         RowBox[{"rb", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], ",", "ra"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5076899598585*^9, 3.5076899784725647`*^9}, 
   3.5076906468167915`*^9, {3.507695063993822*^9, 3.5076950653539*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"part2Db", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ra", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", 
         RowBox[{"rb", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]}], ",", "rb"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", " ", "ca"}], "]"}], "*", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"2", "n"}], " ", ",", "cb"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NL"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5076899944314775`*^9, 3.5076900005278263`*^9}, 
   3.5076906493359356`*^9, {3.507695069766152*^9, 3.5076950713472424`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kernel5", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ra", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ca", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"rb", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"cb", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ra", "\[GreaterEqual]", "rb"}], ",", 
         RowBox[{
          RowBox[{"Evaluate", "[", "part1", "]"}], "//", "Evaluate"}], ",", 
         RowBox[{"Evaluate", "[", "part2", "]"}]}], "]"}], "//", "Evaluate"}],
       ",", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      RowBox[{"CompilationOptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ExpressionOptimization\>\"", "\[Rule]", "False"}], 
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "kernel", " ", "seems", " ", "to", " ", "be", " ", 
     "fastest"}], ";", " ", 
    RowBox[{
    "tested", " ", "on", " ", "Microsoft", " ", "Visual", " ", "Studio", " ", 
     "Compiler"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5076895352162113`*^9, 3.507689569843192*^9}, {
   3.507689612955658*^9, 3.5076896698039093`*^9}, 3.507690367556819*^9, {
   3.507778970571105*^9, 3.5077789939484425`*^9}, {3.6596760297236147`*^9, 
   3.659676044298897*^9}, 3.6596760853555*^9, {3.659676139402717*^9, 
   3.659676140569154*^9}, {3.659676614276845*^9, 3.65967661558779*^9}, {
   3.659677045678934*^9, 3.65967704902274*^9}, {3.6609769578147573`*^9, 
   3.6609769662457523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kernel5Da", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ra", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ca", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"rb", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"cb", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ra", "\[GreaterEqual]", "rb"}], ",", 
         RowBox[{"Evaluate", "[", "part1Da", "]"}], ",", 
         RowBox[{"Evaluate", "[", "part2Da", "]"}]}], "]"}], "//", 
       "Evaluate"}], ",", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"derivatives", " ", "of", " ", "the", " ", "kernel"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5076900708688493`*^9, 3.507690080796417*^9}, 
   3.5076903715680485`*^9, {3.5077790051120806`*^9, 3.507779014526619*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"kernel5Db", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ra", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ca", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rb", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"cb", ",", "_Real"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ra", "\[GreaterEqual]", "rb"}], ",", 
        RowBox[{"Evaluate", "[", "part1Db", "]"}], ",", 
        RowBox[{"Evaluate", "[", "part2Db", "]"}]}], "]"}], "//", 
      "Evaluate"}], ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.507690092574091*^9, 3.5076900974423695`*^9}, 
   3.5076903737211714`*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"kernel", "[", 
     RowBox[{
      RowBox[{"ra_", "?", "NumericQ"}], ",", 
      RowBox[{"Cos\[Theta]a_", "?", "NumericQ"}], ",", 
      RowBox[{"rb_", "?", "NumericQ"}], ",", 
      RowBox[{"Cos\[Theta]b_", "?", "NumericQ"}], ",", 
      RowBox[{"nLeg_", "?", "NumericQ"}]}], "]"}], ":=", 
    RowBox[{"kernel5", "[", 
     RowBox[{"ra", ",", "Cos\[Theta]a", ",", "rb", ",", "Cos\[Theta]b"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "wrapper", " ", "for", " ", "convenient", " ", "use", " ", "within", " ",
       "Mathematica"}], ";", " ", 
     RowBox[{
     "note", " ", "that", " ", "this", " ", "slow", " ", "down", " ", "by", 
      " ", "a", " ", "factor", " ", "of", " ", "two"}]}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.50769012141274*^9, 3.507690121493745*^9}, {
  3.5077790203389516`*^9, 3.507779053585853*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6596759351277237`*^9, 3.659675938683969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"kernel0", "[", 
     RowBox[{
      RowBox[{"9", "/", "10"}], ",", 
      RowBox[{"4", "/", "10"}], ",", 
      RowBox[{"3", "/", "10"}], ",", 
      RowBox[{"1", "/", "10"}], ",", 
      RowBox[{"2", "^", "nl"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"nl", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.659675249435577*^9, 3.659675266259985*^9}, {
  3.6596753186772203`*^9, 3.659675319891897*^9}, {3.659675802814102*^9, 
  3.659675868716927*^9}, {3.659675940940585*^9, 3.659675954988961*^9}, {
  3.6596761663138323`*^9, 3.659676188953122*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.126679012345679`", ",", "1.126155186042524`", ",", "1.1260360488448327`",
    ",", "1.126035842119338`", ",", "1.126035842115914`", ",", 
   "1.1260358421159142`", ",", "1.126035842115914`", ",", 
   "1.126035842115914`", ",", "1.126035842115914`", ",", "1.126035842115914`",
    ",", "1.1260358421159142`"}], "}"}]], "Output",
 CellChangeTimes->{3.661426065704624*^9, 3.661426175021659*^9, 
  3.661426263968761*^9, 3.661426450605764*^9, 3.661426894547555*^9, 
  3.661427019822743*^9, 3.661427469745669*^9, 3.661427810502872*^9, 
  3.661427853888899*^9, 3.6614282918334637`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kernel5", "[", 
  RowBox[{
   RowBox[{"9", "/", "10"}], ",", 
   RowBox[{"4", "/", "10"}], ",", 
   RowBox[{"3", "/", "10"}], ",", 
   RowBox[{"1", "/", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659675269292261*^9, 3.659675283588792*^9}, {
  3.659675968860121*^9, 3.659675977195347*^9}}],

Cell[BoxData["1.1260358410037719`"], "Output",
 CellChangeTimes->{3.6614260657941313`*^9, 3.66142617511554*^9, 
  3.6614262640571537`*^9, 3.6614264506632643`*^9, 3.661426894651355*^9, 
  3.6614270199093513`*^9, 3.6614274698465767`*^9, 3.661427810584344*^9, 
  3.6614278539714527`*^9, 3.661428291906702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"kernel5", "@@", 
     RowBox[{"Join", "[", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", "10000", "}"}]}], "]"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.5075202161841073`*^9, 3.507520277435611*^9}, {
   3.5075205180253716`*^9, 3.5075205183213882`*^9}, {3.507520772799944*^9, 
   3.507520778463268*^9}, {3.5075211912608786`*^9, 3.507521191539894*^9}, {
   3.507521564234211*^9, 3.5075215726756945`*^9}, 3.507612674988183*^9, {
   3.507689578650696*^9, 3.5076895791137223`*^9}, 3.661420562608382*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0429`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.661426065883688*^9, 3.661426175216115*^9, 
  3.661426264157033*^9, 3.6614264507292547`*^9, 3.661426894740082*^9, 
  3.661427019985477*^9, 3.661427469945219*^9, 3.661427810673684*^9, 
  3.66142785406674*^9, 3.66142829198272*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"kernel0", "@@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", "4"}], "]"}], ",", 
       RowBox[{"{", "NL", "}"}]}], "]"}]}], ",", 
    RowBox[{"{", "10000", "}"}]}], "]"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.50752028896327*^9, 3.507520302283032*^9}, {
   3.507520508977854*^9, 3.5075205307290983`*^9}, 3.507612684855747*^9, {
   3.507651843267474*^9, 3.507651843549491*^9}, {3.507690399499646*^9, 
   3.507690400027676*^9}, {3.659689439981823*^9, 3.659689451454234*^9}, 
   3.661420566600706*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.51128`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.661426066458782*^9, 3.661426175793209*^9, 
  3.661426264770948*^9, 3.661426451286755*^9, 3.661426895317299*^9, 
  3.6614270205286417`*^9, 3.661427470512817*^9, 3.661427811240505*^9, 
  3.661427854624591*^9, 3.6614282925297422`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Derivative", "[", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], "[", 
    "kernel", "]"}], "[", 
   RowBox[{
    RowBox[{"ra_", "?", "NumericQ"}], ",", 
    RowBox[{"Cos\[Theta]a_", "?", "NumericQ"}], ",", 
    RowBox[{"rb_", "?", "NumericQ"}], ",", 
    RowBox[{"Cos\[Theta]b_", "?", "NumericQ"}], ",", 
    RowBox[{"nLeg_", "?", "NumericQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"kernel5Da", "[", 
   RowBox[{"ra", ",", "Cos\[Theta]a", ",", "rb", ",", "Cos\[Theta]b"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "derivatives", " ", "of", " ", "the", " ", "kernel", " ", "required", " ", 
    "for", " ", "Jacobian", " ", "generation"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5076901733117085`*^9, 3.5076902045174932`*^9}, {
  3.5077790819574757`*^9, 3.5077790948512135`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Derivative", "[", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "]"}], "[", 
    "kernel", "]"}], "[", 
   RowBox[{
    RowBox[{"ra_", "?", "NumericQ"}], ",", 
    RowBox[{"Cos\[Theta]a_", "?", "NumericQ"}], ",", 
    RowBox[{"rb_", "?", "NumericQ"}], ",", 
    RowBox[{"Cos\[Theta]b_", "?", "NumericQ"}], ",", 
    RowBox[{"nLeg_", "?", "NumericQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"kernel5Db", "[", 
   RowBox[{"ra", ",", "Cos\[Theta]a", ",", "rb", ",", "Cos\[Theta]b"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5076902147770805`*^9, 3.5076902213224545`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vars", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"R", ",", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "\[Rho]", "]"}], ",", "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"C", ",", "\[Rho]C", ",", "\[CapitalOmega]0"}], "}"}]}], 
     "]"}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"unknown", " ", 
     RowBox[{"variables", ":", " ", "density"}]}], ",", " ", "surface", ",", 
    " ", 
    RowBox[{"central", " ", "density"}], ",", " ", 
    RowBox[{"parameter", " ", "of", " ", "the", " ", "rotation", " ", "law"}],
     ",", " ", 
    RowBox[{"and", " ", "constant", " ", "C"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.507779102294639*^9, 3.5077791559577084`*^9}, {
   3.5079016905188074`*^9, 3.507901692352913*^9}, 3.6586431036022673`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"kernel", "[", 
    RowBox[{"ra_", ",", "\[Theta]a_", ",", "rb_", ",", "\[Theta]b_"}], "]"}], 
   ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ra", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"4", "Pi", " ", "rb", " ", 
      RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Theta]a", "\[NotEqual]", "\[Theta]b"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"4", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "ra", " ", "rb", " ", 
               RowBox[{"Sin", "[", "\[Theta]a", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
              RowBox[{
               SuperscriptBox["ra", "2"], "+", 
               SuperscriptBox["rb", "2"], "-", 
               RowBox[{"2", " ", "ra", " ", "rb", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]a", "+", "\[Theta]b"}], "]"}]}]}]], "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["ra", "2"], "+", 
             SuperscriptBox["rb", "2"], "-", 
             RowBox[{"2", " ", "ra", " ", "rb", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]a", "+", "\[Theta]b"}], "]"}]}]}]]], "+", 
          FractionBox[
           RowBox[{"4", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "ra", " ", "rb", " ", 
               RowBox[{"Sin", "[", "\[Theta]a", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], 
              RowBox[{
               SuperscriptBox["ra", "2"], "+", 
               SuperscriptBox["rb", "2"], "+", 
               RowBox[{"2", " ", "ra", " ", "rb", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]a", "-", "\[Theta]b"}], "]"}]}]}]], "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["ra", "2"], "+", 
             SuperscriptBox["rb", "2"], "+", 
             RowBox[{"2", " ", "ra", " ", "rb", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]a", "-", "\[Theta]b"}], "]"}]}]}]]]}], ")"}], 
        RowBox[{"rb", "^", "2"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]b", "]"}]}], "\[IndentingNewLine]", ",", 
       "0"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.507295743532188*^9, 3.507295751295632*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"potencjal", " ", "w", " ", "centrum"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.507006050245629*^9, 3.5070060558899517`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPhi]0", "=", 
   RowBox[{
    RowBox[{"-", "4"}], " ", "Pi", " ", "G", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "l", "]"}], "]"}], "]"}], " ", 
       RowBox[{"\[CapitalDelta]\[Theta]", "[", 
        RowBox[{"[", "l", "]"}], "]"}], " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], 
          RowBox[{"\[CapitalDelta]r", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
          RowBox[{"\[Rho]", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "NT"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "gravitational", " ", "potential", " ", "at", " ", "the", " ", 
      "center"}], ";", " ", 
     RowBox[{"NOTE", ":", " ", 
      RowBox[{
      "this", " ", "is", " ", "exact", " ", "discretized", " ", 
       "formula"}]}]}], ",", " ", 
    RowBox[{"no", " ", "Legendre", " ", "expansion", " ", "used"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.507087785548669*^9, 3.5070878951099353`*^9}, {
   3.507088438005987*^9, 3.507088439508073*^9}, {3.507271843024668*^9, 
   3.5072718499210625`*^9}, {3.50768843424424*^9, 3.50768843651637*^9}, {
   3.507691442954328*^9, 3.5076914504817586`*^9}, 3.507692564284847*^9, {
   3.5077791799270797`*^9, 3.5077792316950407`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eq0", "=", 
    RowBox[{
     RowBox[{"\[Rho]C", "+", 
      RowBox[{"\[CapitalPhi]C", "[", "0", "]"}], "+", "\[CapitalPhi]0"}], "==",
      "C"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"center", " ", "is", " ", "treated", " ", "separately"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070879466178813`*^9, 3.507087963346838*^9}, {
   3.5072747571753483`*^9, 3.5072747622886405`*^9}, {3.5073468001420126`*^9, 
   3.507346801772106*^9}, {3.5075155591557407`*^9, 3.5075155622439175`*^9}, {
   3.507518686541617*^9, 3.5075186869736414`*^9}, {3.5075224108066325`*^9, 
   3.507522412062704*^9}, {3.507522654806588*^9, 3.507522655160609*^9}, {
   3.507550087919933*^9, 3.5075500893050117`*^9}, {3.507550805290964*^9, 
   3.5075508062800207`*^9}, {3.507612002640727*^9, 3.507612003900799*^9}, {
   3.507613339555194*^9, 3.5076133403992424`*^9}, {3.507691459630282*^9, 
   3.50769146116637*^9}, 3.507692569951171*^9, {3.5077792390764627`*^9, 
   3.507779247838964*^9}, {3.508137402416909*^9, 3.508137406818161*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqMASS", "=", 
    RowBox[{"M", "==", 
     RowBox[{"4", " ", "Pi", " ", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "]"}], 
         RowBox[{"\[CapitalDelta]\[Theta]", "[", 
          RowBox[{"[", "l", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
         RowBox[{"\[CapitalDelta]r", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
         "*", 
         RowBox[{"\[Rho]", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"equation", " ", "to", " ", "set", " ", "total", " ", "mass"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072946116574483`*^9, 3.507294652123763*^9}, {
   3.50730596513383*^9, 3.507305973911332*^9}, {3.507306335528015*^9, 
   3.5073063359130373`*^9}, {3.507306601161209*^9, 3.507306602281273*^9}, {
   3.5075157331656933`*^9, 3.507515734909793*^9}, {3.5075186323545175`*^9, 
   3.507518632817544*^9}, {3.50752241531189*^9, 3.5075224164409547`*^9}, {
   3.5075226584978*^9, 3.5075226702994747`*^9}, {3.5075500934252477`*^9, 
   3.5075500944003034`*^9}, {3.5075508099192286`*^9, 3.507550810739276*^9}, {
   3.507612008873083*^9, 3.5076120107801924`*^9}, {3.5076133443584685`*^9, 
   3.507613344885499*^9}, {3.5076884439257936`*^9, 3.507688453964368*^9}, {
   3.507691473563079*^9, 3.5076914751301684`*^9}, 3.507692574091408*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqANGMOM", "=", 
    RowBox[{"J", "==", 
     RowBox[{"4", " ", "Pi", " ", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "]"}], 
         RowBox[{"\[CapitalDelta]\[Theta]", "[", 
          RowBox[{"[", "l", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "4"}], " ", 
         RowBox[{"\[CapitalDelta]r", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
         "*", 
         RowBox[{"\[Rho]", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", "\[IndentingNewLine]", 
         RowBox[{"\[CapitalOmega]", "[", "  ", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "equation", " ", "to", " ", "set", " ", "angular", " ", "momentum"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072955292199297`*^9, 3.50729564600861*^9}, {
   3.5073059792476373`*^9, 3.507305989522225*^9}, {3.507306588907508*^9, 
   3.5073065959889126`*^9}, {3.5075157382079816`*^9, 
   3.5075157395910606`*^9}, {3.5075186380588436`*^9, 3.507518638553872*^9}, {
   3.507522421239229*^9, 3.5075224224753*^9}, {3.507522662579033*^9, 
   3.5075226763818226`*^9}, {3.507550097745495*^9, 3.507550098652547*^9}, {
   3.5075508139674606`*^9, 3.5075508147365046`*^9}, {3.507611992978174*^9, 
   3.507611994004233*^9}, {3.5076133491647434`*^9, 3.507613349781779*^9}, {
   3.5076884602407265`*^9, 3.50768846256586*^9}, {3.5076912724765773`*^9, 
   3.5076912729486046`*^9}, 3.507692576789562*^9}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NOTE", ":", " ", 
    RowBox[{
    "mass", " ", "and", " ", "angular", " ", "momentu", " ", "are", " ", 
     "driving", " ", 
     RowBox[{"parameters", ".", " ", "Usually"}]}]}], ",", " ", 
   RowBox[{
   "one", " ", "use", " ", "poorly", " ", "justified", " ", "choice", " ", 
    "of", " ", "parameters"}], ",", " ", 
   RowBox[{"like", " ", "central", " ", "density"}], ",", " ", 
   RowBox[{
   "central", " ", "angular", " ", "momentum", " ", "or", " ", "axis", " ", 
    RowBox[{"ratio", ".", " ", "These"}], " ", "sequences", " ", "have", " ", 
    "at", " ", "least", " ", "the", " ", "same", " ", "mass", " ", "and", " ",
     "angular", " ", 
    RowBox[{"momentum", ":", " ", 
     RowBox[{"you", " ", "can", " ", "compare", " ", 
      RowBox[{"them", ".", " ", "Comparison"}], " ", "of", " ", "structures", 
      " ", "with", " ", "different", " ", "mass", " ", "and", " ", "angular", 
      " ", "momentum", " ", "is", " ", 
      RowBox[{"nonsense", "!"}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.50777926157475*^9, 3.5077794118413444`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Left", "-", 
    RowBox[{"hand", " ", "side", " ", "of", " ", "equations", " ", 
     RowBox[{"(", 
      RowBox[{"with", " ", "-", "C"}], " ", ")"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fLHS", "=", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", "vars", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Rho]C", "+", 
           RowBox[{"\[CapitalPhi]C", "[", "0", "]"}], "+", "\[CapitalPhi]0", 
           "-", "C"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"M", "-", 
           RowBox[{"4", " ", "Pi", " ", 
            RowBox[{"Sum", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], "]"}], 
               RowBox[{"\[CapitalDelta]\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], " ", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
               RowBox[{"\[CapitalDelta]r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
               "\[IndentingNewLine]", "*", 
               RowBox[{"\[Rho]", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"J", "-", 
           RowBox[{"4", " ", "Pi", " ", 
            RowBox[{"Sum", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], "]"}], 
               RowBox[{"\[CapitalDelta]\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], " ", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "4"}], " ", 
               RowBox[{"\[CapitalDelta]r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
               "\[IndentingNewLine]", "*", 
               RowBox[{"\[Rho]", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
               "\[IndentingNewLine]", 
               RowBox[{"\[CapitalOmega]", "[", "  ", 
                RowBox[{
                 RowBox[{"r", "[", 
                  RowBox[{"[", 
                   RowBox[{"l", ",", "m"}], "]"}], "]"}], 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", 
                   RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", 
            RowBox[{"\[CapitalPhi]C", "[", 
             RowBox[{
              RowBox[{"r", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "-", 
            RowBox[{"4", " ", "Pi", " ", 
             RowBox[{"Sum", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "]"}], 
                RowBox[{"\[CapitalDelta]\[Theta]", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], " ", 
                RowBox[{
                 RowBox[{"r", "[", 
                  RowBox[{"[", 
                   RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
                RowBox[{"\[CapitalDelta]r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
                "\[IndentingNewLine]", 
                RowBox[{"kernel", "[", " ", 
                 RowBox[{
                  RowBox[{"r", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                  RowBox[{"r", "[", 
                   RowBox[{"[", 
                    RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}],
                 "\[IndentingNewLine]", "*", 
                RowBox[{"\[Rho]", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], "-", 
            "C"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
       "Flatten"}]}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"RuntimeAttributes", "\[Rule]", 
        RowBox[{"{", "Listable", "}"}]}], ",", 
       RowBox[{"Parallelization", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CompilationOptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<ExpressionOptimization\>\"", "\[Rule]", "True"}], 
         "}"}]}], ",", " ", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.507612017645585*^9, 3.507612065484321*^9}, {
   3.5076121809289246`*^9, 3.507612196150795*^9}, {3.5076124463991084`*^9, 
   3.507612446689125*^9}, {3.507612852254322*^9, 3.5076128540664253`*^9}, {
   3.507612884876188*^9, 3.507612916977024*^9}, {3.507612954190152*^9, 
   3.507612981283702*^9}, {3.5076130327306447`*^9, 3.507613040100066*^9}, {
   3.50761314821725*^9, 3.507613150451378*^9}, {3.507648930883896*^9, 
   3.5076489577394314`*^9}, {3.507649015096712*^9, 3.507649046666518*^9}, {
   3.507649571947562*^9, 3.5076495971650047`*^9}, {3.507651067831122*^9, 
   3.5076510700722504`*^9}, {3.5076512042099223`*^9, 
   3.5076512170656576`*^9}, {3.5076515933091774`*^9, 
   3.5076515955803075`*^9}, {3.50765163147336*^9, 3.5076516325394216`*^9}, {
   3.5076518626445827`*^9, 3.5076518652647324`*^9}, {3.5076519395459814`*^9, 
   3.507651941553096*^9}, {3.5076520635350733`*^9, 3.5076521136029367`*^9}, {
   3.507652663430385*^9, 3.507652663742403*^9}, {3.507688477725727*^9, 
   3.5076884812979307`*^9}, {3.507690280264826*^9, 3.5076902822249384`*^9}, {
   3.50769151572449*^9, 3.5076915172735786`*^9}, 3.5076915911178026`*^9, {
   3.507693596852906*^9, 3.507693600312104*^9}, {3.5077794303834047`*^9, 
   3.50777945162862*^9}, 3.6572813461686687`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"fLHS", "@@", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "vars", "]"}]}], "]"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.5076978286689525`*^9, 3.5076978316811247`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "I", " ", "have", " ", "still", " ", "troubles", " ", "with", " ", 
    "Jacobian", " ", 
    RowBox[{"generation", ".", " ", "Naively"}]}], ",", " ", 
   RowBox[{
   "you", " ", "can", " ", "just", " ", "differentiate", " ", "equations", 
    " ", "with", " ", "respect", " ", "to", " ", "variables", " ", "using", 
    " ", "symbolic", " ", "capabilities", " ", "of", " ", 
    RowBox[{"Mathematica", ".", " ", "Unfortunately"}], " ", "this", " ", 
    "is", " ", "unusually", " ", 
    RowBox[{"slow", ".", " ", "Below"}], " ", "is", " ", "slightly", " ", 
    "better", " ", "approach", " ", "with", " ", "derived", " ", "formulae", 
    " ", "for", " ", "jacobian"}], ",", " ", 
   RowBox[{
   "but", " ", "still", " ", "generation", " ", "time", " ", "is", " ", 
    "proportional", " ", "to", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"NT", "*", "NR"}], ")"}], "^", "3."}], " ", "Once", " ", 
    "Jacobian", " ", "is", " ", "generated"}], ",", " ", 
   RowBox[{
   "FindRoot", " ", "solves", " ", "system", " ", "of", " ", "equations", " ",
     "in", " ", "few", " ", "steps"}], ",", " ", 
   RowBox[{
    RowBox[{"and", " ", "few", " ", 
     RowBox[{"seconds", ".", " ", "But"}], " ", "you", " ", "must", " ", "do",
      " ", "this", " ", 
     RowBox[{"once", ".", " ", "Pre"}]}], "-", 
    RowBox[{
    "calculated", " ", "Jacobians", " ", "are", "  ", "stored", " ", "on", 
     " ", "disk", "  ", "for", " ", "convenience"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.5077794765700464`*^9, 3.5077796984047346`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Jacobian", " ", "generation", " ", 
    RowBox[{"starts", ".", " ", "Skip"}], " ", "if", " ", "you", " ", 
    "prefer", " ", "to", " ", "use", " ", "pre"}], "-", 
   RowBox[{"calculated", " ", 
    RowBox[{"one", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.507779705505141*^9, 3.5077797279564247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drlmk", "=", 
  RowBox[{"SparseArray", "@", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
       RowBox[{"vars", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5077039955226765`*^9, 3.5077040489867344`*^9}, {
   3.5077040857088346`*^9, 3.5077041082161217`*^9}, 3.5077178574087076`*^9, {
   3.5077182082277737`*^9, 3.507718208589794*^9}, {3.507719141632161*^9, 
   3.507719145037356*^9}, {3.5077344625694685`*^9, 3.507734468256794*^9}, {
   3.508909095089095*^9, 3.5089090960781517`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["81", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"9", ",", "9", ",", "84"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["81", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"9", ",", "9", ",", "84"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.011904761904761904`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "9"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["2", "9"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "3"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["4", "9"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<81>, {9, 9, 84}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6614260676834106`*^9, 3.661426177495895*^9, 
  3.661426264981145*^9, 3.661426452342667*^9, 3.66142689655693*^9, 
  3.661427021791842*^9, 3.661427471779948*^9, 3.6614278123669577`*^9, 
  3.661427855826798*^9, 3.66142829367486*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d\[CapitalDelta]rlmk", "=", 
  RowBox[{"SparseArray", "@", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[CapitalDelta]r", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
       RowBox[{"vars", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.507704075572255*^9, 3.507704081523595*^9}, {
   3.507704117587658*^9, 3.5077041282292666`*^9}, 3.507717860716897*^9, 
   3.5077191386449904`*^9, {3.507734489225993*^9, 3.5077344945442977`*^9}, {
   3.508909101159443*^9, 3.5089091020274925`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["72", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"9", ",", "9", ",", "84"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["72", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"9", ",", "9", ",", "84"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.010582010582010581`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "9"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "9"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "9"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["1", "9"], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<72>, {9, 9, 84}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6614260680779047`*^9, 3.661426178216547*^9, 
  3.661426265118615*^9, 3.661426452577392*^9, 3.661426896893263*^9, 
  3.661427022099491*^9, 3.661427472201507*^9, 3.6614278126344423`*^9, 
  3.661427856105587*^9, 3.6614282939479427`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"timer", "=", 
   RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"dir", "<>", "\"\<dKlmijk_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dKlmijk", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"dir", "<>", "\"\<dKlmijk_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"timer1", "=", 
     RowBox[{
      RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<timer_load_dKlmijk_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "timer1"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dKlmijk", "=", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "@", 
      RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], 
            "[", "kernel", "]"}], "[", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], 
          RowBox[{"drlmk", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "+", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", 
             RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "]"}], 
            "[", "kernel", "]"}], "[", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], 
          RowBox[{"drlmk", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m", ",", "k"}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NR"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<dKlmijk_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "dKlmijk"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"timer1", "=", 
     RowBox[{
      RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<timer_generate_dKlmijk_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "timer1"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.50770413894588*^9, 3.5077041452242384`*^9}, {
   3.50770430574842*^9, 3.5077044863617506`*^9}, {3.507707528050725*^9, 
   3.507707530697877*^9}, {3.507708634315*^9, 3.5077086389612656`*^9}, {
   3.5077094043010406`*^9, 3.50770940463906*^9}, {3.5077094534658527`*^9, 
   3.5077094537928715`*^9}, 3.5077178994151106`*^9, 3.507718021300082*^9, {
   3.507719128099387*^9, 3.507719129845487*^9}, 3.5077193863911605`*^9, 
   3.507719439214182*^9, {3.507721215381773*^9, 3.5077212379190617`*^9}, {
   3.5077345074650364`*^9, 3.5077345128003416`*^9}, {3.5077345653353467`*^9, 
   3.507734566462411*^9}, {3.657346671838874*^9, 3.657346674817206*^9}, {
   3.658643130992991*^9, 3.658643195201521*^9}, {3.65925991239683*^9, 
   3.659259937128235*^9}, 3.659260041991856*^9, {3.66142592357953*^9, 
   3.661425936803103*^9}, {3.661427714639357*^9, 3.661427760359043*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d\[Rho]lmk", "=", 
  RowBox[{"SparseArray", "@", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Rho]", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
       RowBox[{"vars", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5077041640203133`*^9, 3.507704186597605*^9}, 
   3.5077180258353415`*^9, 3.5077191372479105`*^9, {3.5077346036535387`*^9, 
   3.5077346087838316`*^9}, {3.5089091205815535`*^9, 3.508909121499606*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["72", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"9", ",", "9", ",", "84"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["72", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"9", ",", "9", ",", "84"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.010582010582010581`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "10"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "11"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "12"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4", ",", "13"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SparseArray[<72>, {9, 9, 84}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.661426068674356*^9, 3.661426179123629*^9, 
  3.6614262678444033`*^9, 3.661426453139925*^9, 3.661426900638727*^9, 
  3.661427022898529*^9, 3.661427475725618*^9, 3.66142781617846*^9, 
  3.661427856687592*^9, 3.6614282945044928`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"timer", "=", 
   RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"dir", "<>", "\"\<dlmijkOLD_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dlmijkOLD", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"dir", "<>", "\"\<dlmijkOLD_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"timer2", "=", 
     RowBox[{
      RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<timer_load_dlmijkOLD_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "timer2"}], "]"}]}], ",", "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dlmijkOLD", "=", 
     RowBox[{"SparseArray", "@", 
      RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
           RowBox[{"\[CapitalDelta]r", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
           "\[IndentingNewLine]", 
           RowBox[{"kernel", "[", " ", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "m"}], "]"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", "NL"}], "]"}], 
           "\[IndentingNewLine]", "*", 
           RowBox[{"\[Rho]", "[", 
            RowBox[{"[", 
             RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"vars", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
        ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"D", " ", "ends"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NR"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NR"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<dlmijkOLD_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "dlmijkOLD"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"timer2", "=", 
     RowBox[{
      RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<timer_generate_dlmijkOLD_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "timer2"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5076972285376267`*^9, 3.507697295019429*^9}, {
   3.50769734923853*^9, 3.507697395634184*^9}, {3.5076974275570097`*^9, 
   3.507697469497409*^9}, {3.5076976031320524`*^9, 3.5076976137086573`*^9}, {
   3.5077028567855444`*^9, 3.5077028820849915`*^9}, 3.5077037750630665`*^9, {
   3.5077078741295195`*^9, 3.5077078745925465`*^9}, 3.507718438649953*^9, {
   3.50771866186572*^9, 3.5077186639098372`*^9}, 3.5077187317467175`*^9, {
   3.507718989615466*^9, 3.507718992515632*^9}, {3.5077346581916575`*^9, 
   3.507734665136055*^9}, {3.658643537260208*^9, 3.658643589724058*^9}, {
   3.659260070566908*^9, 3.659260092966606*^9}, {3.661425954875348*^9, 
   3.661425961211143*^9}, {3.661428170428788*^9, 3.6614282128930798`*^9}}],

Cell[BoxData["\<\"/home/misiek/RotatingStars/EM/SolidRotation/timer_load_\
dlmijkOLD_9_9_6.m\"\>"], "Output",
 CellChangeTimes->{3.661427857650899*^9, 3.6614282953151093`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"timer", "=", 
   RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"dir", "<>", "\"\<jac_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jac", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"dir", "<>", "\"\<jac_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"timer3", "=", 
     RowBox[{
      RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<timer_load_jac_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "timer3"}], "]"}]}], ",", "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jacPARTNEW", "=", 
     RowBox[{
      RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"D", "[", 
              RowBox[{"C", ",", 
               RowBox[{"vars", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "+", "\[IndentingNewLine]", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[Rho]", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]",
             "+", "\[IndentingNewLine]", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[CapitalPhi]C", "[", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"end", " ", "of", " ", "NON"}], "-", 
              RowBox[{"gravitational", " ", "part"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", "-", "\[IndentingNewLine]", 
            RowBox[{"4", " ", "Pi", " ", 
             RowBox[{"Sum", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "]"}], 
                RowBox[{"\[CapitalDelta]\[Theta]", "[", 
                 RowBox[{"[", "l", "]"}], "]"}], " ", "\[IndentingNewLine]", 
                "*", "\[IndentingNewLine]", 
                RowBox[{"dlmijkOLD", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m", ",", "i", ",", "j", ",", "k"}], 
                  "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}], "//", 
      "Transpose"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"jacCENTER", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", " ", 
        RowBox[{
         RowBox[{"\[Rho]C", "+", 
          RowBox[{"\[CapitalPhi]C", "[", "0", "]"}], "+", "\[CapitalPhi]0", 
          "-", "C"}], ",", 
         RowBox[{"vars", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "    ", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"jacMASS", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", " ", 
        RowBox[{
         RowBox[{"M", "-", 
          RowBox[{"4", " ", "Pi", " ", 
           RowBox[{"Sum", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], "]"}], 
              RowBox[{"\[CapitalDelta]\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], " ", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "2"}], " ", 
              RowBox[{"\[CapitalDelta]r", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
              "\[IndentingNewLine]", "*", 
              RowBox[{"\[Rho]", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{"vars", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "    ", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"jacANG", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"J", "-", 
          RowBox[{"4", " ", "Pi", " ", 
           RowBox[{"Sum", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "l", "]"}], "]"}], "]"}], 
              RowBox[{"\[CapitalDelta]\[Theta]", "[", 
               RowBox[{"[", "l", "]"}], "]"}], " ", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "m"}], "]"}], "]"}], "^", "4"}], " ", 
              RowBox[{"\[CapitalDelta]r", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}], " ", 
              "\[IndentingNewLine]", "*", 
              RowBox[{"\[Rho]", "[", 
               RowBox[{"[", 
                RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
              "\[IndentingNewLine]", 
              RowBox[{"\[CapitalOmega]", "[", "  ", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", 
                  RowBox[{"l", ",", "m"}], "]"}], "]"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "NT"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{"vars", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"jac", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "jacCENTER", "}"}], ",", 
       RowBox[{"{", "jacMASS", "}"}], ",", 
       RowBox[{"{", "jacANG", "}"}], ",", "jacPARTNEW"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<jac_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "jac"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"timer3", "=", 
     RowBox[{
      RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\<timer_generate_jac_\>\"", "<>", 
       RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], ",", 
      "timer3"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5077017287860265`*^9, 3.507701758066701*^9}, {
   3.5077018290057583`*^9, 3.5077019819445057`*^9}, {3.507702047662265*^9, 
   3.507702050772443*^9}, {3.5077020894216537`*^9, 3.5077020948749657`*^9}, {
   3.507702340516015*^9, 3.5077023539647846`*^9}, {3.507703782561496*^9, 
   3.5077037863007097`*^9}, {3.507720365512163*^9, 3.507720365903186*^9}, {
   3.507721635914826*^9, 3.5077216380579486`*^9}, {3.50773482082296*^9, 
   3.507734839920052*^9}, {3.507734933758419*^9, 3.507734935092496*^9}, {
   3.5090053063999414`*^9, 3.5090053214428024`*^9}, {3.658643663258903*^9, 
   3.658643761502804*^9}, {3.658643826124852*^9, 3.658643828233602*^9}, 
   3.658644347575432*^9, {3.659260173014431*^9, 3.659260194117943*^9}, {
   3.6614259680683947`*^9, 3.6614259746206503`*^9}, {3.661428229893401*^9, 
   3.6614282680701723`*^9}}],

Cell[BoxData["\<\"/home/misiek/RotatingStars/EM/SolidRotation/timer_load_jac_\
9_9_6.m\"\>"], "Output",
 CellChangeTimes->{3.661428296251073*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6592396691805983`*^9, 3.659239672890931*^9}}],

Cell[BoxData["123591504"], "Output",
 CellChangeTimes->{3.661426070184215*^9, 3.6614261813334427`*^9, 
  3.661426274695414*^9, 3.6614264546294394`*^9, 3.661426909576982*^9, 
  3.661427025189229*^9, 3.661427485130961*^9, 3.661427825637735*^9, 
  3.6614278588829107`*^9, 3.661428296298975*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jac", "//", "ByteCount"}]], "Input",
 CellChangeTimes->{{3.5077908782341843`*^9, 3.507790924190813*^9}, {
  3.507791012877886*^9, 3.5077910129438896`*^9}, {3.507791074518411*^9, 
  3.5077910753324575`*^9}, {3.5078124743477116`*^9, 3.5078124749927483`*^9}, {
  3.5078126524428983`*^9, 3.5078126527829175`*^9}}],

Cell[BoxData["22087496"], "Output",
 CellChangeTimes->{3.661426070255789*^9, 3.661426181373041*^9, 
  3.661426274781075*^9, 3.661426454665639*^9, 3.661426909629623*^9, 
  3.661427025258801*^9, 3.66142748520979*^9, 3.6614278257094088`*^9, 
  3.6614278589466057`*^9, 3.661428296350293*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "jac", "]"}]], "Input",
 CellChangeTimes->{{3.5077801238480687`*^9, 3.507780129502392*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"84", ",", "84"}], "}"}]], "Output",
 CellChangeTimes->{3.6614260703235188`*^9, 3.6614261814082537`*^9, 
  3.661426274856024*^9, 3.66142645469811*^9, 3.661426909684534*^9, 
  3.661427025319521*^9, 3.66142748527876*^9, 3.6614278257691717`*^9, 
  3.6614278590090113`*^9, 3.6614282964316607`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "vars", "]"}]], "Input",
 CellChangeTimes->{{3.658643855723873*^9, 3.6586438618321333`*^9}}],

Cell[BoxData["84"], "Output",
 CellChangeTimes->{3.661426070388734*^9, 3.661426181436545*^9, 
  3.661426274922723*^9, 3.6614264547226458`*^9, 3.66142690973592*^9, 
  3.661427025371159*^9, 3.6614274853512793`*^9, 3.6614278258267183`*^9, 
  3.66142785907623*^9, 3.661428296472802*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "=", "1", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Gravitational", " ", "constant"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070880395881987`*^9, 3.5070880400322247`*^9}, {
  3.5077799509011765`*^9, 3.5077799615137835`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.661426070458252*^9, 3.66142618146805*^9, 
  3.661426274928856*^9, 3.661426454746194*^9, 3.6614269097795277`*^9, 
  3.661427025416531*^9, 3.6614274854182253`*^9, 3.661427825881618*^9, 
  3.6614278591375847`*^9, 3.661428296511222*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Lane", "-", 
      RowBox[{"Emden", " ", "with", " ", "R"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}], " ", "radius", " ", 
       "and", " ", "rhoC"}], "=", "1"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.5072950451642437`*^9, 3.507295047484376*^9}, {
  3.50730709998474*^9, 3.507307129670438*^9}, {3.5073072664902635`*^9, 
  3.507307270265479*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], "2"]], "Output",
 CellChangeTimes->{3.6614260705602093`*^9, 3.661426181499077*^9, 
  3.661426275076159*^9, 3.661426454771522*^9, 3.661426909837325*^9, 
  3.66142702546299*^9, 3.661427485477701*^9, 3.661427825937574*^9, 
  3.661427859190534*^9, 3.6614282965503407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K", "=", 
  RowBox[{"1", "/", "2"}]}]], "Input",
 CellChangeTimes->{{3.5089082405452185`*^9, 3.5089082419843006`*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.6614260706205997`*^9, 3.661426181536255*^9, 
  3.661426275271716*^9, 3.6614264547962837`*^9, 3.661426909881838*^9, 
  3.661427025514736*^9, 3.6614274855351667`*^9, 3.661427825988544*^9, 
  3.6614278592425957`*^9, 3.6614282965941963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NT", "*", "NR"}], "+", "3", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "equations"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.507088462691399*^9, 3.507088466414612*^9}, {
  3.5077799850061274`*^9, 3.5077800033421764`*^9}}],

Cell[BoxData["84"], "Output",
 CellChangeTimes->{3.661426070693327*^9, 3.6614261815713463`*^9, 
  3.6614262753360577`*^9, 3.6614264548263206`*^9, 3.661426909936736*^9, 
  3.661427025571393*^9, 3.661427485601931*^9, 3.661427826037653*^9, 
  3.661427859297473*^9, 3.661428296631393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "vars", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "variables"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.507779988056302*^9, 3.507780009865549*^9}}],

Cell[BoxData[
 RowBox[{"{", "84", "}"}]], "Output",
 CellChangeTimes->{3.6614260707606087`*^9, 3.661426181605734*^9, 
  3.6614262755132504`*^9, 3.6614264548526087`*^9, 3.661426909994248*^9, 
  3.661427025617923*^9, 3.661427485673555*^9, 3.66142782609144*^9, 
  3.66142785936504*^9, 3.661428296668915*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"init", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"NT", "*", "NR"}], "+", "2"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.5070880528869596`*^9, 3.5070880676488037`*^9}, {
  3.507088451015731*^9, 3.5070884734550147`*^9}, {3.507294700116508*^9, 
  3.507294700430526*^9}, {3.5073079713755803`*^9, 3.50730797311668*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"initial", " ", "starting", " ", "guess"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.5077800186530523`*^9, 3.507780039723257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"h", "[", "\[Zeta]", "]"}], "/.", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"\[Zeta]", "^", "2"}]}], 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Zeta]", "^", "2"}], " ", 
               RowBox[{
                RowBox[{"h", "'"}], "[", "\[Zeta]", "]"}]}], ",", "\[Zeta]"}],
              "]"}]}], "+", 
           RowBox[{"4", " ", "Pi", " ", 
            RowBox[{
             RowBox[{"G", " ", "/", "2"}], "/", "K"}], " ", 
            RowBox[{"h", "[", "\[Zeta]", "]"}]}]}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"h", "[", "0", "]"}], "==", "\[Rho]C"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
       ",", 
       RowBox[{"h", "[", "\[Zeta]", "]"}], ",", "\[Zeta]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "//", "ComplexExpand"}], "//", 
  "Simplify", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"initial", " ", "values", " ", "from", " ", "Lane"}], "-", 
    RowBox[{"Emden", " ", "equation"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072712823535995`*^9, 3.507271293987265*^9}, {
  3.5083855828327494`*^9, 3.5083855867199717`*^9}, {3.5083856988873873`*^9, 
  3.5083856990633974`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Rho]C", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "]"}]}], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", "\[Zeta]"}]]], "Output",
 CellChangeTimes->{3.661426071210973*^9, 3.66142618203353*^9, 
  3.661426276018787*^9, 3.661426455259503*^9, 3.6614269103887672`*^9, 
  3.661427026061492*^9, 3.661427486148088*^9, 3.6614278265005198`*^9, 
  3.6614278598034773`*^9, 3.6614282970711*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{
    RowBox[{"G", ">", "0"}], "&&", 
    RowBox[{"K", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6584955726882706`*^9, 3.6584955938204794`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Rho]C", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "]"}]}], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", "\[Zeta]"}]]], "Output",
 CellChangeTimes->{3.661426071284999*^9, 3.661426182091805*^9, 
  3.661426276064377*^9, 3.6614264553731537`*^9, 3.6614269104291573`*^9, 
  3.661427026262793*^9, 3.66142748630348*^9, 3.661427826650072*^9, 
  3.661427859987071*^9, 3.661428297110495*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]LE", "=", 
  RowBox[{
   RowBox[{"Refine", "[", 
    RowBox[{"%", ",", 
     RowBox[{
      RowBox[{"G", ">", "0"}], "&&", 
      RowBox[{"K", ">", "0"}]}]}], "]"}], "/.", 
   RowBox[{"\[Rho]C", "\[Rule]", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.5072949160838604`*^9, 3.5072949273375044`*^9}, 
   3.507307145808361*^9, {3.508385610018305*^9, 3.5083856111193676`*^9}, 
   3.5083857109110756`*^9, {3.508908177794629*^9, 3.5089081887962584`*^9}, {
   3.5089083391718597`*^9, 3.5089083427400637`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "]"}], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", "\[Zeta]"}]]], "Output",
 CellChangeTimes->{3.6614260712900467`*^9, 3.661426182100613*^9, 
  3.661426276104024*^9, 3.6614264553806477`*^9, 3.661426910434787*^9, 
  3.661427026270865*^9, 3.661427486310684*^9, 3.661427826661277*^9, 
  3.661427859995924*^9, 3.66142829711642*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "\[Equal]", "Pi"}], ",", "\[Zeta]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.658495771186624*^9, 3.6584957875395594`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Zeta]", "\[Rule]", 
    FractionBox[
     SqrtBox["\[Pi]"], "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.661426071351082*^9, 3.661426182129752*^9, 
  3.661426276205757*^9, 3.661426455404293*^9, 3.661426910476347*^9, 
  3.661427026319345*^9, 3.661427486377961*^9, 3.661427826717396*^9, 
  3.661427860173218*^9, 3.66142829716257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      SqrtBox["\[Pi]"], " ", "\[Zeta]"}], "]"}], 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", "\[Zeta]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Zeta]", ",", "0", ",", 
     RowBox[{"Sqrt", "[", "Pi", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6584957453711476`*^9, 3.658495763909208*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi^Rational[1, 2]}, {-0.21723358035128615`, 
     0.9999999999999972}}, {{0, 1.7724538509055159`}, {-0.21723358035128615`, 
     0.9999999999999972}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426071493207*^9, 3.661426182230337*^9, 
  3.6614262763788357`*^9, 3.6614264554884243`*^9, 3.661426910573845*^9, 
  3.6614270264395247`*^9, 3.6614274865025682`*^9, 3.661427826835403*^9, 
  3.661427860321658*^9, 3.6614282972700377`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Rho]LE", "\[Equal]", "0"}], "&&", 
     RowBox[{"\[Zeta]", ">", "0"}]}], ",", "\[Zeta]", ",", "Reals"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.50838580033519*^9, 3.508385824516573*^9}, {
   3.6572802844689426`*^9, 3.6572802853719945`*^9}, 3.657523915598634*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"K", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], "/", "G"}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], "2"]], "Output",
 CellChangeTimes->{3.6614260716683273`*^9, 3.661426182566824*^9, 
  3.661426276664083*^9, 3.661426455534458*^9, 3.661426910741847*^9, 
  3.661427026565495*^9, 3.6614274865308332`*^9, 3.66142782685728*^9, 
  3.6614278603422832`*^9, 3.661428297289434*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"4", " ", "Pi", " ", 
     RowBox[{"\[Zeta]", "^", "2"}], " ", "\[Rho]LE"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Zeta]", ",", "0", ",", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"K", " ", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "/", "G"}]}], "]"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", "MASS", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5072947213767242`*^9, 3.5072947966750307`*^9}, {
  3.5073070750533137`*^9, 3.5073070753603315`*^9}, {3.5073071552389*^9, 
  3.5073071560849485`*^9}, {3.5073072017765617`*^9, 3.507307213001204*^9}, {
  3.50730728601438*^9, 3.5073072867954245`*^9}, {3.5083859298655987`*^9, 
  3.508385941996293*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], "2"]], "Output",
 CellChangeTimes->{3.6614260718432217`*^9, 3.661426182711421*^9, 
  3.661426276884914*^9, 3.661426455688654*^9, 3.661426910885665*^9, 
  3.661427026731091*^9, 3.661427486710979*^9, 3.661427827024268*^9, 
  3.661427860515314*^9, 3.6614282974461393`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init2", "=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"R", "/.", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rule", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "]"}], "&"}], 
          ")"}], "/@", "R"}]}], "//", "N"}], ",", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]LE", "/.", 
             RowBox[{"\[Zeta]", "\[Rule]", 
              RowBox[{"r", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "/.", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"#", ",", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "]"}], 
               "&"}], ")"}], "/@", "R"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"NR", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], "//",
        "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}], ",", "0"}], "}"}]}], 
     "]"}], "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Short"}]}], "Input",
 CellChangeTimes->{{3.5071010958159723`*^9, 3.507101098812144*^9}, {
   3.5071011364822984`*^9, 3.5071011652329426`*^9}, 3.507101273724148*^9, {
   3.5071013557798414`*^9, 3.5071013838174453`*^9}, {3.507294861192721*^9, 
   3.507294874896505*^9}, {3.5072956946223907`*^9, 3.5072956948504033`*^9}, {
   3.5073072952639093`*^9, 3.507307297586042*^9}, 3.507434996316804*^9, 
   3.5077885617896914`*^9, 3.507901638681843*^9, {3.5079017835801306`*^9, 
   3.5079018116837378`*^9}, {3.509076667321393*^9, 3.5090766748548236`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
   "0.8862269254527579`", ",", "0.8862269254527579`", ",", 
    "0.8862269254527579`", ",", "0.8862269254527579`", ",", 
    RowBox[{"\[LeftSkeleton]", "77", "\[RightSkeleton]"}], ",", 
    RowBox[{"-", "1.`"}], ",", "0.8862269254527579`", ",", "0.`"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.661426071918078*^9, 3.661426182762603*^9, 
  3.661426277050116*^9, 3.661426455738594*^9, 3.661426910932782*^9, 
  3.6614270268030033`*^9, 3.661427486786619*^9, 3.66142782708797*^9, 
  3.661427860583562*^9, 3.661428297659316*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"rozw", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<E:\\\\temp\\\\EM\\\\Solid_\>\"", "<>", 
      RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_J_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "[", "0.499", "]"}], "]"}], "<>", "\"\<.m\>\""}], "]"}]}],
    ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.509122394624262*^9, 3.5091224059109073`*^9}, {
   3.657347058977503*^9, 3.6573470595460377`*^9}, 3.657437561539302*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{"init2", "=", 
    RowBox[{"vars", "/.", "rozw"}]}], 
   RowBox[{"(*", " ", 
    RowBox[{"use", " ", "for", " ", "RESTART", " ", 
     RowBox[{"ONLY", " ", "!"}]}], " ", "*)"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.5074764024066114`*^9, 3.5074764290831366`*^9}, {
   3.507550837282794*^9, 3.5075508393749137`*^9}, {3.5077836641885643`*^9, 
   3.50778366603767*^9}, 3.5077861701969*^9, {3.507787874193363*^9, 
   3.5077878854780083`*^9}, {3.507905722011396*^9, 3.507905747444851*^9}, {
   3.509122419394678*^9, 3.509122419881706*^9}, 3.657437565086666*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"start", "=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
        RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "0.0", "]"}], "]"}], "<>", "\"\<.m\>\""}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"vars", ",", 
         RowBox[{"vars", "/.", 
          RowBox[{"Import", "[", 
           RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
            RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
            RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
            RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "0.0", "]"}], "]"}], "<>", "\"\<.m\>\""}], 
           "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"vars", ",", "init2"}], "}"}], "]"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"starting", " ", "guess"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.5070880690698853`*^9, 3.5070880992526116`*^9}, 
   3.5071013610531435`*^9, {3.5077800553781524`*^9, 3.507780059932413*^9}, 
   3.507786175598209*^9, {3.6572856143687954`*^9, 3.6572856370950956`*^9}, {
   3.6593369210271893`*^9, 3.659336999185604*^9}, {3.659337608588297*^9, 
   3.659337620235021*^9}, {3.659337699339486*^9, 3.6593377002026854`*^9}, {
   3.66097683192801*^9, 3.660976835046419*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"vars", ",", "init2"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.660976848839204*^9, 3.6609768538793592`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"start", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6593376822525177`*^9, 3.6593376839137297`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"R1", ",", "0.8862269254527579`"}], "}"}]], "Output",
 CellChangeTimes->{3.661426072024938*^9, 3.661426182837551*^9, 
  3.661426277159112*^9, 3.661426455906931*^9, 3.661426911015574*^9, 
  3.661427026914558*^9, 3.661427486889695*^9, 3.661427827210401*^9, 
  3.661427860687951*^9, 3.661428297740129*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", "=", "0.0"}]], "Input",
 CellChangeTimes->{{3.657444273316474*^9, 3.657444275133006*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.661426072087763*^9, 3.661426182867859*^9, 
  3.661426277332789*^9, 3.66142645593813*^9, 3.6614269110656033`*^9, 
  3.66142702698142*^9, 3.6614274869584007`*^9, 3.661427827247859*^9, 
  3.661427860746586*^9, 3.661428297785005*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wynik", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"e", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"j", " ", "=", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"fLHS", "@@", "vars"}], ",", "start", ",", 
           RowBox[{"MaxIterations", "\[Rule]", "400"}], ",", 
           RowBox[{"EvaluationMonitor", "\[RuleDelayed]", " ", 
            RowBox[{"e", "++"}]}], ",", " ", 
           RowBox[{"StepMonitor", "\[RuleDelayed]", " ", 
            RowBox[{"s", "++"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Method", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Newton\>\"", ",", " ", 
              RowBox[{"\"\<UpdateJacobian\>\"", "\[Rule]", "1"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Jacobian", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"jac", ",", " ", 
              RowBox[{"EvaluationMonitor", "\[RuleDelayed]", " ", 
               RowBox[{"j", "++"}]}]}], "}"}]}]}], "]"}], "//", "Chop"}], "//",
         "AbsoluteTiming"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "e", ",", "j"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5075484415067635`*^9, 3.507548455380557*^9}, {
   3.5075488976198516`*^9, 3.507548897929869*^9}, {3.5075494344995594`*^9, 
   3.507549451853552*^9}, {3.507609292628723*^9, 3.5076093227774477`*^9}, {
   3.507609379596697*^9, 3.507609456108073*^9}, {3.507609698800955*^9, 
   3.50760970396625*^9}, 3.5076099140202646`*^9, {3.5076099902736263`*^9, 
   3.5076099916337037`*^9}, {3.5076102326374884`*^9, 3.507610233607544*^9}, {
   3.5076130750560656`*^9, 3.5076130973133383`*^9}, {3.5076133771443443`*^9, 
   3.5076133798514986`*^9}, {3.507650599301324*^9, 3.5076505996493435`*^9}, {
   3.5076506818860474`*^9, 3.5076507580504036`*^9}, {3.507650960570987*^9, 
   3.507650968036414*^9}, {3.5076510046525087`*^9, 3.50765100502853*^9}, {
   3.507651050536133*^9, 3.5076510521582255`*^9}, {3.5076904848615284`*^9, 
   3.507690485203548*^9}, {3.50769055132833*^9, 3.507690576451767*^9}, {
   3.507693156984747*^9, 3.5076931648952*^9}, {3.507695670794529*^9, 
   3.507695684517314*^9}, {3.5077211112088146`*^9, 3.5077211117158437`*^9}, {
   3.5077800672908335`*^9, 3.5077800675488486`*^9}, {3.5090763948538084`*^9, 
   3.5090763952368307`*^9}, {3.657280381941518*^9, 3.657280382372543*^9}, {
   3.657286657218443*^9, 3.6572866656169233`*^9}, {3.657439132087089*^9, 
   3.6574391323723583`*^9}, {3.65743936389121*^9, 3.657439364257783*^9}, {
   3.657523933983822*^9, 3.657523934271307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wynik", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5075501245490274`*^9, 3.5075501281142316`*^9}}],

Cell[BoxData["1.051234`"], "Output",
 CellChangeTimes->{3.661426072904715*^9, 3.661426183696916*^9, 
  3.6614262785120077`*^9, 3.6614264569006023`*^9, 3.661426912324061*^9, 
  3.661427028380147*^9, 3.661427488159563*^9, 3.661427828419536*^9, 
  3.661427861949505*^9, 3.661428298951392*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wynik", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5075497332126446`*^9, 3.507549743306222*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6614260729406557`*^9, 3.6614261837014*^9, 
  3.661426278550886*^9, 3.6614264569200983`*^9, 3.661426912365238*^9, 
  3.661427028430523*^9, 3.661427488196746*^9, 3.6614278284659433`*^9, 
  3.661427861993415*^9, 3.6614282989835978`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", "]"}]], "Input",
 CellChangeTimes->{{3.507438966114863*^9, 3.5074389691510363`*^9}}],

Cell[BoxData["130575792"], "Output",
 CellChangeTimes->{3.661426072977502*^9, 3.661426183728611*^9, 
  3.6614262785885897`*^9, 3.6614264569423637`*^9, 3.661426912411006*^9, 
  3.661427028479801*^9, 3.661427488235145*^9, 3.6614278285134573`*^9, 
  3.661427862041794*^9, 3.661428299017002*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteCount", "[", "jac", "]"}]], "Input",
 CellChangeTimes->{{3.5077801875027094`*^9, 3.507780230550172*^9}, {
  3.5092761860595727`*^9, 3.5092761863825912`*^9}, {3.657439358771555*^9, 
  3.6574393591214857`*^9}}],

Cell[BoxData["22086920"], "Output",
 CellChangeTimes->{3.6614260730458393`*^9, 3.6614261838287*^9, 
  3.661426278751443*^9, 3.661426457012269*^9, 3.66142691247642*^9, 
  3.661427028591687*^9, 3.6614274883348017`*^9, 3.661427828642243*^9, 
  3.661427862136895*^9, 3.661428299115534*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "J", "]"}]], "Input",
 CellChangeTimes->{{3.5074346459467635`*^9, 3.5074346482228937`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.5074412570028944`*^9, 3.5074412586149864`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"J", "=", "0.0"}], ",", 
    RowBox[{"J", "<=", "0.234"}], ",", 
    RowBox[{"J", "=", 
     RowBox[{"J", "+", 
      RowBox[{"1", "/", "100"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"A", "=", "1.02"}], ",", 
       RowBox[{"A", ">", "0"}], ",", 
       RowBox[{"A", "=", 
        RowBox[{"A", "-", 
         RowBox[{"1", "/", "1000"}]}]}], ","}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"timer", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
          RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"N", "[", "J", "]"}], "]"}], "<>", "\"\<.m\>\""}], "]"}]}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{"e", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{"j", " ", "=", " ", "0"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rozw", ",", "evals"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"FindRoot", "[", 
               RowBox[{
                RowBox[{"fLHS", "@@", "vars"}], ",", "start", ",", 
                RowBox[{"MaxIterations", "\[Rule]", "128"}], ",", 
                RowBox[{"EvaluationMonitor", "\[RuleDelayed]", " ", 
                 RowBox[{"e", "++"}]}], ",", " ", 
                RowBox[{"StepMonitor", "\[RuleDelayed]", " ", 
                 RowBox[{"s", "++"}]}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Newton\>\"", ",", " ", 
                   RowBox[{"\"\<UpdateJacobian\>\"", "\[Rule]", "1"}]}], 
                  "}"}]}], ",", " ", 
                RowBox[{"Jacobian", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"jac", ",", " ", 
                   RowBox[{"EvaluationMonitor", "\[RuleDelayed]", " ", 
                    RowBox[{"j", "++"}]}]}], "}"}]}]}], "]"}], "//", "Chop"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", "e", ",", "j"}], "}"}]}], "}"}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
           RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
           RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
           RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", "J", "]"}], "]"}], "<>", "\"\<.m\>\""}], ",", 
          "rozw"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rozw", ",", "evals"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
            RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
            RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
            RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "J", "]"}], "]"}], "<>", "\"\<.m\>\""}], "]"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"\"\<From disk\>\"", ",", "0", ",", "0"}], "}"}]}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"initPREV", "=", 
      RowBox[{"vars", "/.", "rozw"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"vars", ",", "initPREV"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<J=\>\"", ",", 
       RowBox[{"N", "[", "J", "]"}], ",", "\"\<\\t Time = \>\"", ",", " ", 
       RowBox[{
        RowBox[{"AbsoluteTime", "[", "]"}], "-", "timer"}], ",", 
       "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Evaluations=\>\"", ",", 
       RowBox[{"evals", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<\\tStep=\>\"", ",", 
       RowBox[{"evals", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<\\tJac=\>\"", ",", 
       RowBox[{"evals", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "   ", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.507088002317067*^9, 3.5070880080793967`*^9}, {
   3.5070881025297985`*^9, 3.5070881249230795`*^9}, {3.5072715796506042`*^9, 
   3.507271582772783*^9}, {3.50728583343358*^9, 3.5072858338941383`*^9}, {
   3.5072862570973787`*^9, 3.5072862573114057`*^9}, {3.5072958384706182`*^9, 
   3.507295855896615*^9}, {3.507346869473978*^9, 3.5073470260289326`*^9}, {
   3.5073471362062345`*^9, 3.5073471369222755`*^9}, {3.507347453292371*^9, 
   3.507347454785456*^9}, {3.5074345754087286`*^9, 3.5074346034993353`*^9}, 
   3.5074348643852577`*^9, {3.507435127702318*^9, 3.507435131680546*^9}, {
   3.507440775593359*^9, 3.5074407788735466`*^9}, {3.5074408200139*^9, 
   3.5074408798683233`*^9}, {3.5074409256649427`*^9, 3.507440927344039*^9}, {
   3.5074412613641434`*^9, 3.507441321482582*^9}, {3.507445516107833*^9, 
   3.5074455565811477`*^9}, {3.5074461781506996`*^9, 
   3.5074462338388844`*^9}, {3.507447143053889*^9, 3.5074471463430767`*^9}, {
   3.507447482029277*^9, 3.507447483181343*^9}, {3.5074500070577*^9, 
   3.507450043028758*^9}, {3.507450537165021*^9, 3.5074506717457185`*^9}, {
   3.507450702845497*^9, 3.5074507433948164`*^9}, {3.5074726627277136`*^9, 
   3.5074726958066053`*^9}, {3.507473262925043*^9, 3.507473292659744*^9}, 
   3.5074734092974153`*^9, {3.5074749088021817`*^9, 3.50747494461023*^9}, {
   3.5074763708218045`*^9, 3.50747637370597*^9}, {3.507523279821337*^9, 
   3.50752330644886*^9}, {3.5075249642896833`*^9, 3.5075249852358813`*^9}, {
   3.507780502330717*^9, 3.507780589944728*^9}, {3.507780633148199*^9, 
   3.507780652452303*^9}, {3.5077836831936517`*^9, 3.507783724493014*^9}, {
   3.507785747148703*^9, 3.507785751200935*^9}, {3.5077861916701283`*^9, 
   3.5077862055409217`*^9}, {3.5077872368209076`*^9, 3.507787246888483*^9}, {
   3.507787953533901*^9, 3.5077879941872263`*^9}, 3.5077885835449357`*^9, {
   3.5077892106298027`*^9, 3.5077892112848406`*^9}, {3.5077902826261177`*^9, 
   3.507790296949937*^9}, 3.507791863265525*^9, {3.507791940123921*^9, 
   3.5077919402049255`*^9}, {3.507801710345046*^9, 3.5078017140092554`*^9}, {
   3.507805309346897*^9, 3.507805315901272*^9}, {3.5081386962469125`*^9, 
   3.5081387207353125`*^9}, {3.5081390796128397`*^9, 3.5081390799048567`*^9}, 
   3.508921064439703*^9, {3.509076569333788*^9, 3.5090765801294055`*^9}, {
   3.5090766127302704`*^9, 3.509076634983543*^9}, {3.5090943378560896`*^9, 
   3.50909434205433*^9}, {3.50912244354906*^9, 3.509122451622522*^9}, {
   3.509168943168853*^9, 3.5091689569766426`*^9}, 3.509276202770529*^9, 
   3.6572868036268177`*^9, {3.657347837882*^9, 3.657347856355633*^9}, {
   3.657348199376679*^9, 3.6573481999518433`*^9}, 3.657437594758095*^9, 
   3.657444245578903*^9, {3.65925906192588*^9, 3.659259062467723*^9}, {
   3.659260214389264*^9, 3.659260217317024*^9}, {3.659337024387148*^9, 
   3.6593371669783773`*^9}, {3.659337199345705*^9, 3.659337205599896*^9}, 
   3.659337265617404*^9, {3.6593465850879107`*^9, 3.6593465883348503`*^9}, {
   3.659347399973316*^9, 3.659347412964182*^9}, 3.6593475132994347`*^9, {
   3.659760767552936*^9, 3.659760767707492*^9}, {3.659768795489065*^9, 
   3.6597687981602983`*^9}, {3.659776788213683*^9, 3.659776791092033*^9}, {
   3.660974509572277*^9, 3.6609745123553762`*^9}, {3.660978312650793*^9, 
   3.66097831564158*^9}, {3.660991597718031*^9, 3.660991600565589*^9}, 
   3.6609917704366302`*^9, {3.660992258463213*^9, 3.660992260463257*^9}, {
   3.660992571612432*^9, 3.660992589435193*^9}, {3.661341184156969*^9, 
   3.661341224274884*^9}, {3.661420499322473*^9, 3.66142050375839*^9}, {
   3.661420663682588*^9, 3.66142071204136*^9}, {3.661421038344119*^9, 
   3.661421044447249*^9}, 3.661425483335516*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.01081`4.485370687449281", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0., "\t Time = ", 0.01081`4.485370687449281, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299173233*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299174345*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.01`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.012072`4.533324220263505", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.01, "\t Time = ", 0.012072`4.533324220263505, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299202731*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299203953*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.02`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.01073`4.482144715461924", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.02, "\t Time = ", 0.01073`4.482144715461924, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299205112*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299206242*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.03`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010598`4.476768908674286", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.03, "\t Time = ", 0.010598`4.476768908674286, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282992073393`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299208456*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.04`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.01085`4.4869747316805215", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.04, "\t Time = ", 0.01085`4.4869747316805215, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299237561*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299238757*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.05`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.01079`4.484566438178884", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.05, "\t Time = ", 0.01079`4.484566438178884, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299239831*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282992410173`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.060000000000000005`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010799`4.484928534669092", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.060000000000000005`, "\t Time = ", 0.010799`4.484928534669092, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299242155*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282992432137`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.07`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.01097`4.491751621070686", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.07, "\t Time = ", 0.01097`4.491751621070686, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299271983*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299273346*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.08`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010581`4.476071707883126", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.08, "\t Time = ", 0.010581`4.476071707883126, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299274436*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299275531*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.09`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010786`4.484405409448117", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.09, "\t Time = ", 0.010786`4.484405409448117, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282992767057`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299277849*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.09999999999999999`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010727`4.482023274118379", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.09999999999999999, "\t Time = ", 0.010727`4.482023274118379, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282993065023`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282993076982`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.10999999999999999`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010768`4.483680040375875", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.10999999999999999`, "\t Time = ", 0.010768`4.483680040375875, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299308825*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299309901*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.11999999999999998`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010708`4.48125335601087", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.11999999999999998`, "\t Time = ", 0.010708`4.48125335601087, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299311068*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299312228*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.12999999999999998`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010717`4.481618224208491", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.12999999999999998`, "\t Time = ", 0.010717`4.481618224208491, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299340863*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282993420773`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.13999999999999999`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010812`4.48545103052266", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.13999999999999999`, "\t Time = ", 0.010812`4.48545103052266, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299343171*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299344264*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.15`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010643`4.478609055647021", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.15, "\t Time = ", 0.010643`4.478609055647021, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.66142829934544*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282993465443`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.16`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010708`4.48125335601087", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.16, "\t Time = ", 0.010708`4.48125335601087, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299347683*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299348864*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.17`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010805`4.485169764715233", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["J=", 0.17, "\t Time = ", 0.010805`4.485169764715233, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299377358*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282993785963`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.18000000000000002`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010796`4.484807869380452", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.18000000000000002`, "\t Time = ", 0.010796`4.484807869380452, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.66142829938064*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282993818293`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.19000000000000003`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010699`4.480888181015081", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.19000000000000003`, "\t Time = ", 0.010699`4.480888181015081, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282993830013`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299384089*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.20000000000000004`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010883`4.488293622668175", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.20000000000000004`, "\t Time = ", 0.010883`4.488293622668175, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299412743*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282994139547`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.21000000000000005`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010647`4.478772247563231", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.21000000000000005`, "\t Time = ", 0.010647`4.478772247563231, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299415071*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282994161663`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.22000000000000006`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010691`4.480563323042455", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.22000000000000006`, "\t Time = ", 0.010691`4.480563323042455, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299417388*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299418541*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"J=\"\>", "\[InvisibleSpace]", "0.23000000000000007`", 
   "\[InvisibleSpace]", "\<\"\\t Time = \"\>", "\[InvisibleSpace]", 
   "0.010939`4.490522615828665", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "J=", 0.23000000000000007`, "\t Time = ", 0.010939`4.490522615828665, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.661428299471004*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Evaluations=\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\tStep=\"\>", 
   "\[InvisibleSpace]", "\<\"From disk\"\>", 
   "\[InvisibleSpace]", "\<\"\\tJac=\"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Evaluations=", 0, "\tStep=", "From disk", "\tJac=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614260731509647`*^9, 3.661426184044286*^9, 
  3.661426279907899*^9, 3.661426457084058*^9, 3.6614269135267477`*^9, 
  3.661427028691495*^9, 3.6614274894366713`*^9, 3.661427828710443*^9, 
  3.661427862226445*^9, 3.6614282994735622`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jtest", "=", "0.2"}]], "Input",
 CellChangeTimes->{{3.65744473955562*^9, 3.657444740888792*^9}, {
   3.657446853169569*^9, 3.657446853441338*^9}, {3.6575072515129128`*^9, 
   3.657507257193214*^9}, {3.6575208996764107`*^9, 3.657520899772108*^9}, 
   3.657521855779954*^9, 3.657524050349365*^9, 3.6584849666595535`*^9, 
   3.6586449163010073`*^9, {3.658645249577503*^9, 3.658645249752503*^9}, 
   3.6586493776267433`*^9, 3.658649408634366*^9, {3.659760705657612*^9, 
   3.659760706631159*^9}, {3.66097437616175*^9, 3.660974377313401*^9}, 
   3.6609747105425177`*^9, {3.660992055053926*^9, 3.660992055389784*^9}, 
   3.6611349610795813`*^9, 3.6614207572313423`*^9, {3.661421051741228*^9, 
   3.6614210533890142`*^9}}],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{3.661426073420475*^9, 3.661426184491688*^9, 
  3.661426305821286*^9, 3.661426457342417*^9, 3.6614269536412783`*^9, 
  3.6614270289719276`*^9, 3.661427521333164*^9, 3.661427829002795*^9, 
  3.661427862509802*^9, 3.661428299478841*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rozw", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
     RowBox[{"ToString", "[", "Jtest", "]"}], "<>", "\"\<.m\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5077918939682813`*^9, 3.507791914564459*^9}, {
  3.5089371051661797`*^9, 3.5089371213461056`*^9}, {3.657347744485211*^9, 
  3.6573477462908163`*^9}, {3.6573478107748613`*^9, 3.657347813569992*^9}, {
  3.657347979025044*^9, 3.657347982495798*^9}, {3.6573484564754257`*^9, 
  3.657348457579075*^9}, {3.657444736217266*^9, 3.657444736712901*^9}, {
  3.657507263289003*^9, 3.657507266872979*^9}, {3.6593210514317293`*^9, 
  3.659321053413064*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"rozw", "=", 
    RowBox[{"wynik", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5077803251195807`*^9, 3.5077803281427536`*^9}, {
   3.507780372101268*^9, 3.5077803736243553`*^9}, 3.6584850675253224`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPolarPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "R"}], "}"}], "]"}], "/.", "rozw"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5077854715559397`*^9, 3.507785507907019*^9}, {
  3.5089975087639427`*^9, 3.5089975088959503`*^9}, {3.5092945262695727`*^9, 
  3.50929452639258*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, 
    GraphicsComplexBox[{{0.7775181521171451, 0.}, {0.7691145808637992, 
     0.15298640206583172`}, {0.7441941413451594, 0.3082553063837651}, {
     0.6993636674771311, 0.4672998627451149}, {0.6304167179117205, 
     0.6304167179117204}, {0.5311534526748077, 0.7949273181327883}, {
     0.394341694967758, 0.9520250682003553}, {0.21481732007689475`, 
     1.0799595968152116`}, {6.943146468987548*^-17, 
     1.1339018684932891`}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
        9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.66142607355033*^9, 3.6614261846071367`*^9, 
  3.6614263058917627`*^9, 3.6614264574308434`*^9, 3.661426953741473*^9, 
  3.661427029075163*^9, 3.661427521469008*^9, 3.661427829119183*^9, 
  3.661427862626446*^9, 3.6614282995892677`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "dat", "]"}]], "Input",
 CellChangeTimes->{{3.5073766055607004`*^9, 3.5073766069147778`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "[", "enum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"dat", "[", "enum", "]"}], "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"N", "[", "enum", "]"}], "]"}], "<>", "\"\<.m\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.507376506454032*^9, 3.50737653649475*^9}, {
   3.507476240279338*^9, 3.5074762478937736`*^9}, {3.5078029017491903`*^9, 
   3.507802918369141*^9}, 3.507809332229993*^9, {3.5081397826530514`*^9, 
   3.5081397846691666`*^9}, {3.5090938900794783`*^9, 3.50909389186058*^9}, {
   3.509163596447871*^9, 3.509163601919184*^9}, {3.5091641097632313`*^9, 
   3.509164131001446*^9}, 3.5091899509914317`*^9, 3.5092735230302563`*^9, {
   3.509274718514634*^9, 3.5092747274231434`*^9}, {3.657347773458592*^9, 
   3.657347776754591*^9}, {3.6573480315204372`*^9, 3.657348040015616*^9}, {
   3.657348086111442*^9, 3.657348087999237*^9}, 3.657348183838628*^9, {
   3.6574447513852654`*^9, 3.657444751816897*^9}, {3.659260315555888*^9, 
   3.6592603176834927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "[", "Jtest", "]"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.6573481041362534`*^9, 3.6573481072463284`*^9}, {
  3.657507313208527*^9, 3.6575073152400846`*^9}, {3.657600210752247*^9, 
  3.657600211967126*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R1", "\[Rule]", "0.7775181521171451`"}], ",", 
    RowBox[{"R2", "\[Rule]", "0.7841824262978264`"}], ",", 
    RowBox[{"R3", "\[Rule]", "0.8055099340952959`"}], ",", 
    RowBox[{"\[LeftSkeleton]", "79", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[Rho]C", "\[Rule]", "0.7922731309315405`"}], ",", 
    RowBox[{"\[CapitalOmega]0", "\[Rule]", "0.5981914931881218`"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.6614260735873213`*^9, 3.66142618499273*^9, 
  3.6614263059263077`*^9, 3.661426457571578*^9, 3.661426953778276*^9, 
  3.6614270291487703`*^9, 3.661427521504582*^9, 3.661427829156845*^9, 
  3.661427862665457*^9, 3.661428299625079*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "powSpline", "]"}]], "Input",
 CellChangeTimes->{{3.5078033649266825`*^9, 3.507803368513888*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"powSpline", "[", "enum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"powSpline", "[", "enum", "]"}], "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "R"}], "}"}], "]"}], "/.", 
      RowBox[{"Import", "[", 
       RowBox[{"dir", "<>", "\"\<Solid_\>\"", "<>", 
        RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_J_\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "enum", "]"}], "]"}], "<>", "\"\<.m\>\""}], 
       "]"}]}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Hermite\>\""}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.50780331261069*^9, 3.507803363194584*^9}, 
   3.507809337412289*^9, {3.507823431531427*^9, 3.507823465711382*^9}, {
   3.5081397953017745`*^9, 3.508139797351892*^9}, {3.508937239999892*^9, 
   3.508937240399915*^9}, {3.508998520477809*^9, 3.5089985218828897`*^9}, {
   3.5090939017401447`*^9, 3.5090939030222187`*^9}, {3.5091573593821316`*^9, 
   3.5091573781502047`*^9}, {3.5091636100836515`*^9, 
   3.5091636120617647`*^9}, {3.509164144583223*^9, 3.509164146144312*^9}, 
   3.5091899555096903`*^9, 3.5092735280545435`*^9, {3.5092747336635003`*^9, 
   3.5092747379817476`*^9}, {3.657347790675351*^9, 3.657347794754449*^9}, {
   3.657348484347722*^9, 3.6573484850182123`*^9}, {3.6573485156390333`*^9, 
   3.657348516858882*^9}, {3.657444760361167*^9, 3.657444761016038*^9}, {
   3.659260335875827*^9, 3.659260339507381*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"powSpline", "[", "Jtest", "]"}]], "Input",
 CellChangeTimes->{{3.507803379554519*^9, 3.50780338219067*^9}, 
   3.657348491290833*^9, {3.657507327864524*^9, 3.657507330296027*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwVjnsw2wcAxxO1qVEtWpy5eGxNS+3Ssu601JfVoyOcNTU9Z2odasyjNO1U
1Ib21Ea9aliV25i0hto8NorZVIZ5BNdePeoV5Jf3L4lIpp3ZH5/73Oe/j/3F
5LMxehQKxWOH/82fp215l0d4ttZ/3Je4JETnqQuZXLcqDG1HhdXudK6JcYb2
bCMenzSJcxUIYde2SvdktqHHsTRsQijE1Wm7uKbRLszXZXNi5ULc+dm3wEH2
OwzOi3c/1woR127OpJ8YQIdPRwt/F4GElPTTvcM8jKuS8o3NCDit/r32U+AI
UjgqXZQDgaT9vyWzisaQWhq63e5KQJZ534q3hw9yorp06AyBtTHnz73aJzHs
nBdRGUng8cvWAzHnpsEYPaLUsQk0vJ4zO2XxFDx1p1VxMYGniXZltO5nGDWt
qohuImDVavjZL9nP0fWqqZA3SsCNT5SqvGdRQTKVv8oJfBdc3rp3ZQ7JyUXc
RFMRzLmFYnbDC9CbTxl5uIlwqcXReI6+iF17ArpKI0UY07Ye/d5oCUacc6Op
+SLUPTpO8ZQsgdbPLlvuFMHmW9shXs8yeAbFPjECEe4nMGo1tSv4RhSbf8xS
jP6k+hRztgABGy3lk2fEYC1aSF7zXQUnJdbiywwx5GhmV9PXYNptndjVJsY7
Y41aB90aGnpHbd0lYrADxm8Hza/DhxFpzXWSwPm47ElQjxB+NdmcE/ES5Aan
bbkXEnCpePfKTIME66E0jKfsfNyIYB6WSiD+msEJ8RHjVf1m8zBDisijHtEN
5hJEeX8qn0mVYvaPpPAf1BIEuofdzeyRQpdjEFAwKAVFd3phRF8GB9dBf5uH
MhxzeVk1xZJBsk/sWXlDDqdC92FWjQwlzTcV7EMKXNz30aKLRIa2Ee5flysU
6Pp3uWzcSw46JataQCXxZ2AbpbFIjuojcTrHKyT8NXzRwrocTJNxp3ABiZCC
9gkZTQHmbuI8NUgJfd4nNWb+CnyoO2CS0avEe2X6DpxUBX6kavoSDqug2r6W
bn9PAdd+lr9/kQrWBjlc6YACT64NhG5Q1JDJ+EsBCgW4vsIo63g1qJYXfO9a
kih6w1ZlOqeGIaYtbnqRaLk1Fa4O3ECO6qt/HsSSsLV27wtq20DqRPcX+/NI
lNW1P0w/qMHJaUevqgckwv1WSmzuaKB5YVNKHSRxcOEtvRLqJrJu0a6/v0Ti
EGPZT3l5E29GXxKbaUlcL2flDc1sQqAfE5xlqMSk+llIGlOLOXkuMWapREb8
XouyDi0ie9P08uyUqLxHC9qy1+FRu+EHV99W4j8h5vN8
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0.74}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0., 1.5707963267948966`}, {0.7775181520093409, 
                 1.1339018681568227`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwVjnsw2wcAxxO1qVEtWpy5eGxNS+3Ssu601JfVoyOcNTU9Z2odasyjNO1U
1Ib21Ea9aliV25i0hto8NorZVIZ5BNdePeoV5Jf3L4lIpp3ZH5/73Oe/j/3F
5LMxehQKxWOH/82fp215l0d4ttZ/3Je4JETnqQuZXLcqDG1HhdXudK6JcYb2
bCMenzSJcxUIYde2SvdktqHHsTRsQijE1Wm7uKbRLszXZXNi5ULc+dm3wEH2
OwzOi3c/1woR127OpJ8YQIdPRwt/F4GElPTTvcM8jKuS8o3NCDit/r32U+AI
UjgqXZQDgaT9vyWzisaQWhq63e5KQJZ534q3hw9yorp06AyBtTHnz73aJzHs
nBdRGUng8cvWAzHnpsEYPaLUsQk0vJ4zO2XxFDx1p1VxMYGniXZltO5nGDWt
qohuImDVavjZL9nP0fWqqZA3SsCNT5SqvGdRQTKVv8oJfBdc3rp3ZQ7JyUXc
RFMRzLmFYnbDC9CbTxl5uIlwqcXReI6+iF17ArpKI0UY07Ye/d5oCUacc6Op
+SLUPTpO8ZQsgdbPLlvuFMHmW9shXs8yeAbFPjECEe4nMGo1tSv4RhSbf8xS
jP6k+hRztgABGy3lk2fEYC1aSF7zXQUnJdbiywwx5GhmV9PXYNptndjVJsY7
Y41aB90aGnpHbd0lYrADxm8Hza/DhxFpzXWSwPm47ElQjxB+NdmcE/ES5Aan
bbkXEnCpePfKTIME66E0jKfsfNyIYB6WSiD+msEJ8RHjVf1m8zBDisijHtEN
5hJEeX8qn0mVYvaPpPAf1BIEuofdzeyRQpdjEFAwKAVFd3phRF8GB9dBf5uH
MhxzeVk1xZJBsk/sWXlDDqdC92FWjQwlzTcV7EMKXNz30aKLRIa2Ee5flysU
6Pp3uWzcSw46JataQCXxZ2AbpbFIjuojcTrHKyT8NXzRwrocTJNxp3ABiZCC
9gkZTQHmbuI8NUgJfd4nNWb+CnyoO2CS0avEe2X6DpxUBX6kavoSDqug2r6W
bn9PAdd+lr9/kQrWBjlc6YACT64NhG5Q1JDJ+EsBCgW4vsIo63g1qJYXfO9a
kih6w1ZlOqeGIaYtbnqRaLk1Fa4O3ECO6qt/HsSSsLV27wtq20DqRPcX+/NI
lNW1P0w/qMHJaUevqgckwv1WSmzuaKB5YVNKHSRxcOEtvRLqJrJu0a6/v0Ti
EGPZT3l5E29GXxKbaUlcL2flDc1sQqAfE5xlqMSk+llIGlOLOXkuMWapREb8
XouyDi0ie9P08uyUqLxHC9qy1+FRu+EHV99W4j8h5vN8
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0.74}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0., 1.5707963267948966`}, {0.7775181520093409, 
                 1.1339018681568227`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 1.5708}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6614260736970987`*^9, 3.6614261850762787`*^9, 
  3.6614263059943647`*^9, 3.661426457650148*^9, 3.661426953889123*^9, 
  3.661427029217203*^9, 3.6614275215808067`*^9, 3.661427829250803*^9, 
  3.6614278627771893`*^9, 3.661428299711689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surf", "=", 
  RowBox[{"PolarPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
       RowBox[{
        RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
      RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"DotDashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1.4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.4"}], "}"}]}], "}"}]}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.5078034370498075`*^9, {3.5078036358421783`*^9, 3.5078036377392864`*^9}, {
   3.507803717961875*^9, 3.5078037229511604`*^9}, 3.507809352408147*^9, {
   3.507823358474248*^9, 3.5078233590662823`*^9}, {3.508139806554418*^9, 
   3.5081398166439953`*^9}, {3.508937490988248*^9, 3.5089374924973345`*^9}, {
   3.508997524931867*^9, 3.508997533999386*^9}, {3.5091119656773434`*^9, 
   3.50911197471086*^9}, {3.50911203923055*^9, 3.5091120423427277`*^9}, {
   3.509156986323794*^9, 3.509156988077894*^9}, {3.509157028937231*^9, 
   3.50915703783674*^9}, {3.5091622456526103`*^9, 3.509162247096693*^9}, {
   3.509163249570031*^9, 3.5091632496390347`*^9}, {3.5091633621214685`*^9, 
   3.5091633621864724`*^9}, {3.5091633965494375`*^9, 
   3.5091633967844515`*^9}, {3.5091634634232626`*^9, 
   3.5091634637082787`*^9}, {3.509163620416242*^9, 3.509163620486246*^9}, {
   3.5091638702555323`*^9, 3.5091638703195357`*^9}, {3.5091641516536274`*^9, 
   3.509164153411728*^9}, {3.509164231128173*^9, 3.5091642326022573`*^9}, {
   3.5091900388774586`*^9, 3.5091900389984655`*^9}, {3.509269065295288*^9, 
   3.509269065535302*^9}, {3.657348530587304*^9, 3.657348563081706*^9}, 
   3.657445458497101*^9, {3.657507474455944*^9, 3.657507477462317*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
SvxfGVO4Iw==
      "]]}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small, Small, Small}], 
     LineBox[CompressedData["
1:eJw113k0lP3/BnCVqBRahFKIiiT1UFniKksNQllDUspSeEpF1lT2CsmeLdtk
SdbslaVBkiKV5dFiMJhbDz0lWb8f5/x+c86cOa9/7lnueV+f6y1uc9HQdjEH
B8coeS68Xvi3JGLSkgLH/z3+0r5usWD/XIH5+SkV2Jh1l/wmnn2X0DQ/pYvr
Iq8eTiz4zsn7mDFGRaLO5l/EZudLvs9NWeJX7ynZ/4j7dFb++9n7DGpYS1vH
iNeuo29RmzkHs3pwfCcuFwnhTPJyAN1r5csR4qAf64OmpxyhuclJmEWcK1mY
aO55ER6lpziYC++X+k9Cj7cLlMz63T8T33Ohbb194AqkV8/e6iJ2ed1yVnHm
KuJ+Z23uIN7q9eDYYJUbAkWHdFuJ/9br64/0cofKPTHLWuLMyPSh0Skv2PNs
UK0kVsu6rvOg0gedOx8VFBH/EYtVPOzpi5Yu76NpxBdeiRu0et+EeCbjajyx
RZKIf/rJW7CJSdt1j1ixPdbF/YAfGr2FzbyJhYRdHMRn/LHrRTHDhXgXD4fj
r54AcNf1MeyIr252EXpVFYhVpfOeBsSJbpZ2F72C4XZJuXwj8dfe2b/Lpu6g
uN63eBWxca3O+eDuu+Cxsjw4b0HhvyDV/05UhuK15kfeb8Rcz92yJj3C0eDx
7XoKsbzgFZF47wic8PvCFUasdDA4y5eKgMxLVzFv4luX27/bklu4ktNpmRnx
m9X70/cciIRMYFAuN/Ehw3gvxnQUHI4Y1Pwwp7Dmw5PsbMdo+CcW2vUSM6ot
/UN7ohF17IhDIXHa/GNF46oYxJypUTMm3uUb6NzrGQfWU2WlgBMUAqyZt3v/
JMC9rJnHntivyDdK8koifJemnaQRJ4wPbXSkEjFdKeWxnNhfyi1h4nMSMjzo
SQFmFKTyG8W4X6Yg4vhIlK0phdDQE3JcjanYy7HvKIj/cHiLZS5Jg3Vn+00h
Yhf7XS80Dqah6M1ih1cmFESsRjhuVKRhxSsDsa3EU072137mpsPBT+vQSyMK
l0xfqLbcy4TX2pneaOLdwc0Btm8y8XCa748dsU4674W55XT07zbK4Sam6VOL
5fzosFe2/qNuSCF2JMvsjusjGFeb6KQeo9DOGfJAziIbsyWuz2eOUniuenJ8
s0QesgZtDOuIR4Kr4uiWeThnY+saRGx56HezbFQedAfyHPiJC5p9WpSXPgFr
vz3nJl0KnRYiMgasJ9j/9vhqcW0KgZqPaAUmBQgXFg7u0KTwz0QxO1y4CK6F
cRx3iffoPrv/em8Rysz0l2kQm0xvGucyLEKu1WlGvgYFZveWdu/bRdCPwYSf
OgWV5iEh2+kixJX+kBc8SEGgs9t0e28xGt43bh9WprCyUP3GxYdP0TDmrBpF
rH0rM31t9VOULG4fVCM+u+jJlbJPTyEk2fXzvhKFZTzLhOZ4S9EYxj23V5HC
4xSaXZBPKc718zTY76VQk6xeHWJRhtY8tX2echTYVdEOOusqoD98oEGQ+EGt
vRFTrgIe27aOlOwi+cGd1uulW4HxyIrRUVkKJziyWnNvVYBTWKTfYieFwgY7
Qe7xCiguEwkXk6ZgfnwTK+dNJUyN5oYstpD5uSGTkBFYjaoRz2vfxCnQE+PN
AjOq4d63JMiemOtuw337umpoh2lIXxaj8PbuIT+puWq0RZZ63txMYVhhVjXD
9Rl+RJwwCt5AIeppQsatc89xLcGRvW8NheLcqnq2WA004kVUhTgoJJf8EraZ
rYV3YtXJkHk2HAwnS9V56nB8Rp93ao6NYzJ8qySE6+D/0HJ79ywb1+xSmH0K
dai8obMnepoNs+1GCtZOddA/cZU+McGGRLKxgk5PHXLq5rbaj7Ih/eH0nqHy
ejhPZM/PdbJhveq6ouIVBi7KWI8N0tmYyr8XrSb7Chocs6smnNlY+bCr6G1r
C16O+rtM7mGjJf6vH+YC7yAyVHHYe3gEcxox66SYbdAyiatnJY+gULzpeWHo
e2xVK3poYzCCtendRyVkPuDUx8OnOX8M4yct2GDx4Ed8eM3x3DhqGH97yp9w
8+nExQMjbRXbh7Ft1pj35O5u7DXXSxIoHULCdT+9+fc9CJ6OLx7TGoKYsn21
s3EvrARe8JcyWJA1ZTNtRz/jy+hbzp9HWBjr6OxI2vMVtwdzRvdWDGL9asWq
jN9f8Varejxn2yBa1txjaj/9Bq2C5k9n4gbQ0zZrXHemDw6RTWN7JvuxzN/f
s0SQCeHZUD1lq3707z8dlFPNxDs0HLOpYSKveEQmxbwfe9/lSw/wM3GRGfXX
2bl+zLzbKKTt0IdJh86ZtvsDKLDqOH318TeEDgT9KZMdBP+v2zwb/v2KuaAd
ClEvBlHp7pEL5a8o+XAtcOwQCxKewy52zM+YujJf/6uJhTCXzev5bHuhZMJV
NHRwCAVadQw5Vg+a5t0kHhcMQfz1qc+Gh7phJkJ/oidBfkeZSm6Bwk5Urxmo
GA4ahofVsqLzkx+RKmk3+GN0GKnxDfenTD+AxVN5M/DwCJSK+M+Elr8H7b6G
6nzMCDyWmF7NH2+DHy1OajVrBNfU85rua76Dgurk9/EdbAjKxh0U+dyCmBLN
/J9ObHS9nRRec+AV3APkC3nJ/yaxm7NJsp0Bu6W0dJsONny9zonq1DMwsf54
lcgHNi5rRa69WMLAJj1f44/Ed3Y6vy+LYeDVuOoK2ic2OCM8yzUtGRDYOnRr
azcbqmUaRkf7X+LnN0F60xc2Qnyl6esm6iHZG5eUP8IG7dSNhDihOqgUydHn
yVzYJLhoZq6oQ2aKZEk4mRvf3tLMwpla5DV8MRQlc6UpufH+q6+12N6Voq66
iELrNwuhiaxa6AksZ19ZQs4JpgqPulItxGujrVq4SS5H9vE+Mq+BqX5qpTQ/
hej3r2VzdWvg4i7bm0tsWzPJk69ag1imyj3Z1RRkeqa5SsVr0OTy6ZEcmWvl
Vtfpm+9f4KdvW+KudeR62t6qMf89B3+6YKKgEAVRuoLDWflnWDTk3hctSuY+
JNdqWPAZBCaZr7hJjji38/b/PVONxe2jWh7ElJJapjujGizRT9MWJHc0aJWc
QWbV4NradkpYgsL18enIcK8qpIiOzd/cRj6fRlK7YX0F8o/FpS8mufcoZUnh
60cVWLurZKM9cW68m6zm3QoYNapIvSbW7di2WMGkAnz7g+ciSG6GFcht42OV
QyqbStmwm/Qykb6S4hXlkFmeXCIoT3pNEM+b8uOlEL3TtLGW5PSWVqkHrfKl
4M9s8RElOQ7L60v6BUoRJzV12odYQYB6vKr7KQY+NufsJ7kfMxd4/qTNU5ze
J3CUrkJyc8J+nnW5BHt8h+od1Uiuno/VrYoswpIt7T6x5Nwp4zuZwXAtwqN1
s4sGiRP9duS8NSsCY4k4twI5pzic5p/3bSyCtLV+VCuxcrWGyNKMQpipClfO
alFYPsi7UaWkALa+tL80aaS3HHct/JKVhwov7RYXcm62ZPpW9V/Kw+Z41sHH
xDa/jQ2HFfPwXaHp8CBxRmeL9HjTY9Cs9LjM9Sg4/sOKnR7KxVouA2MlfdJL
a27tnpHKQdS/LjIDBhQ4k8ecp8aycUqprViInOsjhj1ak+XZGEywfaNLzP9f
ZNMPWjY4Q3eUFBBfkrmzh+mQBa1cvmOux0lvMLQ+XpRFR/3LhzXDpCcoHrFI
yrlEx+XI35brSY9Q9QqISFOk41nDtWB14pWPu1wjmjJhlz0eFU8c3Xj1sONQ
Bqq+lXupG5P788a0kU8qHdr1XDd8SY9pzBadXTyWBs8QumwmcZL/m6FfZWno
LbR1aiYeD9Ma6D6ShgkmktaSXiTzKON2qn0qdI4Ytzwk1vsiGqapn4LA84HW
dNKz1kkMDAm2JaMoXSS3iTi441zeiFEyNtzwcRohXrFxk0+YeRK6whOP7SQ9
TYh/r+fbcwlYX6CWnE18OiDCNpn1AFVhQnGNxBsGqt44XXgAf4Vy7gHiWmPO
zcsuxWM2/jBtM+mJ7it2LFLyioXRi3v6t4m7u6oEOOdi4FYWMpFO/KlArrL1
Rgy2a2que0Ycmn+k2iYwGuPyMwWjxFljHEMBEZFozrtwkUZ666rxC8/11kUi
2v0sw4p4IPn1foHY+/iityHiMrGG57RIemIEfvvXhDwgNop6xnI1CMez4v55
5kKPDg3X5jAJQ4Z+/ZJfxGJ8HoK3LUIRssbKZynp4R8XZa1ItL2DmI81bZLE
zuLuSpKOt/FH9fZjeeK9Uq6s3EsheJO4avYQcbEdT0eFVxBUdh6aP0m89Iyc
yMGbgRDrGis4TxzZGD3BCAwAv5t5pyvxIne4vovwQ3q0cfBd4v3RqyRMYm8h
I3uQP5Y4hiHv1pV4E87vdvOlLuwh8gdQZ+AL3hjKqZhYQLV7rsnCB2Y9Vi1V
xBo/jOTe2npB+0Zgav3CHqGs0N1xyQMlp+yoZmJpDq7l3V7XwG00+7iNeG63
MeNzoCtMD+gyPy1cvypbiBlxBaYzBuG9xGEREStZiS6wvsZT2Lfw/Q1kTT4Y
XMT5KB/awt6Wzgya7LF1xBpVugmbOKmZtr7Pyx6xVgGdC3uf8a+AWlbEWfT0
b2gbJ+7Jy9nQbWAN65d2+EmcXxsv3O9lBp0xB4mFPbNBcMXRHgMD2FiL+yzs
oROjZ+J6DIB1PPeOLuyp3HfzF++jhR/4/z32f93jafQ=
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 1.4}, {0, 1.4}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426073798101*^9, 3.661426185129105*^9, 
  3.661426306049671*^9, 3.6614264577228413`*^9, 3.661426953983616*^9, 
  3.661427029276622*^9, 3.6614275216705*^9, 3.66142782933191*^9, 
  3.661427862873068*^9, 3.661428299794627*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"PolarPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"2", "/", "3"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Medium", ",", "Black"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dotted", ",", "Black", ",", "Medium"}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.0"}], ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.657521095777029*^9, 3.657521110330892*^9}, {
  3.65848109891133*^9, 3.658481100071397*^9}, {3.658645202938484*^9, 
  3.6586452137369547`*^9}, {3.6609914397651043`*^9, 3.660991442004664*^9}, {
  3.660991516532745*^9, 3.660991520436364*^9}, {3.6609921675008993`*^9, 
  3.660992176972555*^9}, {3.661341476895075*^9, 3.661341484102963*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfNEW", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
        RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], " ", ",", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pi"}], "/", "2"}], "+", "\[Theta]\[Theta]"}], "]"}], 
        ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]\[Theta]", ",", 
        RowBox[{"Pi", "/", "2"}], ",", " ", "Pi"}], "}"}]}], "]"}], " ", ",", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
         RowBox[{
          RowBox[{"-", "\[Theta]\[Theta]"}], "+", 
          RowBox[{"3", 
           RowBox[{"Pi", "/", "2"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]\[Theta]", ",", "Pi", ",", 
        RowBox[{"3", " ", 
         RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}], " ", ",", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"powSpline", "[", "Jtest", "]"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "/", "2"}], "Pi"}], "+", "\[Theta]\[Theta]"}],
          "]"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]\[Theta]", ",", 
        RowBox[{
         RowBox[{"3", "/", "2"}], "Pi"}], ",", " ", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.657521041594685*^9, 3.657521393976375*^9}, {
  3.6575214460084553`*^9, 3.657521500134912*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
SvxfGVO4Iw==
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[CompressedData["
1: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
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
A0JBLEg=
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[CompressedData["
1:eJwt13k01dv7B3BXolKSEkqGi1KSulQUHokyyzynlKHSLZWSISRDGsxTyHwy
pEyZ6zF0kEQqJS7FwcH5KBok0/nu1u/3x157vf7Z87PXeks6nTN15uTg4Jgg
7U/Pc/sx5x6dCNXTX8uiZuwomCsUZLNn9+M/utds//hIe3ILe1Yfnax6yn4R
l4bZR8O8OV4TfZE+TZzjWvZlcdYOq1L0xH4Sd+mt/Nrvexx/9h2V/068ai3t
b/X5k1jHXNo+SVy54SZXqo8bWjUCxxdi06n1oXOzZ5Dms/L5OLGWdHGKjfc5
1NrkLsIk1s/4L7nX1wOvlh/lYBA7ndeRCVe9iCpWQ179xHmtbSeU5y/h1jUL
1z8SN3jfOzJScxkTf+WKvSO+YDg4FOPjhSHio/rtxNExWaMTsz64P1LCrp74
0YNreveq/dCVd4NaNXG7RILyIW9/7N7+oKiEuPqFpHG7byC2ffQ1yCTuTxW9
kWV/HSVz6JeSiK+9SfDwUg1Cp/jMHZF/9iPi4SY5fwObfUWsfImTeTnO/OwN
xh1YSvcgzhLzEH5RE4I8DYN0F+Jnl+1czvmE4apytrcx8UTfwr8Vs7fw8vl9
lRv/rLde71RYz20sbfQvXUX8PVTtu3X1HeR1sNNg21Iw//Ry7szVCHyp9Z5v
gFhK6KJokm8UNl0duJZGfFAjLNefikLroE/cd4ndL7z54mwfjXLPPSV8iYvX
7M3apRqDK7ncl1kRm5gm+dDnYlEuJLSAh5ir61Fe3pk4dDtsXPfNhoLXtXY3
7vTG4Y2UYpc+4s/sh8rmNfEYe+SwWzHxMf+Qs33eiRh/vE7dnDjDkRHe9zsZ
mU/2qQRbU5BQ4h8rfTEFvSpaeV2Jc6ZGN56hUtB/aaa9DrG/7OXk6f5UnKuW
vbqcWOVxswTP8zTMvkpLDbaiIOqOtQJ3cwZGmYzHOltSMMPhK5GzJBN3c+wx
AGJ31x14UCMTHbvfBAoTb3cY5wioysSSV5xuLywoEDzreuVHQRYuf2EsIUMc
bIlqbZE56BakfeC5GQUOYa3Bzq9y0HvtfF8c8aUsvtOLy2mYPrf6twvxKSOK
UyGIhkM7zfJ5iHPHc61ueT5A132OvzVNKZjlunlPwTYPzWst9DKOUNCnZj8l
JlWI82Wez+YNKFgIq0mk2RVi7oiTaQPx6QO/WuVjC/Gkk7NnKHFzq1/bvqWP
UH+40I2feNxWVM6Y+QiZe125NumT89N6oFNkUYR7O0zWSOpS8HW6lBUhUoIR
IiJh77Qo0NB/Gv1ydwleKk7kuE18bG7TFLdpCVZYGS07SPyj5+83vuElWOBw
jP74IAW6raPCznMlaBQP00GaFGzr7rHc0leKieXfFIU0KJAp1gw4l/4Em942
bxnbR4Hr9ZystbVPkD55Vi2W2OuvRxcrPjzBMs43I+rEorzLhBf5ylFI+uOP
aBWynzQdl1C/cmy+y7O4W5nUz33N2pu2FXhyiLfJdTf5H2rj3PTWVeGrQvU9
3gqkfutdzRgKVWg4ptokRPwPT2afj34Vem2WGS/bQe6DI7e94HoVTsVUTUzI
U/C+yUWIZ6oKuUREh2y3k/djsomZ/6oalZeJRkhsJfUfIJecHVKLFmaLo7Z/
U9CRkmQVkl2L1ePeVwYkKZC/3RTt2lCLXoNLQl2Jv94+ECS7WIs6dw9uvSBB
6ktpQS3b8yl2xpR7B4pRUPQkOfv6yWc4FWVtFraBAnpBTSNLog6vJJ9h7REg
/0nZTxGnhXrUTBJVE+agwNd0plyTtwF9Umrsb7JZcFxu9SopkQY8Mm/EN7vI
gnCXNMagUgMGpdtt6VlggesWMyVH9wasCtDbFTfHgt33zZX0ehvQ0PoSbXqa
Bepdx3aNVjZiXsOijOsEC86vuqasfJGO7tN57MVuFqwsioxTl3+B/8o5To7Q
WCCV/rGko70ND3AsrJo+y4KepH++2Qi+xoaJGx4zu1jApxW/TpbRicKjVYd8
x8bhuWTLs+I7b1HTIrGReX8ctmT1GEjJdaGkekm6k/E4LNcNM+YceY/W7w8d
4/o2BkHeitaX/brx9UuOZ+axY6C6YM5nv7MHT6mOd1ZtGYPCa0GG7Le9uNPG
MFWwfBQU9rnWnjXvwxtzSaWT2qOwx5LFcJ7oRxtB5C+nM+H7u+53qbs+438T
HVw/DjNBaI1yTfavzxg+kj+xu2oE2gQiGbpPBrBDu3Yqf/MI9HYumDccH0Tt
otYPxxOHgfvGDe8yIQaeimmZ3DUzBAN7j4Xm1zJw48Idw30OQ1BQOi6XZjOE
b6DpiFMdA9wZsf+cWBxC5dePtw7zM+CXW/d8Z/QwLr7eKKzrNgi3hkN/V8iP
YKnDu2OXHg7AQug2pVgcwbU/w3k3fP0MpV1XQiYPMLHW62oB7PsMvy+yG3+2
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
RVU+p8ReY4D/z634fzk2TfV/oSLu8Q==
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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

       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[CompressedData["
1:eJw112k0VW0bB3CVKEr0KJTHkAaSVFQkKUkylrEMKWUoeUpFZjI3mqeQTMeU
4piH+hsiGSqlEmlwcA5nKyqS8b19eD/stddv7WGtfa99X9f/krS5aGi7kIOD
Y5gc8+fzP4ojJiwocN9+vHCXVsreHUd8zOe9MnfV3NykCmzMuor/EF95m9g0
N6kDH9EXD8aJX9+1jFSbNkZFkrbYGHGeXfH32UkLjPWclPtF3Ka57Mdnr9Oo
YS5+OULczE9bt2/6LMzq1Ti+E+9Zc4Mz2dMBNM9lz4aI34+sDpmadITGvxdE
mMSNUoVJJzwuwr30JAeDeCT1U2K3lzOUzfrcPhMPOmttuLn3CmQEZvw/Ep9v
bj2jNH0V8X+yxTqIn7rdOzpQ5YpgcZbOS2Innd6+KE83qIRLWNQSX4pMZw1P
esKed41q5byzfLTvVXqjc0tWAZ04XCJOSdPDF60fvXTTiMubJA1eel2HZGbD
1QTiv4migemW/rCJTdsaTszTHufstjcAz71EzLyIDYSdHSSnA7EVRQ3OxAk8
HI5j3UHgruttsJtfXzFn4RdVwVheOudhQFztYmF30TMUrpf2lK8lHvo081/Z
5C0U1fsWLSeOqNE+F9p1G7xWFvvnzCmcCVH9dbzyDlo03vN9I/5b7Zo94R6G
RvdvPinEqauviCZ4ReB4wBeuu8S1aqHZvlQEZJ+5SHgRr7/85rutZSSWcV5Y
Yka8TWB3+va9UZANDsnjJo4/luDZMBUNh8MGNT9PUAjseJST4xiDwKRCux5i
/WqLwDvdMYg+etihkPj77EMl46pYxJ6u2WdM/J9PsFOPRzyYJXuUg45TkLBm
3Oz5mwi3smZee2Ihum/0+itJ8F2cZqlFHDPKWutIJWGqUtp9KfFFadfE8c/J
yHCnJQeZUfj16LkE97MURBwbirY1pXDsznF5ruep2MmxS1eNuIzDSyJzURqs
O99cFyaWtd+Kg/vTQG9b6PDChMIryyEOv4o08LwwkNhAnHTB/trvvHQ4BBw6
8MyIgowpVFvDM+H5z3RPDHF/SHOQbVsmHkyt+GtHrJDOd352KQ1924xyuefv
16cWygfQYL/H+q+6IQX7oWyzWy5ZMK420U49SsGf88Y9efMczBS7PJ3WpXBW
1XJUTCof2QM2hnXEqaFV8TSLfNja2LqEEP/Y/6dZLjofuv35DvzEjs3erXsW
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
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV1Xk0lVsUAHAPGZKhUQOFUhqkovKitqGIKMpUhnpEKRQV5amXRGYyJZlJ
g+FeM7ls5PIIGUrKLMNXKN8lofDO++Oss37r7HXOXmfvdY609ZWTttxcXFzv
yfh/frQ6ecOlyFRWoasDOvZRGNXQZWQSqAw+/Vyh9sRzAiybk4FHwULbaJct
8bpvDdm6gWYg6L+315yYZ69aphnDCpy2VH43IXYt+vPqHntrmFYVemtIPKSl
KKoaeBHmdzb91iK2L0tNxLjLYJqre0ydeO/rNXYaDCcIWLhjr0J8+WlUi4y9
C2SvX7ZSgfhZhFWjdOBN0JRolFtBLLPDt6R3hTuERHP/WELcbNtwJiHub1j9
7WvoIuL0sdySdYw7cOZH6/6pXgoTl4dnCtjfg/B74+rviV/6ZK+6IO8F50Yy
AuqJT5wYOM+mvSDEc9XT18T90r4Fnu7esOT5mFY28ar0N2YzAb7QbRym5U/c
Zx66wtTAD1oL4oXvEsusta/IW+EPpzsNUm8Q53gZTV6JC4BU32S1c8RSK+ao
waxg4NLtUVIkNtDRyKIuhoHe59bFTT0Uasl4O4m/CQOlsvI3lcScFi1FLflw
kDfRsMgnfvpBvSGFDge3FQsjj4ljCsdNz7pHQtWDg9XniKe7Gp3aA6KBHfrq
/GA3hWolsUt1p6Ih4XthaSuxeUt5Tcm5x+D+T35XBXFNbotzwt4YQIOXLnHE
enx+Hy70PIGcDJ1xQ+Kt0/qsuT0J0BVfq8zsonBQPWGRc1wC3NSY4HpC3NOW
rszhSYQDrIUQb2K2Sc9HW6dE2HS8mPsM8TKPkwv6mklg3eB6gIs4REcVZMaS
4ZqoPq3eSaGt8HEFS5kUmONhbN5KnN8tohxtmgKyl1tkxIgPPXOPFKlMgaR0
oytdHRR2MrmDfkelgns9/+kbxA72A21dammwRkLGMeYTha/BZnlxxAtwFpR+
UNxO4fmGmuyr1S+gtH0T8wnxWs2HLnLTL2D79V9pt4nHRJotos1fQv3u1fNq
xAWx17tvyaTDtEizIfsDhUe+Pv2iycwAuSdqQVVtFJ6y7i+cesMAyXJ3zbh3
5L5viJnnzjHgc/wpmVvEE1sOrSoSZ0J1TE6j0f/r7pXyN3SYcMh/OkSI2Gv7
cffxDCbc5DbPc22l0HrAJmfkWjYUGG++p9lC+rUgaeDHH7kwYvx4feFbUv+I
PffOrM0F2fUZd4KIy3zCVHBPLkg2DGbaEK/f5cjtZ5MLnczKW6LEU626g5Ls
XFif3Vp9vpFCp4xbsvq+eWCT2KLI10BhnE0Rq1KkAGK68w5vqqPwLHhELZco
hkdpcRH1rym08ll+I2xfMYQGwrIw4jHhobtLDYuhqdrd2JT4L1cxaTGfYlC9
mb6jr5LCjxrqfqLjxfCj7KYkp4JCPrbUFvGqV8De0cgrWE7qWdzMd8yBBSyP
37WLWaR/ahTjDEoRug8Kb7DMpVD6iH7XqjaE2NMSr1cT80jOnuj6hpDrfVDx
XQ6FDfUf7PaKlYNLWqqbLnFe8y3xKvVykI4MCFXKpjDWnM9kKLUc5u/0zM9n
kfdKqqf10OUKoLO3ZTm8pNBXvVjy8HQljOWUnHyZSOFtE8uPLibVsLJI81ua
L4VcPzpr7J7VwmRyetxOR7KfqYZsfUU91FXLxM+eoNDHuWbfmqVNYFuSZ6Cz
g/THPvryqrRmEv8nvxg/hZ7RjEMxSq0gsjFse133MLayTNfHD72DN1EXj0Rk
DWNA1AtD5dttwF+U8Vb/9jD2UIzVn/a3Q1Xm07fSmsN4uPgC/+nRj7Am8o90
4UXDeNaHvbDHuwMO6av2hlUP4b8n62wiNLrA2kJ8dcrtIfy+pyhEe6Ab9rZ3
SGUqDWEKT+/+m8a9UFMlu2xR7yDWdPq8D93bB40KYDnkM4gH2lNrzfn7Qdv+
TJ78zkG0YrCnvEb6YSy/x+RFzQDelxXUWFnxGT7Ysqf+/WsA665cKlobPgCn
Ipfwyk9/xq9RosGeboPw/ZSHw8Cdz7hHhOfkC70hmNedUP7E9xk7DJZZWysO
g6KE2tVpj36cK7XWU1tJwYi/cqnzWB96Bs568w5ToDEwoLPkXB+mRjvFfKr9
Aj2Z420lZb3o6bWVomK/wrc8j1WBUr0YKzo5+dB+BH4fFGCwZ7txVIIzdO7w
KLScUazk8ulCjnNzWuGSMbi+UmSt9upO7KrRtujuHYNOo+GhKbdP6FFrZmiS
/A0CGq9W7eprRzsz4BGw/A6VryOPD2l8wF/bPOoiRcdhZsDDqNvhPboI87Td
sh2HX8L2Y23JrSi39GaRH2scOn6x7zfFNSOf2XASnxAN5Y82p8tLvEXDEbWx
Pfo0pLvl8L6WfoPPeZ83qx+nwfSrke9BsTc4ep/aYnCCBu+Hs+/z5+uQa0Zw
62VDGiwGJ1oSOupQ1czSLcaYhirjY46nI+tQ6lWtWLclDY1ByRM2AnUoVFn7
5KcjDaFzDzmdo//iqILtsQuBNEzO72BHMarR1DfGXD2IhtRrMUfK4qvx3tr9
n9cG05DUyr10IKga889/Na0PoUFq8HzgNodqjBhd0yIXTgN32+TOFLlqbKxn
9NY8puGXzT+0ZhIbPf3NpOLSaIh95zOv87AKfdOUBGLKaLjm59gU71CJU+tP
fNdDGp5qcVsXmleipBL/0QXi4cXTAY26lfiqLFXfuoIG3uFFmdNylWhjPZQq
XUXDvA4bVAcrcE3yBivvWnL+lrv+npYVeGTBq7mnlQarwPFhIf1ynPTJf3z3
HQ223px/ZlTK8dk1pUap9zSINlk3D24rx3erXP4+20aDFut96iuBcvyx7VT/
+3YazJftMnvpi/jnoZ+stC4arMXnLOJcyzDY5G/PD0M0gI/7hQIDFsYHHw1w
Hqah537rnMl2FgYkL+9bTNFQ/JExNLmIhadeNl1R+ULDvnXRJXIlJZjiLrsi
YoQG8Tu8VVdlS/DRjJHuxnEaAnYf/Xx/phgP3SteKJym4cSWzXotCYX4azFn
o8oMDUKmypMy7oWYfDAtqJS4I/fLcWejQpxfm7erfJYGV5UIOX7BQqy6Ustg
/aaByaNVJe5SgK2WErZhXBzY8G2xxVvNfMz8xTrK4OeAhZGvUdZgDs7+sApd
LsCBS/mbth6pzEE9HvFdbsT5hdbGn+Jz0Jje7KYqyIGCB264YJqDW4+ZbsDF
HEipU5DdX5eNcopJeanCHKjr/Bl+JouJmTsZl+aJby6R2dzuz0TH1/qupiIc
qFHQUDG6wMQPT2KD+EU5wLT6a0ZbiomNOjJFZ8VI/HTgJtVNDPTxmvr4fRkH
SvCutshIBm7YZNV2aDkHiuqjrTtTMjBY4ZNsEHExX1DnM4sM5K11Lt2yggN3
vCN59jem476JpjqjlRzIkndl7ct+ifp+8yrB4hw4723ZWu76HL+yDpu2EL/n
Ufe+oPActZt2vF65mkP+8720EPUMFfS1A2OIS4suiRw//QwfNF/sebKGA91T
x7mKVNLQkRF94fY6DtiVO3Rs4UrFBJPny0qJJwyPhlswUzBr97beX8R6pToj
wedS0GYls89VggN3JzJjR8uTUUl85qa1JAfau/RGAz2T8JRz4+4nxJe+hQQy
diehfI2TUCuxd/Ie0aa+RMyePyiltp7k8/RH52KNRHx59nSd6AYOVDRFCDbz
xuMJ6l8vdWLaIvLw1Pk4vKhzzsKFONHHq06cHYsxB/ddaiZ++q1y9oT3E4Td
TZz7UhzwlH5QE7XoMebqvU1gEN9yvK2UaBuNXEdML30k5ko/ej2N/Qh3Biua
bpPmgOHmd8wX3lFo6Xvbv4JY8qT7fOCiCPy5ZuP6QeIRzZT+O7bhqFpT0MAv
w4HcFNjoxA7D2NOd/+gSW33duHDY+yFqWAjcu0S85K5s6Y7BUKzIN0nwI07v
E5ZcdiQUF+xCtrGJO5uTxTIEg1HyworoPuLSsD8d7WsDsU+E3jBHHNtk9VjG
LwD17IZv797IgXOX00d9BfzwqJeWYwixcnmq2Vb++zgawfc8lVi77tni2up7
yH8g8FcRcVe1dpqtjycu8pYa7f7fS94a7BC6g3nub3zHiaXk12UY+f+N91Ou
H/xjEweSzhz46SZ4CzdNzI5tIH4TnufO5L+O+2euf5En3u6upFHt44wC9Obf
B4hjIVmBKeSEJm49strEX+rLfeoF7ZFbxdHuJPEuw7Q1/fzncelcfKkFsWzC
u/F+ISssCdXcbkfMr51nN8VvhE4dWxlOxFbbBy4v8B/G7ndSOq7Ezq2OOht5
8lj/AVv9NCk=
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[CompressedData["
1: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
6dEG/H/dCpz3chcfUM2t+h/vf+zR
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[
    Rational[2, 3], 0.6666666666666666],
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-1.5, 1.5}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426074003673*^9, 3.6614261852617893`*^9, 
  3.661426306134129*^9, 3.661426457845965*^9, 3.661426954081333*^9, 
  3.6614270296356907`*^9, 3.661427521754229*^9, 3.6614278295439453`*^9, 
  3.661427863086632*^9, 3.6614282998772593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "/.", 
   RowBox[{"dat", "[", "Jtest", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657521518247138*^9, 3.65752156077351*^9}, {
  3.657521632997253*^9, 3.657521633205551*^9}}],

Cell[BoxData["0.7775181521171451`"], "Output",
 CellChangeTimes->{3.661426074023164*^9, 3.6614261853458548`*^9, 
  3.661426306149157*^9, 3.6614264579995537`*^9, 3.661426954094639*^9, 
  3.661427029689518*^9, 3.661427521764554*^9, 3.661427829558765*^9, 
  3.661427863095807*^9, 3.661428299889168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], "/.", 
   RowBox[{"dat", "[", "Jtest", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657521563761141*^9, 3.657521568213973*^9}, {
  3.657521634277841*^9, 3.657521634437419*^9}}],

Cell[BoxData["1.1339018684932891`"], "Output",
 CellChangeTimes->{3.6614260740917664`*^9, 3.661426185418002*^9, 
  3.661426306188677*^9, 3.661426458029249*^9, 3.661426954160795*^9, 
  3.661427029734194*^9, 3.661427521806657*^9, 3.661427829609626*^9, 
  3.661427863150084*^9, 3.6614283000152617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "/", "a"}]], "Input",
 CellChangeTimes->{{3.65760061401073*^9, 3.657600614490794*^9}}],

Cell[BoxData["0.6857014471193164`"], "Output",
 CellChangeTimes->{3.661426074160748*^9, 3.6614261854896317`*^9, 
  3.6614263062434473`*^9, 3.661426458063744*^9, 3.661426954224365*^9, 
  3.661427029765362*^9, 3.661427521852277*^9, 3.661427829654233*^9, 
  3.661427863204914*^9, 3.661428300057413*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elipsa", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{"b", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Normal", ",", "DotDashed", ",", "Black"}], "}"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6575215708028383`*^9, 3.657521572325902*^9}, {
  3.6575216149496307`*^9, 3.657521646244975*^9}, {3.6584810619122143`*^9, 
  3.658481091279894*^9}, {3.660991427205578*^9, 3.66099142821336*^9}, {
  3.66099150778122*^9, 3.6609915095886908`*^9}, {3.66134149519106*^9, 
  3.661341498135022*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
    Dashing[{0, Small, Small, Small}], FaceForm[Opacity[0.3]], 
    LineBox[CompressedData["
1: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
NgsYk87SDD9+p/kdnvF+IstN+gNXffsr0ThMERfVSiP3y+VOeSGhHY/ONzJt
1Uh74oMHKh4JyCVpGN1N7v9SaFW1X957LFA93XKL9OikMXTSErHazo99goyf
gPNUuwtnU7D4d7pfHxlvUczbbs88UjExrrvnNOk9151u5uel4RgrXSabjM8i
1uwrS6IZ+FMsYcKSjF/3yIhzfN+zMf2A1MdXPQTsF2H38PHPwZRXU8fqyfx4
T99T+0cqFz82yHQskvnEctxruFsvD5lBnHwnOwn4WqoSoV5egA+HRJZ8Wgno
3OWZG3y1EP/NPG32aSFg6LOWTz+9EGU3uKQ9IfPZOsTm08UdH1GCIvDckMz3
Bl23pz+ef0I8mNpUU0fAbTAL/yJcgjaWefzxZP045BHC8y6xBF1mhs88qCHg
SuvuV/LVpZigXBYiRNYbsYB1Cj9WytEyfzRqTRkBVszcZ6H+iGeDFT1zSwi4
+XRofdjaCnRYFDXU/0TW+4VLQ9uiK5DBMrIYWkRA/IkPhziLK7HpzGJpdQ4B
14ZzpJVYqlDrpJb+sWwCvpQo5t0+XYV6NkuzhZnkuS3lkG5qdxXu3UVbFUzW
00sn8ttZmNUopUsZ/veegKBX/MmVMnX4JlOy4VMYASBSLR5vW4f7eAzFe8n6
XnLFVOhRUR0+ckmwmg0m4LDFad3t6vUobrR/HSfZH0xilddJ3/qMGv7t1348
I+N1ocdO4HUjNjVa+mU7EeAYckFnfKkFr8U7r884R8avXmxwl3orPsytNWgn
+xvV0nmwNKgV5xx2Zs6dIfuhibZw8YY29F+6Z7GB7I/LuQWZih/asN2nQZ9X
iYA3XJOPNb62Y4B4zEQm2W/rrPKP/vjXjh4u1Zx3xMjPS9vRHiXVgTaFu4+v
J/tzsmjO2X7bDjx0OuCHPj8B65pu2Gzg6MRoatPzMFYCJDoqiCf7uzCP+XNf
7cQkVFk4fO++2oXBSm1beMfI84FX3C7JR13YmSqkoD08CfHH3o1m1nfhqe8H
Wop6JmF0d4Otm0E3VksZ/VCpn4Qjb5qT5rx78KFiCytL8iTwbr0hPdHWhyY2
0tftbk9C/2IgtXyhDzWddZMXDCZhl1pzcdDGfmzs1n5kpzcJqhbFz7ff6sfs
G7lNV3Um4edj1+j5uX68/DFeqFdlEgbsH3Hu5RnAo7yrHscJT4KuE7v236ND
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
VLpX
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.1339017359800432`, 
   1.1339018684932891`}, {-0.7775180427057274, 0.7775180574733505}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6614260742517633`*^9, 3.661426185588777*^9, 
  3.661426306327896*^9, 3.661426458116028*^9, 3.661426954315072*^9, 
  3.6614270298169117`*^9, 3.661427521920059*^9, 3.6614278297197657`*^9, 
  3.66142786328773*^9, 3.661428300128874*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"surfNEW", ",", "elipsa", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<X\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657521647945179*^9, 3.657521656101206*^9}, {
   3.6575216908382187`*^9, 3.657521693860387*^9}, {3.658481136086457*^9, 
   3.6584811526144023`*^9}, {3.658484207553135*^9, 3.6584842088092065`*^9}, 
   3.6584851032103634`*^9, {3.6592604334903812`*^9, 3.659260441666088*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}}, {}, {{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
SvxfGVO4Iw==
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1: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
        "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
A0JBLEg=
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1:eJwt13k01dv7B3BXolKSEkqGi1KSulQUHokyyzynlKHSLZWSISRDGsxTyHwy
pEyZ6zF0kEQqJS7FwcH5KBok0/nu1u/3x157vf7Z87PXeks6nTN15uTg4Jgg
7U/Pc/sx5x6dCNXTX8uiZuwomCsUZLNn9+M/utds//hIe3ILe1Yfnax6yn4R
l4bZR8O8OV4TfZE+TZzjWvZlcdYOq1L0xH4Sd+mt/Nrvexx/9h2V/068ai3t
b/X5k1jHXNo+SVy54SZXqo8bWjUCxxdi06n1oXOzZ5Dms/L5OLGWdHGKjfc5
1NrkLsIk1s/4L7nX1wOvlh/lYBA7ndeRCVe9iCpWQ179xHmtbSeU5y/h1jUL
1z8SN3jfOzJScxkTf+WKvSO+YDg4FOPjhSHio/rtxNExWaMTsz64P1LCrp74
0YNreveq/dCVd4NaNXG7RILyIW9/7N7+oKiEuPqFpHG7byC2ffQ1yCTuTxW9
kWV/HSVz6JeSiK+9SfDwUg1Cp/jMHZF/9iPi4SY5fwObfUWsfImTeTnO/OwN
xh1YSvcgzhLzEH5RE4I8DYN0F+Jnl+1czvmE4apytrcx8UTfwr8Vs7fw8vl9
lRv/rLde71RYz20sbfQvXUX8PVTtu3X1HeR1sNNg21Iw//Ry7szVCHyp9Z5v
gFhK6KJokm8UNl0duJZGfFAjLNefikLroE/cd4ndL7z54mwfjXLPPSV8iYvX
7M3apRqDK7ncl1kRm5gm+dDnYlEuJLSAh5ir61Fe3pk4dDtsXPfNhoLXtXY3
7vTG4Y2UYpc+4s/sh8rmNfEYe+SwWzHxMf+Qs33eiRh/vE7dnDjDkRHe9zsZ
mU/2qQRbU5BQ4h8rfTEFvSpaeV2Jc6ZGN56hUtB/aaa9DrG/7OXk6f5UnKuW
vbqcWOVxswTP8zTMvkpLDbaiIOqOtQJ3cwZGmYzHOltSMMPhK5GzJBN3c+wx
AGJ31x14UCMTHbvfBAoTb3cY5wioysSSV5xuLywoEDzreuVHQRYuf2EsIUMc
bIlqbZE56BakfeC5GQUOYa3Bzq9y0HvtfF8c8aUsvtOLy2mYPrf6twvxKSOK
UyGIhkM7zfJ5iHPHc61ueT5A132OvzVNKZjlunlPwTYPzWst9DKOUNCnZj8l
JlWI82Wez+YNKFgIq0mk2RVi7oiTaQPx6QO/WuVjC/Gkk7NnKHFzq1/bvqWP
UH+40I2feNxWVM6Y+QiZe125NumT89N6oFNkUYR7O0zWSOpS8HW6lBUhUoIR
IiJh77Qo0NB/Gv1ydwleKk7kuE18bG7TFLdpCVZYGS07SPyj5+83vuElWOBw
jP74IAW6raPCznMlaBQP00GaFGzr7rHc0leKieXfFIU0KJAp1gw4l/4Em942
bxnbR4Hr9ZystbVPkD55Vi2W2OuvRxcrPjzBMs43I+rEorzLhBf5ylFI+uOP
aBWynzQdl1C/cmy+y7O4W5nUz33N2pu2FXhyiLfJdTf5H2rj3PTWVeGrQvU9
3gqkfutdzRgKVWg4ptokRPwPT2afj34Vem2WGS/bQe6DI7e94HoVTsVUTUzI
U/C+yUWIZ6oKuUREh2y3k/djsomZ/6oalZeJRkhsJfUfIJecHVKLFmaLo7Z/
U9CRkmQVkl2L1ePeVwYkKZC/3RTt2lCLXoNLQl2Jv94+ECS7WIs6dw9uvSBB
6ktpQS3b8yl2xpR7B4pRUPQkOfv6yWc4FWVtFraBAnpBTSNLog6vJJ9h7REg
/0nZTxGnhXrUTBJVE+agwNd0plyTtwF9Umrsb7JZcFxu9SopkQY8Mm/EN7vI
gnCXNMagUgMGpdtt6VlggesWMyVH9wasCtDbFTfHgt33zZX0ehvQ0PoSbXqa
Bepdx3aNVjZiXsOijOsEC86vuqasfJGO7tN57MVuFqwsioxTl3+B/8o5To7Q
WCCV/rGko70ND3AsrJo+y4KepH++2Qi+xoaJGx4zu1jApxW/TpbRicKjVYd8
x8bhuWTLs+I7b1HTIrGReX8ctmT1GEjJdaGkekm6k/E4LNcNM+YceY/W7w8d
4/o2BkHeitaX/brx9UuOZ+axY6C6YM5nv7MHT6mOd1ZtGYPCa0GG7Le9uNPG
MFWwfBQU9rnWnjXvwxtzSaWT2qOwx5LFcJ7oRxtB5C+nM+H7u+53qbs+438T
HVw/DjNBaI1yTfavzxg+kj+xu2oE2gQiGbpPBrBDu3Yqf/MI9HYumDccH0Tt
otYPxxOHgfvGDe8yIQaeimmZ3DUzBAN7j4Xm1zJw48Idw30OQ1BQOi6XZjOE
b6DpiFMdA9wZsf+cWBxC5dePtw7zM+CXW/d8Z/QwLr7eKKzrNgi3hkN/V8iP
YKnDu2OXHg7AQug2pVgcwbU/w3k3fP0MpV1XQiYPMLHW62oB7PsMvy+yG3+2
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
RVU+p8ReY4D/z634fzk2TfV/oSLu8Q==
        "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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

        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1:eJw112k0VW0bB3CVKEr0KJTHkAaSVFQkKUkylrEMKWUoeUpFZjI3mqeQTMeU
4piH+hsiGSqlEmlwcA5nKyqS8b19eD/stddv7WGtfa99X9f/krS5aGi7kIOD
Y5gc8+fzP4ojJiwocN9+vHCXVsreHUd8zOe9MnfV3NykCmzMuor/EF95m9g0
N6kDH9EXD8aJX9+1jFSbNkZFkrbYGHGeXfH32UkLjPWclPtF3Ka57Mdnr9Oo
YS5+OULczE9bt2/6LMzq1Ti+E+9Zc4Mz2dMBNM9lz4aI34+sDpmadITGvxdE
mMSNUoVJJzwuwr30JAeDeCT1U2K3lzOUzfrcPhMPOmttuLn3CmQEZvw/Ep9v
bj2jNH0V8X+yxTqIn7rdOzpQ5YpgcZbOS2Innd6+KE83qIRLWNQSX4pMZw1P
esKed41q5byzfLTvVXqjc0tWAZ04XCJOSdPDF60fvXTTiMubJA1eel2HZGbD
1QTiv4migemW/rCJTdsaTszTHufstjcAz71EzLyIDYSdHSSnA7EVRQ3OxAk8
HI5j3UHgruttsJtfXzFn4RdVwVheOudhQFztYmF30TMUrpf2lK8lHvo081/Z
5C0U1fsWLSeOqNE+F9p1G7xWFvvnzCmcCVH9dbzyDlo03vN9I/5b7Zo94R6G
RvdvPinEqauviCZ4ReB4wBeuu8S1aqHZvlQEZJ+5SHgRr7/85rutZSSWcV5Y
Yka8TWB3+va9UZANDsnjJo4/luDZMBUNh8MGNT9PUAjseJST4xiDwKRCux5i
/WqLwDvdMYg+etihkPj77EMl46pYxJ6u2WdM/J9PsFOPRzyYJXuUg45TkLBm
3Oz5mwi3smZee2Ihum/0+itJ8F2cZqlFHDPKWutIJWGqUtp9KfFFadfE8c/J
yHCnJQeZUfj16LkE97MURBwbirY1pXDsznF5ruep2MmxS1eNuIzDSyJzURqs
O99cFyaWtd+Kg/vTQG9b6PDChMIryyEOv4o08LwwkNhAnHTB/trvvHQ4BBw6
8MyIgowpVFvDM+H5z3RPDHF/SHOQbVsmHkyt+GtHrJDOd352KQ1924xyuefv
16cWygfQYL/H+q+6IQX7oWyzWy5ZMK420U49SsGf88Y9efMczBS7PJ3WpXBW
1XJUTCof2QM2hnXEqaFV8TSLfNja2LqEEP/Y/6dZLjofuv35DvzEjs3erXsW
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
        "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV1Xk0lVsUAHAPGZKhUQOFUhqkovKitqGIKMpUhnpEKRQV5amXRGYyJZlJ
g+FeM7ls5PIIGUrKLMNXKN8lofDO++Oss37r7HXOXmfvdY609ZWTttxcXFzv
yfh/frQ6ecOlyFRWoasDOvZRGNXQZWQSqAw+/Vyh9sRzAiybk4FHwULbaJct
8bpvDdm6gWYg6L+315yYZ69aphnDCpy2VH43IXYt+vPqHntrmFYVemtIPKSl
KKoaeBHmdzb91iK2L0tNxLjLYJqre0ydeO/rNXYaDCcIWLhjr0J8+WlUi4y9
C2SvX7ZSgfhZhFWjdOBN0JRolFtBLLPDt6R3hTuERHP/WELcbNtwJiHub1j9
7WvoIuL0sdySdYw7cOZH6/6pXgoTl4dnCtjfg/B74+rviV/6ZK+6IO8F50Yy
AuqJT5wYOM+mvSDEc9XT18T90r4Fnu7esOT5mFY28ar0N2YzAb7QbRym5U/c
Zx66wtTAD1oL4oXvEsusta/IW+EPpzsNUm8Q53gZTV6JC4BU32S1c8RSK+ao
waxg4NLtUVIkNtDRyKIuhoHe59bFTT0Uasl4O4m/CQOlsvI3lcScFi1FLflw
kDfRsMgnfvpBvSGFDge3FQsjj4ljCsdNz7pHQtWDg9XniKe7Gp3aA6KBHfrq
/GA3hWolsUt1p6Ih4XthaSuxeUt5Tcm5x+D+T35XBXFNbotzwt4YQIOXLnHE
enx+Hy70PIGcDJ1xQ+Kt0/qsuT0J0BVfq8zsonBQPWGRc1wC3NSY4HpC3NOW
rszhSYQDrIUQb2K2Sc9HW6dE2HS8mPsM8TKPkwv6mklg3eB6gIs4REcVZMaS
4ZqoPq3eSaGt8HEFS5kUmONhbN5KnN8tohxtmgKyl1tkxIgPPXOPFKlMgaR0
oytdHRR2MrmDfkelgns9/+kbxA72A21dammwRkLGMeYTha/BZnlxxAtwFpR+
UNxO4fmGmuyr1S+gtH0T8wnxWs2HLnLTL2D79V9pt4nHRJotos1fQv3u1fNq
xAWx17tvyaTDtEizIfsDhUe+Pv2iycwAuSdqQVVtFJ6y7i+cesMAyXJ3zbh3
5L5viJnnzjHgc/wpmVvEE1sOrSoSZ0J1TE6j0f/r7pXyN3SYcMh/OkSI2Gv7
cffxDCbc5DbPc22l0HrAJmfkWjYUGG++p9lC+rUgaeDHH7kwYvx4feFbUv+I
PffOrM0F2fUZd4KIy3zCVHBPLkg2DGbaEK/f5cjtZ5MLnczKW6LEU626g5Ls
XFif3Vp9vpFCp4xbsvq+eWCT2KLI10BhnE0Rq1KkAGK68w5vqqPwLHhELZco
hkdpcRH1rym08ll+I2xfMYQGwrIw4jHhobtLDYuhqdrd2JT4L1cxaTGfYlC9
mb6jr5LCjxrqfqLjxfCj7KYkp4JCPrbUFvGqV8De0cgrWE7qWdzMd8yBBSyP
37WLWaR/ahTjDEoRug8Kb7DMpVD6iH7XqjaE2NMSr1cT80jOnuj6hpDrfVDx
XQ6FDfUf7PaKlYNLWqqbLnFe8y3xKvVykI4MCFXKpjDWnM9kKLUc5u/0zM9n
kfdKqqf10OUKoLO3ZTm8pNBXvVjy8HQljOWUnHyZSOFtE8uPLibVsLJI81ua
L4VcPzpr7J7VwmRyetxOR7KfqYZsfUU91FXLxM+eoNDHuWbfmqVNYFuSZ6Cz
g/THPvryqrRmEv8nvxg/hZ7RjEMxSq0gsjFse133MLayTNfHD72DN1EXj0Rk
DWNA1AtD5dttwF+U8Vb/9jD2UIzVn/a3Q1Xm07fSmsN4uPgC/+nRj7Am8o90
4UXDeNaHvbDHuwMO6av2hlUP4b8n62wiNLrA2kJ8dcrtIfy+pyhEe6Ab9rZ3
SGUqDWEKT+/+m8a9UFMlu2xR7yDWdPq8D93bB40KYDnkM4gH2lNrzfn7Qdv+
TJ78zkG0YrCnvEb6YSy/x+RFzQDelxXUWFnxGT7Ysqf+/WsA665cKlobPgCn
Ipfwyk9/xq9RosGeboPw/ZSHw8Cdz7hHhOfkC70hmNedUP7E9xk7DJZZWysO
g6KE2tVpj36cK7XWU1tJwYi/cqnzWB96Bs568w5ToDEwoLPkXB+mRjvFfKr9
Aj2Z420lZb3o6bWVomK/wrc8j1WBUr0YKzo5+dB+BH4fFGCwZ7txVIIzdO7w
KLScUazk8ulCjnNzWuGSMbi+UmSt9upO7KrRtujuHYNOo+GhKbdP6FFrZmiS
/A0CGq9W7eprRzsz4BGw/A6VryOPD2l8wF/bPOoiRcdhZsDDqNvhPboI87Td
sh2HX8L2Y23JrSi39GaRH2scOn6x7zfFNSOf2XASnxAN5Y82p8tLvEXDEbWx
Pfo0pLvl8L6WfoPPeZ83qx+nwfSrke9BsTc4ep/aYnCCBu+Hs+/z5+uQa0Zw
62VDGiwGJ1oSOupQ1czSLcaYhirjY46nI+tQ6lWtWLclDY1ByRM2AnUoVFn7
5KcjDaFzDzmdo//iqILtsQuBNEzO72BHMarR1DfGXD2IhtRrMUfK4qvx3tr9
n9cG05DUyr10IKga889/Na0PoUFq8HzgNodqjBhd0yIXTgN32+TOFLlqbKxn
9NY8puGXzT+0ZhIbPf3NpOLSaIh95zOv87AKfdOUBGLKaLjm59gU71CJU+tP
fNdDGp5qcVsXmleipBL/0QXi4cXTAY26lfiqLFXfuoIG3uFFmdNylWhjPZQq
XUXDvA4bVAcrcE3yBivvWnL+lrv+npYVeGTBq7mnlQarwPFhIf1ynPTJf3z3
HQ223px/ZlTK8dk1pUap9zSINlk3D24rx3erXP4+20aDFut96iuBcvyx7VT/
+3YazJftMnvpi/jnoZ+stC4arMXnLOJcyzDY5G/PD0M0gI/7hQIDFsYHHw1w
Hqah537rnMl2FgYkL+9bTNFQ/JExNLmIhadeNl1R+ULDvnXRJXIlJZjiLrsi
YoQG8Tu8VVdlS/DRjJHuxnEaAnYf/Xx/phgP3SteKJym4cSWzXotCYX4azFn
o8oMDUKmypMy7oWYfDAtqJS4I/fLcWejQpxfm7erfJYGV5UIOX7BQqy6Ustg
/aaByaNVJe5SgK2WErZhXBzY8G2xxVvNfMz8xTrK4OeAhZGvUdZgDs7+sApd
LsCBS/mbth6pzEE9HvFdbsT5hdbGn+Jz0Jje7KYqyIGCB264YJqDW4+ZbsDF
HEipU5DdX5eNcopJeanCHKjr/Bl+JouJmTsZl+aJby6R2dzuz0TH1/qupiIc
qFHQUDG6wMQPT2KD+EU5wLT6a0ZbiomNOjJFZ8VI/HTgJtVNDPTxmvr4fRkH
SvCutshIBm7YZNV2aDkHiuqjrTtTMjBY4ZNsEHExX1DnM4sM5K11Lt2yggN3
vCN59jem476JpjqjlRzIkndl7ct+ifp+8yrB4hw4723ZWu76HL+yDpu2EL/n
Ufe+oPActZt2vF65mkP+8720EPUMFfS1A2OIS4suiRw//QwfNF/sebKGA91T
x7mKVNLQkRF94fY6DtiVO3Rs4UrFBJPny0qJJwyPhlswUzBr97beX8R6pToj
wedS0GYls89VggN3JzJjR8uTUUl85qa1JAfau/RGAz2T8JRz4+4nxJe+hQQy
diehfI2TUCuxd/Ie0aa+RMyePyiltp7k8/RH52KNRHx59nSd6AYOVDRFCDbz
xuMJ6l8vdWLaIvLw1Pk4vKhzzsKFONHHq06cHYsxB/ddaiZ++q1y9oT3E4Td
TZz7UhzwlH5QE7XoMebqvU1gEN9yvK2UaBuNXEdML30k5ko/ej2N/Qh3Biua
bpPmgOHmd8wX3lFo6Xvbv4JY8qT7fOCiCPy5ZuP6QeIRzZT+O7bhqFpT0MAv
w4HcFNjoxA7D2NOd/+gSW33duHDY+yFqWAjcu0S85K5s6Y7BUKzIN0nwI07v
E5ZcdiQUF+xCtrGJO5uTxTIEg1HyworoPuLSsD8d7WsDsU+E3jBHHNtk9VjG
LwD17IZv797IgXOX00d9BfzwqJeWYwixcnmq2Vb++zgawfc8lVi77tni2up7
yH8g8FcRcVe1dpqtjycu8pYa7f7fS94a7BC6g3nub3zHiaXk12UY+f+N91Ou
H/xjEweSzhz46SZ4CzdNzI5tIH4TnufO5L+O+2euf5En3u6upFHt44wC9Obf
B4hjIVmBKeSEJm49strEX+rLfeoF7ZFbxdHuJPEuw7Q1/fzncelcfKkFsWzC
u/F+ISssCdXcbkfMr51nN8VvhE4dWxlOxFbbBy4v8B/G7ndSOq7Ezq2OOht5
8lj/AVv9NCk=
        "]]}, 
      {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[CompressedData["
1:eJwt13dUzt8fAPAHESLjq0VURkqSFBL1pkKlPbVEWiT0pTSVtpn2VhqPhrR3
vBtKyyihodBTPU89nyiUvs3fdc7vj3vueZ177j3n/b7j3LeI1RU9m8U0Gm2U
tL/90swlvmIuT6ou/igKnTKjUJzOs7AwfRj2qd00/eubbfGNC9OnwMq4u+gP
8cf75mEwawA3BZuSJ4kbLxV9n582g/IE9S0TxHaaq370eZ6Did4zkr+Irfno
WxVnraGaufTNGHGH8G2ORA97MK4D2ndikzHeoJlpB6B7rHo5QiwjmJ9g4n4F
VDZfEmASiz76HN/j6QRuJWdoDGKhy6o77hy5BoeMB1z7iG0bW8/LzV4H8XVz
vl3EPq5xOkOVLhDzJ2NLB7HUqf6BcA9XCBRinXpDLB2Wyhqd9oDDD4XNaoj3
PrmpHlfhBXZcGxUqiPWEo+VOuHtD1+4neQXEnk0i2m88b0Frl6dGCnFSoqB/
qrkviKTXX48lzmuPdnI94gdWUSl7Hv5dj9/JXmTWH155Chh7EhctpzlM9ATA
HiysdyKWFHTib6oMBM7a/npb4orrZrZXPIJhdcmCuzZxy+e5y6XTd8HlqnzZ
JmKnavULwd33oLDOu3A1sXKQwq/TFfeBy8Ls6IIphS+eu2RMuYVAi8pH7m/E
obzXBGM9Q6HB7dvNJOK3isEZ3lQonPb7suwBsbRT+3cbsoUSL52FPYlz1x5M
lT4SDqs4Li03Jg7WjfWon4kAicCgbE7i6x3PMjMdIsH+pHb1TxMKocrM/35P
JPgn5Nv2EussPJUzqIyCCJ2T9vnEx7wDHXvdYyDqXLWiAbGvJeNO73/xwCyW
PxRwmsKRAu+I7dcSwLW0mcuOOGictcmBSgDvpSnmqsRK4i7xk32JMFMh5raC
uCH3lTDnyyRIc6MnBhhTWHn/tNSyV48hVHckwsaIQhbNUzh9SQrspx3QAOIo
uz2ofDQFLDvbb/ETy1mM0HzKU6Dg9WL7JkMKlzra3fidnQormrSFdxCbGqFC
68N0sPc7fuylPoW9Qc0BNq/TweOf2d5IYolU7ovzK+iQPLPmP1tiES1qsZQf
HQb26mdxEp8dyTC+6/wE7OQt/1PSo9Cd43aclGkmGFQZqj/WoTBCwXx8y7Yc
mCtyfjGrQWFccGUM3SwHMoes9GqJTY/9aZaMyAFrKxvnIGLrZq9W+aXPQGMw
x34tcbepoIQ28xkwD9pxbD5FoY3KE9U8wzw4+FZ3nYgaiX+ykB0iUAAhAgLB
HSoU7jr1PKxlfwE458fQ7hEfntk8vkyvAEqNtZYrE/d1b233vFMA2RZn63OV
KdzRzOK3mSkArSiY9FOicENnt9HO3kKIKfkpw3eUwkX5Sj5Xkouh4f2rncPy
FFr6pqf+U1UM9WOOChHE5xc9u1b6qRiKFrcPKRJv4FrOP89dAnzbu36HHaIw
MknVNsirBBofcM7vl6Mw8ZFS1W3TUrAe4Gqw20/hcGWkvfqGcniTo3jAXYqc
lxo7fYZUOWgNH2ngI97MmdLrcaoc3ER3jBTtIe8DLeNNtm85/AwvHx2VpDC1
wZaPc7wcOAQEB0x3U+iqu5mZ9boC5JYLhgiLU2jmIxGfFlgFRvrzLNOtFGYn
xBoHplVB5Yj7jW8iFK681xBmV1sFrv1LguyIW+4d8xObrwK1B8ri/wpT2CU7
p5Dm/Bzaw0vcb22hMLM4Ps3X+gWMh57WD95IYW12ZR1buBpuxDuwD6ynMKFo
QsBqrgaUYwUV+GkUXtSbKlHiqgXPhErz2wtslJdYs3qbQC3ozWpxT8+z0cE2
idEvWwv+yWY7u+fYaLFTX9byUi1U+KhLR86wkeeRgax6Ty1on75On5xk4+4P
Z6VZZXWQVTu/w26UjTarb8rJXasHx8nMhflONk7nPoxUlGyCKxKWY0N0NnIl
dxW8fdMKyrS51ZOObHwZu++nCc87eDnq7zQlzcYJ5agNYow2EGSVn/AcHsHH
Io0v8u+/BzXDmDrmoxGcS+nW2CbxAXYpFiRbaY/gV9Vg7cVDH+HcxxNnOX4O
o4G7zGkXr0743EJ7YRAxjNxzBtzme7vB5chIW/nOYQy86ae58L4HDptoJvKU
sHCFvF2Vo0EvhMzEFo4dZyGvEZthM9oH1jy4tqSeiQMdnR2J0l+BOfqW4/dJ
Jq5aJ1eZ9ucrhA1lje4vH8K69Q8ZasXf4NPxqvEs0SFsb5szqD3XD5p5zZ/O
xQwizd/fvYiPAZfDG8ekpwbw88GzQVlVDBCZu68pbzGA6YUjEkkmA9AJDTpW
1Qy0YUTsOz8/APAuV3xwLQN/2HfOtoUNAmfbJn41+368NRj0X6nkEKBFx9nr
T7/heNAu2Qgcgq0Td7g2/viKmR9uBI4dY0KLq1s2yH9F6tpC3UQjE9Tdh51s
GX0oabisgHWUBcVOW3jX2PTiiwWXbU/zWPDheG29FLMHNQXpzzS3DYNGy5k+
vWPdmL9+sHw4aBhiJSo4efI7MWq77dDP0WF4arG84MLUR/zMVXEr8MQIfIht
CJs2+oAQpqywEDUCDgVrz90ve4/uqjFi65gj8GyJ0fXc8TaUVJj6Pr6LDZlK
OY1hKu8wpEgl9/clNvhJxhwV7GvFfwNk8rnpbNB8NyWw/kgTnl2qmmrVwQbR
Ho7G7e31+INXt1LwAxvWeloLqdfVI4+mt8HHvz4R/s+VonqsHVdYqfqJDYKS
ju9Lo+qRewfLd0c3G6JC3ctUzOrx+zc+euMXNlSXKutrDLzELb0xibkjbFjl
I07fMFmHBwqk6AvzbOg54xMfw1+LSUnbi0IW2DAR76SSvrIWMxq+6AnRKJjt
LUnPn63BrV1JSgqLKGjcvims6WsNqvKsYF9bQoFJvyn/ZEYNbqqJtGjlJOOM
w1xKh2pQV+txhfhaCsQj+rmfmFSjg6tkbzbxzo4WyexT1RjKOPxQch0F89VT
XLkK1Vjj9OmJ1HoKWnpmlpWIVON377aEPRsouP3WeebWe0SuVL4EPn4KPql7
KkT9eoEzTNf+SCEKLj+RtT8v8xzXTjGaOIUpmLmTbTHM9xzn2kaPuxE3v+ce
uDxbhd+EPs2YilBgc1gx3bW+Cmk72s4IbKMgWa2CI8i4CuOExhZuiVIw9XMm
PMSjErN0YlIXS1JQq5LYrldXjtx7ijbZES99vCS/5Uk5ar06LNZC3BfnIqly
rxy5DgbPh+6h4P4H0cWyhuW4PZNK2riXgul8KdE1zDIUXfGoiE+Ggu1b+osK
V5bhxruNm2rkSDzBXK/LdEuQK73VS+gQBT5vxeLeyJRghNj0WS/iRPObSwZ4
SvDbx+asg/IUPOOlnq7uLkbzAzwa9MMUCNGCLphbFaOkN6vOQZGCI1N2C8x/
i5C2td0rWpmCaxejT1WGF2DqhrlFQ8S868zT6p0LsHaJCKesCsmX/66st8YF
uMNSK+INsYfjwov+TQWoryBQMXecgrrnyoJL0/LRylt1n4oqBS5M7k2Hi/Kw
2EOt1UmDgkwD5/wvGTm4KZZ59CnxXIZ35cDVHByRbTwxRHx62kBvWC4HVSw0
l5loUhDX0yo+3vgU1y3TNjikRcGuL8zoGVY2hv5wkhjUpuBGne/eWbEsNDvU
VsivQ85f8pjj9FgmMuJtXp8ibjDsOT5VlomL7u8qyiNePhne+FM1E5Wy1+g4
61Lgv+euNMM+A2teJlcP61GgbGipW5BBR6fwP2a8+hT8UTNNzLpKx8qGG8FK
xLo3A0JT5OhokzkeEUvc+qzLObQxHcu+lXkoGVDg1Hz9hAMrDU/ULfPxNqRA
/53RqzViqXjjNl0ynVg6R2hu8VgKfs63udRMzA56zZooTcFfDEj8x4gC07Dj
g90nU1D1pEFrMrF5Vtqdx3aPMeBCoCXdmORzUOiBilYS5qUKZjcSLxUfZPG1
PUIBH69LI8Sc3dY5I/qP8FNIgs7u0+Q+CG/2emCSiDx5io8yiUV59ru/tY7H
igf8Ma+I526H2jxixqGfbBnnIPHN4crXly7G4WzsCdUtJhScMeHYsvxqLOrh
Q607xGncuxYd8ohG59Lbk6nE4b2VPBzzUSiqorLhOfHpIqmKNz5ROC4zmzdK
fLLwZJVVYCQ251y8ompKwfgvGisgNBwjXM/XWxAP/Lr4QnNDOPZpbgz9l9gu
peUgT3QYTvpX344jnveaEUxNCMWqwoEFBvFg3HOms3YIpmnVLZkg9ogIUaMZ
PsDg9RZeS83IfeF147tjeh+jPla3bScO5MxYmWBzF/9TuPNUhlhe1PXQdoc7
+Dph9dwxYqM9zszsq7dRfvexBXPi445cHeUeQSjcNZZ3gbjYVkrw6K1AXOti
0ulM3NYaOVkfGIApkQbB94jzvMD5XagfpmYOrY0mbopfvc0w2hcd3+1d8/jv
ei0yLl0Jt5A7irpUSMx95AjUanujcY9FayUxS6V7vtHUC9V8Ah/XEetM6Uu9
tfHAojO2VDNxvKJsd8dVN+TUn3vaRrx/2bIV3R430OjIKcYn4ndyBvV9gc5o
NKsd0kusXpvJzwi9hpY3uPL7/86PDl3FTHDCCxFeqqROg1ljScMP2ldwvQLd
kE1MZwVN9dg4YLRFQCep86D7tSpvv4cd9gxsbBsnbpkMqGGGnkfLl7bwm7i/
NGtjt7Ylqo/Zb5v8O94eKzDgYYxWliJef/7Gs2+lRo+2NvlfPtQgdSms5rWK
6dEG/H/dCpz3chcfUM2t+h/vf+zR
        "]]}}, {}, {{{}, {}, {}, {}}, {}}}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{0, Small, Small, Small}], FaceForm[Opacity[0.3]], 
     LineBox[CompressedData["
1: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
NgsYk87SDD9+p/kdnvF+IstN+gNXffsr0ThMERfVSiP3y+VOeSGhHY/ONzJt
1Uh74oMHKh4JyCVpGN1N7v9SaFW1X957LFA93XKL9OikMXTSErHazo99goyf
gPNUuwtnU7D4d7pfHxlvUczbbs88UjExrrvnNOk9151u5uel4RgrXSabjM8i
1uwrS6IZ+FMsYcKSjF/3yIhzfN+zMf2A1MdXPQTsF2H38PHPwZRXU8fqyfx4
T99T+0cqFz82yHQskvnEctxruFsvD5lBnHwnOwn4WqoSoV5egA+HRJZ8Wgno
3OWZG3y1EP/NPG32aSFg6LOWTz+9EGU3uKQ9IfPZOsTm08UdH1GCIvDckMz3
Bl23pz+ef0I8mNpUU0fAbTAL/yJcgjaWefzxZP045BHC8y6xBF1mhs88qCHg
SuvuV/LVpZigXBYiRNYbsYB1Cj9WytEyfzRqTRkBVszcZ6H+iGeDFT1zSwi4
+XRofdjaCnRYFDXU/0TW+4VLQ9uiK5DBMrIYWkRA/IkPhziLK7HpzGJpdQ4B
14ZzpJVYqlDrpJb+sWwCvpQo5t0+XYV6NkuzhZnkuS3lkG5qdxXu3UVbFUzW
00sn8ttZmNUopUsZ/veegKBX/MmVMnX4JlOy4VMYASBSLR5vW4f7eAzFe8n6
XnLFVOhRUR0+ckmwmg0m4LDFad3t6vUobrR/HSfZH0xilddJ3/qMGv7t1348
I+N1ocdO4HUjNjVa+mU7EeAYckFnfKkFr8U7r884R8avXmxwl3orPsytNWgn
+xvV0nmwNKgV5xx2Zs6dIfuhibZw8YY29F+6Z7GB7I/LuQWZih/asN2nQZ9X
iYA3XJOPNb62Y4B4zEQm2W/rrPKP/vjXjh4u1Zx3xMjPS9vRHiXVgTaFu4+v
J/tzsmjO2X7bDjx0OuCHPj8B65pu2Gzg6MRoatPzMFYCJDoqiCf7uzCP+XNf
7cQkVFk4fO++2oXBSm1beMfI84FX3C7JR13YmSqkoD08CfHH3o1m1nfhqe8H
Wop6JmF0d4Otm0E3VksZ/VCpn4Qjb5qT5rx78KFiCytL8iTwbr0hPdHWhyY2
0tftbk9C/2IgtXyhDzWddZMXDCZhl1pzcdDGfmzs1n5kpzcJqhbFz7ff6sfs
G7lNV3Um4edj1+j5uX68/DFeqFdlEgbsH3Hu5RnAo7yrHscJT4KuE7v236ND
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
VLpX
      "]]}}},
  AspectRatio->NCache[
    Rational[2, 3], 0.6666666666666666],
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-1.5, 1.5}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.66142607427871*^9, 3.6614261857374887`*^9, 
  3.6614263063496237`*^9, 3.6614264581818132`*^9, 3.6614269543385*^9, 
  3.661427029875762*^9, 3.66142752194359*^9, 3.661427829738958*^9, 
  3.661427863320898*^9, 3.661428300152193*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"dir", "<>", "\"\<Surface_0230.pdf\>\""}], ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6584849340926905`*^9, 3.6584849531957827`*^9}, {
   3.6584851128269134`*^9, 3.658485114009981*^9}, {3.658645233705751*^9, 
   3.65864523416912*^9}, {3.658645281545088*^9, 3.658645285256835*^9}, {
   3.659321129411806*^9, 3.659321130403623*^9}, 3.660974421350081*^9, {
   3.660991388725807*^9, 3.660991389861367*^9}, {3.660992084061357*^9, 
   3.660992085084756*^9}, {3.661341512366804*^9, 3.661341513198669*^9}, {
   3.6614228700896587`*^9, 3.661422871417027*^9}}],

Cell[BoxData["\<\"/home/misiek/RotatingStars/EM/SolidRotation/Surface_0230.\
pdf\"\>"], "Output",
 CellChangeTimes->{3.66142607465598*^9, 3.661426186124074*^9, 
  3.661426306547759*^9, 3.6614264584168*^9, 3.661426955367049*^9, 
  3.661427030312139*^9, 3.661427522640807*^9, 3.6614278299542522`*^9, 
  3.6614278635507298`*^9, 3.6614283003484077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"powSpline", "[", "i", "]"}], "[", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
       RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"DotDashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2.0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"\"\<C=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"C", "/.", 
         RowBox[{"dat", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Rho]C", "/.", 
         RowBox[{"dat", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[CapitalOmega]0", "/.", 
         RowBox[{"dat", "[", "i", "]"}]}], "]"}]}]}]}], "\[IndentingNewLine]",
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "Jtest"}], "}"}], ",", "0.0", ",", "0.246", ",", 
     "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5073762386497145`*^9, 3.507376321035427*^9}, {
   3.507376371246299*^9, 3.5073765028298244`*^9}, {3.5073765539767504`*^9, 
   3.5073765630302677`*^9}, {3.507376653166424*^9, 3.507376809321355*^9}, 
   3.507377022723561*^9, {3.5074359643721733`*^9, 3.5074359649162045`*^9}, {
   3.5074762658698015`*^9, 3.507476269499009*^9}, {3.507479036661282*^9, 
   3.5074790407895184`*^9}, {3.50753580977701*^9, 3.5075358116111145`*^9}, {
   3.507802979980665*^9, 3.507802984839943*^9}, {3.507803450806595*^9, 
   3.507803460832168*^9}, {3.50780370388507*^9, 3.5078037083923273`*^9}, 
   3.5078093624207196`*^9, {3.508139837059163*^9, 3.5081398617355747`*^9}, {
   3.508937200670643*^9, 3.508937202691758*^9}, {3.5089977025800285`*^9, 
   3.5089977092174077`*^9}, {3.5091571489320946`*^9, 3.5091572075504475`*^9}, 
   3.657348620874812*^9, {3.657348857960166*^9, 3.657348859687599*^9}, {
   3.6576002257290487`*^9, 3.657600227088182*^9}, {3.660974450144598*^9, 
   3.6609744532645197`*^9}, {3.661341539791689*^9, 3.661341542703334*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 0.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 0.2}, 0., 0.246, 0.1}}, Typeset`size$$ = {
    450., {124., 134.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$40485$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$40485$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> PolarPlot[{
         $CellContext`powSpline[$CellContext`i$$][
         Pi/2 - $CellContext`\[Theta]\[Theta]], Sqrt[Pi]/
         2}, {$CellContext`\[Theta]\[Theta], 0, Pi/2}, AspectRatio -> 1/2, 
        PlotStyle -> {{Thick, Black}, {DotDashed, Black}}, 
        PlotRange -> {{0, 2.}, {0, 1.}}, PlotLabel -> StringJoin["C=", 
          ToString[
           ReplaceAll[C, 
            $CellContext`dat[$CellContext`i$$]]], 
          ", \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=", 
          ToString[
           ReplaceAll[$CellContext`\[Rho]C, 
            $CellContext`dat[$CellContext`i$$]]], 
          ", \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=", 
          ToString[
           ReplaceAll[$CellContext`\[CapitalOmega]0, 
            $CellContext`dat[$CellContext`i$$]]]]], 
      "Specifications" :> {{{$CellContext`i$$, 0.2}, 0., 0.246, 0.1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {177., 185.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.661426074745875*^9, 3.661426186328526*^9, 
  3.66142630660082*^9, 3.6614264584757833`*^9, 3.661426955583321*^9, 
  3.661427030521882*^9, 3.661427522908483*^9, 3.661427830017877*^9, 
  3.661427863627643*^9, 3.661428300404872*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]DISP", "=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"\[Rho]", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "\[Rho]C"}], 
           "}"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "NR"}], "}"}]}], "]"}], "/.", 
      RowBox[{"dat", "[", "Jtest", "]"}]}], ",", "1"}], "]"}], "//", 
   "Interpolation"}]}]], "Input",
 CellChangeTimes->{{3.507089978040072*^9, 3.5070900570025883`*^9}, {
   3.507090124260435*^9, 3.5070901274706187`*^9}, {3.5070930231232405`*^9, 
   3.5070930458115387`*^9}, {3.507093084615758*^9, 3.507093086659875*^9}, {
   3.5070932665051613`*^9, 3.507093329045738*^9}, {3.5075174495458646`*^9, 
   3.5075174501518993`*^9}, {3.507524633336754*^9, 3.5075246350268507`*^9}, {
   3.5078038908937664`*^9, 3.5078038923988523`*^9}, {3.5078094226361637`*^9, 
   3.507809423639221*^9}, {3.5081399207529497`*^9, 3.508139921699004*^9}, {
   3.5089374672218885`*^9, 3.5089374675869093`*^9}, {3.5091120601607475`*^9, 
   3.5091120630499125`*^9}, {3.5091574270940046`*^9, 3.509157429445139*^9}, {
   3.5091622602274437`*^9, 3.5091622608374786`*^9}, {3.5091629373091707`*^9, 
   3.5091629375151825`*^9}, {3.50916298292578*^9, 3.509162983022785*^9}, {
   3.5091632579365096`*^9, 3.5091632582715287`*^9}, {3.5091633716650143`*^9, 
   3.5091633718550253`*^9}, {3.509163404178874*^9, 3.50916340446189*^9}, {
   3.509163473440836*^9, 3.5091634737888556`*^9}, {3.5091636319098997`*^9, 
   3.5091636321769147`*^9}, {3.5091638800900946`*^9, 
   3.5091638801891003`*^9}, {3.509164161104168*^9, 3.50916416236524*^9}, {
   3.509164239871673*^9, 3.509164240501709*^9}, {3.5091900456268444`*^9, 
   3.5091900458858595`*^9}, {3.5092690365446444`*^9, 3.509269036802659*^9}, 
   3.657348891958817*^9, 3.657445389586131*^9, {3.657507345240912*^9, 
   3.6575073473207808`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Interpolation", "::", "udeg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Interpolation on unstructured grids is currently only \
supported for InterpolationOrder->1 or InterpolationOrder->All. Order will be \
reduced to 1. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Interpolation/udeg\\\", ButtonNote -> \
\\\"Interpolation::udeg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661426075165399*^9, 3.661426186422271*^9, 
  3.6614263067236156`*^9, 3.661426458638533*^9, 3.6614269557726507`*^9, 
  3.661427030681436*^9, 3.661427523210308*^9, 3.661427830204486*^9, 
  3.661427863830467*^9, 3.6614283005912943`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.1339018684932891`"}], "}"}]}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.1339018684932891`"}], "}"}]}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Unstructured\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.5708}, {0., 1.1339}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.661426075192925*^9, 3.661426186424779*^9, 
  3.661426306733344*^9, 3.661426458664171*^9, 3.661426955798003*^9, 
  3.661427030707432*^9, 3.661427523236467*^9, 3.661427830233857*^9, 
  3.661427863856264*^9, 3.661428300620131*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]DISPXY", "=", 
   RowBox[{
    RowBox[{"\[Rho]DISP", "[", 
     RowBox[{"\[Theta]\[Theta]", ",", "rr"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rr", "\[Rule]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "]"}]}], ",", 
      RowBox[{"\[Theta]\[Theta]", "\[Rule]", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", "/", "y"}], "]"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5070901426184855`*^9, 3.507090198976709*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"\[Rho]DISPXY", "*", 
     RowBox[{"UnitStep", "[", "\[Rho]DISPXY", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.01", ",", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",",
        "0.6", ",", "0.7", ",", "0.8", ",", "0.9", ",", "1.0"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.507090178828556*^9, 3.5070902462094107`*^9}, {
   3.507093236043419*^9, 3.5070932383955536`*^9}, {3.507296568678384*^9, 
   3.507296571268532*^9}, {3.507785620440456*^9, 3.5077856375944366`*^9}, 
   3.5077856712603626`*^9, {3.5078040809636374`*^9, 3.507804082197708*^9}, {
   3.507804200314464*^9, 3.507804239327696*^9}, {3.5091120733865037`*^9, 
   3.509112075475623*^9}, {3.5091574423388767`*^9, 3.509157449498286*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5668900966629296`\\\", \\\",\\\", \\\"1.142865862131917`\\\"}], \\\"}\\\
\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.661426075636396*^9, 3.661426186968155*^9, 
  3.66142630729871*^9, 3.661426459066792*^9, 3.661426956220516*^9, 
  3.661427031112308*^9, 3.661427523854466*^9, 3.661427830663508*^9, 
  3.661427864431943*^9, 3.661428301044587*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5668900966629296`\\\", \\\",\\\", \\\"1.142865862131917`\\\"}], \\\"}\\\
\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.661426075636396*^9, 3.661426186968155*^9, 
  3.66142630729871*^9, 3.661426459066792*^9, 3.661426956220516*^9, 
  3.661427031112308*^9, 3.661427523854466*^9, 3.661427830663508*^9, 
  3.661427864431943*^9, 3.661428301061433*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5688432042784177`\\\", \\\",\\\", \\\"1.1428593226820727`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.661426075636396*^9, 3.661426186968155*^9, 
  3.66142630729871*^9, 3.661426459066792*^9, 3.661426956220516*^9, 
  3.661427031112308*^9, 3.661427523854466*^9, 3.661427830663508*^9, 
  3.661427864431943*^9, 3.661428301090137*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\", \
\\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661426075636396*^9, 3.661426186968155*^9, 
  3.66142630729871*^9, 3.661426459066792*^9, 3.661426956220516*^9, 
  3.661427031112308*^9, 3.661427523854466*^9, 3.661427830663508*^9, 
  3.661427864431943*^9, 3.661428301117271*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
I47Vhx1u0LPHlm46FVVwPt7dz0/eB6ymzUPDF88vq6Lf0WYms87w71Q6tjc/
5LK24H0OlW/ae3Rzj6YzV9Z7XF7Cz3EDfQfLlbRz7RFJ6w40ezLqvIaV/1X/
9oUTG3UMB46aVrh8jbfMn3V1tzvluctDWo/woiVjW2dViUukiBaDuzz39Gb+
q/GzeMvti/j9DEMHHR/xpHoy8yegr/DCCUu3/JPM9L3cIe/sbq4JVG3/lhKv
3+uk79+96IH/z0T9gBQ6nF9zzpHFuEcthVpUfF1k0JU4hj8OPHd23uuC9zE0
6XwrcFE6P5/O9L5T8tXTKTRohn77uXL8Pgb0b4BDdmGnN+ycfHp6sdiOhef5
eXU/qrxdtMFHS54d1n+Z0Zrfv8DG98WWDtfPs3MzKVOlGp33O41uHXo06n3x
CLqlyQ7fWjiNWmVuXJa0h597/8Osud2QzW+Mvy/pzYBhC/zsXtP5GVNHXLzr
QZZP1EXO3o6hf0ZuWlei4ktqdL6p6fpxMdT42w/TumEeVOvlpgMXxvP7Ldsk
1mhhZ8nvSdz11eJXufhM8hgXff+6+Qtae/bFxL3PM6lXnWobzWp40op3dyPy
7NVkUXKbS5mNaZR14tfiiZ9C6dDxmAO1fB/TvvZrx/21OY7Sund1vlDbgfp2
XNTr9Oo4WuM4blarzTcov9euQ7P8Y2l6zYadwk89pJfxG6M3n4ila4Usw3u5
PKL1L5P+urhFS+OG1Xgec8ONut4s9qxxVQP/a6vMGrp40HrLZ5tntNfSwjY9
N18o/5LW3Pvn4bsqWdTN+mj/YyZuVGh+Zqk2RbKpiL+qyvRigdQn8laNkRX4
eofHzyDzay35/ZoZ1/xmT2icQVv8K37YvDKO4qqt+RxY5i25Biepdm1Oohp/
He3dpTnf/5a0f+bsd2mhRJ16zSk3M42OO/66evx3Ln2sEGV2OzaQ7p+O79nj
TcH9zScvL2ue4ZdEnV6OfULuWqq9fuC7VYVvUt8aPof7v9LSy6Y/qh4qfp2S
i55LiWyZxexQ46ZLY+y75ZDTp63pv/rep5a97llv7JlDMc/a9TxvdY/qFe96
tvxGvp+og4Pv/oblwqlfjZDJbrbpNOLm903p8/n+/COnt62wm6Qny9qZhVK3
eZLXN8tdtWfoKePq5hRTjQdl9N3c+LE13x/9qonpHntrNd3dOfyp1RUH6pjZ
60Tk+ByyGdzbL227YXw3Te4UNj6dFnhmTa6Vzvd7BKyZWGdfpzTK/v6y8Nho
fs6cUh5HPa60T2j+SEcvYzz2lesSR66hSWHXXO7RgF0nl59vF0cXB60aVrP9
fbI58diqR4t4tj9hbc34g5/t4qi27wbNc0cdabs8+FGtdQ5tnPbtWI8NMcwu
TxqeG/xiUAa12lRxt819fxpxdd+T6z0y6OavgT7fd+spbNzcIsvWPqYyj0e1
MN2hpwibTh4/7j2h58smlaiz9x1dq9+3466LIZTSe3TGlC3vSK/voXuiCyG7
AXPbZ2X70Iufi/aFtvanVh6Bq5YM9GPvxe/A1VZ7j9Tzo4icRqOjx+XSh1XL
M/sEh9GxmsMXD2ySTo3fnHjyuJGGInvmTSizIJ229evX+9b3FGo856++x9v4
0Im+j1/bTMhg/NpiWqZ2SKs7VP7Bupwl29Q0efaWmG2T7tPLiUOnLtuppujl
HncqrblHVe+N9g0ew89/w36A9jMip1wKucXPE1w2rcmpQ7EGO3drnOVVvl98
ReK+azEr9RTtkN0q5M5z6jiKMs+o+f7LlqXcy70akkZPQlY5teyqpS8tr7wZ
UVlLzrudbE/P5+fbVOyyZNHouTfp4PVZ4wv7JhTYT16o0tjkyLE6Su7c+EkL
g9yOKfbo4K4VOhql6rK4UvEEGlhk9q61y3U0b/qOyc93Gvz+0aPtdSGG9usu
qdWrWyat2jt/imcRP/rxvUjNoaZvaPCYxm/ss0NpbKEJM+NrxtLIgGfhbnXD
6NrKm2t+62OojqnGNb53GE1MNBlXsoWO9sQuPHC3fyRFX/Ho6v0qmn6ub97G
pFUSLbtiV9wlyMDPrVPWHbNMIs9pUXf3nY+hwBGN9secSqFDRS40+rToCQ3L
DNrg30xnYM71QUdsXtBlhzM9zavzvFDlbxNNrNcG0EC3g7mP3vFzu4asczy+
6bma+i0p/6nSvf1UM77zQNUTNZ0pXb9i46vHKbVI7ovwVEM85z/Y9fbdvZTt
eqUyqbW0YN34Z9VGnKB5FnYzRmzIMsQP63/2ztlP5eJepM3bmkMtIn4XqnDy
AE15fP+y6aYcKht6eaO58zHSuPU0WRagpw5FdrqUzt5He1UW96MnviObDVXW
r+mZQP0t535qk5LK/BPT03fjtQ5D+X6ceU76G6t+aKi5bvflwcv5/eNL3jxo
1eQhv3/czbjv4q/ginZJO/h+mv7nF/4O6ZxK/uMaHk825/eTl40KKnnsvJq+
RNyIOV3uBlU0uXWiwjjDfHSz5uarFjdoasilc7sae1LPpF6vIlZkUGtvc5cR
owveN37yrEn4qd4hNPHam8ttBvP7xmsPTjgc9zuC6OTK+42sAsjdY1TZOgEa
Sp0+cV+VId50cvNc7bm5Gnrs7Vh1v6Mvhe+uvvXkhUxyLNE6v2Fnb6q5+smN
M5+tKHFEZud2l4Lp/OzIYVsW3qHscXvd2o0LJrMmdRrWXhhOBx73WXbnUDBt
nP5qnWPRBONvMLXqb2V3a+cr6rZ8WnWTGuH092a/TSYnkqnY4rQJDXap6Pbb
2JX1OmqNv+F0aGyJOlWjNdSqdsSFKcUiyKNMRNHd67xpW4zn7W+xMZQ1yv3x
rXYJNGd31cB2b+IpaW7qd9+nKrJ6s/DC4jpqctFdv245MZE+lTmW12GLmo5l
n+nwcmA4hU6c3mPYAQ2VSz1mtXPiVToydtja44b53Nm6TabuNeP7g5XfXKro
eaBmjTIqg948sHfpxvc3Yn9QlLP6iU9bvl9Et6KHzt8ljTqX9bretRFff67e
4vPKLun8vMla36I0TbP4/iDEpz91c6KdTDPI9bZmbUh0Np2YN3rknoGx9HB0
hnMftYpUup4XdU8PU/uTY3Y99I6jxjvKdOqReYSi5079fqtUOpW67nL6SuAx
8ig/vfChsumUOHCG5s7yA7S+wsGAXZvfkkkn1TQHr0TKv2Xdcbvne6rzseVk
33ER9N5v7fxCr99ThW5HbX63j6DgqZF336XxuG7PpCn1epTmcTTi4Dbdtj5f
sDqQfT8VX8Q3rIt1ME1ZvNTGIjWLrn07llqxVAR97rZlZ51sg752mtNlTE44
qfdNz6yy28D3j12v7JrJ7+c56Dqr65BWL2hoz+5rkurz+8nBt63OPTO/jHCn
xQ+8U/b9zc91hH49qXf3Xouhj+lSu2WdWudmsvLU5uPLznTl59LzuL5KXoM1
6aSbb10vuFcmG69KgfWX287OZrjs4Y5pj0L4PsqgxQmauS7vyDLqkXXosXjG
l/IDtDm/XdPI9eNQi/K3Ct43XvXKK7ME/XM6HdXxVZWSuVR8fuSCpO3hNLfj
qlOVrqlp34Z2pRa/saNzxUeXKzwzh4Jb7VxaMteOLJvcHdS3eyx5q3pvsFbr
KL3VhZ3jJvP7xuHfjnjFpJZtEkNfnj7sP3s1v39c/Wzh/mqH+Hrgtg2Vyjxf
xb+/ubBvmqV5iHzfeDp1irNrVT4/hUZ4Hux1aVM2rSldZ46udBzdqOpt2/Vo
NrW3u9VrhzqWxWmNAr5sSe/O42jHVpN7Fd2fQYu2dvavZM3Pc9tR/EVd7biC
941HVirX905OKjl4nh83rg72ZaVSj32Jzb52jmLjMabtPL96t9h9OLSy9fqo
YWfCKKFkywFNh79hevy74ab3LQe8ptDCtiG21/n9409i2ty/ZxtHyQ08I760
e0MjSz/PCh3E7x/X1D7vYDk1mhy3Ni1974CKXvWtd6Tk0hBaHVqi0Z+/1975
qPzOMzo6OG3ltmnDI9j8zNWswx67y+E0+pHt9ivv+X3kQ03Pri/dPI0SBieb
tF0bTdNHmKwc7pdCXYqtH1K0cyJ5v+vy+GNXfv/48x5LvFTl4qnvOm0/67Ip
bD41sFtS2335aupcNb9xhy8JLM6AXO7etX3eko78vvGDs14uSu6po89LT3Va
fieN8S/N7fW4i/+kUbch46tVtfOn37tXtOk0MI1M+z7yU5cIpESXPDNVKr/3
OK3mmWJ7F6cy3KRIr8Dyl9XG31Ba0HZO3W7JfN8n8qHf7qXPPJXKz3NrOLTa
7yqXYmn0u2YRd8rzfncav+xo2FB+zt3kQZntE0qq6UpMua0rW3P5KlZ3ar7j
nCSGm//dqmLrrSkMu+/SXVMHa+nyzx0vl77Ipal3VsTOWfSaPvcNDJtin0su
deoPe/7oDVUM8Kin2ailI25N/WsVe0TThi5+0LR8DtOPsEfnv3bZEsi/n3eq
0Ox78QD6vahV4vEbryjIYtThwjMNce+Cq8GNavmy/Nm0XdGPa62LoYOhN0c5
T+X3l9fxW/r43lctG6/a5R4e3hSczOKE29/XXvncJYomXwifYD2An1s68s6z
4+fbp9N99fiVy/pFs/2U7S/4NPA8raWsB/ZOI9KcGf1bT4W6V72YQf7H7z7W
anMpwWPg32tWB1Nq/quRVdS5lLSi155k+2CynHBfk7+Q319efNAcz1JLssj2
8tvMeausmV7Nqz/Zvtf8DDq9POn6uO78/vJGLmWc+zzg58c07vyz+PX7eqqn
+qdDhNkNGh3q8djiTjZNKT+j2bIuXjRpe8PkY6/5feW6Oi20NR0yafwX9eiP
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
tha/X/fluICFfd69pm2d5gf4e/L7dudHbJqXXo3ft/u0xpCfhW5FS/kGL0P8
6Hlly9lwWt7ZuoLpaG/GR/UsO7vFUybS+AvamH8uRdCkTtGX0jRvGB2wVx3j
LWYcjYwi61W/Xi54H0OOOcvdl6Tx+3avbqz1toJ3NNPPz4sdSk2dG02/refW
77SG37eLfJdL1KtH0wZHka8mpsPDeE+K3DV4TZdSfH2r3aOA6OW/Y9h8Y5JL
u0/pL2PpVilP66D813TscJEyP0bx+3a7TPlQuU4jft5K7UM7lrZZn0TzFw/p
mlI+jtq72tusLpFINze3jxqdFFfgfJZMl7lOky1SqMq+BW66Evw+XdCzP690
7do9+P26trXjPMZ4a8lWNXvYKnUoi7ft61n8fjFTR3d8W02rfklDPr1XLdyQ
lkIptl07uuel0hXziZtSavLv40sX+5ZmPYPfj6sqpqrYdqiOAsIqD9/e0JNc
Qt00LYu8pAWrbaytDwRSwpETx9wmZtHj/r+WrPCJNMzzq92u1IifBxTqsyHg
Q7kcSnWcn705JIZadq3T8LhJDmntP8f8SImhToU+d1YP5/fH2mQ/jmwwQE2N
TF+W+/T2ETXfd2fghQpZrLyvy42hPUpm0ecOcyKrJz+irlFzcjp9yaR/tocO
+9L8KWUX+bxy4AF+X2vftxXnttmVTZubJ/W89tOHLCouuuBVl9/PmrR837Oz
vbOpxUNvXckO/lSvVrfj+7tlsO/jTCtuNm+yIYOWVw0d+ksVS8/e132y7mAG
FbPsX8Tkbix9imt0vcFzLbWbtuLgrycGPx5+YZmXWxLZLhu/YVFtLZMH1dMN
3wO2pFGnmm601+k1rbO9U234kTSqXuH6z5Mv9NQlg8x6XrKhkqeo++qXeprl
PXHp39Mu0NAq/oEP9WlsPK2MefVfv/vWd7mpoWM38nfPWcPvX8X3Zg6vAjd1
KpFGQYmVnP/Eb/2u7Wk5cc5SsvZdv+3paz35u35u0lOziGpW6Fr3fLCeRq3b
lJrrspm+36xo/ac8P33/c0/1Imo5qysdt+L7h1sFdla9OqYnV60qzuPCQ7qU
XTc5+qiebB+NsV4Qx+8vrds20fbWuAwaE3PyhW2cD22ofnBg27EZ9GLKNaf6
N/j9pLtbDDm87I6W/Oea7ppa5C5ViRja7bAdv580Y9Txwxvs9fTMfH/ig9i7
fB26nO2AZVbpdDG5+ut6qnAqXbhmzbB96TR4+s5XZ1bqKclk+AvV8+d0IuPi
9eW2WdSwnK7ryfQIUpumTCp/IphOx1uOHh3nRZq5/pHOQQZ5/Pc3ijpurkJ/
/eL3iS6fmGbT/nEqXdt3s+fHymoaQOGZj9/x+0Lh/9YeqN3gr31+FHRw3Yiq
RTLYuP827huZuLDeTD+TUOp9w/lsh2n8PtFETeuOTc+nsXggqIp5+Wrt0mhG
txNXum9Opt6DHlotvsvP2xwwZ+F8vauaTjocOu647jQF1L9W7vp1NS1d5DVk
4N2rtPTltPL3I/n9oL/2V7vS+I2WLOZ/shrjdYWW3K7R+e5Sfh9o0fMVJrda
m0PB0+7nXIk9TWr30YV3zsmhSkvL1hqy7yr1W7gzOzlBR7T1zInBm51ov7np
GpPHehqoqxcQMc2OTm3d0umFYX7canW1RhcOOlDDssFL3V35/Z6j4+ZemNo6
lU4Pznh6IIR/T02OC/YOOaOlYTN0FYtM4fd7Dli5e9ZClZZ9L6zwMZX2DKvZ
v3U61iv01LvU0pDbD31p3Ir4zOg2/HuyeuPW77J//obmHmpzwvUzv89z6s03
VdaXz6AYXfi0qk9TyXVv+Y0Xdxne/+P3/ipP+f2aD4u3/db8uopMrjzIKx97
ha7V8V/mc09FSzYuuPHQzpZCLla3nxWgomU61/o/h56lMtNM7ru8UlHZonuy
ex88RxNzPq/6Mz845ftxYmfD/KDfKL2574041v6cZstXlX8YR6X7z9m6zvEM
Dd72Ytaf+dgbJ5/kASbj6Uz9jjnvfvL7MTsdSSn+9JOO7NrVrOW14Sote187
2NcwD2ql+qft4HWX6P36SnWPFEunFudvFi8Tf5r69+k/vX+hdCp9LHfP9PrW
1Gvq0fn9DON1tmuK6cMOdvTtQ/lDFQ325ob/6oVTx18kx+uHLsZH8PsvG7h8
cVl54S01Tm55ptGhRNIdG5E0995bGr+02HCzhYl0sYXFhkUJBvnasrDFHcvT
1D61dofrWh29mZU5qs8IDW2bu/xSGwsN1cxo1OL17VR6Ef9y20cffp/l0xKj
XbSjg6nW0B8XFtTJoMrRvT6VKB9CB/tUWFWrWga1Xbzk3WS7JLpoMS/kqcHu
pYU88LbNSWbxI76/fTqlVMuqOn6/5f0VrZasqK2jkFmDm9waw+/DvJF+cMW0
jfx+y8MPxz2/YqX6v7bOPJyq7f/jXEI3JW5oRNSNTEkR0TuVSoZkSG4lCqlE
GZuIypAhoitd9yApIWVMFGWslHk+xJHjOI7x0KBSfufe+3XW89z7+2s969l/
7L323uuzPmuvtV8vnHFy3yTuegd8tq4dH30485iLW6Lkhe4h6fX3nYNM4rdU
9ioy1hlnwNjJ2uDWdBIUBMJcBFmMv+aLXxIc70HLUTVf7h0DFePVbQK26WD9
NPVipJ+BvZI0QS+kILF/qGSuG/Fdpj3/7uJ8axQf9sg++VHUBP0NxgnvU1ux
fLTw3C3JMmT4L0+RMWiF8nqjdTEryjEW7S1XP4f4LGWSd9+Q/0JHkzOz0HPj
W/yqWPdBpJkOJ8mN1cZq1ch/K9JrGlGF2WlqC0JFG7hxauSaXcBnagMO3H7o
sM2ohjtfc5w9L9Cm896/9gdx2tnw0LgtgfgtlX+sMmkva4bs46zICrv/+i6b
vtZOL5duwXYhWoXXl//6L6/LRSrskWqHzv7XZ0JK27jzsYqAhYF1P//Xhzlb
12v688F2KJ7x1/kpsgnizzZL8e4kPsyV2ozMhh2c8yT7RDiHE19msXrZp1e1
Ldw8cKZdln4vboxsp3Lz0tSUJ6Jq7Z0IuKg/h65Xzc2/zvYsOquj3oWYlK+S
lkFUKN8oW3C6upM7P5x5356GXqrT4nILaah8XuQmrd2O4w1feUVCurjXo+Wf
38XMLkWMW4OfUf07jKQeFhrJavuXL6sdTwoqSyk+79Bqb/pyp3kzrp3XDh7e
2I0ncryXNC0aud/DZtrj+kzzc/1V4t8ccBJK6LzVBQ/tsRw1XeLj7LZatFBU
rAzZsV3tj3R7YLkyxPL2fOLj3PNQa49zEA2F3/oKqWHvkTVH/N19mzLOfXxp
fzSyF3bttV/M0yrhoCDyC9W9F0MHBW9IaFO58Xm+jC6lVaeWmy96mPOvXCtW
AyOTN8m6ZiUQwKy9ImFt3OMmVm5hn1TbEDsQ0xxsUQL/ii+84Z4MZFt9eKg1
qwjhs6JNr55g4MChLkeXzcWg6Dl6GdUQ/+YP//orkfQByOsZiQryFCFOYkGf
+LMB3BPq1hRULcH3yeAtWlKjyHO0/3LvSzOi71ouixPn1IdqFD/Pa4FfxBLB
+9r13HySPVH1Ju5BPZoC9KU1LuVAVj1R2terHi0hV+tlNPIgnepoeKGyDhT7
xG3FtAIIVZXUBnhQufGhVKq0RCKECvO5yqbDRnewrMZ/914rKjLnhzJG16Xj
fJOQypmUdu75zj7RnpfNbsfEKc+l9r05yLfIv7nRnobT3r+yxag5UJ7v8jDc
igY+ZbnvGj55+JaYKX/hKvFt+u8r3d4U2ItntfT64k+5ePz0ZOXaZOLbzJFY
fMvuOQMJfiazLQuy4Wn6+qxqKgNZk1GlHmKPYR370FQilAFHu8It1kqFWDFB
cXf+k4Fpq/oyt9Z8yOVc/Borz4Ihy4Vt9iYbKho3dDYMDKGy81h62/MqFDza
UxtST/yb5a5F1Q6eg7h/4kuCp14DImiMwMKCQUw/pXz4/VQ90nM0rib9tR9z
6lXG4PU6vNioGm/EqR+eeyRwKqoOki9uRBq21ONo+vWrO/X6UMVynzztSvyb
3YGb6CLxvbhMn+X6IigL3p/Unwcm9cL1x8IINGaC3msQGfaC+DcPeeYr3ijs
RbWdgta+LanIbu0ojX/Zi5+OHj+vIpyMGAH91eu0R7j5pfZnCUqjygi0XP2K
aN1ZOLr4rpruDs78RegajX0hHZphm995U9gYSIuZJ+SbhR/RE17LE9lw3bj4
cW1eJh54LjSf+iseCV72ufu4H9Nzjdf3uxHf5lBT/ETlaDvetq/ZLVHBAKNf
SGN8P/Fn/vPY2jGonvasu5ozzodtippjSHyaswP4KEvmEZ+mmQ9Pwk5/8n+1
YE71I7EgNqR3d1gb3cvH+AZj/5SzbCy6d/qB2rynkPArsRtNG8amDvW0KdtS
BB1jD0aHD+M3B8HlhSiH5tI1Urv8h7h50rblZ3933zqErZnVPRaHaxFfkzut
YEN4rptOjZi8XNGPrf6z3z5Y8R6neabOb7jJhsuUtIzO9hxM6yl90Ylho9hH
188yPAdxjKOhTmOlnOfvLDrXhgm5tCprxT0sGPzRP35nSQp3/ezys46Litpp
kOSvO//DkPgtJ2yPPTqowsIiiSqB2V1ZyPFSvPVMkwXvfC96gn4mfnEPG7pw
f/h/ZTtinQzVU8qJz3K0yNXrqxcbV0Z9chrzn8LZOjXd86/8+82ugxkdSSg/
F/ZT6D4Wgm96J4lLJqPGL+JRgBkLVaH339pH3sNpm2qWA2d+K7cwl2k+lQzx
0s7LGiKtuEyJZotWloP3qpTHx8d0yO+vFV7HU4MIj8EAWaVBRP5dNnLXwXiW
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
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnHe4VcW5xtfZIGevtc9ZNlQUFNAQBDHXBgqC2KmWqFQpikrRG2PDjtKb
0tVYaLHRO9KkCCiKvYsUxWjUqEn0JpZ7bff98b3nCX/MM7Onzzdf/2bt+n3+
eNG1hSRJ/lwjSaop/yxNks+V7lb52GKSNFFqXpYkZ6lTC+XjVT+qMknaqv9I
5X9T33Wqv0zpKbW1Ub5CeVP1v1LldkpH5klSU/17q/9UpWtUfqQy+tG+Uvn2
LEme3ydJPlXftuWxJnvYofoXVf831d+pvXRWaqq2r7XuP5WKWudZ5ZuV/qj6
aur/i8rnqPyC8ueVrlP5GY2rr3VnqX9DlX+r9IzWWZzGWeapfqnqdijvW4hz
9y6LtUrq06aqj8pLlKqrvJ/Svkrd1OcczdWTXHuepfbbNL6Hfn+idKHSBUpv
JpG/4Zz63Srfpb6DlCao3Fd15ym9rXILnblcl9K/lCQLVDdU6QCld5SGKR2o
9EUS+aHK79G6yzTPMdrrU9rPMdrbcWprIfh9pHl26/eWivj9vPLnkljr2STO
d6HSUvV5QvM8rvTfapuhe7pW9dOVX6h9LFb72MoYd77Hcn8dVF6l/KqyKM9W
eYbmuBK8USrTvcyuFvc1R/Xt1WeO+hxXCFh21O9FSsOVaiqN1hoNlH+jcQ10
pt8orSsP/JuuNE1pEnirNDMJ2M1w25Oa71ylszW+lfKWSlNV/5jSMqWlSmuU
XlTamsTabYy/jystd7+RSg8o3a80XOk+pSlKQ7z2RKWhSpP9e4rXeNT7WqK0
2HtdoDTfe6VukdJqr/+C973Q/R71Hhk/zPNO9nozfc7Je60zw/MxfpXne17p
aaWXfM61Si/7N/3WK63znta67xGFuLuVXn+T0kalwwpBpyu8v3Uew5obPNfL
utOXlDZAA+rfuixgzlmfcb8lno/f4Fi7GkEjP6exb/ChqPsuzwI2rA/NvOE1
XlV6xeu/4vOs9Fm3KM3zOdZ4Hca97vXIX/O9bvbc3Dc0AA6v8BzPea+veb0v
lQ7SHg9T/r7yUUqHQLvCx++Ej2+VxZyPGXeW+l74XbsQsAO3VuqMc5UeVPm0
QuAlMAI3xxtHrhZ9bdO8T+SBd+DfKJLo5gP1e0b9z1B+eiH4W91C3Bl3s8S4
8KhhPtO/wZOhxqOblK5UukrpRqUr/HuK28Fx+MUlbrvPdSOMJ1O9z0XGuZnG
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
mD9xfOL54BUxEmhjucdW+UeI6eCnxEdb3XMyP/f0o+dmz718d/u4Hp36e9fz
xop3YfjPaa/heTjPr75T8sTnYjz99vhGve7FzvfxWM77q3kLvBWeic8TOngs
DVp4NI3y1WXhv8Enjt2HLUD8Av2quX//y/Df5T1DG/xGz8FOhO6vYK003qT1
8bl3uv/Ltme3lMK2YE7sC3zVzMl8F3h94ln4btGD0fvwgQN33udgj7IeawEz
3u0Rzyj4bjg7dh77Zx3qnvLYPfZ3GjY49iW2OjYmOb83mH8So4LnMy9juWv0
YvTjqrl3Gya8veUNLj4ffMTwWfz98IHtaejK2Jc7jGO0wYOJB6ADveJ1vzSP
hk7J33KZGCyxWGzwL83PGX+5+dUC0zj9e3u/K3ze2Y7VErMl1kaMmHgF30Kx
NusiQ5Al8BYSZyGetc5t1DGOGDM6CfmnLlfFnpm7keenHl3w4zTe0n+eR/mz
PGQOYxkHnPlGAhwnLrQ6DT2Ndx+rDf8PLJuxTeC/xAzg2+TPusw7iK3us9n1
p7mescgmzomPAHlE7OkF1291GT8MdtBWl9GH6Y9MZz7Ww7fDGwl8N7z/WOsy
/Yl1bzJOkm90eYnLtS1v2B86Nu8s1nse2hmDXwb975k04l/kG1xGf1/rtViT
sewXubDZ591lXQR8RsfZ4j1f5zNja6DzLzDckLfzfUbkMPJ4nu2A+e6D3Jhn
POQsS30uaH2ZcZI75P7gx6t8p9zdatdTfs1jkWvAc4v3vND7YV3gsMTzv2R6
ZG9VsEa3Qa943ncHHT9tWmYO5gJHsPdoQz/kHIs8P7oeegZwYh+s1cZwWOw+
tC3yugNMd/29l1ddzzle89l5uzswDf6Jj/eWNGJ4+BjQEbEpbnIfaJP8FpeJ
49EGP+CN3A1p6BH0uclznqn8xjTiqTe43Mr5Da6/I431WOvuNPbEWNqvdx9s
MXwN2Ca8Y8XexgbijSH1+B/g2fBu/FkDPQ9nQR5e43riY5SRk8DnasMBuUEZ
3g3MBrie35Th5329LmttS8Mm5P1nLb8fxTbk2xN4NHpmlXwCTry/4H0eehR3
O8v3C4+l/njz9tkey7dmT6aBC8DyUcMEGfiExz7pMrIRngo/muN9jfHepqYR
j+ZdOm9FeffON5/wdWx+eDtv0qe7D/F8ysT00f32+EoKEYOd6j78Zhx+Avox
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
         "]], PolygonBox[CompressedData["
1:eJwtl3mwzmUUx393cd3393vfB6HUpCw1FaaZlIswGRfXrkxlX7JTlLKmTdyL
omSrCIWbrSLEWFoVIpUklRq3xTKa/mlomuTq8/W9f5x5v+c5y+88z3Oec85b
d/DDPcZmR1F0FsqF5mSi6O68KCqCZoD3hyiqlIqi9xHOSkfRdNYS+A7IZ4JX
It+TE0Xn8tEBN0BnMLpL4c/FUfQcfB76v7G2EVySse0K5FlJFP2EzRACaIjO
z+AD0JXg3ci7II+g5eCm2JeDe+CzL1SMaAI0lLXH8HcH8n/BC7C/H3wMn33g
N6P7LtQZ2plFjPw+BPVB3g77ZuiXg1fzjangh5HVgBazp6n4eYa1dcgaV46i
luAxyHpCCyPH8Dq4MTQfnZvgH0dnFfgiPpsG71F7bY6vbPbfEGpEHEtYm4i8
HnxfZAOgG8En0J8JLoAugpdxXj/ga6zODLw8Y3wr8vN8twSbMuSlUDH4GeRt
kLeFOmKfSry376BVfG9C8LeLkW9Ftz42/fA1Hv4N+Aw+R0O3EGN79lOK/vf5
jqFv4m/q27pj3XU5/Dx0j6GzGt0vWbvE2W2EDoEv6E7A47jT35F3Zm0u+n3h
y+DrQgPwPQP+JPgUtK8S+QJ/BrwN//2g1ZHP/ESw7c3Ql+BvoEbgF/FZhO9P
gu+qMt/8GHw3tr2hYdjeB90L7g9tjexzPLg2tCfX53YUm6b4K4K24+9b+CaK
FX9HwLuDc30S+nchH82Z1ctzrrSB/x55a/RPoLOCvbdA3hB5BPUCX4dOT3Q3
w5+FvwKdAvSfYK0QWXX4+sju5Az2wj8d/K026BwHt8SmEfIsqA/4G/QLU875
2uhHUDPwBOQrkW+Dvzrbe9LejkEzcxzjD+BRie9uIGfWMXjP2rve/Ofwf3E2
N3K2dZCPh78Q+61NxP8q/L/EWhdkC9CZB85VziGLoX7KVfSvgf4khtbY/ZHx
3vsRw1hwGfqzch1zFt9ej49fiGcU/v7BblJwLXkS/YLgM9XZ1uabt2sv6NwE
ncTnTtbeBHeDPiT+jyrOTGenHHwK/BSyaqoB+B+D/j2qBbFriXLkV/xfxP8c
ZL3RrwJfju61+B+h94duB2gJPpdCK8G1oKPZ3rdqpGrlYXwsx36WYkQ2HKqj
WgXfH/k24nkU3DvjuzwEZSPvmXGuqOap9g2BrwV/FTQY/F/i2qAarVodw5/K
csyfyje0ubJrrmrvbcTWBPoo3zWqnWJX/Uz5zXVDJzvbNW4atrsS1z7d1cbg
mBTbI+j+Cv9O4ruYjHwd/NvBuIS1zciezbj26D1NAxdCW3Jc49qChyeuPTOg
LRmfsc66nO//lvgN6y3LpgN4CfKvkHVGv1viGna5lkH58B2Cc0s6S8FfB/cS
1YTD4OnstWHs/FUez0s7Nt1pwP412WD7E7QGPIK1kjy/0evRXUOMf3MVU1hb
C76UuBepRqtW3xo755RrOvf+Gee+epJ6UyE+i1jfqT3AbwquFTrj3fDdsV2j
HOIbp/BRSzUQ2zPQF8hH4a8OeCH6I8EHEufONHzsCO5ta1Pubepxq9GZlOcc
u4H4RyauherR6tXtgnvjPuJZFJxTyq3zqn3oLgyWqSapNq2NHaNiO59yT1Nv
05ktA09D1ix2DdcbyeObOTmuOTXV+4Lfgnqsem0xunfGft9jOZeS2DmpXJSP
OeAnYr/luurr4KZQnPKd1QQXQLnwDdB/XneS7T2Xgl/hG72w3cTay+DZwbmp
N9iMePYm7k2boCvQ35d2rVUP/Qz8imKJHdsEdJ4Ed9Qdp1wzPgvOVfW4k/ga
iI8afLsmNAh8hLXDOe6pdYJ7yyOxY1fedUm7VkqnK/gqZJNj37fufVdwrurb
O8HV8TmX+MZh2wL97sGxqUZu4ltfBeeWeupF/MwNnp3OkU9n4K8M3ut65QD6
97H2QOz3pHfTMe1cUo1RrVFNV22/xDf/U6/E5jh67+NzMb5eDa4Nsh2WeGbQ
7KCe/SP6U6FHY9+Nclo9SL3oAPLjrI8Lrt16U2eVN/g4mO87K0KWk/aspJ6g
3qBau0xxZLnmDgR/ELt2F+CjEzo78v3GLr81ZK9B96ScY6Wxa7ZqtXrC9Ylr
sfY0E/1OsWc4zW56R/PBL0HNwVWxb5Vx7Oq56r2aOTR7qOeq976Abitofb57
0I7Eb7UN8VdDt1DzUezaoJgeiz1jqgZobvin4i1sQT5A962ZOXYulGV5JtLb
UI7VA7dF9mps2XTW12dcm9QD1oE3IhsZ+2w0w1UBj9CcCL8Iaq+ZItczhmaN
F4JzRT38RfCG4NxTjr0VnPsr9Aby/Aa6Y/9zjnuGeodyUrmpGlUVf7PT3svl
Whg802i20QxVDfkW7RfalbLPRmnPVpqJNRsv0mytmoL8CGsNgmdjffN44plB
s4P+M9SG75o4N/WfQf8dTgfPjpq5NHtVDa5Lqi1VwN0T14ZLFbWjOOP/OvpP
o/826knqTeoB6gWd0j7r0/BXq9dAE4nvBmg2uu+kK/7bQFPAD2RcC2Qj263Q
6Vy/Yb3lt7EbHvsuSqG9mk2hiZHv6PG0fSmnldsbkA2VTWSddeDBsWfz+6EZ
ac/++sZ7mp+QDYktk80qcBcoFflMt4MHxZ6Fe2BXg/2U5TknlBvVg2uF1mrq
LIN7v2ZGzY6aETUr6j/B6MS99XmoZcp162Vw69h317xi5tfsr/8I+q9QP7jX
qEfM5Xv7WXswdv9SThxMfNbKf/XCVNpvSTVCteJ/qojtIw==
         "]], 
        PolygonBox[{{2894, 1611, 2597, 2678, 3821}, {3820, 2681, 2593, 1570, 
         3434}, {3465, 2596, 2677, 293, 3464}, {3818, 2582, 2601, 1791, 
         3627}, {3414, 1535, 2673, 2590, 3413}, {3413, 2590, 2585, 1643, 
         3484}, {3610, 1768, 2680, 2582, 3818}, {3037, 1791, 2602, 2681, 
         3820}, {3483, 1643, 2598, 2679, 3819}, {3819, 2679, 2594, 1602, 
         3456}}]}]}, 
     {RGBColor[0.23531261930357583`, 0.3785070107242088, 0.6217689609350948], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmnncndO1x8/7vuc95+R9znkikcQ8T7kiCUmI2wyGkKBiCO5FyqUo0ZCY
qqVFDbmCUK2YWlOi5iJqqFLFJW1iJrQV8xgaSQRFYujv6/fLx/1jf/Z69rP3
evZee+21fmvtZ73vTxp3dHulUlm5Wql0qF7eWancXK9Ulql+Ti+Wq5zaVqkc
o5cviL5Z9Crq20eFAX3VdxOVW/TuirJS2Vj0UNUfdVUqA9R3ZLNSuaBRqVyt
vpurfCa+f9DYYXr3qeh7RG8l+im927rN9NMdfh4q+kzxmy7eb4vuLfqidrf/
RHx/JfpW1ac1/S2+uU1pnqer7Y+q71UZpXdn6VsPiL5NY0ZUPd/Raj9Mc7tB
9HjRLY0do37PauxtTfc/R/VK6tNdZZ76naS2X2puF6rcoTJLpb/Gbq9x23Va
JsgHejfRXzf8jvZdapXK8apvFZ9f61vjtZ6dVN/X5nltqW6na+wD6vMnlR4d
3oNn9P47NdctlSNFDxHPwSoD273GDtX/2ek1s95BpeV9alGpLFY9os0yny36
DJWxmSdzXIX5aC7Hqvy103u/nfpuqzK29H6dITlcrveXqTyq90s6zHe4+ixM
/TPNf6Tej1A5Ws97qR6sMqTN76+uuk8vtV0vepzoKaJPFr9r9LyTZPWTTs/1
qNJ9Jje9n1dET/rUrQc8X6T++6o+UN8/oPR+TVX/s5ve37+Wlivt6Mo89XtI
9Lvis5rkcpDa1lCf1UNfqHE7iPcj6vOi+r5VtT70FH106edZ6lOofjQyvFZ7
8XCn1/YP9dmmW6XyN9XHd1qfWS/yuzo6P05z3lNlPZWz6l73uerz08j8Us5i
9pezN1jvR4p+X/QuDe/RzJxL+qCT6AH0s+xF9KK76KGqt1S5qc31Vmmfobqf
ith9w/cZlVPUvnWndQj94awvVDlN9BZq2zz2gHOCvqKr2AR40rehOW+WeX4k
xsdr3g92eP7vh/+XkvMitb1a+Bxw7u5V+xpVf5vvFjXPmzm/orXujYzUb1Dm
wBof0R4MFL1f4e9C36D2Dzqsi8h9guawc8OyernuNXOedlX/Ozssa2SwWcbC
e1DWiPwH5VvIbWjWyPgt0ueups/dmU2vDz7IET5bRLbravwtKhuLnt5huofK
YL0cpLKf5lVtee/bWz6XA8Sjf7vt3IzYOnS8f9VrWUvfe1z9ntXaJ+r58nZ/
5x29f7vq582qHguPnvpOj4bP4p9VP9vhdxvoeTut88tOn43fqPQVnx3VNj3n
lW+2ddj+HqWxExs+o3zvUrWtonW14QeqlunJGtve4TEbif+GKq9HJ9GVedHb
efEp2LPnQo/RmXlV9IFaV5vW+KH6vyZ6cOnzfZXoEQ33uUT9949+oUPLCuvq
oYX90wvR21Gl17WL2sdo7GiVsmGd3TJ7OlvfWpU9V58txbNLPP+u56u0H0dp
PVeoHlB328Fa6u/1XFOfH6j/nKrljsyf17cWiL5b/D6SDfhYZU6na57P09gl
4vd6N9vPofGVJ6k+pmlbh83j/efpszRjscnUS1fw6TCN/X1D9bJu346Dno0N
Fa8txf/u0nb787S/kb6nVGyTsF3YKMa9kT4flPZRu2mNW5f28VepfrTpc/oX
1Ser7V3J8gjJ+Xb1O0tz2V19blR5Te23qm39uumf4iNFPy+6rd144INggttK
87lP/QeqzzsNy/oWtb8h+ubSOsG+d9N339Dzxfpmu9p+qL3YUDI9SG1DNPfR
Kt06bHsYy5xu1bt/qC6Rs/i/2bBv+qeeL8PvicdCdE99XhbPfqL3w2aVPhvo
DDpVRn/ek6z6qR7ZMAbgHG/R8Blf1GkaG0nfMRkLZqA/PoV1oMc/bPf5H5Sx
68cnXFaxj+AZPd9TfTYXvYfq/eu2HYz7QWwI9pO+I9KftsFp/1JlU9FfqF5b
ctog/Om/Qebwfta7uuojW5YD8pjc8FjWuI/av9La/kv12S3jmKmqf5N23p/W
sjyR65Wl/S9+mHkPxAZxPhume7ZbhptGnsilX2jeD0h/3vfLHGjfPGM3iHxY
y27t7t8Pv1Zax47QPs4sbXu6iT6y8LneuXRfxsB/Zmw1dh0//4sO+3psGzX2
bU/RvfA/4rWJ1r2xytei12naDhxemC/8J4h+qtN4EGzzUt28sXOPqZ7bYRt7
/wp8J3pu3faX9n6iPwbTiV65bmwJ/Umn23vF3mPnmSO4YGB8bhUMqLJc/Q9R
/eMOn4X76q6R2zKt/TqVV/J95rGv+n+vNM9Fws8T4sfxjUPbvUbWy9yR2SbB
FdjbF4JNTw0ubde3vur41gdQg9vB2wuCufElbWn/rXRmN33vXNXna+y0usec
HJuD7QErIovLq54vvod9wUYg8z7speS+supR2pNnNOZJtT+tumfaLxJ9XN3Y
DF/SV9/coZv74RMHdrNfRFZDYkPmq30J+EH0g4XrfUrjaXD1oKZ9Evz+rvaX
S/N8SfVdKlP03a30/tC6eaFH9zQtB3zF9Spr4XdL+3J8+pOi55bGO2PVdobk
MlpzPUv1Q3p/cOQPBn5RfCZJDt9vGdceovpHLbdfp+8s1R592Okxa4rnYtG7
cL5jR7DvE4MdsD9bt+wLhqr+Q+m136P6XpWloudqPuvUTd+l771TGAfvo2+9
WNjGjlPfC+qOeYh3zkkMBTZ/s7Bu7Cd6bM04DHs1ImcZWwSO+LzDGLi9aRzS
pnHXlvbNX0k/p6rup/JZdOH+nCN89GZ1+xfmMjxnYVmH9Y9Y7yvxukh1pbCf
gSd6REwwMnFBs7QduFt9Nq1ZnsQa2APa4XlszbgWTEssuE3V52hk7BX2bBJ+
5v/ZXuI0YrTV1Xc1ld4qhzR8xrBdN9S9H+wF68AWVPQ8perz+lKwIXwui6/B
z2zYZh6cUfisWnW/7duMTy7PPqPb+BLOA373kg7bQezfzODVq/T+yrptGDaW
ebMvf60an3AGN48Nx64/Vnd8hf1aVDdOBaOC7cFnYLO9wR/Ym8JnABo7hv+f
X/Nc1oxMiEN7h2b+Swrv9eLC+w2NbhAXgHHBt29FN5azX9KZwdjLLuOTk+rG
3chj1cTFfHNOzevH102P/sznTGpOp5aWyyWxd8xl9cyNmAJMjA3rk/bekTfY
nTm/Vf3Wh4BDwCDESzM4KyqXaP4bcT7xw6o3VPlU9LUtx/34YuZDbMFeM+ep
neZPXIAv/GXs9is1x06rZJ7IkXVOis+kD7bq6uw179aIHJARsrqy5bY1wwcf
fUh88E11rw19e7Xm75EvmN9h3cQ3kec4L7mOxTXH8o9gj+reb/wm+aSbklPC
T/Vtt79gXed0Oo4mZiNm3ir1CaE5n32CvdE/vkmuB72+NParR8t8Hi4cY62b
OOuLpvmcXxgLfRE/Ba7gGbyBXUcnmWtvlWGZM7bt4k7H+eQFyA+QM+jZ8npn
iz4PG6DSqbJyy+f7zqb3f3n8FL6E84n/fVzf3b1mDDiwZuz6tHjNVX2CeJyY
uJR4cNv41S8z55k1ywWsjm+vhe906es4yXZH1evVjbVZw/U18+G8/Kg0JujX
tD6gC2NV7q97n8jRnFO1ncRezqnbbxDjQ4NN8DuXxu/g294TvSC5G2I9fNlO
bT43J+bskMchnzMs9UmhiTuIL6F7Re7InNgCXSQeu67mMeRGsCOcIexdW8t8
flnYLhMfoyecM3J82KMDS9OfdTnunxmMN6zmPFrf2JlHgkOIk4bUvS7O2dTo
5Ms105y7hdq7x2rWFWSEn8Jf/KNm+8+ZvLFuO74o35wRu0ocObFmPQZfzUiu
gLZhWX+f1Og5Nni3+IXewZ+0n9DyHIcWlg2xOPIh7mF/0bWfl/YZu2mvX1Cf
5zudpwS/gUF3qNh2zw3dN9iO/X0ifWgDw4I/wbHYuT6xD/ODiTgvUxJjEmsO
zzlA78EHbckJwO/xfKuaPsi/rZvPF+dsfOkaTDGr/BZzcV7BtOg/2Ag+r6r+
D409s+r5/imYH+xPbvPR2GFs0aKan8mzkUdmvzlnD2W9jabpJwrr2IOx1c8F
H2M/Vy1tlx8rnEt4IvLBt4M9OOPgSbAkMkN/ZmcOrO/k2BD4PRBf82j6oGOs
r5o1doZGhpM130l16wfxPvkQYn/yW+S5Pqk4V7MwNPYTGvtAjvaD2FRiWGJQ
8iG9S9vxlUvjMPDYG4Ux2/nB7uj1Z8Fg+wRn4bPYy0r8b8/gNDDVyNgMzsLn
6bOCXpY+nHVyFZx3MB3roY0cxpKsi/498z3iAPSNs9mj6nb49Im/pR3fThx8
S87+bbER7Hnv4Ad0H1+FHpOL6hE+HwY7Yd+WJr+yOHJdFHkSXx+W2L6Mv8Ae
L49Osu/MtUd8Outuy9qxSdxfYJc+rDnv83R8+6vRAXIRk2OvRycH1Suxy2lV
n1n8/4BggL2b1pfp2q+1Suvtk+THiLGxH4WxPdiL2H9syzHArqrvbNlnnFB6
vt/Y6YrP7Hk5k3OSvyJGwXafmDNyacNYDr47Nu3v/lwYL6wRvLEosgNbo6fs
6fTYE84pNmCnptc1RvVqpe85dmFNKmeJ3rXpvDC8viZWqNmOvRS96BHdwMb9
OL6Pcwofzha5Qr7d0TQWJd4jNtu/5TzccNWvlZ7Pd9XnfxNbEWOhw+dEj9H5
qfnWvi3nw4a1HB8yT/bxg+TSyWkOa9rv4/+X1zxfdI47BPI+xALEl4xdkXul
Rkeonw49K+PAN9TwAWOBB+7MeUQ37oidGV46LjitdN9X0h9f9Fxs1/ZN6xt5
nbXrtsvwGpS7BXKv6OxdOb/oKXlHdJfcxfy6/RR5YtYBXtq2aWzyry7HO6wR
rLlN07HX/aX16ZTYeWJyYg5i8RFNxytLurwPj8c/cL+GLLFT2GBwM2d57dL2
+ubCsSVx3a2Jz6A5iyfGpm8SvzMvawGXcr9FHLpa9HT72JBV4suIgzkznJeL
ib01jwNyN/FqYmSw6/JggC8lhy9qxu7LQyN7cmDYWWwsGJV8Bfs4PrE2OdL9
Y6+gsVnQxHqPlM6bdBXO/4GRwdvw/ir84UceZFzal2cOn3Z5L9gTbB3t6M7z
heVAbgD8+2mw9IsN5yOwF4u7vBfsCbjmk+SX9tCYf4neveVn8k5gj1mZB3MY
HNwIZuM9Y8Hk6An3CuQBiRd7JW8DLl0/to5xhyY2AL9xl4f+g53IURwUDD4p
/Lm7oA+5jkPzXeZPW5+0z67Z1oFZmcu/Mh9w4mfBnMTU/ZMfIM88IPRmoVkj
94zE/MwLjP9m4p1hsQPvlsaP4Ehi/+GxLSNaPivfSft5LfuQLwrfy3Ffy53H
iIzlXNwAjhV9vepnOh0PEAvwDj7gAWJN+pAv++ZuJfmxn2nMcD2PKuzzwQHD
o2Pjo7fo7LLEEeSD94+eP9lwnyNyhnnf0fIdPjk3cqbY6bdqtjUjgkOODpZg
j98L9hidu6KdC+/5abGpvGP9rHV4ZDKq5rH0+13Dsugb2zIq9oV83qTg5PHx
0xumXhqa/AN5DOKpcclpgC0/qtnXYk/JL42tO8dEjoIcK76evnukP/aQPsTe
jFta853IkvCBJibYMvo2u+HvMZb8KDge2wjPccmr8G3GYz/BfYuDP7lvWRKe
nA/sBXKYmxwK+ZNpTeehNiiN3fF9uzed5yDfQU7wiab/JXiy6diGGOem0nEd
+H+zpv0r+/dsaf+KfzxY+3JH0zlecr1rF9Z1/pX4ecvyP131r5rO9VyET87/
E1NU3950XoM78LKwb/sF/3UUvtvmH4HpTeebLm76HLJnyJz7230y/7fV72N9
az2wfGE8DL5Gntzjcg+Lb+L+Ff/EvLiPRzdmNfxvAXo4MP3JeyNLZIpuosPg
vNHBjdBgnYGxU9gE7mXoiw4Pybe458VvMjd85/davn+uFs51cydNvht+G4Xn
nIbXxb8NtG+Ss8P7jRMPs/a90mfd0jr2XGH7uVds1xdd9hszW8YIH0WH4b13
xnKHC02+C3yLXhHLoFs849eIYcCEa+VecaPMh5z7JpEJZ3lkeHKmR8TGgpcX
hefgtNOHPMXuydPOiM5zL7AwNo3/DLDz2C/8AvYCP4SvwBdBL825uy9nFhu/
KGd5WuIOfPSLXT4f17SM3fjP4eLEQcdk3zmP5CxW+J/7czbx6dPCBxwPnif3
AHbnW/hZ2uBJO9gNDMe/ENi5FxIjtyf2IL7gruC4zAFsS0wFviWOJJ4k7q50
c+xE3MTd+JlpX9Bw/nF6xl2esdT4EegFpe9b3yl9t4sfYY7YLGwTOI35Mgdy
qtxL3Bc7A0aD79aRCXkZ8gLI8oIV8qy6fVL+PSBeAneQ48XPkP9Zljtj7BP5
BvIOtL/VsMzx15xlckDgK57Zj2GxXXNiV4lRyO+Bkcgdw4fcBTaQ/3vQqymR
GzR9b05/dOSF6Ak6hW7hK+nLmGuiX09Hx8iZrJc5IDP+W0JurAP5Ips5sfnE
6eAO+pPrhAfrZ47kxMnVgDdofyr8ud+DZv7w5hvoAGu6KvJZGP0Bs6LPYBf0
DH43hidr+lvW9UHOTPecu8nRZ/wzsgDv4TOYO3u6ghd6O7/L8fGMljHjSfHd
1CeH5l5m7fgy7g3ANOCZ/qGJCw5q2bb9T8v3mOQsiCPAPuAh8qz0Yzz28p7C
OJv7EDD+WjXnuLh3Rx77iU8PvXtR7fdyN1QzzX0BeXR4tgU/9st8Dsld1c5N
25jBsT/o6ZDoKrnq+cnPs2bWXmn63w5s8AEt4wP0oHdq8mvs76TQvGfPJ6b9
zOCx84Kbjg0mOTf3j7sXxgzQyBBcMDY09m9sbCD/bXE+icmwU9/486b7I3/e
cb/aPzLn/wmw2OWl7Tt2fnmX8+jkYYj5Xw8NzgRvvh6a9XNPcWLyANzFoCfg
usdrPjvkIsHuvfJ+ncifmmfi0vbSfNpK2wQwM/iWnB9YiFh/esM6xHo5n2fG
Br7f8r3S2k2vjz53xS79OrZxh5b1fFTLdhAbhB1dqfD3iY+5tyEfTQzLfTm5
a/6jGRIdYN/vjw5gzw9vWd+6F17ry1kvckF2xG7kHl6JDLlnxf6RH/1b/sF7
kzxhzbr+dc4++XbO78ZpR/856xuH5j8S+vQXv87S374tGIf//Mhb858Q3yRn
A1/GYiv2anlv9m45P0TukhzRtMK5+5da/h+Nf/iw54cVxuKXlf63infcK/2i
9J30haXjQXQOfUPmjF3h1w7LfyZTCsd115Vu+0H+/Vi3MGY6W+1bi75L9FTR
l5S+h7i0dM7zsPTfvzDG/VXpuTCnnaLve+bfEu5px+U/lQVdxqbT1H9k4bzJ
Gk3fPU3O/dNnhe9JP0eeTeebHlT/3oVzLrWm17Rz1vVc/uOZx39EheO6r1u+
r5mcu1Tupg7NfyDkgA4JPSD3Vv1yTsdlzseW1u/jVL/f5X9GjymduyWHS56k
e+k8/kqqxxe2I78VfUfpvP/voQv7xd8xtrCPv130ES2ftwmqLyx8b/Ga6Btb
jtluUr1D4XjnFPS6sF4ejZ6Uvvupql4/2BiMPL9wrmFT0X8s/T/lfar/r7B9
6FM63/lY/O9Dpf/teLg0DjkqunRK7jS520R2rBedRJaTGt+2TYocBkV/0C/u
2rlX5X4VezAxPOd1+f+tyWr/ssu5+Kf4f6QwHnqUPHzp/P5fSuvQxNxTEM9O
iP6z5xPCk/8S8KPfbflu+dDcP4KByckQO/DPEbnIFXfLlzWcKwIfLQpG+jh3
mtwDH1+6z1LiJNG3gs9yvqGxA2Dh2xvGuluVxgonlm6bk3YwzILgEDA4WBzs
fgH3AqLPL/0/AZjuv1s+E7ST5+PfBeLjKWpvFMbj/JfEPTlzJj/JP2L8W07u
i3ql0OQ3yH2A+fcKjZ3snnz0in/y6Q9eIj9NO3ENuUD8ED4IPUPf/hn7s1PO
GnzGhBfju4cneTvic2LzXQvLnn9SuMvgzg95HNG0PA4v/W8l9yInkVON7NYp
/J8dNgecw/+35BOJl4kjXg5NGzR3c2Ch9WLrJpSW+RGlZU78ixwYQ54F302O
5Jv8ZHJEPSOr72Y+/PvJ92dlDvNXzEH0vwHltSu3
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.41326677318202637`, 0.4489435944090189, 0.5761307148067322], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmHmsldUVxS/c+3jX9333iyOKEFINysOIKCLwBIwIWC0oihij/qHRMoiN
UjFPbQDBuQ6AqE2aVIbGoUaNda42jYoMNmkrNVortbWJAwIKtjaFh2i7fqxF
+OPcs79zz9lnnz2svc856oprp13Tu1arHaqfuvob2mu1w5q1Wk+vWu3djlpt
gsZeqPTdVqstUFusSXvU39So1W4R/V6fWu2Qhuf3a9Vqu9S3ilrtpLJWm6Xx
4epbameKPkbjb2rtR6LvEt/ZWnucvoeovaj/lojfdy3vD9+9PEUfke/1km2d
2krNO1Dtbcn8tuYcpLGD1YZprKm9xot/f/EbU3ivJzV2XT0yaN8xmrtQ39eI
3lOaPl/73iA5Fon+qcZ76ftm0dPUz2o3PV/jX2v+BeLTT/0ZddP3SI4r9T1G
37cW1gt87tb8x+v+hmZscfgjw9jI8YDW/ED9HPQsPtPF80j1p2l8qXifJ3pU
0+NL9D2v7jOOCJ/xajM03qV+tNoVov8rfb2qea/UraMFah1q07XHQs15Xv2L
4nFq5n8q/n/VmqWav130h6J/Kfod/bdN7QmtnSdd/FlrVkqeg2O73fpvkHjt
1PexlW3CGPud2Mc6marvw8XzOa39Rt+bxecS9St0vslac5roO0W3RL+vNS8V
PguyramHT7vthYx/iZwn9fHZ+f/Hkmm+9hkv3peqHSXZXtfYVv13uuYMqNuX
WHsRPiq6VNuoNX+MH6GfoXXr8Pya7TMmumXd+1m7oGWdXFlYxq7ocG30P0X0
wZVjp1flsa7wJG56Ekc7JV+nvreLzx2a94zk6St6hPo5TeuN/mq1cZr/QdMx
hZ/fXpkmztDRTXXzx2ZzMv+UrIUfPsje+OC58G7aJ4mtKU3bBz7dDfOanHHO
y/rVGhupdkDD688S3dEwH8bwqQVqP4F/y/1U9TMSJ3frXDv0/+yGZXtLutyg
1i36b5ozTTr5EBuW9pNn1U+oWz/EXe/Ka2qV972qYfmJa+KBWOgv/pPrjpmJ
dcclPoNc89t9Ls5/Ts5+dt3xBP/X6uYFPgxsmIbnQS3v9VDhM7P2Pq15rbSP
4Wvntay30zR2q+T7RPMWauzbujGtL3bX/jeqPazvsjBOgpdtpccuUH+Ovr8W
z686LNtxiffRGh8i+rMOn2tIMAdd4jPY/Oex2+L46nuJkXkN80RHi0vH/IPq
Z5fmv1k8ryi9flvpWOhJPEwLBt7Kusq48FLl2L1W8y9Wf3bLdJfmfMx5tddv
1W9Tf4La3LpjjR4M+T7zRZ8V/eyp+/tc8e3W/G/B15b99ZnCsgwX/z+o31mY
7ukwXoOdt2j+rsI49fvSdpwX++21Y2h0hZ7wPXxhZHT1VLHfZ4dXziNz1X9T
WtdL9H+tZXssFz22sP2/Cybj+/jF7l7OneSsjzT/Uen/Hy3bnPHPxebdNo+T
Z+4vzBPe9+v/5e32a/LJ2PjuIvKO2uU1y3xz5H6wsJ/31tpO0d2ae13LfnRj
9ro5Ps/am3JmzkuuJO7AJvQ0L36/SjJ9T01/18a12bfROfi5LXE6SeedqFY0
vQ8+jY/tappm/775b2n2XBAZLq18xg3qu5o+M7pD9wsSm3/XGSapH6X+vsL6
xw7PBRPABniwlnz5dMOxTi2xWWPL2u3T8FuYfX9dGsPewZ7iuZx4TzxNip45
E+PojZxGXUJeeF5rKq3d3mEMm9lurJihM3wmemblsVkZnx0avuwBzwna8+HC
MbM552MN+x6v9Sh8aOV1s1NnkK/QO3YdXthu10uWewtj4q7SOASW4YtPle7H
Jh8R42D5zg7XatNbrh0mBO/uj67Q4bhiPw90xzhzkPGM6Ge1eAxuc801smm/
JI7mFs6rm7R2cbvH0fnU9tRn0t2Opv9jnP+hyffUENQSP6rsX5wXvB2g7y2i
+1eO9XHxQ2pEbLOxl+uLvXRv+/KgunW1pe66h5pna7BnY2qhnamHkOnt1Cev
N4wvYN4xlTG5TGyRS6jTjhWfzjav2ZpatdS8tZJ/qOg3S+vm2MxhH/aDF/UB
dUJP4fia1ccx9qvCmAcWbmq3vjhjvXKcPVk4z5HvGqkfqEumBJuZzznmpj4D
V58oHMtTxPP0tuBkb8cx+8If/KOuo64A58ACcKA7cUgMsv+G+B79W8EK/A8/
PBlM1livduM9MoDzyDGs8vgJlevDztjr5cJ1W1VZ58iHbG8Uro8PlMwr1F/S
Zlti342xEb7xZfCHmveL+MnAyuN/Eo81ku1orX2jdO6BxqbjU79RH34RHBsR
mw4O1nXGdshJ/uAcF4vn+ob9kHxCbUIuwdeHgDHtti/6QYfIvF1rZ2jel6Vr
JeiR8UPwBL8ZmpyI/+AnPfHJwZXrBO5ACwvbelvhs3AO6lJ8akj2XdMwvSW6
Hxr9E3OD9/lq7AV+4GOrEr9gJr69NDX55NTl4Mm5qYvgzX7wPyj3qkGpnchd
4AW2In4Zp6Z/tN31ALwea/fYEPHrbLouxgePSo6hjgF/P2y5hj8xPgluvRTs
oi4Bj/7ZMr/H243FA5r+3kf3b3pvzvRIYhaZkA0fJuciM+PIw/2RewIxtTZ1
+7rQxFc3dYDkGVX4nrku48TNSZGTWmJHcOyh5AhyBXU89eru0rJ0Z18wDnlW
aPyD0n4EdoJ5A1JnMpc12OdL/TdY/X9K2+Sc1Ntr24zj0OAfMYbfgsnU+uT8
61s+39Dw4P5FDQyOjw3979L0bYX/R/+M/6Jh32Vsh/T/lfaY3PIdYk7uEeSp
mclxj0TvT6dOJb+QB3eldr9H/H9TGfMvrKyzRdEbel0fW1DHTYxs+OWUunM6
ufDs8ORuTL6andyLXdHZBx3Wy6nUlS3f1R4rneOop6gx7st9ge+vgu8PJifj
s9T83McYx17EIr5P3d5o+d2j3nJu3Jy8yXzG9+aKwtj0v+DYoGA1+IPPINPA
wj0yooORsdfoputI9Lcs39CMjU59ic1HxQew88jc76jxub/x/nJK7APmXB1/
YA533Emp2SaGJl+gH+ow9sTmI3LfZM+u7It8p4Qn9W1P7shTghuHp9aj5qPG
ZQ77UEddVVlXsyq/wTydNx/edpi/NPIfFhq8R1YwvyUd3SndVi2PFRmflDs7
8i9r2H7Y7qrSPtM/dxBw89X6/rvHPt6trAUv1uX+Aq6AJ+DW8tSCzOHNBV/c
UfiO8k18BdvtSP1DvuTexL0bnANf5ucdgG+whVwBnoLZ+PyQ4CG81uU96oHS
c+eW9pfh8Rn8aFh8iRxJrlzDm1Dh+KNehsf68AELNzQ8ts/e2KJf3qxmqb+8
dH65LG9yy7K29wGOE2IEf8K2nPmC3E9fK4wPd7XZX9DZgGAv7wqLkx9m5r7P
vR9ZkAl83NLyXheVvp/2a+733355Z5iSt76LYiPWrguPAeFDHtuUeun2wjgG
nh3Rso6XiD6y8N7LS99DtybnUhfiw8T19NLnvbD0/fXa2PfV+A9+Di94dla2
w8rYAv2tCM2959P4MHXZptS+W1OzkIOeq1xfPRVf+jbY8kLeiHgrer/D+v1h
aazC1uTiZ6mPxf93hXP76tQt44Pz4D13HeZQY5NPBuZtEN98sc3+STyRs5Gb
9wlsim8gz6F5l0M32L5v3oUOD7YMbZnP8S371e68J87J28PenNjHeibWyB+r
M059si36h9eh4b8148QoOb87eR++u4MzvJkxhvwnl867j0kfV7dsi9sq2588
R+5AN6uin1XR1YE5357o/F+l55NjqUlW5X6xJHbBD9oq65/6dFHeTHg7eSX+
gWx3FM5jvF9OKq1T3n4uS3xRx/E+tzIx3BU8B28RkHcSsGp3h2vie0v7D3Ux
8twZ/i9X+7EVey1PXP2sdI56Jeei7jgjuZI7MvFMLHP/WJ47Am91HXk360k8
cJbO1BLU3ch1dN5wiPUZiXdq1Y9zfvLuu6ltuhI/n7eM64clF3C/4L1yWPR/
SHwM/e5JrG0q/Hbwenx8R3x4ampRchDxxzmxD+f4JH5LbcL7BfX5+vTgGLj0
aOpP3n7OzPtPZ96qqY3Xp5bg3f3/GSsVMA==
         "]], PolygonBox[CompressedData["
1:eJwllX1ollUYxs/2vu9cnud5oog+zEZG5hJXNEGz3NKmoU77mBPJ+sNWukmk
prQycmapRX7kRwZBGkRpIVYupv0TLrMZREEh2WxkoGm23BZG28Ss38X1xw33
fe6Pc+6v64xoWFK3uDiEsBHKQ+eSEBYUQngVujwNoRiqzYWwEjkPn0vND0L/
DA3hOPbD0U8aEsLkLISxMYTVBBzH2XvonoDeJvDdyI/Db4G+Qj4CDcP2JeQW
dBPxvwf/buS38o7xB/wZbMqQ67jvZ+SuxLzu7ISvQb8V225oJW+7wFk59jXo
N6BLoYGiEEYTfwLxD0DV6FYjfwbfi/71YufYB389/jNzPqtGvg2bImwHS7gv
uiaqjXI6Rv67VC9sK9E3ozuIzQ78T0FT0c3Cvwn/qYqJrpqzZnz3Q+fxr0Ru
hO8sDWEV+o9VE2x3QwV8q9AvR9/Hnb3YV6B/gfs6iDkf/V3ceRjdNOz3Jn6j
3toP3Yx+fPTb7oCewXYiNsvyrqlqew1nJ3PO8Xbse7gjo167kR/NHFOxN3Jn
Ffa/Y78E33mc7Yh+s95+JfaV2B+BtsLPQN8B/xz+e7E/oRnAtjZ1LgfRz4DP
oFeQdyI/hu2n+LTg/zxyK/y/qlfBMRRrErQC/iJn/bz1UuK3PYv8H/zL0Kqc
a67aD0Ouz7tGndivR/4W+5uQD8HPhTajvw9K4b9IrNsEXcXbvtGd8O3oL+Df
TsyBUve4gK6BnKrQV6Lvh98MHUU+zf0LMvdIvXoH+yeJ9xRyeal7+DT+p4j5
EHvXhk8F+ofx/wFdBfJh9GNS67QTDYlnRrPTBr2I/B325+htN3QDsaepPzn3
aDr8G4ltG4i5Tblj/ye2kzkrRb5aM8d7mpDHIj+Quvaa0QdT77h2XTVX7Ru5
4wz5jEZuQv41NT8dny3EuoS8Kec3fIA8Mrq2mjnNXh7/r7Ur6HPwp9EXX+aZ
eQS5PnVvtQOz4Zcmfrtqptpdh31H3hgiLKni7N2cc1gHvzBz7TUz98Mfit6l
RdhfQbwu6Fb4KZrpaMwR9miHy5AbiTkb/b3oF8L/gv37Je6peitME7YJI3sS
z5xmTzYnsB2HTRd8D+9pI/ae6FzVozLkxVAturns2CfyT92L5dh8iG2C/kds
f4IOCI+Qz5Y4Z+WundHu6Gw4ur+JMUq15WxtNAYLi5tVM+RdmXsrzFuHnGWO
/Rtv+Ai+j/6eLxhjhDUnoXkF72TKXXXYrBjimT+O/y2ZsUWYOhL+tehaCXP7
8V0fjb3auUHkOZmxthf/ds124tyPESPNfCZdN7QPeUPiXdOOalf3Z66leqxe
z9G+5z0zmh3NvGZfM63ZfjPx3yIM2y48iP57VKO/kNdk3kVh7trMO65dD7xx
DHIO+xuRRwijEtdItVINVAthlLCqApqfGFOFreq5et8drdNOa7fLNYN578Qo
+O3Rs6gc6pVfdC3Uc/Vef5T+KvlcS+xlqXv5vWYEvgh9TfAOFcPPTD076uEs
+J3R2CxMO5saw4Xlrcit3FeROVdhvrC/PXGuwjBhWUvqv0t/6hT9JdF/qzBp
AH5N9KxpR87juzQz9utNR8l3T2Ks/5J4E1Tb6F3TH38R3fjUf6F28E74z6N7
L8yv198RjSXC8CLlkzh3zaRmc3CosVaYLGxuyvzXCJMWwe9LnKt2TLv2P0fT
MdE=
         "]]}]}, 
     {RGBColor[0.6104446219700439, 0.5182393240150314, 0.4602178580112203], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1V0tsVVUUvX19977Hu+dcNAE1RUTDa4sRMIYwaNFiSwJqRIGBDKXlY/gV
hJigZSLKAFoSEyEIlKpghPIJ6AgHWiBhAC0fBWkLWgUsLRJNBKS0CrpW1+7g
5Jy37z5777M/a+/3VM2KObWpIAheKQiCQuz5JAjaceiMg+DtMAhWYdWB/owP
govpINjtgqAPayXoG8EzLRsEVVhZrMpC3SF/v9PdevCsDkXfCEVHsV+GnHfB
MzUKghex7kJ3M2gdWG+C/oXTeRLutuJOH1YdeHZmgqARqxUydkFfdVrfimDb
46B9h3u3sZbi/CHuns5IB+WvBs9EnFdh3wmesbB1DXi2pnWugt4NKb2B9k/E
3o5vswLZdtHOlFeBNRLn5dCzGzoO4FtRRuf3QL8L+SvwbQPkD+SCYC30t4LW
E+ruG/j9aqL7f4M+BXwN0L0G5yNZ6aD8euz7wfM6Vgl43gFPLXh+g8w8dN6M
5Q/6ZS7sbQt1pn8YJ9r8XCy9jcZzC/ts/D6Hb3dwvo2VYDWlLaYp3Sd/DDsf
hg1j8Pse6Isi+ZsxOZkSjXF5H/QlkB1iXYGc6YXyQxn2Jbi7HOdloc7rU9qX
Gp3v4btKYeeuSH6rxTqGNSeteAzPyNbE7OWZ9jM+zRaX3lDvpG9nxPJjPXw8
Gff3WV4xPkVD8crKF5QzJJc5QN+QPinQvWa7Wwz6Ddh5JiUZizOKGd+7JtSb
mcv0AfONcfsiLTkj8MaZOI90ou02+incH5aVD1emRM8HomWN3legcw/o171i
XIH9eKT3MqZ/Wr2wbjLYI6xSyDvilUPfYF+YyMaP4Jsd+L7YYsFaPGD1uBbf
NoP/BPj/cuL5ALRa3MtlZe+j+PYx6BMS1T5t3VOgPWfnkrRiz/i2gHe2/WaO
lRu9MZbt3ZD3UEYxZh78Dr3zcecm9n/snf3Yt0L2Qssz1mti8aJO2ke99D2/
02eMVyZSzIgNo0Ll7LhYMa5MxNdqOcxcPmXn6aHukP869nwoHX2x5NXEsjcx
m7vtO+/vxbcT0PvAq1ZOmsw79kbmG3e+mXX9vFPsi2PVWU0kOeXmL9bjp2md
6bf2nPJxOOR3Yn0O/kvYHymUHOZPt8l5IpQ/6De+03v57Bp0tmB9Scy3t7Ae
aBvrhfnB3KAO6voDvCO8cuoYzt5J31ynWuFdvmW0+fkM5Hbi2yycfzKsJc7W
4f5O6DsMe3oh75O06LSJtTSjUHnIXJpmNcA4jg1lK3FhEFdTwkjiO/G0LaMz
626HvYF2byrUN9LnhcJ0YsWvacminPOGN8Qr2ssapB9ZQy1WR4wt65459p9T
vT9wyiP2lHMmj3IpZ8gmYlF3RjqI9VfT4qkzG64Yf42TbeO9MGq52fM9fjdC
1g/YD3nh7GEvf9AvtIn4PNp8PspicNJykvEfVqB9jPFkrV8TT6rMz3wX31tl
5/Wx8PqOk668yWGNUA7zs8H6+oATjXZQPm1ijbDnDfVFxpbYU2T9kf7Mm/2s
0WKL72iTQz2h1TFjt8fkUmbe8oG/L+aEL5Phk21e/Wk788or57din+DVK9kz
b1nNEXs7IP+C9eKGSLEk/RDOX0XK78tWmz1461LD7mXYFznV5FtO2LYjUs7R
h8Rf+rYsFrbucZLJnsp+OoUzC3gbsa7llI/nc7pHGu/Oc6qNauw1oeyvs758
yGwjPpQYJpzzsuGsF151W7yIAd0Wr/lOtbHA5pBes2evUx2Uw97tTvm/xAnD
eq2fsudQ9xC2XDe844zQY3KY76w38j8GOzaDXpYof/dZTXI2abOeNcd6AfGt
wnoZZx76hrGhLMaTcx5xNGu+LTU/0Ae0h/R28yf5OBMy/8cn4iVufeuE55wT
n3biGed0l72M9+cnqtUF2K9av2bfLsXvAdgxLhGWDs6jBZrVmNf3nWYB5jZz
nDlPOnGM2Mb4MXabbC4YjC9o1Ua/az2edM7IleaTFuvjzHn2ZN5hrlSa78hD
f2QtbzhTsccSt7nPNgxnjyL+sk/xrVnzITF7uNVDo/mbNjTjPV3g2ef0H4C+
mZjI3pmWh4wR48s4nc4pbgNe+BFZ/hPP5tkbu3KK1VnsryXy16JEvXuYzRXM
cd4hf95yjDncbzPAfexbQuml/hteddpkc36b9YKDTjhb7jVHtJvcf73yjnMH
8ZizZq3h8nnDW/r1s0h5WWGz1lSv+BMr+N57kWq43XzWYTn/bCL/cj467hS/
eqdex5qNDd/u2UzAOptlmDPT/oPw7dRzwnCJvb3E6oRzG/OrC/K/xlpHnMJe
nMimkkT1Rv/4WP2Fdc1e86RX/PkfgvjPfONMwnl1nc2srInp1jsGa2koJ0L5
f/D/SKK5ui3RDMG+3eQ0SxE/LzlhzhjrPS/EisVBy6ljlt9dNtdvMGwlxnIO
6vDyf7uXj7dYrOknYjR9xR7IWZC12JnT+4pwt8xrftjvlIPsGaydasPSxKsm
JluN1Ngsd9QpToxXA/afLZ+Z18S/G4ZvjENTpNo6a/m8Dfy/eM0DnAv4H486
+3PKjylWm6yx/Rbrl71kvoT9Ry+ZF7D/D4ytBek=
         "]], PolygonBox[CompressedData["
1:eJwtlUtsl1UQxa/9P0r47v3iRgVkIVooRqhBxaRFg3FBMUFBNixcAC2tkRap
FCJEwPggEWnciJaHgKBRBKJgYqIL5ZGwkiDKoy3VqhiViiUB5FXB+Ds5XUwy
587c892Z/5n5j2lYPPv5ihDCCqyITcpDuLUyhGUc3pVCeCQL4VcCv2B7Ygiv
g1tKISzELoI/xnqJHQA/TP5NcAd3n4PjKbjOgRuJ1RRCaMCfTM5+cC34IfwB
+NYon7MLxF/E9hTNWUvsZXKmlkP4clgI9eARxGcTO0h+9/AQRoIXBb/pEn5O
/gbij3OW8G/j7EnwfOKruN/F2ftlc4hrK2f7wJ9hfxK7g7Oni37jKfiXgj8B
d2EPZOYQ1zysn9hqcAN+J/G54BNwbIVrHPhvYr3gHeDj5LwBPgWuK/gN3ck9
UC905yT+a5l7sZn7jfAtB99TcA1nwIOqidoOkf8vfvvQ+3Zhy/BP6/3c7yDe
xt0F0VxzudNFPc+CtxXdM/VugLNOevuKegBfHzaN7y2H42f8OeTcXnCP+sHV
mbWhN20h9l90rjQirYwHz8ffAWcleCD6292cncd/Bo5KuD66hR6Dz5FTVXQP
1cuFnH0A/hBrwX8w813VqN9iFPYSfEvIv44fiU8hdg3Osejtbvh3E1snzeBP
Us+H7qtXn3JW4u2vEv8c/wviJ/AHsWruH+VsMvHN4GP4P3JnFnxt1NwbXZNq
aya+kfhBzqqJ7Yf/EP5Izt4p+U16Ww2cXfC9zdn9+G+R0w1eDx4hrURr9RLz
0ko8ZY6JQ1yt0b1QTapNGpQWNVN/EZuQPFvq4cRkjUlrv8PXmFsD0oJq6CF/
X3Ltj2HTid1M1tIcOG7gn8a2l61RaVVv0tuOwb8t+o7uaiY1m3uTtaOeqrea
Sc1mn3oerUlp8z1yvid+nPis4N/kPvCR3LMtTf803DtGu+YM9mjmmdRs7sW2
ZN452j2t2Bpwc+5dI8024XeS31S2pqXtBbl7sYj8GfKTaz0C/gP/XezbCt/Z
gL8us7ZewK7xrd1YfcE7bQqxMeTMLHlHalce5Rt3gkdjX5PbpJ1S9Iw1R3OI
q10zyf2vkrUpDnGNy61daaQKf1d079byvZ34E3NrRxqbgH+d761kdvrBV+H7
Jvrb07AWzV9uLUtj0tp5zt4kt434VfCmZO2qZtVej50ldpizncrNnKsaVMta
8OKSd5h22eXoXmpHa1fXZX6rcq5oP0XXqm/q2x3Rs6E3D/L2w3CsL1sDv4EP
RNeinaDdsBFcFbwDNuF/lzyL2snazdqp2q3SaE9yzapdO+de7aPkWjTTmu2z
ydrJ+H5t9I7WrtZ/xDz8qcla0Df7eM90cH/JPVFvtOO16/XmlZlnQLNQA25P
5hS37jwBXpIc0w4eT/4PydrXTtFu+ScOabfC/311yVrXTuvh+2Mz7xrt3ETu
/xXMEqs=
         "]]}]}, 
     {RGBColor[0.8076224707580613, 0.587535053621044, 0.3443050012157084], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFV1lsVVUUvfS175V3z6kfQgeIRNSgCCZCwKg/iAnRGMTExKR+FC3z0MHE
KKZAWocoMnz4UwQEjfEVZWyRRKuUBEGLWApWKa2CQcokavQHNA6Ja7EW8ePm
nHvuPvvss/faa+87dk7j4w1FSZJMHJYkGYynipPkNJ6lmH8dk6QFH58LSVJV
kiTn8GQhtwXj23huwIYhry/G/Oms3r/Anj6Mm/G+EGMn5TGvg85G6GqD/h8x
7sP6IOZLsF7AeAzPdMxbc0myHs8rRdI95HOpp9Xr96VJsgrjMuhJMR8N/fNh
b5dlaqBnc5DO2/H9dD5JbhueJD1lSTIBtjYV6axPbN/LeD+B/fsxn4JxPnRU
4ZkG2T1Y68DTDJkpqWwuQPco2oVzL2K9wvP3YGcH9r2K9yc4h+yLmLdjrM3K
d92QX5VK9/c4662g+9cH+ZUyEL3mp4J9shXy9ZAfDvlng+IyKZW99BXvTV+f
cuyy+DYC7/sgOxL7erDeiD1jSmFLTrbRRtr6Kb4NYhzIyTaeP+g5v1Ge9rdB
zw7Mr2Dvzpzm1LMxSP+GoPVdeFZndNZNeHZbN3USM9TFtTrrowz1cM79NRnZ
tsv6T3r/UcznZvXOOe3jvAnzXxHfHMb1Uf6+ZjeemZjXQmYyfFKdkS9KIXc1
COf3w08LIPMuZLbbLt6TtnGdOKY/h3LSMzojXBAfxB/9124fEqf9OeH/gyC8
D8CuWTmtL/ZenkWd1NdbLNuoo8P3zaW63x3QMQH32Qu93+SFUWK1znm60Ljt
c+yp86cgfK+EjnFF8hf9wjx4skRY+go6W7HejXFjVtgmnh7CnvUYm6MwQLyW
Y1yRSid1/45nEdZeSuV76qf/l+H9FsicCfIDuYD4q7AexupskA0vQPZmnLEN
80nIx9kYnypRTk7M6J1z+mS3sUebaNvD2LsGMj9nhJM89j/DOEL3Za9fSLSP
uGIsiUXKUP5gVB7fzXwqVn4SD4+UKd6/Bd2jzXl3Kci25anuOs/+nI73N6Cn
Cfo2RMWLcWNsFzgWK+23kdDRnJX9zJ0DkH8M388ipoejuOo85itgw1rIpxiP
54WLTdh7CHsbioVJ4onxr8T6Pdj7ANa20uYobNYFcQL5YLYxXygR7okd8l2N
ObbT81uLhTH6/lGMM8wVxAW5j7Y2+506WzznOn1CnBED5CGeTX7uz0u2Ighr
XT6rJStf0IfPGzM3BuVBwbnwse/CO/VEYXxqqjOJV+r9JdU5317n/KxsZM1Z
5HzgOS32ey3kL2F8JwpDXOuIsp1yjAv3LHJOsV51+i61iMc53G0Oxt1RtpNv
yP/k/sNF4qqdzl9imtgeC9k0yJ8hSAdzdYF5Ysh1k7y4xfWUmN1hDup2nn4Z
xTWMNWslMUi/E3ObjOPU+TRkjiI2ed/CMN11Z+Z/3l7t3GGuXPb8qv1DPzU7
prwn82aNZYaXaf5hqr1rnGuMMWNyDDbsivJ5e5RPyOM8j7V3XansoL8uGjP0
zbxi4ZP61lrn+0Ecty2ottMO6pllHuW9yJ9D5lBir9V1cCAqfv1RHM86y3zk
+Qez8u2kqFw4GpWHxHIfxjej/Nsa1VvQ71eCanuF493h2kLe+AF7jmJ9WlR9
rvc6/TrO+T7bucUzzphfiP07o/JrfFS8eCfe/bWgevJHFIYY106M+Shf3YXv
M8tUg+aVqR/Z7j6KvEn95K5+++G7KF/THuonxsa45q41Vi6Yg5ijJ/Lq+Zjn
7DVo12HHiz5nTSXGGMt15ljaVe/6Sr7pcUynuKeaGuUD6qQfFhsH1H0xyEef
RdUK+rncvu72uUN58dTnkLk3yM/EPvvSyhLp2mPsEYPLo+5GTl0axGdLMDZg
z2rIfITvS1Pl3P4g7BNbtGdumTCzynxe5d6A9WiM+5nqVHX+SNA34oT+L3fN
Yx/YFdTH9cL2va5bzCGe0eRYT3NPQHxe7yOv92Dl7gMvMJcwOR91Hs+9kqqG
kfOORNnOO/AbawXlyf3kmVnuSQaj+Izcyb6TZ7+eim9qzA/kpBHut/+Oype/
3FMdyAqXjD/rBH1KTF12zp5xzWLtqjG3UOc/UTXsX4x/RukppIrbKMeOPqxy
T8X1KtvA/Cb+meO8V7X7t1L48RjrSJniSZsmuy8if7NGjnd+HYo6p9JxYU0m
lpgr44MwQCywxzzpvrfd9ZZnEcf1ng+4hyX3NjlvH0zVl1OmLRUfMAeqfc5E
/2/McE40mo/b7J9K94ono3hmlO281i/aP+RR3pcc2OV/EXIubWww51Af48W1
c/YhdbSa0za6rs507I67/+vFONl8SF7s9Xofxv8AaZLlUA==
         "]], PolygonBox[CompressedData["
1:eJwtlElIFVAUhm9v0t571xbZJjdNNGmLLKFcZAYRhBG0skU2aUQ5tKrIIK1o
btGiTFMMwiyjQQuaTDAtGrRXmpmR0Zy72mgz9P2cFgf+/57xnnPunbiubEVp
wDmXj4SQr3HnNoSduwDZCj6FZHLeAK8Fn0Eygs5dwybdOzct5lwiZPpSdLvh
G9HVRZzrRd8XdW4V/rc4y4S3YTMG/3r4eHg1vEv+8AS25fivBhcgX9BlwwfR
v0bOxc1Gtt3IG3AG+h0B8xlCvx2+Mmw11cHLkWZwCTIPPBX9E3ATNhPInwXf
E7Cav6HfhJQFrKYa8HNs9sLb0PeB16U49zHJerQU3Bu1XkzG/gO4jHjL4HlI
P/6z4RUB65l6l0yMyrDVpNrOoi9BVwiPopvOWfco69EMcDGSFrSaNoMPk/Mi
vAq+BN9apBTfTvr9B/+x2EwKWk/Um3fKEbKzbfAGpD1iNaiWfqSY+dRz9hLc
Rfwpoy2HcmmGmmUP9pX4PoLvIvYJzh6DE0gB/jXwp+AYPkfkqx3BPpv8W8if
hj4Ws53Sbg0gc+Hj4OnY5hIjFXzPWy91thN9nLPFIeupensQyQnaToygWwQ/
FrCc5d52ULuoGWvWJf+5elAWt5loNoeopxT91ZjVqhqj1H6aGEMBi5mLbhi5
H7CzEfCsuM1KNcUUO253aSXmHHwXIPnEu0T8z+DvyO2Q9fwH+Kf6jb4D/hv8
yxs+mszc2Z/r3mrTm3sLHyb+AXIXsXN5KWYjW81oMGoz0Wy0k2vRX8G/Av8k
dugyuMfbbLSDz8APvc1Ob/IBuJH4C4OWY75iEXM5uhZizkT/ydtdtGPatbve
3qZs2hUbKYzYzlaDjyNrItazfOyzvL0d7cgLYsfh+8LWk/3kvuntLWrHb4A7
veXWjnWAm73tuu7UAn7lbVf1JgeUW/3CN8FZMvf/6+0tqMfqdVKK6ZRTuQtT
rJfaofXgVmpIDVvNqr3KW+90p5PgHG9/jWaq2ca8/SV6s43cr8jbbqsG1aI/
TX8bR+4OsZvi9nfpjZ3X2/b2F+rP6fK289p9/Vnvwf8AFmzG2w==
         "]]}]}, 
     {RGBColor[0.9167412651032075, 0.6618531627580188, 0.3418979218199432], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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

         "]], PolygonBox[CompressedData["
1:eJwllF1Mz2EUxx/+L+n/+/3+Y142NlvEkKEopdnCsHlZrC21paix2VAypMJa
2ly48xbLhbXlZXNhy8ZkFRmRTKV0hZows7EhLn2+zsXZznm+55znvM8pq8gr
n+icK4HCUFXgXHrUuZXQGs+5E3HnWiY5twq5FmzEd64w4twRjCrgi6GLGObz
dhT9evRvo3+St/Vg6zyzzYJqsF+MXI3tTvTHwDOQt6N7BfwleCtyP3wflIgv
j7cGdPNDzjWBvfftL/mQrzfI08C6Epzbhf4h9JVQDz4r4aO8vcJXO/QbeS80
C/7nBHxj74EPRC1H5VodWO7KQbk8wH8zupP5sw2+wDN+NdSNfNC3WvTy31X4
TOgAfB14Ar668JGNPE6MI9gegwrAdkAf0PWhmWDJ1N6D3w1+iP8zoOPYV3tW
qyLoI/g13irBeomvVBhvF/CfhI8i+IfQdHRfEnMU/DDyTfBBaCnydeg0eD2U
iK/xwGqzD/sN8M2+6d4HT0Ve4ltssokF9qf+TlNO8MPguWCbkKf4lpNy04xU
gXfELfchaNizHqqX+6EsdEugS9gWo18D1u7Z7JyF8sB+IaeGrSaqTZNvtb6F
/uuYc42+9VoxKJap0Naw1Vi1/o5cT3/KmI/NxDKITRvYfHTG4OvQSSOWPbw9
Jb8X0GX+2gaeCrYIOQW8FTwFPsez3mhHtCsJ+GwI2UxNgk/T/oTsj+WBxahY
Z+PvA3wyb7cjtjPaHcWgWBqx7wZbAN2JWE1Um3uB2WpGyvm7VjGFLMcv4M/A
V4Qs5p7AaqbaaebC8KP4nwt/DvwReAtvWSGrSbr2FcoM2Q7+AOuPWa6yke0I
lOsspoWB9Vi91sz1gS3D/tREq+EMsGzfdks7HKMen3zrrXSkqxnTrI3ythG+
N7DdV81UO+2Udks9/4n+H946o1bjM2DPA6uVclbuuim6LdqJteiXxa3Xyqk0
bjdBt0E3YR74VygpbD1QL7751nvtiHZFN0e3RzfhLrpDvG2J2I0ZgH+Czfmo
zYRmozOw3VSNOuDfejbr/29O3G6AboF8DPo2U5ot+ehSPzzbBeX4V/OHTk7E
drjQsx3VruoG3kB+HFgvNQOfdXs8233l9A75t2e7KR/y9S1mtdZN0m36B95m
wW4=
         "]]}]}, 
     {RGBColor[0.9482393240150314, 0.7405983100375786, 0.43954190444659735`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFl01sVWUQhs+lvefc23PORS0RExNI+Vcj/iTqwgVtQk0pagxUQClITIwL
g8o/mBiNm8LGKIUYZSOwcWFgJYWWf8EoK+sPsrFQBGJKTVoF3LhwnryvcXHy
zZ0z3zcz77wz37ltr7617M0pSZJMryRJU6xZLUnSeM6G8ul6kqyP54V40V1N
kiJLklmJ1tLy1li3xLMvbK42ab0e+vfCPrfNrlh38sS7/kz7LzSHfZokX4au
NWxej3Vq7DkXfu8LOQubx0J/M1McxNCoyqYpYn2mTJLRkDtLxdBR1/n4Jbau
WFsyxdAT+rFY+zL5urdIkufD/yN5PCG/FvLCWF9pKM+fCuUPDtsqioWY1ofu
ULx/N9Zn45yceCKHC2GzsZB+PNa69bfj9/LYdyV+VytaRy3/GHZLQr4Y67lc
OKwM/5uJMfxOVOSfehysCJ/MdelwjQ76TPLqCbkW8r54Ip1kseWySe932mZW
rjxWFPKDHl//1IQj9fs13s2MQ37PlUtWVY7zAuPzYVepqObESq0nK5I5h/1b
rCcf8jof50yEbtJ15zzOPRNxLC7Emw/CtrnQ/mWxHkvlD19rQt4ffr+rCFNw
B4dPc9X2t+DACPU2N1hzx9wW/haEzfYp4uGdmnAgxq3mJLiCL3gSY81xLjGH
qOFlcw873sMJcPy7Zn6Hvu696OFdi/mPrm5OdtbFZ3CZVlMc7F1QKtbRliSZ
3ySZmOE1PrA52VD8v0TeM5tUo0Vx/lCh3hiMdXuccyP2rcuFKdjuCN3e8LMn
E3+pV7WmGnU1i//wezje/5AJZ3qUXgCH3lT61bGOhI+e0G+O8/ubJW8Kf1vi
d1ucsca83pkq902OdbBUvYd9/p5SdV0R7zur4itcBf8J40vvj7lnqTs1px+J
g3OQJ/0bmfo0PEOIGT38eScXB9YW0o1n0tfMSXyh+8P6o6nkgVTvJjyLBrwX
n2OOj7mUlerppwo9yOMtmkPMI3CAp280i0vtEc9H5FIK44dT4XytlH0a64ZS
+rdL5QJW4PZkoXOeKMShm8aH+vTahh7tde70wdpU2C1zf50M/x+GzeGq5hjc
QN4WNo+Gv8fD5kDYzgl5bsj7PSummYfE3u75wxwdiL3PJeJUu3kFz454VjKr
qp6lXeYanGEuMb+Iv9Pz/E6pOl52L9Mf+GW+DPhMfI3Yhn78vFDsD+SaZ62O
k/cjPqfPXJrwnMw8f6gB+SzKZct5Z90/9NEt68GQuQLvzpiH5Mpe8u1uFs/p
2e8L8Xl3nD3cIu7cHbr7S80GZjAY0D/gMLtU74zlOrPD2OJzxLPupdg/I2xW
FcKzw5ji/6rvXO6cuucevVRzjt8W6omVubgNj+Etcwj+wCNwPWRsb0U8x8Pm
YC4/7fbFA/fJ/Z5COc8N24u55tpIQ7yEn1+E/FDol4Z8uVD+4HDJ70+k6oWh
VL5a/Q6bT2L92X1EbzFLut1Ht0vN77QhbsFVOExv0+PzS9UAmVzg15DPBxvm
CJgMlYqfPE6W4v+8WD9ONXuZwXCk5vuUu5B5e7wUfuAAl1YXqmNvIf7ij/hG
c92pX0ecPSGv48yweTFXf+4O/Sn7O13qW4ReuuE6wwtm+6Vc8/9UQ71IbuTF
jAU/MPoq9vfFOUdK8b/PPB/zfEKmh1rdR/Aa3sCxuwr15MuxHghfg3HOn6W4
l/tOnW+/xDPue4D8+33fca9t9lyEh9zHzLvPcs2lYe+ht87ZL/ykDsyr3HOS
PUuNPb7oZ/r6RKn7g/7aGLo5ufjA99oq47UhF2Zt3ku8My1zJ6Gnz6gDvvHL
NxD9ODv2fsMdGTG+nwszagxufHewB3s4std36D7fWXCD3mEvfIQjM+y3zfkg
L8z1nu/EB50Xc4t67fK32WH3IHz+KxdW9C41Oeqe7ff8pE/QHfOc5zt90DaT
pfT7c8VZ++87MBXO1Iv77aj34ueG63KtEP47fGfCSfjGt8Nc9xR1u+0ZONU8
4Tc9PeS+bvF393J/L/X7mwosOx0P8xEMl+eyX+IeB78uz0Z84hu8Sv93IP7r
hbBlxvB+r22YJVfd7ysakqc3tK8/+z/3cd/v4M1+8sJXt7+7yOOKe+xfAeqK
9Q==
         "]], PolygonBox[CompressedData["
1:eJwtlEtI1FEUxm+jM+nc+x9aVVAkQ+pI0Fgt2rSoQEMNgmqyl4EErczM3gZR
u2oTlUWvldaiRdAqy0bHIG0RBEk1RZChmFC4sDTbtOj3cVocON8933ncc869
6YMdO47EnHONSCmSDc4dQmlAFqEPpZz7U+bc5nLnPqM3e+cOJJxrQboj5/Zw
dnmhcT5hO4xcwtYYd+4d/hk4NSXOpYlXg74cacBWjs8afLPgPvBTpBZ9FJ96
9Fb4OW85lfsU/O3o3zk7TsE5OGPBalAtI+Tfhe0WZ2u5xwz8NvhJ8NISu1Nt
sBzKtQ28GDwOp534G5Ai+hwxpog/jMyi98G/mLCaVfsskgcPIg+wn/BWSzfx
9hNvOulcfAFxOdsC93rKaqsm/hv0as4eY7vCWQe4P1jf6zh7i76EswliDyBz
0X8ffPvBP8G34bzGYTW4E5xAzsetxifoX7FvxZ7mziep7T24KW4z0WxUs2pv
g7Ne90/abK5xNoT/fW+5dUfddae32jQTzeaHt9iagWYxAKcC/wqdgVci7THr
uXo/H1kvcvTkN3oXMoHtKpxN3nZAuyCfZdj2Bdu9FXD2or/E/pde3QOXggfh
nI5ZDwvoVUgT/Crslehj8Ovp1yPwMPGLwXZRM/mA/iKyu2awT4IfpqwXOfAd
+D3eev0MmYlsJ7QbilnEdtcbVz2fxN5LjHXgc9SUxTbiLbdm2Izv0chmpRlU
YjvmrVeqOY/tAvhmwt6A3sJub7uXAueJ3RJst7TTo8xqOlgu+bxSP8nRU2Zv
8gb4F/I8YTut3U6krPfzcAroU8F2X2/yrO4brHfq6SpwwVuvNaO6YG9Ob08z
GMeWCfY2lVO5N3qbpd7MGXJ3epudduIL3C5vvdZOfgvWU/VWNfZi++itNv0h
+kv0ZvV2tePa9X9BcZ/C
         "]]}]}, 
     {RGBColor[0.9797373829268553, 0.8193434573171381, 0.5371858870732512], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlkuMFVUQhvve2933hu5zIZqoia8QARMXwsK4kxgG4xpGiLAaboQNRAJG
GRdiIis1zkvjazWjgiTAahAwPBcaSdAgjLICzExmKSBzZ0v0/6jf6KJzqqvr
VNX56686vby3e+PrzSzLGo0sa2k9VmTZb3mWrZV8spNlM3pyfZjqhjypta/3
ZbJZ0DrQDrtb2r+pyrLzcvZxim9LZTMo/UXJXck/af2wCP0d6R+R/TSx5HNB
+07reVP667J5TbZnmhELX/PKZ17v5/S8JZvPtHej9LMp/C2zz+3S/d4KOeUR
9ynLtZ418pMr5/1F7H+ujhV/eSkMiojzovwelvyk1q3WN/UclzytZ4P2FPIz
YL8XmrGP3ArZ5UXo9sv/cX1/tw675HxOGldwA5fk3O4qj9Va/1iimO3IjVjX
9f6A9Je09puBDVj9IuxO6ftEN/Ip9SznjPLf6oQdfnL7Ym3ZZovOMdkJ7MGD
vaPK40gZNsTlfIXtRy1zjhk9Y7JbJZujZexpNmIfMvZfVVGPv1LUZ6k5Q6zc
Ptco72/0/phsLtfBgY3ad6WOWg9K/juPM/NtWPnu0zOk51o3aj2rdbSIWsO1
28rjrPEh/qKeFXpvduIb+r718ITc+pbh46hrhC174B58pJ5TjcBkxHWnfpwJ
nm9RzhPSba0jXt+83dkOjB6kD7Q2ijjPJzrzota3u2HPmeDPNp+PvcTfZnnY
8pRjEhv95SrOvVCF7rb1BxT3vXb03EF93+E859qBOedYWUY9ODO4Dts/Z91n
eZv15ARmfeO5rh3x8AnXep3It9cK/MljibBYD57Kbcj9Qt3Bbr05/7jsX5a8
R3t+Fr/vST6lfbu7wa9VKXLoOZ+rtmVGLavDx7NaX6mCM3CHntjuPOmvvc3o
q6V1xOrW0Uv01C353y8cPnXuQ+YYtXimink4VYcef2C7mALTh5XjB3pO6Nsl
rdeq4CTcZBaecg53U8j0K33fM0+Jc8FzAy6ct7zauC1xT/TNZ3BdsAyvhtxv
9CNYvaDcduRxRnDtmTPUZdwzGLzgCzKYMK+Ju7mK+m53L9CvB80Z8CFncoev
5Pp0HX0Ll05o7afg2NdV7EFmJtD/+JyS/kYR85F+Au9X7XeT+yIrooaLxmHW
Pb4gH7dTzN8/U8w3fMAH5lbh2XUuxVw6S15V5EBe9N8x9yCznJlOnLkU/C+0
HtL6URm8Gi1Dhjdg+X4ZnBsxb+Fv6XsEPnMGzkJ9RlPIIyl84Bc/1AMf1Oil
KjgDd6bdh+SP/Yhz4B4EFzA54jsHPG8I90Hp9lSR17dF+AVb9mSNuLe4v55I
4bf2TKPOK4wte8iNWPg4VPyn4x1uwJlB5z9RxCyBGzc7gSn5UDfm2sVG2B3y
3u9S4F1qfb6OWlCThs/F3cRdClfwQ213tUM3VsS9Sc7MGfT0KvnR/2BI/J3m
/5x7gXi8D/l+GUtxz42nmFH5/2bIjP30fFeiZ99O+7l/d3ai1zj7Ac/S0v8I
9C3vzFj65IrONq73hxTrhyr23PT9Nmef+J/zHGSuXPW/FvfGuOchvM59d681
P96p435L7uFH3Xfcny33N3muSPEPt1Lr5m7k9mMVe/BPfcB12thS58OuF/3+
710x3I1/g8L/RZx5shE5cNeylznN3cx8oqeww4Z+nTBPsB2zPXWlltS7tD04
wh38wJ/TKfi/t4p/y3Wu+7xj0LO/1vEv9r3XlnNjRsItcMs9Z+gF/hH59/m8
clzb564ldQTzwvIXVfD7sDA46rvhWHJv2Se2NyzDL2Yyvc85OA+50N8Dzp/e
nXa/wGW4jp4+uO6c36hi7pxRrBNl2Nz/93MsctxQBd78KxHrnnHLfZ9wH5Mj
OKCfrMLXnRTcpB7M/l3GlpzmU8zGL6vQDfhe/weE54De
         "]], PolygonBox[CompressedData["
1:eJwlk0tsTHEUxo9xZ0j/994K8UiExKMjLNQCSxEt1p0y2i4lrLSiNjZGwsqi
84o0WM14RBO6UtWo1oZEYlEUKyrBQlKPdNKtxO/LWXzJdx733HO+/znbTp8v
DGXMrBtE4GcwG8bRmzX7EpttTczG4A/AFvgo8Z6VZgWwn3gDvOfDD2APsSw5
JXI7cmbn4APE68T2UXsN/Ehq1rXKbHK12VHyc+Sso9Y4+T/gZdAHHyW+2GbW
wv5I/Ay4Q/4I9kzGcyrwXnyz2APYdey/YDLnParX39hr+fcEvj/wm8F7V4/f
sIexy8RGwDPl0uMhc9809ld66DTX4DD2W/Kr8ApYjz2IfZ3c48zYzrd5fHnq
V/HNwgvEp+mvBfLEi9gv4MvgRuIaSavHfL+JWJGcMrwLbMe+HHtsApTgt4Nr
9Qh816zgXtY1fAJ/CCL4PPo10TqNvbezegP4m9S1lyaf21xjaV1STb4dT5yr
hmo1Uq/1FBzj31PU+Bf5TD3Ye2N/2258nfAdwblm0Cwb+f4+ta7y5kV4M/hb
ToEl6h8gJ7OC/rAPxj6TZlvgf7fIraeeK81Oar9Ag1g/OVVyfyX+tnrzRnDN
pJ002Zy45tJe31yi1gZ8NWKvqTlH7il81+itju8l9m4wH/lOa7fHUu9FPapX
7Yh2pQIuktuHrxb5jvfHfiO6Fe2EdqNDmmZ9p7RbzdhvRb6dxC4EvzXVUK2Z
xHdHPaiXXbHvinb8BHYreO/aySX4ldh3Qzup3XwVXGvNpNkWUp9NN/Qp+I3o
VjLK59vnic+im9fta6e129LoXfA319vrZnW7tcS11w3qFu8Gfzu98TL2fwwC
lYg=
         "]]}]}, 
     {RGBColor[1., 0.9059534138837733, 0.667412651032075], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], PolygonBox[CompressedData["
1:eJwlkDsvhGEUhMfls/i+d3VLIiGip5HoZBPZH2AbhUJCp6DVoNCJuDRINKtc
SynxD0SIjZ4ItUv4ARvP5BQnmffMnJnznomVjfp6t6RRqpd6KEuTA1KrR9oD
z1GzJWkZ0Ugu3RZSByG0HgelBvwJ3FafdAFuw89noVlAf5DAaBfhD1N42tsz
Nfgz6hKuSb3DZymy3PsAv5HxhN80fr9oK/R2wfd4PPPOqLsuZuht4n2cIsu9
I3A9D847ebedImbPydgG/+Xhbc82+IuZG+b3+7kF2dcp/uY/XBkXMeub+Dbe
2bu/oj9lfoz3MP5L1HgKD3v5pi/gH3prZK3CN9B/psDO/E7hYS9rZsgqU1MK
z6EiPO3tm1TB/37lPvM=
         "]]}]}}, {{}, {}, {}, {}, {}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{2764, 3256, 2897, 3279, 2898, 3110, 3704, 2821, 3472, 3473, 
         3469, 3471, 3470, 2795, 3500, 3501, 3499, 3745, 3744, 2886, 3650, 
         2885, 3722, 3787, 2780, 2763, 3565, 3566, 3564, 2976, 3567, 2966, 
         3124, 2967, 3553, 2968, 3554, 3333, 3436, 2840, 3646, 3197, 3198, 
         3199, 3024, 3349, 3025, 3350, 3023, 3058, 3057, 2783, 3392, 3359, 
         3358, 3357, 2925, 3087, 3086, 3120}]},
       "0.7`"],
      Annotation[#, 0.7, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{3257, 3280, 3474, 2899, 3281, 2900, 3111, 3705, 3476, 2902, 
         3475, 2901, 3730, 3789, 3569, 2977, 3568, 2978, 3570, 3809, 3798, 
         3030, 3806, 3012, 3671, 3013, 3670, 3607, 3572, 2979, 3571, 2980, 
         3126, 3125, 3752, 2969, 3555, 2970, 3556, 3334, 3509, 3510, 3356, 
         3632, 3355, 2850, 3158, 2851, 3082, 3119, 3118, 3088, 3162, 3161, 
         3160, 2929, 3293, 3048, 3516, 2931, 3514, 2930, 3515, 3090, 3365, 
         3364, 3233, 2858, 3232, 2857, 3517, 3518, 3366, 3695}]},
       "0.6`"],
      Annotation[#, 0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzs8rw3Ecx/G3EsUoF3dRlNrcHO2Au++F2phcab+imZP8E5z9GVabUnKV
meVAKxTt5sfZY4dnz8/r9f68P31m9kpJcSgiElylIhrYHI+442/+wS6OJyJW
uMZZrvPZZMSqe0054WHc6HryBj+jha68xU/c5BH82v/DGtbRH4tYtj/q/Mgd
PODATpsLduacy+YVXOj2defcxRTuvZHnHA7dfeFP/sKsnW35yPmVF/md6/zG
1+Yt9LyxwPPY0Z+Yf3CGpwfWp3Eq3w7+rasiLV/yku4foXwxxA==
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0LsuRFEUh/GlYcw5NJ5ASUhcE9FRKlUqiYkpzXQkjobGE6hGoRkegESj
cUncEzER7ZAIHY1L6beLL99aa//3yjm7v1Kfr3VExCI6s4iTPGKnJ2JBfaP+
5h8sYc98htd5lgve6I3IcKTv5kMu87S7mboqs4ySWRdy9bazX/5DU6bEhdkU
GvpMf5D28X7ax8NpH3LUzZ65xsfO2uWIBzTMdrGSMnjBmkybV7mPh/iDC37n
M/dP8er+IwbVA7jAOUbSO/AtLnGNK7zJPmFMPYp73GFS/sveLW7pN9Pb+e8K
5vCZvgUT5k0el/kH4Qc1bw==
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzrsrxlEYB/DHpNwmIpPX4JJJoRgYGUz+BJRCDBIDWcmO943J4DK4TQxs
Nl53XsRAlGKk3MrH8Ol7fs/5nvM7ic7BjoGsiOghnROxmxdRmh+xJ/tyI6pl
FdnWSfMUM8wxy5sz63KDNbbYpE1/QrbK6YKIA+50D/ky/+aTX36Y13uSzzTT
wr3uEUn/T9H7/yb6Kbe/zQ4Jat1fJivcM2C/Ui7IUfkgCyli3PeLHJP7+o/u
P6PGetG81nxIDnNidkqaY44oNr/Ur7eu44JzXp27ljdckuGKEv2M/opcZZkm
3Q85JW91JmWX93fTzru9ERrNl2SDzh+ejkJs
         "]]},
       "0.3`"],
      Annotation[#, 0.3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0TkvhUEUh/ERHS6NxNJJLLewJFTXUqjQKDQKBa6tEQSFQjRoEPEF0Cgk
KNWW1geQi1CQ2EJiSSyJ5TfFk+ec/5mZNzNvWXq8aywrhDCL7NwQDvJC6EmE
cMhp/Qe+ckI40X/zCi/jGEcotLY6P4QaFKnruBYZ+8q5EhXI05eYJzilL1av
2p9UV2Ff/ivb5jZuRwdS1tzxuvyWN/ieu+UJVOib+ZbP+QIZTOjPuNXZSfWk
PVPYlI3KNvg6niHLR7+6D72Ys/4RN+5bE++HtPwRD6g3m+YG3uJnPKHAulN7
BtUDmDd/iTN+50V+5QV+4xKMYBhDWIrvHc/jb17hz/je8R9wabyb8xt9Z0/d
It/l5vh2/Icrs0usyYbccxid+DGbQZN8h1PW/ANAG0j1
         "]]},
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0U1LVGEchvFnHIUwFW0RmCX0AVo0QbnRlHKTTdmoi6iF5KJU8gWslZo6
pauKGV8+giCFZVbTJhpLFBe1iFZi0Ep3JQhaKNjvLC6u5/6/PGfOnNN3elM9
sRDCPDpLQqhC3dEQmvkPb2MKBaUhFCKO3eIQ6vX3uFVuwSszRWUhLHG5/Jkr
eJpbzbZh0/mWmVWsYFLu4nvoxN3obG7Lvb/sZvQDZznGKaT1k+aeq/2UL6AG
m3Y2+Kn6vplnfMA31Mb4op1qtV55Vn4Y7coP+Dy/03+PWozjuNo5c7NRdm7i
Cc7xB7QhLy/wx+gdeRFv8FK+5t7raEade3b8vhEexRQm0Yf75vu5wdwAztht
V+t2fsxPcFY/gUd6CbkPP9z3lo8hhgIEFCKOF2ar+Ruf4q98JPq+fOjuOb7K
SWy7qzb63twkX8FJO1WoNJfRO8FZnsE0FvHb/O3onZ0HsYAe+TV/R2n0n9or
4RyX8TxSWJfzXGSuBZ/kRk6rDXv+ZXmQL/EQd/A//MWauZu8zF/wHxjvW+w=

         "]]},
       "0.1`"],
      Annotation[#, 0.1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV00VsFVEUh/EpENwdgrTIAtmhQYK7FAlWaHFNgOABgltxCO7Bobj7AneH
4BJcFxBICP67i+9995zzv/fNm5kX121gqwExURR18pEmE2eJoiQkoof6J35l
jKL16t/clttgJVbgY9YoGs+N5CbyBMzNHEXzkFWvFmfj3vq9kF0+G/LpxfFr
FENnsy7oisb2FNC7LJOfr3BB/oAyeKL+xP1ka8seVe9WH+fWfIx3cTqzZdxT
3ZBXYDmaqz/zdPuT8cXvipP9ykP1K4QzcBQpstt4O+KxW53CP2STwhn2JfIM
3oWdGIlRaCxbx6wJz+Lr+GNfE7Pn1s9wDbfMC+sVwgJ1groeL8JC5AznmOXg
O+rbeGpdVq8MhquHYX+4x/r7uDcXNSuCD+E5YQAK6/fnQvw43EvcwM1wHWgg
3xAXzGvL1UFdFNMridIyj8xK8WOO12uOCeE9QDWcwkmMQRX0kVvHJ8IzQg35
ceEcjEVVHA7vGV5Z/3WPNnBfdaPwnHkjd+RVrmUNVuO7XGlnfeMR5hWxU2Yr
7+AdvJdb8B6ezpU5mWO5JhfladyJ63MiL+ZmfImb8mx+5zvm8FzUxXzMwz/9
pq6hGe6Eex6eD8dycb21rvOhzJtwBt6G36vXHu0Qyf7FPzzDH/wO74vZZEzB
JEzDVMSYpXJu6vAOWcdwhHVmj3zPe+dXt66GBHRAKrkX+i9xDw9wH2v0y/Gg
8N+yN9Y573mzPVuwCSnYioyyZ+RecIdwFp8N/19O4Fd8zf6ruIJz6pz2nee8
5qc5F+dBbtSXyaV3js/jLDqrp/IUTMYB7A8551Tl7OZ9rfvgiHUO58RxBrMk
bqBeiiVooZ4hF88zeSM2oITsEPPBKI9L5kf4YnjXzLrLdMNddXH92XppkUfd
knPzQb5rdogv8gUkW68O9zS8YxiNDLLrOT2P4kpYhZXYjP9+icIG
         "]]},
       "0.01`"],
      Annotation[#, 0.01, "Tooltip"]& ], {}, {}}}],
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6614260758616343`*^9, 3.661426187191594*^9, 
  3.661426307597892*^9, 3.6614264592777367`*^9, 3.6614269565310087`*^9, 
  3.661427031331678*^9, 3.661427524047105*^9, 3.661427830870202*^9, 
  3.6614278646417418`*^9, 3.6614283012523527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dp", "=", 
  RowBox[{"DensityPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]DISPXY", "*", 
       RowBox[{"UnitStep", "[", "\[Rho]DISPXY", "]"}]}], "+", 
      RowBox[{
       RowBox[{"UnitStep", "[", 
        RowBox[{"x", "-", "1.75"}], "]"}], "*", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"y", "-", "0.75"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5072966684760914`*^9, 3.5072966707622223`*^9}, {
  3.507524649474677*^9, 3.5075246568951015`*^9}, {3.5075247135833435`*^9, 
  3.507524715334444*^9}, {3.507524751485512*^9, 3.507524801318362*^9}, {
  3.507524840147583*^9, 3.507524909941575*^9}, {3.5078036481788836`*^9, 
  3.5078036486459103`*^9}, {3.5078038009006186`*^9, 3.5078038356996093`*^9}, {
  3.5078039422717047`*^9, 3.5078040624615793`*^9}, {3.5091120931286325`*^9, 
  3.5091120949007344`*^9}, {3.5091574690314035`*^9, 3.509157473907682*^9}, {
  3.509162329692417*^9, 3.5091623497335634`*^9}, {3.5091623983443437`*^9, 
  3.509162435803486*^9}, {3.509162546177799*^9, 3.509162585057023*^9}, {
  3.5091626385320816`*^9, 3.509162640416189*^9}, {3.509163377049322*^9, 
  3.509163380923544*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5685641876449314`\\\", \\\",\\\", \\\"1.1428599899745884`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.661426076211899*^9, 3.66142618767516*^9, 
  3.661426308053773*^9, 3.661426459702026*^9, 3.6614269569891148`*^9, 
  3.6614270317693357`*^9, 3.661427524482622*^9, 3.661427831333749*^9, 
  3.661427864988408*^9, 3.661428301704671*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5685641876449314`\\\", \\\",\\\", \\\"1.1428599899745884`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.661426076211899*^9, 3.66142618767516*^9, 
  3.661426308053773*^9, 3.661426459702026*^9, 3.6614269569891148`*^9, 
  3.6614270317693357`*^9, 3.661427524482622*^9, 3.661427831333749*^9, 
  3.661427864988408*^9, 3.661428301721724*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\
\\\"1.5696802558297234`\\\", \\\",\\\", \\\"1.1428578546371697`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in the interpolating \
function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.661426076211899*^9, 3.66142618767516*^9, 
  3.661426308053773*^9, 3.661426459702026*^9, 3.6614269569891148`*^9, 
  3.6614270317693357`*^9, 3.661427524482622*^9, 3.661427831333749*^9, 
  3.661427864988408*^9, 3.661428301749839*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\", \
\\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661426076211899*^9, 3.66142618767516*^9, 
  3.661426308053773*^9, 3.661426459702026*^9, 3.6614269569891148`*^9, 
  3.6614270317693357`*^9, 3.661427524482622*^9, 3.661427831333749*^9, 
  3.661427864988408*^9, 3.66142830177603*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxt3X+sLGd52PFVEqJC0zhSjprIaiFJXQlXCUToBMWu2AUSNZCmVMVVY0UJ
bUKioBbSgtLIVaFqrCvckNgEdIAoWOFHN3EFVgBnYxJjxcYMhhw7nMvxsTFr
c9d3fa9/Yxvs6x/X5rpn9p3PM3oex/8cf+/zzszuzPt9fzzzzuyP/tp/feNv
fNdkMnnyrMmk/3veC15+xV0nD6btbze9/qZzLzrv5HyG3/mWK8+69OQi+OwH
f+bN77rwuuDl1W+74+qTXfBLLzr8v5fsBv9O/z8X7gW/+V2HO3z9fvCL3vSG
z9908iD4M9Pt2y65+GvBF77k8IgvWQY/1//3uTuD/+yuk1vXXrjKfPqu4NNH
D/fw+nXw4dHOvehDdwd/vD/gyRPBT3zs8B+27wn++fef8/r3X3xv8J9c/KEL
Hj16X/C333H4DV7yQPC/6r/g2x4M/uMLHn3Hi659KPjhw9P3lhc9HPzaw697
44WPBP9Cf7wLHh3PX3+CTo/80f74H/tW8Lz//D/37YHPmX3l8PK94JGRn+q/
zwcfC/6x/gK+6vHgzfFOjLw53u+fCt4c7xVPBO/2J3Q58uP99//dJ4Nf3NeP
lz4V/Lr+fOyN/I47DivM7zwdfHl/fl58OvjGvv59ceRH+/P11meCz7728os/
9IPPBv9sf/6uGfm3DqvrqV/9TvAfHX69c154JviGw80v+PTID20d7vAXnwv+
gUtPfewzZ0aeDP813hn+nR94EXz4aQ7P0HUl3gVvwuHHzuzWzT/sBfeX45zw
w/YHwX31vjz8sL9l8Muu6EvcWfa/Cu71ujH8cLx18D397sOPndn5m78ngi87
1Veoe4LXm89zb/ArNyfgvuD3bD7fA8HH+vYi/NiZvWLzeR8KfveH+grxcPBy
8/kfCf6h/uOFHzuz12y+z8j/pb/+4cfO7AOb7/ft4Os2m498/+b7Phb8g/31
nz4e/KrN35F/s2+/Lj0V/L7N+Xgi+HP917tj5JOb8/Nk8Fl9e3fuU+P13Zyv
kd+8aaCeDr50c/5OB3+2XcDg45vz+UzwP+z/bD0b/FOb8zvyf+zb0zd/J/j3
Nuf7TPBfnLURIPgbm/P/XPCgw6sLT7IX9e8iOPsR/Uxw9mNe/JgXP2x/EJz9
mBc/5sWPefFjXvyYFz/mxY958WNe/JgXP+bFj3nxY178mBc/5sWPefFjXvyY
Fz/mxY958WNe/JgXP+bFj3nxY178mBc/5sWPefFjXvyYFz/mxY958WNe/JgX
P+bFj3nxY178mBc/5sWPefFjXvwInrR6/6niAV4E8yPHu2B+YH5gfuTtD4L5
kfe3DOZH3v8qmB/5eOtgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+xPUd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPKn9
ROZF8eS68u9dcO4/FqX/WJT+YxF+4Nx/LEr/sSj9x6L0H4vSfyxK/7Eo/cei
9B+L0n8sSv+xKP3HovQfi9J/LEr/sSj9x6L0H4vSfyxK/7Eo/cei9B+L0n8s
Sv+xKP3HovQfi9J/LEr/sSj9x6L0H4vSfyxK/7Eo/cei9B+L0n8sSv+xKP3H
ovQfi9J/LEr/sSj9x6L0H4vSfwRPWj28poxrrontMD9yvAvmB+YH5kfe/iCY
H3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwpNb
U79gXD/2E5gfOd4F8+PWVG4vmB95+4NgfuT9LYP5kfe/CuZHPt46mB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH3F9Bz8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/Ck9aPbqhzGtvCD8wP3K8C+YH5gfmR97+
IJgfeX/LYH7k/a+C+ZGPtw7mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+ZHXN/BD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI/C
k5qHqvOKPA+/rsS7Ms7aLf3KXvFov2wX9z/K/KMLP3Cef3ThB87zD8eL+x9l
/tGV+UdX5h9dmX90Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH12Zf3Rl/tGV+UdX
5h9dmX90Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH12Zf3Rl/tGV+UdX5h9dmX90
Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH8GTVi+/FH5kXgTzI8e7YH5gfmB+5O0P
gvmR97cM5kfe/yqYH/l462B+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Cg8
ye1+vY8x5qXy/HzsJ3D9m+fnu+FH3v6gePW1sp9lcJ6f74YfOM/Pd8MPnOfn
u2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+
vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm
57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ufBk1bvbg4/Mi+C+ZHjXXCu
xzeHH5gfefuDYH7k/S2D+ZH3vwrmRz7eOpgfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8w
PzA/MD8wPwpP6n3uet8i3+e77nnzitpP5LzVXpmn75ftD8o47Gtlf8vi2Z1l
v6vgnL/aCz9wzl/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7J
X+2V/NVeyV/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7JX+2V
/NVeyV/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7JXwVP2sc6
Gn5kXgTzI8e74DzOOVrq7dHwI29/EMyPvL9lMD/y/lfB/MjHWwfzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mjru/gB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5kfhSc4r1XVS433vnN8d81B1XlH7CVz/5vzu
fviR97cs47I7y/5Xxbu7ynHWwTm/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/y
u/slv7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/yu/sl
v7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf
8rv7Jb8bPGn15pbwI/MimB853gXzA+dxzS2lnt4SfmB+5P0tg/mR978K5kc+
3jqYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8KT85P9yGsax3XRWF+5HgX
zI/zy7zi/NJP5O0PgvmR97cM5kfe/yqYH/l462B+nJ+OeyKYH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPwpPWr24LfzIvAjmR453wfzAed57WxnH3BZ+YH7k/S2D
+ZH3vwrmRz7eOpgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwpP1kO95Efm
RTA/crwL5gfOeaBxXpG3PwjmR97fMpgfef+rYH7k462D+bFO/dSJYH6s0+e4
N5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8KT9p1vz38yLwI5keOd8H8wDkvenuZ594e
fmB+5P0tg/mR978K5kc+3jqYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8K
T94z1EN+ZF4E8yPHu2B+4HyfYMxD5e0PgvmR97cM5kfe/yqYH/l462B+YH5g
fmB+YH68J32uB4L5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfkR
13fwA/MD8wPzA/MD8wPzA/MD8wPzA/MD86PwpF3XO8KPzItgfuR4F8wPnO+b
3VHyoHeEH5gfeX/LYH7k/a+C+ZGPtw7mB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZHXN/BD8wPzA/MD8wPzA/MD8wPzA/M
D8wPzI/Ck1cM9Y4fmRfB/MjxLpgfON9HHu9b5O0PgvmR97cM5kfe/yqYH/l4
62B+YH5gfmB+YH5gfrwieftgMD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8w
PzA/MD/i+g5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSetOt2LPzIvAjmR453
wfzAeV3FsXKf7Fj4gfmR97cM5kfe/yqYH/l462B+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/Cg8WQ71jB+ZF8H8yPEumB84rzMa73Pn7Q+C+ZH3twzmR97/
Kpgf+XjrYH5gfmB+YH5gfmB+YH5gfmB+LNPnfiSYH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH3F9Bz8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Ck/adRnfi5N5
EcyPHO+C+YHzurtx3Ufe/iCYH3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/M
D8wPzA/MD8wPzA/MD8yPwpPXlPdGZV4E8yPHu2B+4LwOdfQjb38QzI+8v2Uw
P/L+V8H8yMdbB/MD8wPzA/MD8wPzA/MD8+M1adz3cDA/XpO8fjSYH5gfmB+Y
H5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwpP
2nk/Hn5kXgTzI8e7YH7gvC77eFlndzz8wPzI+1sG8yPvfxU8TfXoePiB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5Edd3
8APzA/MD8wPzA/MD8wPzA/MD8wPzA/Oj8OQD6Tlt7+Ub3xuF+ZHjXTA/cH5O
YVxHm7c/COZH3t8ymB95/6vgaWpX1+EH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
xwdSvzcyPz6Qvte3g/mB+YH5gfmB+YH5gfmB+YH5Edd38APzA/MD8wPzA/MD
8wPzA/MD8wPzA/Oj8KSd19GPzItgfuR4F8wPnJ/bGf3I2x8E8yPvbxnMj7z/
VfA0jTNGPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD8wPzA/MD/i+g5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSe3D/UG35kXgTz
I8e7YH7g/Bzb+NxF3v4gmB95f8tgfuT9r4Knadx9d/iB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+YH5gflxf/qejwXzA/MD8wPzA/MD8wPzI67v4AfmB+YH
5gfmB+YH5gfmB+YH5gfmB+ZH4Uk7b+N7mjMvgvmR410wP3B+rnN8DilvfxDM
j7y/ZTA/8v5XwfzIx1sH35PqyYnwA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzI67v4AfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZH
4cmrhnrCj8yLYH7keBfMD5yfcx79yNsfBPMj728ZzI+8/1UwP/Lx1sH3pHZz
9APzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8+NV6XuPzA/MD8wPzA/M
j7i+gx+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSftvJwMPzIvgvmR410wP3B+
7v9keY7zZPiB+ZH3twzmR97/Kpgf+Xjr4HvSOOJk+IH5gfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/AD8wPzA/MD8wPzA/MD
8wPzA/MD8wPzo/DkfUO94EfmRTA/crwL5gfO78EYn+vO2x8E8yPvbxnMj7z/
VTA/8vHWwfzA56d28p7wA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/Pjfek8PBHMD8wPzI+4voMfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH4Un7XuP
fmReBPMjx7tgfuD8XpjRj7z9QTA/8v6WwfzI+18F8yMfbx3MD3x+GjeMfmB+
YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/Cg8OTnUA35kXgTzI8e7YH7g/J6k8T0gefuD
YH7k/S2D+ZH3vwrmRz7eOpgfmB/4stQu3ht+YH5gfmB+YH5gfmB+YH5gfmB+
YH5gfmB+YH5gfmB+YH5gfpxM5+XJYH7E9R38wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/Cg8ad9r/N2wzItgfuR4F8wPnN8bNr4XJ29/EMyPvL9lMD/y/lfB/MjH
WwfzA/MDX5bGCfeFH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8KT84brjs/Mi+C+ZHj
XTA/cH6P3uhH3v4gmB95f8vgeH972v8qmB/5eOvgeH/7wPH+9oEvS+Pm0Q8c
728f/sb72weO97cPHO9vHzje3z5wvL994Hh/+8Dx/va0ruVbwfH+9nTfcuR4
f3vKSz8eHO9vT3mHU8Hx/vY0rhw53t+e2o2nxus7+IHj/e0Dx/vbB473tw8c
728fON7fPnC8v33geH/7wPH+9oHj/e0Dx/vbB+ZH4Un73PeHH5kXwfzI8S6Y
Hzi/V/L+8p6w+8MPzI+8v2UwP/L+V8H8yMdbB/MD8wNfluaR94cf+JXpOt8f
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8
wPzA/MD8wPzA/MD8wPzA/Cg8uVQ7OPiReRHMjxzvgvmB83tWx/cM5u0PgvmR
97cM5kfe/yqYH/l462B+YH7gy1Je5YHwA78ytXsPhB+YH5gfmB+YH5gfmB+Y
H5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/Lk3n7XQwPzA/MD8wPzA/MD8w
PzA/MD8KT9rnGv3IvAjmR453wfzA+b3Dox95+4NgfuT9LYP5kfe/CuZHPt46
mB+YH5gfmB+YH/g96bqOfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+xPUd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPDlu3Dz4kXkRzI8c74L5
gfN7uMf30ubtD4L5kfe3DOZH3v8qmB/5eOtgfmB+YH5gfmB+4Pekdu7B8APz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI67v4AfmB+YH5sfxdB6f
CeYH5gfmB+YH5gfmB+ZH4Uk77vg79pkXwfzI8S6YHzi/l358T3Pe/iCYH3l/
y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YHPpau40PhB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwpOf
kmcZ/Mi8COZHjnfB/MD5dxpGP/L2B8H8yPtbBvMj738VzI98vHUwPzA/MD8w
PzA/MD/wsdSujX5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38
wPzA/MD8wPzA/PipdF5H5gfmB+YH5gfmR+FJ2+83w4/Mi2B+5HgXzA+cf7fk
m+U99N8MPzA/8v6WwfzI+18F8yMfbx3MD8wPzA/MD8wPzA98LPXz3ww/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/4voOfmB+YH5gfmB+YH5gfmB+
YH5gfmB+YH4UnvyevPzgR+ZFMD9yvAvmB86/4zP+7kXe/iCYH3l/y2B+5P2v
gvmRj7cO5gfmB+YH5gfmB+YHPpbGvQ+HH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH3F9Bz8wPzA/MD8wPzA/MD8wP34vneczwfzA/MD8KDxp241+
ZF4E8yPHu2B+4Py7VqMfefuDYH7k/S2D+ZH3vwrmRz7eOpgfmB+YH5gfmB+Y
H/hYmgeOfuB3p+s0+oH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5Edd38APz
A/MD8wPzA/MD8wPzA/MD8wPzA/Oj8OQbw3XiR+ZFMD9yvAvmB86/8zb+TlLe
/iCYH3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YHPpbyIo+EH/jdqd16JPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/IjrO/iB+YH5gfmB+YH5gfmB+YH5
gfnxjXTenwvmR+Hhv0fDj8yLYH7keBfMD5x/53D8nbC8/UEwP/L+lsH8yPtf
BfMjH28dzA/MD8wPzA/MD8wPfCzlBR8NP/C7U7/9aPiB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+RHXd/AD8wPzA/MD8wPzA/MD8wPzA/MD8wO3v5NXx+ff
nJ+d4e+Rof5/Kvj/bD7/NcGtvt0Q3Orzl4Lz7zYfKb/DeaT8rtqR2R9szv9t
wa347cHLzfm5I/jiDw3vrRx4s7t4z9yR2Vu8V2bgVt3WwT/guc+Bfz09p3Vk
9lfWZQ/8fWkd5ZHZf0rrYo7MFuk+55HZP0h56yOzX055iCOzT6dx5ZHZd6Xr
cGT24xf1/zfyfzj8tm96w7eC//fmC478ic0F+HbwwYX9AR8LPnO0/4eRX9pf
vvc/HvzG/uucdyr4nZv/GfnP+qtzyRPBR8/tP+CTwac3l2/kc/qv+66ngt+w
qTBPB1/0ov6EjvzxzQU9HXxzX93Ofib4if7rf37kH+l3/5Zng3/+zf0F/E7w
b/eX7+qR/6SvLm86E/zl/uu+4Lngh/vdXTmy+t48+Ehw+/uJ8KN5cFVcn1Yv
vxLXr9XLo8GtXn41uNXL/bj+rV4eBLd6eWtwq5e3Rf1p9fL24FYvvx71rdXL
ZXCrl3dG/Wz//o3gtp9jUZ/bce+K+t4+98jtex8PP1q9PB7+tHq5Dr9avbw7
/Gv18u6IY762enoiymN+t3p7Mspj7UGrxyej/Wj1+J5oP7D2ptXre6M81l61
en5vtFdY/cTav+bBfbPXbT629rWbxvrWob5pf9W3oX2eiG9Ob7THtl88r722
/c395472upsaz/z97flO+/6vu6Hsv3tee2//m/MX7X03NR6q/YHym8v6uZuj
fP7d8rG/UH5TDcfffZ7Get3Snyj/2f5yjb/zOY31vKW/Uf5X+vM5/q7b1His
9kfKb/55/B2fqfFa7a+U/2T/BcbfbZjGeuHSnym/aZ7G93RPYz1x6e+Uf2cv
wPhe1mmsNy79YTr/43v4prEeufSXym/C43uXprFeufSnym+ahfE9G9NYz1z6
21Q/x+eqp7HeufTHyv9I79H4HN001kOX/lr53+51HJ+bmMZ66dKfK//l/nKO
62SnsZ669PfK/5Ne63Fd1DTWW5fxgPL/rf94433waazHLuMF5bu+GRvve0xj
vXYZTyj/w/0FGfNc01jPXcYbyr+1v97Pxbx/Guu9y3hE+c33j/FIN4314GW8
ovzm/MV4pZvGevEynlF+c75OjeVjPXkZ7yh/TX+6Pyx+zrjefCh/oq8fr30s
4rH+fIh/f3/97x/jsR59iP90f6A/fDzisT59iP9afz5++lTEY7269mOj7xiP
9etD/Or++777iYjHenbtZ1+ffuLJiMf69iH+ok3zNsZjvbv2qK9O73wq4rH+
XX/S159/9nTEYz28/qGvb7tjPNbHD/Gr+sv59tMRj/XyQ/zO/nA//EzEY/38
EP/evnpdP8ZjPf0Q/8m+Pv3msxGP9fVD/Jf6+vP934l4rLcf4kf6y/GXYzzW
3w/xP+9398tnIh7r8Yf47X17+d3PRTzW5w/xzTjlk2PcfEpc/62+6n/reNI4
wPg9l/9UjDf193X8mctdE+NRvihv/3l/O1Eet37ws+X36K+K42PHreUxv7HP
U+OtX7w24li8VavrI47FW7/0hYhj8daP3xhxLN767S9HHGvPWj99U5THymPl
jf+1j9j25gPidX5gXKN8nS8YB2mfzR+033U+Ydxje/ML5et8w+/l6i/MP/Qn
2P7q/MTvidrefMX2df7i9xVtbz6jfJ3f+L05/Z/5jv6xzn/8/pbtzYeUr/Mj
v0ekPzZf0l/X+ZPfZ7G9+ZTydX7l9yqMD8y3jB/q/Mv7+21f52PYeKXG6/vq
xe3ffM72dX7n/c/GS+Z7xlN1/ud9uLav80Fs/Fbj9f2w4vZf55PY+LHG6/s1
xR2vzkex8WuN1/cTijueuPFxnc/W97mJ27+4/dX5buX6PixxxxO3/zo/rlzf
JyTueObT9o/NT7D5S43X97OIO36dj1eu77cQN5+q77uo8/06n6/seW3zP3Fc
3ycg7vOZ//s8NT+gPLY/+SxxbHv5LXEsLt8ljsXlv8SxuHyYOBaXHxPH4ub7
leU/zO9rfiQ/T3404tj2rg92PbB8oe2NN7Hzqbzzh50v7Pxg5wMb79XzI248
VbnlQcfn1cSNpyorb3wnjsXlZ8SxuOuBnX/s/Nle/cTG5/X7F57U/WH7w65H
Ld/ywmN5rDxWvuWNH4jyWHmsfPv7YJTHymPlW7mxPFYeK9/+/aEoj5XHyrd6
+M0oj5XHyrd6OpbHymPlWz1+OMpj5bHyrZ4/EuWx8lh9bvV+vL+K7Q/bX427
/2T/tXyNY74pj//++1k74VOe99xQ5j1fCs73r3bK/audcv9qp9y/2in3r3bK
/audcv9qp9y/2in3r3bK/audcv9qp9y/2in3r3bK/audcv9qp9y/2in3r3bK
/audcv9qp9y/2in3r3bK/audcv9qJ+7v1vmx6yZe56/mpfn6LuL+sfkmNr/E
5pPY/BGbL2Lzw/g9s2H+F79nVuaL+Xd/nn//Rz0yH6vzKfMj59t8xvUw/3C9
zBdcT+N/19v4XH0w3lZfjJfVJ+NR9c14Uv00XlQ/sfpsvKe+G5/xI95fNPhR
x0NYf43111h/jfXX9X08dfyS3xf1peeNR/L7bG4J5jv2ebHPi31e7PNinxf7
fGcVb/P7Tz4VHPmkgaN9Gzjat4GjfRvYeEl/jvXP+n8srj8Wx+L6X3Esrr8V
x+L6V3Esrj8Vx+L6T3Esrr8Ux+L6R3Esrj8Ur/2j/kh5/ZXypf98Nc7t4zz4
kuE641uHvGLOt30p2H25nG/Trx3E+NjnqfOV+v4fcflWLL+K5VOx/Cke8vxR
33zOOv5UP7H3PWDPt2PP82LPL2LPa2HPp2Dr8bH1x9h6S2x92cuHfqV59/Gh
nf52cGt/v9Xu4170t8Hfs9nw5iHf8ehs0zxdcXRonx+d/fPNfP5g9sWhXv3o
5vzcPnv7UE//duPLHbN/OtT79u/fGP79wWG71ey/D16249w17Oe+4XMcn/3d
0C62fmM9+x/DvLzlje4ePseJoZ85MfvqkPdo/c+J2buGPE3rl04O3+vOod+6
J/KM37Op5vfN/sVmf88G//tNnuE7wf9rc/yR/99mHn8meH/zeZ8L1i+/bHP+
Ducjmw/4zPP4wo0H9wdfvPncI1+5EeiB4Ns23/PB4PZ35PY9Hgpu3+Obwe17
jNy+x8PB7XuM9+nc/zIOwnnc4/7tVcHGOVh9xMY52DgHG+dg5xMb12B5bSyP
jY1zsLw0Vh/wrw3jHnz1kCfGLxrywPhNQ54Xf3rI42L1D1845GHxlUOeFZ95
rv8vfgd4eu6QB8UXDHlOrL7jK4a8IuYHfmbI82E+4X875Nkw//D/HfJYmK/4
ydyuTn805R266b8e+m2sPcAfGfplrP3Ajw39Ltbe4J8b+lWsfcIfHvpN/MXU
T3bTR4Z+D2v/8I9tvs/I2kv8C5vvN94/1r7i39l835G1z/ijm++Pt4d2cOTd
zfl4LLi1iyM/vjk/I7d28vHgF2/O18it3Rz5dZvzdyq4taMjv2NzPkdu9xGe
CL58c35Hbu3uyDduzveTwW2eMPKjm/M/cmtXnwo+eyPwyK1dHflnNw3GyK2d
fTr4tzbCjdza3ZH/aNOenQ5u7fDIN2zaj5Fbu/xM8EObBmhk7Sv+x5v25tlg
/Q9+9ebvyPoj/J83wo+sf8I7m/bzTLD+Cv/Npj0bWf+F79m03yM3n0fWvrd2
/cq4D9sa6k/P1P/Wrn0lxhOt3frqjD+tndoPbu3ULTHeaO3QrTM+tnZo5NYO
3RbjkfY5vzbjd2tnvh7c2pmvx3iltTPLmfaitSt3BLd25c4Yz7R//8ZM+9P2
eyzY+EZ71T7naqY9a9/rrpn2r52n48HGP9rL1k4cn2lPWzuxjvFRayfWM+2x
8ZL2u7UDd8+09837EzP9Q/P85Ez/0rw+OdP/NK/vmemvmtf3zPRXWP/XvL53
pv/D+tfm9b0z/avxEj/E+SOuvzd+2iz3+0Xjka1pzEeH9lP+r/Fvb+b7R193
VZTP+Zlu2q/n+vznro14Xg/R+vcLY3yyNc35utZ/H43xydY05++6ab+318f4
ZGua5z3d9HB387tifLI1zfm9bnrzuRf99eUxPtma5nxfNz28CF+5MMYnW9Oc
/+umfee/FeOTrWnOB3bT628696mjMT7Zmub84Gb89I8ujfHJ1jTnCzfjwT88
J8YnW9OcP+ymd179tg9fHOOTrWnOJ3bTn7zirj+9K8YnW9OcX+ymRz50waen
MT7ZmuZ8Yze9/ZIbr7k8xidb05x/7KY/ftF5Xzz9snsjnvOR3fRw/rp3YYxP
tqY5P9lNDy58yfLqGJ9sTXO+spu+9HDwtBXjk61pzl9203ceNk7viPHJ1jTn
M7vp0XMvevpojE+2pjm/eVg/zn7wu18e45Otac53dtN/+YKXX3JjjE+2pjn/
2U1/411v+YNTR8d4zod20/ee+tj7zonxydY050e76V+/7Y4PXhDjk61pzgd0
bX9fFD+Y5vX/222+/9bHIp6fB9hu+YMffDzi+fmA7Xaf/Joxnp8X2G73vX/1
VMTz8wPb7b72C5+IeH6eYLvdp/70GM/PF2y3+86/+GTE8/MG2+2+8Zkxnp8/
2G73ff/0qYjn5xG2233Mf/N0xPPzCdstT/H4GM/PK2y3PMWHT0c8P7+w3fJk
r30m4vl5hu2WJ7t/jOfnG7ZbnuwPn414ft5hu+XJfvo7Ec/PP2y3/MRqjOfn
IbZbnuzdZyKen4/Ybnmyn3gu4vl5ie22nvVgjOfnJ7Yj/9Ha5Stmxt+tHfyr
4Nau/U3kQ9o878sxnmn92m7Esbj8ifUtxgPGB9bTGA+0cc/4+/X6f+MB61n0
723cf/fM/E9/bTyp/zSexOL6U+NLceNLLK688aa48SYWV974U9z4E4srbzwq
bjyKxZU3PhXHNf/S5gn3xX0T4wfjC3HjDyxey7d5xVgei8vn4DbPGPM5WFy+
B7d5x5jvweLyQbjNQ8byWFy+CLe/Y74Ii8sn4VZvxnwSFpdvwq3ejOWxuHwU
bvVmzEdhcfkq3OrNmK/C4vJZuNWbsTwWl+/CrR49EuUx/9yPeuLwsD97t/zY
Vnl+xvMenoN57+b+1Gde/IlSfhHle6tfH/myrfJ8TMs/XR75sq3yPEzLL21F
vmyrPP/STd94WC8vjXzZVnneZXP8P7448mVb5fmWbnp4lj41jXzZVnmepZu+
+OwHv3D6D26NeH5+pZv2g82rI1+2VZ5X6aZvPZyMvSPyZVvl+ZRNPu+7Xh75
sq3yPEo3vebyi3/owciXbZXnT7rpVdPtD17whuPl+43jy+99+RUf/Uzky7bK
8yXd9JdecvYnz3pwHJ/m50m66Z+fdelfvu28cfyZnx/p+vHY9TdFvmyrPC/S
9eOt3XNvG8en+fmQrh9PHVxyzjj+zM+DdP14aXUy8mVb5fmPrh8P3f8znx/H
p/l5j64f7zz+sbPG8Wd+vqPrxzNnnvuVhyOen+fo+vHKC9905Tg+zc9vdNN/
9/mbXvimd43jz/y8Rjf9n+e94KxLzxnHn/n5jG76p585rAI3jfH8PMZ2e97k
7eP4Mz9/sT17bX+8Hx7Hn/n5i+32/Ml1Yzw/f7E9+2B/vN8cx5/5+Yvt2fX9
8b5/HH/m5y+2Zw/0x/vLMZ6fv9iebfXH++Vx/Jmfv9ieTfu/3z2OL/PzF9uz
t/TH++QYz89fbM/e3x/vjeP4Mz9/sT27tj/e02M8P38x5IM+Oo4/8/MX27Mf
6I/3c+P4Mz9/sT07v6eHx3h+/mJ79uv98T44jj/z8xfbs8v6471qHH/m5y+2
Z3/VH+/EGM/PX2zP1v3xfn8cf+bnL7Zn39f/ecU4/szPX2zPXtkfbznG8/MX
2+35ld8dx5/un4pvvs611w73xf841nlg86n6vIR+wvi0zauvj/Fmy8v8XXDL
2+xF/qzlfW6J/BqWD5P/kn83HtW+YPcP5I+0j1g+SL4IW28hf2i8ho3XsPGX
/tP4y/0hbDwb47fhfNft237H/hw7Hs7Pc8kLzeN6uN/VPsdfxHph65GNx91v
1P9Z3+F+UWs3x98Lc//Z/SjnQ//s/rP7W75ffi7nveU5nPeWdUlHnvc3Pzfz
3sjnVlZe/RVXf7G48vn+3pG4fsobj1dW3vhdXP6vsvLOj7j7f5WVdz9Q3Pmv
rLz8pbj8ZWXl3S8Ud/0rKy9/Ki5/Wll59xPF5WcrK89HcfndysrLB4ur35WV
d/9R/Iohv1xZee2JuPx0ZeXdnxSX366svPuV4sbvlZWXTxeXb6+svPy8uPl6
ZeW1r+Lm/5WVd/9AXP6gsvLuT4i7f1FZefc/xPUHlZV3f0Xc/ZfKyut/xPU/
lZV3f0hcf1ZZefkXcf1jZeWNJ7Wb4tbDaO9qfqi1S1eX9aJdfN5W778a39f9
KflX7Py1eva1OF9Y/fC8k/or34M936O+Ww+DPe+DrY/hj/tB2PM+ymP+WU/D
V8/ziGP+u5+E9Y/81z9ice1Nvd9kvQ72/Iz21nhC+6l/1V5W1h8bL9Txx+nk
/XXR/+rPjD/Uq5r/MZ6QP8XGKzj3i38RrL6p363f6YJbv3JjtL95fevRGB84
Xl6veaT8vtyR573fKcZLw/kpPOGX82P8Kr/axgFXhmf5+83LOOMj8X3z+qJF
Wa98XXx/418+Y+Xdl8vj6RvC59av3xD7w/aHy/2N2L7Vuy/G9tj22P0V9/m0
F8br5r9YeeM+5Y3nlcfm18bz7gd53lV74/64+To2vzf+l8/gs/bB+B5bf238
z1/tA/+x9dnyLZ6v0z7IX2P1Wf6Hr8Y77idj67eNt/hu/M1nce0Ftt7aeFB7
YHzOf3F+4boeVXn5d+Vx/b1K5eXflcf19yyVl39XHtffu1Re/l15XH8PU3n5
d+Vx/b3MOp+rvyebnx/7SGk/57F+W1x7Gu3B0F5pf/L2i/J82VWzGs/Po10V
+4/1isP+zV9sr32zvbjtY76T83RR3nxH+VjfOJTX3jq/cT9tiGu/ba88Vt76
Y+XdX1AeK299svLuLyiPlbd+WXn3F5THylvfrLz7C8pj5a1/Vt79BeWx8tZH
K+/+gvJYeeunlXd/QXmsvPXVyru/oDxW3vpr5d1fUD7uPwz/6U9tb7227d1v
sH29H6G/5ht2v13/Kj+K9c/ud+rfzJv1X1j/pn/K/fOR8p6OI+GL8UFezzvO
5+t8vc7H63y7zqfrfLnOh+t8t85n63y1zkfrfLPOJ+t8sc4H63yvzufqfK3O
x+p8q86n6nypzodynmcR1009MN/J72f5eIyf5I3UB2z8U+dHxnvql/Gc+uj5
NvURK9/yOJ+Lzy8PZDyEjX+w+aDxsPL1eTisfL2f7/kH59N6Rdvj/P6Xo7G9
5yMc3/tKzG89L2H8Zb5nvGV+ZjxV51/iuD7/Jo5rftb8zfjL+M78Sxwbr1l/
VdcHGr+5f2c+Zn5lvoaNz6wnM34b8uQxvjOfM37Dxmd8V9643vgO5+fjvvC8
+ZD+Xfsaz2MM/9X5nPbV9rh6pv62duzz4QfmU42b34nj/H6iL0V59d08wfc3
/zN+xc6H9RzOBxa3fkMci1uvIY7Frc8Qx3E9hvUZ4lhcO+N6YNcj8tnD+Eh7
pjxWPvLXQ3nzd/HIT5fxlvUb6gcWt15DHItbnyGOxa3HEMdRv4b1F/G+5YHF
rbcQx+LWV4hjcespxLG49RPiWNx6CXGs/juvmIfaV/0+Vk/1d97HJH/m/Una
T6y89d3mv96HZH6L9a/Wd1tfaT2W++FY/2x9t/Wc3p+EvT9J/17LW7/lfho2
PrD+23pT+T3rA7Dxhnyg9av6C+sNsPGKfJ/2kUd5/fK85HM+EfMb/b3+Tn5D
f4jFXU/Xz7hOvgLrH+VP7c99F/0vVl9aPzU+L2CcqP9VfxwPGz/Jf7j+3uel
vmD5b883ql/exyXueUfreb2/S33C8u/KW5+hPsnne15S/fG+K/cHPC+pvsgX
Wy+C3X+o5e3PeFX9U5/kj90fkV/Wf+v/5Wew/Kz8rfXdxgfY/WD7w8bvnifI
+fcbYzxp3mE8iY0nPX/i+vDd+fN9fT9+5Pcdfmrm+Svj27yeeRFx4938vsCb
4/ObP9n+kmHcbXvjX/MR50/c9+GT9825f6D9U5+1R+qb9sj1t37N/SztifxF
ztt+4XnzA3kxvvORf/KP/ORbfp/g9eE3zu3H9eV9FF+I8lh5+VrnR//Cf+zz
uB7Ka6+Ux8rLtzq/2hPtBVbffF/jtvKcbFlH8IVoX9Ufx8/57aPRn5pvuB7a
P+cHay/NP4zn+Wg+gNU//qmv/OMb5pvxaPZjHvXX98O+v+/j/Pq88tn2r3/x
vIDtre/Cno/kq/Pv8/jc9XwbR/PV58nv87wl6pvP53xqv8yfnD+fx/GcH9c9
n68uzk/9vnzMz0vM4/lP+///mDccUg==
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxMnXe8j/X7xz97nOOc0957KJWy9957kxIiDZSkaCF7RYhIRVlJEUmFFBGR
KKUUSovKatEuv+v5vV7vx+f3x/tx3dd73p/7et7nnMR5Xtj9zjZ9YpFIpP95
kUjc4heFkch5xSKRc/IikW/s+nK7vsquv7br4nZdwq732vUFdn2BXX9r11fY
9TV2vc+ur7LrMnb9g12Xs+sadn3QrivZdT277mDxLotfZSORLwsikYssv9jy
72xOKbuuZNff23UZu65q1/vt+mq7Lm/XHS3ezb3Y2q+s/xLLi1t+yK6r2HVD
u/7FrhvY9XV2/bNd17PrDnZ9xK5r2HVzu/7VrhvZ9Q12fdSum9h1V7v+w67b
2HVvuz5s19Xsuoldt7PYx+KXdu4B669geW3Lf7PrFnZ9s13/btet7Po2uz5m
183surtd/2jXtey6lV1fb7E/z9X2GWzXM5hr113s+n6en13fYNf38lzt+ka7
fpBnYNfVLNaw+vS1dov1D+UZW38vux7JM7brfnY9gTPtuo9dj+Vz2HUPu36I
52rXt9v1aJ6ZXd9m18Pt+oBd97Xrh3lOdn2uxXKcY6279Q+iPtY/wK4n81zt
epnV7kmegV3/aZ/xQrsub/MH2pzpPFfrX10UiVxm1xWt/wqLlSz2slbBrqtZ
7GPtAZv/GDWx+ffZ9RRqaNf32PVEu/7JrktZrGJzb7dW1q6rWrzDWkm7rmyx
t7Wf7B7q2Jq29Fmrbn13Wqtp1zUt3mWttV3Xt3ivtRZ2Xc/iAGv17bq2xbut
tbPrBhbvs3atXTe0eL+1m+y6qcVB1nradXOLD1l7xFonazdYa2T9dSzeY62z
XTe2+KC1G+26Cc/G2vV23YjPbW2i1nW21tT66/Ie8qzss9xueQu7HmWtLfdl
baS1Nspn2ngri8OsjdZ4e2tjFDtYG2/tOs60NiHfnoetacm1+rjvW6yvmcXB
1sbxma11tPawIuvHaj/GJul+u1ibp+faz9pcsUlex/aspf5HrXXlGVibrHXk
03im1npYe9rmz7J2K59LjFDTx63dLA4X65nxPKdov27WPjLGPrT2gLXtRb72
Kepk1wOt/W78PAbHOm+q1pHP0jlwtUB14/k/pwgbz4oLxuaIKT7nfH0+xi60
L6BHovbeWVskXrjXF8QR+dM6B25nR5x99npGfeQLdSZ8Pq/I+hf1ueFnacQZ
pF5RO2+bxfet/Wyf9Ttrc+05vqRx+PzXWPrH2hC73m/jwy2+Yu3ViF+PsPaa
Iny9Loao+cqI8wdfefa+TzSG5tj+KzSXsTfEDbys0lzWb7X2hLUnra3Wfsyb
nef971lbH3Ge4GJtxLnkfXpLkffjbY3D0QZF6r9RkXoOsfd+AV+/rdabIl5v
+HpT98V78I7mMrZGfZy31T7XvDxnbZvu9yk9UyI8fm1tiZ79dnFDPT/QOPmH
6qOeh/TseB4fixvej50Rf2dgZ3fEOaPmn0WcMxjcIT5Y86nmMvaJ9mD9Ls1l
/Uc6kzV7tB/sfK4Ig99GnIllrDEGFlhbbp/7G30mxr6KOGd8zi8j/r6Rr1Md
qNOzrLO439reiLPOvC90DvmBiPMEI99Hcqz9oMjYdxHfh7FjtmfriLN4UOtW
6j7gHdZ/Uc3WWvsx4jzB3U+K1PlXjcPOUUXu/ZgirP0ZcW5g4feIswVTP2sP
zvhNcxm7yd6b7tbmw5bmsj4/6rWhbn9pP7jLi3qNGYtFnSEYOR5x3nknIlGP
sBaP+jhMJaIe4SgZ9Uhts1GvPfumo84HTD1n97TF4r/WUlGfy9h/Ee/nvEzU
57K+WNTvF3YKoh5h8AK7PmzxiLWiqDMEO4VRHyc/Iep9X2je66rByVFnBXZO
jfp7AlNnRp0R6hyx+n5mz/AFu9+Tos4Nax61ryXP5zmbp0R9D9Z/Wuhrz7C+
E6N+JmvOivp+MHV21CNMXRR1JmDh4qhH6nlh1O+VsfOj/k7yOc+LOmchX6XP
c0nU18HauVHnmHnnRP0c8sujzhOMFI86c7B2WdQjY5dGfQ/G+JoK23zPLhH1
dXB3RdQjTJWJOh9wUTrq9SO/2q7/tviPtbJRH+frfTlF+KoUdVaof5Wo80HN
4/bMY9YW2/O9Jup7wEmFqDMHaxUVWV9e+zEWLfJn38Raqaiv456qam94rB11
PuClVtR5Iq8e9XeA96OOxmGnriL1bBj1esNLNe3HminGwyK739PsurI+E5+n
ftS5gbUGiqyvp/0Yaxr1e4a7LtautHaVtc5Rf9bk8631s3a3teZR5wmOmmkd
eeuo8wEvbaP+bsDRtVHng9q20Thjz2q/e6y10H7w0j7qXMJjB0XWt9N+jLWK
Omec11LryDvqHPjqHvX6UYebFGGkW9T5YOyGqLPF57zRWkmN1VAdeO9vjTo3
1PmWqPNEfp3Ogd9OUeebva5XH3kPnQmnNyuyfoE+d39rNXUOHPSMOmfwdadq
DBe3q65weociTPXVOPd7l2JN1YoIXwOizlA9nQl/8NVHe1RTHWpp7L6oc9NA
91dH63tH/Z3hPu7VfswbpXpTn8FR5wkulvAzvMUHrQ2M+jXvxUMah6MhitR/
qCL1HBl1Vth3uOoNX+vt/VpX5O/BMM1l7Ebru8W+9k2192CE5rJ+tO4LpsZG
nSd4fErPupe1R1Q/WJig+pGP01yYmqhx3olJirwrj0WdM/iarnrfrH0r6nk9
rD3gZUrUOYPBqYqsf9RaV42N11zuY5r2Zt/HtTcMzlI94OJpRbiYqbMZe9La
bfqcT0Sd49vUYBnOntE6WJihvZk3Rs+M5zUv6mzB1Jyocwl3cxUZm609GLso
5j/L/2TtuagzBIN/WNtgbaO1l/Kci8U8A6tdb6vdY1a7hZoLX78UOTcvWlsS
9etB1l6OOjfw8oo4GK69H9Uzfl57wPJLUecS7pYpsn6p9huse5qimmy0czdY
u9+uX9XeMLU66gzBxet6RuQros4r78EbGqfmbypSz3VRZwh2XtN+rHnb2mTd
93J9Jj7P2qizCJtvKbJ+jfZj7B3dLwzuivrXFJ73Z1H/2kr+rT4/n3tz1HmC
001aR75VfMDL+1F/N+DoI/FBbbdpnDG+H/C9l58H39V+sLk96lzC44eKrP9A
+zH2XtQ547wtWke+Q+fAV8qefdLaC3adsHinsTHN2NgTdT6o7adR/57E59yt
z83YStWB9/7rqHNDnb+K5jj6WOfA786o881en6iPfJ+d+4W1l43Tz4t87ZfW
/hQrPPtVOgcO9ukZw+ZBMcG9HFC9yb9TjWH2kMbZ47AiTP0cdW6o86/igPrH
Y/4cecbfaw/Y5D2DS7j7SZH1R7QfY4mYr6MmP2gd93RUe8Pm32ICRv7S5yP/
PeqM8m79o3Fq/q8iNYzGnA/Y+c3aeq2JxbyP+/5Fn4nPc1wcwF0k5pH1/2k/
xpIxv18YPCPmz3e/tdNjznTIX9YzTcecIWqbivk68vyYs8I7URDz9wReXuHP
YS2eaH3FYj7OGD/3/Kn/LsnEfD+4yBoDGWufs4/9t99043G57VEY8/1gMy/m
PHFeNubryE+K+Vnwc3bM60cdzol5hJGzYs4HY6fZ9TdR/5xnxvxzMkYfLPM+
XxBzbqjz+THnifzkmJ8D76fG/B1g3Skx7yM/N+Znwul5MY+s52sh35/5/n1x
zHmCxz5x+znBWjVrJWJeY7i4NOZ1hdPiMY8wdUXMx/l6f2XMI+/NVTGP8FUq
5gxR86tjzh98XW7Xx8RRyZjPZaxMzLmBl2tiPpf1j1sdXrU6FFlf6Zjvx7xa
Ma839akUc57gonzMueR9qqDI+1FZ43BURZH6V1WknjXFCvtWj3m94atszO+L
96Ca5jJWTn2cV0NzWV9RZ3JPRcbSDPsMr/Fn+zF/7pdYqxdzNmGnQczrSg0b
xbyuMFJf44x1i/lz5Nk01jjvStOYvz9w1EwR1hpqP/ZqEXMu4bGlIow00R6s
X5Hn91PXWiuNw06bmPMHj9fq3uGiXcz/XI+fBdor8tk6ahxerrd2Wcxr3kkR
vrrGnBXq3znmPMFRa53JeTdoLmNtdT7nddFc1t+oPXgu3fVs4G6Wtd7Wbrd2
q+oEFz1izhCs3axIbW/TOLz0VKSGvRThi/8JVFX1Z194gqNbtEc5nVlJY31j
zhBc3KG5rH9IdWpu7U7tx7zBqiVjA1QHGOluX5P62ffHVXyfsrjH2p9Z+9lH
4zBynyIc3a9I/Qepxuz7YMzZgp27dF/w/oDmMrbZztpU5O/WQM1l/RDdLxwN
VYSjx/Tcb7I2PObcUMNhGicfob42mldKNRgdc4ZgZ2zM3w34eiTmrFD/8dau
izlHo8QBa8ZpLqyN0R6sn6C5rB+pM1kzUfvB2iRFOJouJmDhcUXqOU33ytjU
mL97fM4pMWeum54H7xnv1Qytg7VHY8438ybrHPKZMecJRp6MOXOw9pQiY09o
D8bOtq/F31v8wdrTMWcOjmbHnEXYmaMIa3MVqe17VsMtcMPnsNjfmFnN/1ez
64+tvW7XO+i38QXWnov5NdwtVISvxeIDdl6IOWfwtUiRsRc1Di/Pax3zlqgP
BleqftT8pZizznuwTBG+XlaEr+WKcPSKIny9qghTrylS5xWKnLE65jzByCqd
CSOvKzK2VPfFfbxp7eGYs7ZGEY7WKsLjW4pwtD7mDFHbDao3XKzTOGOf61nw
zDZqHI42xfydga/NijD4tvZjry0xZxGm3lOEi3e0B+u3qg+OtinC0fuKsLYj
5qzAyMeKMLI95l8fYeoja89o3ofqI98Tcw74DMOMk6HW5tn17pizwthn1p6N
OT/Ditk92Pe4v+3r0pt53v+ptQ90L5y3K5ZjbXehf32DuS/0nGDqLVu71ton
dv1lzPmDr68UYeprRWr4jSJMfasIU/sUYWq/Ikx9pwhTB2PODWzyjsEWTB1Q
ZOyQxuHoe61j3mH1wdQf4oA6/2TtjZgz9bMiTP2iCFO/KsLUUUXYOaYIX78p
wsXvipzxd8wZgp0/dSZc/KXI2BHdF+/BP5r7rrV/FeHrP0X4Oq4IU9G48wRH
8bjXD174iw+MM7ZXtaI2ibiPw04q7jzBXTruEe5icd+PvUYZRyOt/WOcjChy
RvJsPBn3PVifH/d++CoW9wg7BXGPMHhS3O8DRk6Oe4SRorizy/t3YtzZYt4J
ce8jh2++jvI19JS4r4OpM+POCoycHnee4OjUuI/D2mlxj4wVxv1eOO+MuM9l
/Vlx3wNezok7WzB1LG31tbbe2kXW/6N4OS/uLMLa+XGP8HVx3Mfh6JK4Rzi6
NO4RjkrEnRUYuSzuPMHRBXHfAxaKx30uY1fGnVfYuTzuc1m/0n5Gfdveu3+t
LlfEfT/mVY57Xaln6bhzAy9Xx51F+Lom7hG+ysR9HF7Kxj3CVDlFWKikerNv
hbhzBkdXxf2+YLm85jJWMu59nFdRc1n/LfxYW2/3vbPIOeK/X1rG/bmfa61G
3HmCo+pxn0NeU30wdX3cnx3Po07cGYKXenFnCNYaxZ0D6t8g7szBTu24c8Ca
+prLWF3twfqGmsv6WjqTNY21H6w1UYSj1nFnAhbaKFLPVvpMjLWI+88HfM7m
cWeOvFTc60Cd2tn1hXFnrVnc+WZeU51D3jHuPMFIh7gzB2vXKjLWXntcrPNh
GV6v0zqe3XRrPazdbO1G1QxGOsedJ7jrokidu2kcdrorcu83KcLarXHnprz2
hS2Y6qo9SurM0hrrGXeeYOQWzWX9faoNdbtN+zHvXtWYsTvjzg6MjLTvZTPt
e9l//L/yPP/v4jus9dU4TN2lCEf9FKntANWefe8RHzDVS/cF+3drLmPv2P4b
8/w966+5rL9f9ws7DyjC4CPWOlm7wdrAuDMEOw9qnHyQ+ppqXgnVYEjcWYGd
YXF/T2BqdNxZoc4j4s4f3D0Ud25YM1xzGRuqPVg/ylpbrR+sM1kzRvvB1FhF
mJokJmBhsiL1nKh7ZWxC3N9JPuf4uHMW8sv1eR7VOlh7OO4cM2+cziGfFnee
YGRq3JmDtccUGZuiPRjjv2t/1p9jPR535uDooLUV1layv32dGWvtuLHxZNx5
grv3rW9bkdd5TJHz8rS1Z+J+zZ+vzFaEtflx5wYW5sadLZjqwZ9J289GW4yJ
OZrL2IK48wQj8zSX9a+qNtTtWe3HvFdUY8YWx50hGHk+7tzzTrygCGsvahym
lijC0VJFartctWffZeIDpp7TfcH+S5rL2EL1cd7LmjtUz3Jk3NlZqQiD71mb
Ye0Ja6/HnSHYWaVx8tXqo86f6NnxPNaIFdh5K+7vCUxtECvUeX3c+YO7N+PO
DWvWaS5ja7UH69/WXNa/oTNZs1H7wdQ7ijA13mr3sLWnuFf7GrItj7/wYD83
6TPBy5a4s8XnfDfuXzfJF6kO1Gkrf9fL4gfWNsedY+Zt0jnkO+LOE4x8GM+x
9pEiY9vjvs/TOp+vp/D6sdbN1X3corE9qhmMfBZ3nuBulyJ1/lzjsPOFIve+
VxHWvok7N7DwVdzZgqnd2oMzvtRcxvbFnScY+VpzWX9MtaFu32o/5h1VjRk7
FHeGYOT7uHPPO3HA2mtxZ+2wxmHqiCIc/ahIbX9V7dn357jzAVP7dV+w/5Pm
Mvad+jjvF81l/W+6X9j5XREG8xL2M4rFT639GXeGYOcPjZP/pb5NmjdfNfg3
7qzAzvG4vycwFU84I9T5Vv7fqLWosfNP3LlhzXbLP7C2za7/0x6sv7nI18Zs
j791JmsSCd8PppIJjzBVLOFMwEJBwiP1zE/4vTKWTfg7yefMJJyzkM/T5ylM
+DpYSyecY+alEn4O+UkJ5wlGTkg4c7B2YsIjY0UJ34OxkxM+F9ZOSXiEo1MT
HuHxrITXDEZOTzhPcHdGwiN1PseufxA75yY88rX/vIRHWLso4dzAwgUJZwum
zkz4HpxxfsLnMnZJwnmCkQsTPpf1H1lNopaXtXZxwvdj3sP2dWOHjcWsXZFw
hmDksoRzzztxecIjrF2Z8HGYuirhEY5KJjxS28lW60lFzs41CecDpi5N+H3B
/tXigLHiCe/jvFIJnws7JRJ+JvdULuH3Dz+NEv6sT7NWIeFcwlGlhDNEbask
vN5wUVHjjLVN+HPk2VTVOBxVT/g7A181FGGwsvZjr1oJZxGmaivCRTXtwfry
ukfuqY7GYapewnmCtca6d7hokHCe4KihIp+ticbhpakiNW+mCF+tE84K9W+Z
cJ7gqK7O5LwW1s7WWH2dz3mtNJf1bbQHz6Wdng3cTbLW2VoXa9clvE5w0UEM
wdq1itT2eo3DSydFaniDInzdmHBWrta+8ARHHbVHcZ15hca6J5whuOiquay/
S3Wqaa2b9mNeX9WSsdtUDxi5rcjZv9naLQm/hqmeGoeRXopw1FuR+t+pGrPv
HQlnC3Z28udG1krb9e2ay1gvO6untbiN9dFc1vfT/cLR3YpwNFrPvb21/gnn
hhreo3HyAeqrp3kXqQb3J5wh2Hkw4e8GfA2x1lz1H5RwnuDoPnHAmoGay9gD
2oP1gzUX1u7VmawZqv1gbZgiHI0VE7AwTpF6jtG9MjYq4e8en3Nkwplrq+fB
e8Z79bDWwdqIhPPNvOE6h3xiwnmCkQkJZw7WHlFkbLz2YCyRsu8vSfu+Ym1y
wpmDoykJZxF2plit+hQ5a4/Y18NdVreEtc+s9bC+adamJ/wafh5P5DiaoXir
tScU4e5JRfh6WnzAzsyEcwZfsxQZe0bj8PKU1jFvtvpg8AXVj5rPTTjrvAfz
FOFrviJ8PasIRwsU4es5RZhaqEidn1fkjBcTzhOMLNKZMLJYkbE5ui/uY4nm
wtpSRThaZu2hhPP4siIcvZJwhqjta6o3XCzXOGPv61nwzFZoHI5WJfydga/X
FWHwVe3HXm8knEWYelMRLlZqD9avUR8crVWEo7cUYa0v/3/eONhj7Q67vp2/
R2LX6xP+9RGmNlh7NOFMva0+8m3igM/Qu8g52mRta8JZYWxLwnmCo82JHGvv
KjK2TvfCee9pbmCNr2F8jftAzwmm/rL2js76MOH8wddHijC1Q5EafqwIU58o
wtRORZj6VBGmPlOEqc8Tzg1s7k44WzC1R5GxLzQOR7u0jnl71QdTB8QBdf4q
4fzB1NeKMPWttZcSztQ+RZjarwg73ynC1/eKcPGDImccTjhDsHNQZ8LFIUXG
vtR9cR9HNHe1tR8V4esnRfj6WRGmfk04T3B0TPWDl180zth21Yra/Kbx/7Fj
X3++Mb5S/F2SPK/jn9aOaj/2+lu1hZd/FOHlK/49XJ7z+K/64Os/Rdg5rgiD
iaTfB4wkkx5hJJp0dnn/4klni3mxpPeRwzdfR/kamkr6OpjKTzorMJJNOk9w
lE76OKxlkh4ZiyT9XjgvL+lzWV8s6XvAS0HSI3wVJj3C18lJrxO8nJB0FmHt
xKRH+Dol6eNwdJpdfyOOTk96hKOzk84KjJyZdJ7g6KSk78EZZyR9LmPnJp1X
2Dkr6XNZf1XSa8X7d07S92PelXb9h+p4cdK5gZcLks4ifF2Y9AhflyR9HF4u
TXqEqeJJj7DwbZ7veYX1PW5fW6YXOUfnJf2+YPmypM+FwfOT3sd55fh/swX2
eWyPkkm/X5i6OukRpmon/VkXWSuVdJ7g6Jqkj5OXTnofTI2x6/bWOlgrl3SG
4KVC0hmCtSpJ54D6V0o6c7BTNukcsKai5jJWXnuwvrLmsr5M0s9kTVXtB2vV
FOGobtKZgIV6itSzjj4TY7WSzhafs2bSmSO/KOl1oE71tQ7WaiSdb+ZV1znk
TZLOE4w0snZq0llrrMhYA+0Bj2P1nK611lTr4K550nmCx5ZJZwjWWilS29aK
1LONIhy1VYSjdooXqSbEi3UmEb6eNF6+59+QWuuYdM7g6zpF2Lmb/5/P31HL
83u9RPPuKnLubrB2i+pHzbsknXXeg66K8HWjInx1U4Sj7orwdZMiTPVQpM43
K3JGz6TzBCO36kwYuU2Rsc5Jvzfuo4WeJc+xl9bB3e1J5wke+6qW1PYO9cFU
H0WYukvjMNJPEXbuVuRduTfpnMFL/6RzBoN3ag/OuEdzGXvAWsOk8zJAc1l/
n/aAlwc1Dke9de/c95Cks8LnG6oIL4OSziJMPWStmeYNVl8zNViDs2FaB1+j
k84NvIxMOlswNVzjcDdCkbGBui/OG6W5rOd7Iz+L8bPXuKRzA1+7rT1nbaG1
iUlnh1o9Zt/vjhhfWf7Ns7VO1jfB2iSNw9RkRZh6VBGmpiWdG3iZmnS2YOqR
pO/DGVM0l7HHk84TzD6muaxfoNpQt+naj3nPqsaMzVINYOfJpDMHj08pwtfT
GoejZxThaLYiLMxPOkPsOzfp/MHXDN0XXM/RXMaeUB/nzdPcfnqW3O8APVMi
DE635/mrPcc8a4ssvz/prD2vcfharD74ekfPjuexNOkMwcuypDMEa6+KA+q/
POnMwc4SccCalzWXsZe0B+tf0VzWv6gzWfOa9oO1FYpwtMbaeDGwVpF6/pjn
/W9a+5l/g57nfL2e9O89fE2dqTpQp7e0DtZWJZ1v5q3UOeQbks4TjKxPOnOw
9rYiY+u0B2OH+Df9ef41cqPW8ez4fsLPI/z8sVU1g5F3k84T3G1RpM7bNA47
7yty7x8owtqOpHMDC/y3K2zB1HvagzO2ay5jnySdJxj5SHNZv1+1oW4faz/m
7VONGduTdIZg5LOkc887sUsR1r6w9kLSmdqrCEdfKlLbb1V79v066XzA1E7d
F+x/pbmMfao+zvtGc1n/ne4Xdr5XhMG/rW2yttnagaQzBDs/aJz8oPpWat40
1aCC/cxT3tofVr97ipyjn6wdTTor1PmXpPMHd7/ZvGN5ztfPSZ/P2AD+Dpu1
o/x+BM1l/SGdCWvHtB9M/aYIU/+KCVj4T5F6/qN7ZeyvpL+TfM4/k85ZyB/T
5zmudbD2R9I5Zt7vOoc8nnKeYCSacuZgLZbyyFgk5Xswxp9H8ufW/Dl1MuXM
wVE65SzCTn7KawYjmZT3wV025ZE6F0v5OOwUpDzytb8w5RHWTk45N7BwYsrZ
gqm8lO/BGSfY9edJHzs15TzByEkpn8v6S1JeG+p2Ssr3Y97FKa8tY2ennCEY
OSPl3PNOnJnyCGvnpHwcps5NeYSjU6zOf+V5bS+y/h/FzP3Wf5+1Av5tZMrv
C/ar8jtP+Lf91n96yvs4794iX3uh9V2a8vuFneIpjzBY2a5TKX/el6ecIdi5
LOXj5CVS3ked66X82fE8rko5K7BzdcrfE5gqk3JWqHOplPMHd1emnBvWXJPy
uYyVTPkerC+d8rmsvyLlZ7KmbMr3g6lyijBVNeVMwEI1RepZRZ+JsUopZ4vP
WTHlfzZHflbK60CdqmsdrFVIOcfMK69zyOtYK0o5IzVTzhys1VKEtRrao5jO
g2U4rqt1PLva/B4Ya6l8+zkm5TWDkYYp5wnuGilS56Yah51mitx7c0VYG2T7
DbRWZAycxf8DyXOmGmsPzmihuXDX1toFKWejhq170/67LGr30z3ltaFu/+X5
nDbWuqW8xoxdl3KGYKRDyrnnnbhWEdau1zhMdVKEoxsUqe2NKa89+3ZJOR8w
1U73BfudNZex9urjvK6ay/qbdL+w00MRBu+zVt9aA2u3pJwh2LlZ4+S3qq+8
5p2sGvQSK7Bze8rfE5jqm3JWqHOflPMHdz3FDWvu0FzGemsP1t+puay/TWey
5i7tB1P9FGHqATEBCw8qUs/7da+M3Zvyd5LPOSDlnIX8JH2egVoHa/1TzjHz
7rFWW/n7Vv9EvjMyOOXMwdpDirA2SHsw1lF1hoMhxs9D1k7k71pbPtvaHGtj
VDMYGZlyjuBulCJ1Hqtx2BmnyN4PK8LaxJRzAwsTUs4WTI3WHpwxXnMZm5xy
nmDkEc1l/TOqDXWbpP2Y97RqzNj0lDMEI1NTzj3vxGOKsPa4xmFqhiIcPaFI
bWep9uz7VMr5gKlHdV+w/6TmMjZFfZw3U3N761lyv3fqmRJh8FVrw62NsDYv
5QzBzlyNkz9r7W7Vea2eHc9jYcpZgZ0XUv6ewNSSlLNCnRennD+4ey7l3LBm
keYy9rz2YP2Lmsv6BTqTNU/b16JZRc5UnvGVzXemVqScCVhYqUg9X9NnYuwV
a8P0OTP5fr3c2jTVgTqt0jpYG24MDrOWtrnn8fdT7L9Jitn1mynnCUZWp5w5
WHtDkbHXtcdYnd865byu0TqeXTzf+7mfjaoZjKxPOU9w97YidX5H47CzSZF7
36wIa1tTzg0sbEk5WzC1QXtwxruay9j7KecJRt7TXNbvVW2o2zbtx7wvVGPG
Pk45QzDyYcq55534SBHWPtE4TH1qbX7KOfpMkdp+rtqz727xAVMf6L5gf5fm
MrZdfZy3R3NZ/6XuF3bOt3oV5juDR629ZW0da6yGJ1n/Kfa1ZZ7NOcGuT7br
AovLbPxbzZuoGnwnRmDnh5S/JzB1WKxQ54Mp5w/udhX5/P3WDmguY99rD9Yf
0lzW77H5u63NtnZE+8HUj4ow9ZuYgIXfFannMd0rY7+m/J3kc/6Scs5C/og+
zx9aB2s/p5xj5v2kc8j/STlPMPJXypmDtb8VGftTezDG34vn32Hw7y7+1Tq4
O55ynuAxkfaawUg07TzBXSztkTon0z4OO6m0R772p9MeYa1Y2rmBhTy73imm
4mnfgzMyaZ8Ld4Vp5wlG8tM+l/Xnpr021K0g7fsx75y015ixUfbej7R2mrFx
sdXmlHx/J7bb97XT8p21ky1+Y/FUW3da2q/h5/S0x33Wzk577dn3zLRzAVNF
ab8v2D8j7XMZOyHtfbxnZ6V9LuvPS/v9ws75aY8wWCbtzzpi8cK0MwQ7F6R9
nPyitPdR5/vtuoG1htYuTTsrsHNZ2t8TmLoy7axQ5xJp5w/uLkk7N6y5PO1z
GSue9j1Yf0Xa57L+4rSfyZqr0r4fTJVMe4Sps/Odg3LWzs33Wpa3Vjbtnwle
Slv7T0yVSjtn5MWtLs/Y+3yGrTs/3zmrYO2atHPMvKvTfg75yzbnsnxn5OJ8
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
kbjAb4cXDmZn6/7uVR9rgkNxtlhZpDWwslT3HRyE5Pj38PZNFiv4BYOTcJnm
UdflGttnz7+/rdksRvALviqGcP7hJMT5uVqswBl+wVXihbm4CkerjzUjtY69
goOQNcM0l7NbFbpPFF9hm0J3F+In3Gn304//n8bnLGbfV2h59uwsnmvt7Dxn
is8YPIREHIb9VB/qsdv2uZufxbI5x2FwHhJxIH5tc+7hz+Lt+gu7vsT2fodn
audcbO1S/g6JxQutXZTnX+8e1bN9iXFrl+f510j6uK8jts99tud7fFYbL2Ht
aptz0Prvtf4tPCPrK2mtnPX/bP33W/9WnpH1XWOtovWvsVjWWnX+zYDF0taq
2PVrFq8k5++C29oHbO02Pp/1lbdWC7eZ9T9o/e9b/0n2bEfY9ad2/Zf1D7Tr
D+z6fZtb11p7PrPFqtYa83vhbP5gm/OhzdlgfZWtNeDfc1r/EOvfYf2buS9r
zfi3MdY/1Po/tv4iux5ODe26mF0Ps+tP7PpfO3eQXW+36y22rqa1lrZ2PZ+V
++D3x1isba2NXW+3WN9aR/6usu0z0tZ+BqvWd521e6z/DOsfZf27rP8j62to
rZP1f8znsNbFrr+3cwfws6LNOc/mj7HrPXZ9oV2PtevP7foyu37Yrvfa9SV2
PY4/R7frnbZHU2vdbJ/d3K+1W/m39RabW+th159bbG2tl12fbWtH29rdtnav
9bW1dgf/psj6vsy6n/E77tHagDz37uF2xHeHjw+fI334+fA8/q/P5l5rrZ/N
f9niZdTern+w2NnafXm+L/5H1n1FPa31tf7D3Lu1gbBnsau1B/Lc5YcjEncf
Z+/Leh85vkj8fj/a3JusDc7zHHckbsBj1tfT2og8z/FI4gn8lWdjbVieu//w
SOL3+936elsblec5Tklcf3gA8Uji9yPHL0kfe+GjZI8/eX7WxuT5PFyTuAT/
tr47/6+pO4G7ba7+B37u5brXc87emwiViCJzUUrIlMxDSgM/RWQeQ6WBkCRT
GTJkSHPmuWTOFEIlSTJPIfNcKf/9ftbn/PV6Pc9rr7P2+g57XsNnrW//f3DP
X6I/5ydO1Fp+/+l5n+//D7XOlvUih7Vvi0GtQflZSxt51/Uy352o9QqtO2n/
NM9gzz96ouSsU7klKIrnqOcfM1HvButPLkvNdz/3/OPUHOq3e/T/h09UG2tf
bjWouVoT0zh+W+/yc8oueg/08kf28ocPa+7WiPvBsOoSqRlzxLDWl/tdz//+
sGpdq2X9n56+bKJqGf/KmqrZ96Nh5VvLhbVfPVq1jr/Rj3NFaoqeOKytmqI3
yx9pq5//etdOVJ3Ia1PnT73Id7XVVl+nTNR8rKG4dM9/d/9/Q887eVh10dTo
unWi6uKokfSad89E1eb69qhoxzbo6T9H7tDQ6p+cMqytehU/7OlpE5UvPqWX
+dtE1bX41qjGNN4d4aktclPGUV/uO5HX/p7koKsj8MBE5R/LUT8/73xriP5k
WLl98p+O6ts+0tMz+v8fD2srz+/J5HLJCZw2qnwFv59Lzoe8r+N7/j97unEv
TlRehRyex5I7KL90lsho8++JwsjLl5hbbnS/7z/977X683rGsLBnPxtWf3D3
XXiwjG9Vi6+Xn9rzft7/d8HVD4aFxYahP7WnZ58oPOy0YeFq4bZX7/s/Lb9P
77dzThQGbaLvb/ZhYSZnpG/z+3FwlDC781gnM/M8ud8O035BmJm0P7P/n2ui
MErbDGrN1G1Nrd//q2Fhvd6YLezdmtZtGxaeaqacf9fpkWFhbbYRAx0WVgUO
gl5gfdj3DEpPsO6x9VjnjTyM18/7fuaLnrBE2sJ7faQpXUKbizImDM7Wg+rT
fE+NjmHt4/va0gmsX/zxpvQB9Bl0gegD9IsFMoePNaUnWKP5qjxPaq7eFb3C
e+NvWcMZfRrZ6DafbEqXsD7yWf32HdE9Hsiaye/v5c9LP+8bVI6YnKMn+/vq
sv78f7Wr+/nhrJ9sDdxNmvpe+E2/Wyz9PNYVvYM+6S/5pjyadZitmft/Tekt
fvt+Lpk+tUHvOChd5t2R/0fWarbG7qeb0k/eFTkyO/XbC3reYtGFfqnv6DAX
99t3R+fZvCm9yPrLdKj3pE/t0dZcvUgf/6M7WdvZGr6fbUp38ps+Za1f6/xq
g7ZGK13pA5F/IetIW194q6b0K7+fyvrP2mpD3rqvl5pXdLCXs3a0NYK3bkpP
WyFy1i22Buy/sja1tYPpYitmrOt72ZWiO23blM62UtpYe9g6sVf2vPdFl7vc
sY5KD9y+KX3JGtb0qdXSP51u5cxHe3xrul7lmKJfDbIm9qqDssWsd72a89OU
7uc3vc9ayKv0/Gsc66h0P33hW6vWGrXWPLY+LXturfRJN1w3fc6Stbg/NKg2
ZLS7ru9vxVHpmTs2pVua065N6ZPazNpvf5F32axZf3v1vu1+Telg1t2mb26Q
/s0DbY3cG52zUemWo6zX/WFzaEq39JtOulH61AZtTd2b+v2rjUr/9NvazNbX
/UJTerL1uOm2G6fPW8x9VPpzl/W61xiUvm0d7zUHpaNaA3ztQengn4yMftHW
7P2Dczx6Xde1TvhaPf/LTem0ftN/N02f2qCt8Xtrv3+tUem9fltb2trCX21K
BzY2HfnT6fNLTenV5neb8z0qPfktWY99nV5m76b0Xr/ps1tk/re7Z0elD3+9
KR14y4xHxtrCn29Kt3fN6Npbpc87et4Go9KZF8ja6esNSifXx7qD0se3CW1t
YrS1i/WrH7w7XcNR6eHvyLrr1oP+RlN6uN/fbEr3tq46vX6nyOjL+tnWNX5n
1l3foKfvcs1HpcOf4x08KpuOnLb7epbZBMNaX/tbTenY1l2/p99uPCo9n46P
Rx9nQ2yfYzw07Yx1n3M/Kv2czm5Nd3r7t5vS8/1mB1j3nS3ADrDWO1vgkKZs
H78Pa8qOIPeI6zwqm4I98aWJ0uuPaErntyb8o67zqOyFh/rtpqOyob7TlB2h
DZvAmvHsADaBduwCurz14Onvj/eyW4zKjnjBORuVLcA+sK48m4ANYb15dsP3
mrIj/D62p7celdwz/Xab/n/fibIhrENP9z+hKfvCWvTPuZ6jsimOasqWMb/j
m7I1tHnCPTgqG4fdoB3b4aSm7A7zfqnf7jQqG4QdYB16Ov4PmrIvrG/PLrFl
i7zi2o7K7rhRPY221p75l+s2Krvjx03ZGof09H+dy1Hp/2yUwyZK9/9hU3bK
t/vfr/bb3Udlm7B7tGPT/LQp20EbNhBZdhC74TsTZTv8PDaL3zOz90dlp7BR
vjdRNsfpsV8c21T+h1HZF6fG1jjCuJ6/Udl0Z8au0Z4NZP8WfT8D9vKo7KMZ
Pb3PqGwcNs2xE2XHnB3bx+9Z+BNGZR+NYlM4V2yd4yfK3mGHndDT23mOYq/R
Cffuisb3DJyUZ+e+ruj9ByVn7Xa6GRsEfXx4PwjNBvxB+mQvWXf7Jt+jUbUh
w876Yej/tvUs/yj9kWHXbNHzb2qKz/6Ss3xjz3+0n88Z1ryJnDXDrSn/2V7+
u8P6vXHo8RrPtq9G9meRZz9ZF3w8x59nPg8Nam3jBwfVxrjW79WndaNv6On7
uzov5rB5WzaMc2qdWm3n6rd39vx7h7Um8n3DWrfWGqT2nRHZrdui17IWXle/
rWP6bvUnQ/+yqfbWM92h523f1hqUv42M9SnvTf/6tp+stSm/3svs0/8v1fM+
3taW/M7pwxqWn+jp+4e1LuGSPX1hU3Netqt15e6ZUmvLoa39dW9X+853bvt2
DwxrHbqJrvpB09+/P1F2QTe11hWzptg5Xa01Zl2mV4dlL1tfzDNNZlXrZjTV
J/4ubc31/IytrbnwX9G56EVNV/e6NajUPWNbsiu/2Le7qKl1hWzZ7Zf09O3y
obui2dvsc7b5/qOifzq19l8e+vaptS6INUGsL8MGvz22/6WRuTzyd0TWuiEz
elvjwMhbg+bKrmr+q63OHrkyMrOFv/xMZftfE/rXTcmRubgpf8HV/e8vtfWb
3NhHwD/wzVHRk/3MWmsE4O/V1hoDO85U/offZP724Vt3wFyMNT2830beWgM3
hD64K9qaBZc05R9RL3eZtmx+NeX/0NV46Dd0tU+tdnVH+Qj4Bw4alfxJfT+/
7KpOtXrP23bll1CzGu+WyOiL/InxY9wSGb6OmyNzWNre0tNfacs38bv8Vof6
5vhD0AP16kZV73eZnv5qW8fj9+FdHZM6r4eMqg157dB8KX/t6pq5FuoP85ks
PXP5Vf74P2P+MW0du7qyW81ccn6rv3pHzgv+DunHfPZoy5fkfuaT+Uv6f4BO
Oirfo/qi/CpH9/yLuqovekz8M+qNqjW6c2TQu3ZVw1H9xqmj8sX4fUTo62Yu
X83d6VN/d2ZuszfVxj7+LPUD1XXTXlv+nO93VfNLvS/+onvT5x5d+RAW7fmX
NvVsvpz6hPeHniX0tTO/XqNwPM6D6WeOpnxq6s4dnz4XmVY+iofT/7XpV83D
73Ulq8bYA3kvGOuypvrSZuZR+YPMe86mfqtRxpekXhD/kn1kNok/6tGM+720
3XRa+cr+mnNFTr2qT2WrVtUh08rnpKbVuJ7Vk+nfb3WuDovMExnL/n+k7bGj
+o3mB3s84z6ePtH8Zk9HZtm2fGGXxj+mzpEaR2ol4V8S+tnI4D0T+vBR3ZeO
RX/Pp8+D00adpYu72qfODd8a3we/x4ld1cJR78QY+GrmqCvCR2ffs6PSOemZ
/G4vZT7Lt9WXfr7clV/uqfjoXgmtn1cyT748tVTUUeG7Q883S2395sebq6u6
Kvxjc8Snp9bKcm3ViDHG5U3Ja8u/pybG/LOU//DV8XGNyme3b8/fp2+3d1t9
qr2Az4/3pq78dOpy8PupnbHhLLX1mw/wiqb8dWTm7ao2B7/efuI4bdH6mzlj
8RWqySDPnj/R3NR14GPE/8gsdZzGUKPDGNqqBcFmV7Nhv1nKN4neMH5F+dkP
9PQF/fg/6ipvf+6mbHw0X+WMtJWTyz/IN3hlUz7GWeOvnMixazvKnH/juzAq
OfvIqluhbgDeObNUP9qeG/+ntvLln+5qXHnGfKJNZPhD0fJ3F+gqn5xv81vi
TW3RJ+e49H/KqPyz989SeehoftpV2roWzgM/qZzzB+PLbSN/dtrIW783xy8f
mW92jpw3vlS03E3zekPm6X53D7s3nTNtZ5dL0h/vr4eVX7ZWcpflnx4UX6tc
6YW6yp32m+92nsyH71mO6huml28ULQeRf1UOrZxbv+W1ykc8RLws/fL9vjlj
/WRUbcY5utrKvV2gn9u5w8q1xCPDZ4snv1eu79nDyimV5zlPL3/WsPI6R6M6
LvRbmpKTy9n0/ItDyw2WIyo/dJwzjDdfL3/OsPI95anKHzYvPPLyio2DL5e1
7fu8JPJdT1+aOcsxlpOsb/5oOZty797R93/esHJCbcnISZ6Njhe+e8K5d53f
2ctfMKzcUnnIcpXlKctTXzy8C4eVuymHmaw85+XDJ8+nfXXfz+XpZ/Z+rKvT
Rg79OzNfPnB9rpq+l0hb85ZnKo+FP1xOi3wWfnr81Xr6U/TkYR3noaHlev9o
VPec+017beUIem7tdxy3NzWWcfnml8m1lnspL3frbJcJ/Z7x7+l1/ebPtbqg
rXtZ3ttv6ZZtYSzloMm1lJe2YlfXa5xjuWz2r9LV+R/nY9vKh1u3rXO3nGMR
5xpW3q598qxP7rcrdXXdjbFaV+fZPjmD8pHlEcoJ106+uVw8uZDy8DZMn+Rc
E/zPT6+ccnnA8sl/0ctcOaxc4w93Rcv/PKPn/2ZYcmt1RY/zPG3l9vmXs2nM
6+jtw8pBNpcVM59FuuKNc9qNY77rdCWvvdiKnFL5pOaNls93EZ2wrZwyOYry
Zo+dXtcJ7Rou3lScRj7s+3v62WHlfZzf1jtIjusSXZ0LOdxzjAq3Kc9Rbp4c
yBv008u8YVTyx4Z/TK7DWrkWS/X9PZW2ZJ/KuBe2dX/Iu/xVtnLa/j298pf+
lbwi9JKwwTkmeU5z9v08M6xcv6WbmtsGua4r5Xy/tymZjdKX3EJ93xDacehX
boxxLmlrDPlKl2Ur9+WNozo/G+U+fm/u08+k7eb9dvmu3mP2Ld+P+9yw8heu
bCuHRn4DOTkS2s1N14rMb9qSkwdxdbbw7PP0Mi8MC/cOrwwTf/WMwsTr54gZ
9Y+P59mChYdT/mBT/Wu7Rk+/NCxs4TVtjUEO3gsGcROYkDyXsKurNDUuXPSb
+jm8GPrFGYVzfSG4V/Q7++2HmpLZIr/1af+NbfX72cx7sxzHm0c1ny3S12bp
+6bIwjO+pZd5OXO+ua198JBLdYU32jXz3jrH8fvsh3c7OPxD+u3lbV1L1+AP
bcnBvMGqwazBSe40LIzUZeFtH/689Mlh4eXuHNY+2LY/pQ9YJGNoa8y1m5oz
+fWaagsftREbt/+9i/ub73FYOC//6KuDS/IbDmnJrvBV5B0nXBW801yjuq88
pxs1FU/lM7mtrTntnONwPDBb9yZWLuZ4R1PxTrFOMU+0OCbfy+7hfye4eHh5
8UhtxRzFG8UgxRCfaCq2J64nlii+KIb4WFMxRbRYHxkxuKebiuehxfHQ4nfi
aeJqYl5idGJ74mvijV9K/881xScvPjYZJ+vpF5tqS362tmIz4jKvNCWzUuI/
3whf/EqsS2zrv03FyfiCxMTQ4l8ztxUDIyMOhhafmt5WvArdtNWn+NFEW7Eo
cah/NxXPMzexrP3CF8fbO2OJU+2ftmJH5iweNEdb8aE141fk64Qnmaut2I+4
j3jRN0OLBeGL6dCP6F70n3nbitms0/Pnbyses25PL9RWHEUMZcG2YhvrJebz
rciL1Xw7fLGag9JWDOTgtH1TW/JrJ66iTzGRRdqKkWwQP+d3enq/nn5XT38s
flW+Wfzze/7XR3WMx8dnfNiw/MZT2rpGrsXnenqrtBW7OSx9isMcGnm+xyOH
5X/lc+Xz/V18sfh8m7c0xb/RsUd3paPyoR41LD/qMl35T4/2DHTl9/yeZ6gt
/ymaz/OYYfk2d2vLz+g3f+axw9f9ncdGhm/yuOHr/kk0v+aDXfkV94xv8vi0
3W9U/D2mFm7HWtR/ic+TzGpTy1+Iz3/If8CPAG/zUFe+PrgguB5rhfK58RGi
+fesgcj/dVJ8ZeiTs54avxy/Ez/WJIZp5lrbSP9bZT0IvhT+EOuK8NdcF38L
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
5tU3Gbat/fjsYv0tnz5h5FcO/2tdrcO0XeIvaDEXYxp7XAePnTy2kdEwMzD4
HwofD315bGW18naJzYhmb6qh9+Hw2bVotiQbTx0/NiMeuStjs+KzK9X6Wyv0
6pHZJfYpPpuRraTOHfsLT5txnT02526x79BsQ77zdcPHQ7MT9aGvG2O7odl6
6gCtH77aP+rfsa1sNwjNDkNvmGNaO3Oe5HVl66mDx/5h+7CB0Oy1yVpE4auh
x75iK6nr87HudbuJDDtPLR+12OjhZMmw29hN/ClsL7V/xJSPjP1Fjk2nLhk7
55rYSmh6KdmNI6+exycjYz+aDquWHXvppdRbZmOwd9QoUguPraGO0SaRwds0
fO3w/xT7g+3EfrGfHPvJMX0mx6WOkZp6bBnbzUKzcdCfix2mX/YdHjm6PN+P
+5iPRX/6Zftc0tWaInt29W7xPvI+4VMVqzgn7wG09wmfsO+9b73vO/ri+JzV
FOPvVScMfWn8tGKEfK3yvbfpqibqr7paf2jr/LadGj4Z9cSWSdvfpd224cuJ
2qmrWqmndrVu0HZd1W+13XrmyqXfPjwyaLXIbHcILTcfTfbXXa3ls2P6tb0+
tcus5TMtMsZVx8x259DqA5ib47PG0i7ugaz7gz46PL+tAbRb6KMj47c6Zmq5
ft51TX2z3SIjRuG6+EbI19q9K1lba/yobyZ/H23/aV2twaMv68G4ts9Mqxyw
L4RHZve0dQ/gq59m+8XQ8vHR2u3V1dowaqaJs6LH6zF/qacXEDfsSo5Mkzb2
y2fy/vTetjbvV7p6x9p+LfSfutq3/aDqNdt3wqBwn1+NjP6tc2M872Vtyf6z
H28JOsgsFVOjE9OHrYf1+67iCHhiJOdF30aTpWPChtIzxSb2zX1rTbL9evrH
U2vtMfTt2e4fWtwdTfbJfntA/z8xrl/R1f4rulqfzD41L77ZVW1h7b6Rfsjg
i7mLg1vrSwxdPwemHd0WJvXqxErQ9N/fdLW22UFd1SC2/cFM1f7b4ZFBi63b
Hhz6kH57aFd1LU7M7xNmqvW6DgnfvA7M3CRekCdre1hk3P9o+7+T59HzdVt+
o63d9d2e/u9M9YySsc7XSbmm7hnrcpFRK0PtjCO6amd7ZPja6RP+1jN1VJ4R
NTLQW6aPIyI/uT8yk2t2dSV7TJ4R97/1s47tqvaF7XGhH44cGWva2fdi1rfC
l2up7Qld1SeEddCWrFzHE/6nT3LW57L/+PA9s2jtPp/5WDPrhMiT8Y5y7M7H
l3KuPL98SPwvfC94J+U5td7PyT299yy1Xjn6nPB+EBomGE3W9pTw4YnR9lub
6Iddxf211RfbYXr24d/VFS3O9ZPI6MdaQdo+nJqKPwnftTs19wMdU7yTnilG
iaaHXtjV+pI/68p/ZvtIcOM/72J3d0WLKdv+IjQbHE3Wu807znndPuNul3N8
Wq6p+Zob28g5PD334V6hne8zMx/9/yz0BYPa2mcNSv65szJPse8zIw/HclL6
tP/szF+t8nNy7fjt0NZkHB8zGX4119d+/fM/8BvwP+gHjz8Cn2/Q9vzudT8D
2n71yX1nfTd9Y9HW+3PdLsi1cw4v7F4/vgszf/XD6Qa+Bdr9Kv349vkW7ph/
303r320TGeOoqY7v+yheaSz3zkVpiw/rN4zvi+/CO/q8fKN8k3y3rOd+aVff
BesmoOF7L82+8ffhssjwJ3jfel9556LvyBqRV4T/zdD2ex96Px6Uf+9Sa0Re
Gb73JNzAVT29xpTyUVwZ/l7hwwlc19WaoPQla4le3VU7uINrQuOhfce1ubar
Pk4LfXq214X+begvBz/w29DX99sbuoq/i+X7vbLYfWj8qzIH8jdGfpXE928M
jYeejPX3v3/XVR+2N3X1XePPuTl9/jj78O/oai1G3yOyZOh+vh+3dPWNsP19
6JvTp37E332bfZftR9MPd0ib7fvt4/32sf7/j13pAbYnRi+4NTw+o9t6+udT
a13RP3fFs/9PuR+e6Mo/Tu6r4evjqa6Owbf4ibTlM/9r+HxQZHzX/5L9xrgk
/qrbM9bjmY+xtCG74kx173p2rNM3W86V/U9mbON6P97Z04/kffm3rnjPhPZs
2t4V+kehyb7Q/z/f/9/dle1te9+UWh/2nvCsB2Gd3Mm6B13tO39sr0fm2a5k
4G9fSFuYE7z70xY+F073ka7ebQ909d67P7R3nvPzYM6hvJsHc66cy4dyvPJr
Hso9Y5yHu9fxLQ9nbsb6e+bjPWvMCwe17jA+3gOZmzngPRr6jNAX5F3xWK7L
H3Mv7TCoa/V47qvbcm+ImzwWPnnn33p4d2b/EzmuA3I/zJrrjKbveUf/IzJ3
5PraD8vxdK7dn9PPbekX/4Ksu/fM/1zrZ7L/uVzfM3Nt0Wflujyb430+cvhf
m1I0PJL7zvvTe/v53Cv6eSTX8RuD2r4Y+p7IGMfa6vjWoP57xto/vJdC47+c
++H/ASngyu4=
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
q/j/AFri51c=
    "]],
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  AxesLabel->{None, None},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426076438939*^9, 3.661426187874078*^9, 
  3.661426308282605*^9, 3.661426459930572*^9, 3.661426957232654*^9, 
  3.6614270320005703`*^9, 3.661427524701507*^9, 3.6614278315605497`*^9, 
  3.661427865216304*^9, 3.661428301933514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dp", ",", "surf", ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.50780365021*^9, 3.507803662906726*^9}, {
  3.507804088801086*^9, 3.507804089028099*^9}, {3.507804133030616*^9, 
  3.507804134866721*^9}, {3.5091623107823353`*^9, 3.509162315686616*^9}, {
  3.509162909534582*^9, 3.5091629162589664`*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxt3X+sLGd52PFVEqJC0zhSjprIaiFJXQlXCUToBMWu2AUSNZCmVMVVY0UJ
bUKioBbSgtLIVaFqrCvckNgEdIAoWOFHN3EFVgBnYxJjxcYMhhw7nMvxsTFr
c9d3fa9/Yxvs6x/X5rpn9p3PM3oex/8cf+/zzszuzPt9fzzzzuyP/tp/feNv
fNdkMnnyrMmk/3veC15+xV0nD6btbze9/qZzLzrv5HyG3/mWK8+69OQi+OwH
f+bN77rwuuDl1W+74+qTXfBLLzr8v5fsBv9O/z8X7gW/+V2HO3z9fvCL3vSG
z9908iD4M9Pt2y65+GvBF77k8IgvWQY/1//3uTuD/+yuk1vXXrjKfPqu4NNH
D/fw+nXw4dHOvehDdwd/vD/gyRPBT3zs8B+27wn++fef8/r3X3xv8J9c/KEL
Hj16X/C333H4DV7yQPC/6r/g2x4M/uMLHn3Hi659KPjhw9P3lhc9HPzaw697
44WPBP9Cf7wLHh3PX3+CTo/80f74H/tW8Lz//D/37YHPmX3l8PK94JGRn+q/
zwcfC/6x/gK+6vHgzfFOjLw53u+fCt4c7xVPBO/2J3Q58uP99//dJ4Nf3NeP
lz4V/Lr+fOyN/I47DivM7zwdfHl/fl58OvjGvv59ceRH+/P11meCz7728os/
9IPPBv9sf/6uGfm3DqvrqV/9TvAfHX69c154JviGw80v+PTID20d7vAXnwv+
gUtPfewzZ0aeDP813hn+nR94EXz4aQ7P0HUl3gVvwuHHzuzWzT/sBfeX45zw
w/YHwX31vjz8sL9l8Muu6EvcWfa/Cu71ujH8cLx18D397sOPndn5m78ngi87
1Veoe4LXm89zb/ArNyfgvuD3bD7fA8HH+vYi/NiZvWLzeR8KfveH+grxcPBy
8/kfCf6h/uOFHzuz12y+z8j/pb/+4cfO7AOb7/ft4Os2m498/+b7Phb8g/31
nz4e/KrN35F/s2+/Lj0V/L7N+Xgi+HP917tj5JOb8/Nk8Fl9e3fuU+P13Zyv
kd+8aaCeDr50c/5OB3+2XcDg45vz+UzwP+z/bD0b/FOb8zvyf+zb0zd/J/j3
Nuf7TPBfnLURIPgbm/P/XPCgw6sLT7IX9e8iOPsR/Uxw9mNe/JgXP2x/EJz9
mBc/5sWPefFjXvyYFz/mxY958WNe/JgXP+bFj3nxY178mBc/5sWPefFjXvyY
Fz/mxY958WNe/JgXP+bFj3nxY178mBc/5sWPefFjXvyYFz/mxY958WNe/JgX
P+bFj3nxY178mBc/5sWPefFjXvwInrR6/6niAV4E8yPHu2B+YH5gfuTtD4L5
kfe3DOZH3v8qmB/5eOtgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+xPUd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPKn9
ROZF8eS68u9dcO4/FqX/WJT+YxF+4Nx/LEr/sSj9x6L0H4vSfyxK/7Eo/cei
9B+L0n8sSv+xKP3HovQfi9J/LEr/sSj9x6L0H4vSfyxK/7Eo/cei9B+L0n8s
Sv+xKP3HovQfi9J/LEr/sSj9x6L0H4vSfyxK/7Eo/cei9B+L0n8sSv+xKP3H
ovQfi9J/LEr/sSj9x6L0H4vSfwRPWj28poxrrontMD9yvAvmB+YH5kfe/iCY
H3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwpNb
U79gXD/2E5gfOd4F8+PWVG4vmB95+4NgfuT9LYP5kfe/CuZHPt46mB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH3F9Bz8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/Ck9aPbqhzGtvCD8wP3K8C+YH5gfmR97+
IJgfeX/LYH7k/a+C+ZGPtw7mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+ZHXN/BD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI/C
k5qHqvOKPA+/rsS7Ms7aLf3KXvFov2wX9z/K/KMLP3Cef3ThB87zD8eL+x9l
/tGV+UdX5h9dmX90Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH12Zf3Rl/tGV+UdX
5h9dmX90Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH12Zf3Rl/tGV+UdX5h9dmX90
Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH8GTVi+/FH5kXgTzI8e7YH5gfmB+5O0P
gvmR97cM5kfe/yqYH/l462B+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Cg8
ye1+vY8x5qXy/HzsJ3D9m+fnu+FH3v6gePW1sp9lcJ6f74YfOM/Pd8MPnOfn
u2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+
vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm
57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ufBk1bvbg4/Mi+C+ZHjXXCu
xzeHH5gfefuDYH7k/S2D+ZH3vwrmRz7eOpgfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8w
PzA/MD8wPwpP6n3uet8i3+e77nnzitpP5LzVXpmn75ftD8o47Gtlf8vi2Z1l
v6vgnL/aCz9wzl/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7J
X+2V/NVeyV/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7JX+2V
/NVeyV/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7JXwVP2sc6
Gn5kXgTzI8e74DzOOVrq7dHwI29/EMyPvL9lMD/y/lfB/MjHWwfzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mjru/gB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5kfhSc4r1XVS433vnN8d81B1XlH7CVz/5vzu
fviR97cs47I7y/5Xxbu7ynHWwTm/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/y
u/slv7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/yu/sl
v7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf
8rv7Jb8bPGn15pbwI/MimB853gXzA+dxzS2lnt4SfmB+5P0tg/mR978K5kc+
3jqYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8KT85P9yGsax3XRWF+5HgX
zI/zy7zi/NJP5O0PgvmR97cM5kfe/yqYH/l462B+nJ+OeyKYH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPwpPWr24LfzIvAjmR453wfzAed57WxnH3BZ+YH7k/S2D
+ZH3vwrmRz7eOpgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwpP1kO95Efm
RTA/crwL5gfOeaBxXpG3PwjmR97fMpgfef+rYH7k462D+bFO/dSJYH6s0+e4
N5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8KT9p1vz38yLwI5keOd8H8wDkvenuZ594e
fmB+5P0tg/mR978K5kc+3jqYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8K
T94z1EN+ZF4E8yPHu2B+4HyfYMxD5e0PgvmR97cM5kfe/yqYH/l462B+YH5g
fmB+YH68J32uB4L5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfkR
13fwA/MD8wPzA/MD8wPzA/MD8wPzA/MD86PwpF3XO8KPzItgfuR4F8wPnO+b
3VHyoHeEH5gfeX/LYH7k/a+C+ZGPtw7mB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZHXN/BD8wPzA/MD8wPzA/MD8wPzA/M
D8wPzI/Ck1cM9Y4fmRfB/MjxLpgfON9HHu9b5O0PgvmR97cM5kfe/yqYH/l4
62B+YH5gfmB+YH5gfrwieftgMD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8w
PzA/MD/i+g5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSetOt2LPzIvAjmR453
wfzAeV3FsXKf7Fj4gfmR97cM5kfe/yqYH/l462B+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/Cg8WQ71jB+ZF8H8yPEumB84rzMa73Pn7Q+C+ZH3twzmR97/
Kpgf+XjrYH5gfmB+YH5gfmB+YH5gfmB+LNPnfiSYH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH3F9Bz8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Ck/adRnfi5N5
EcyPHO+C+YHzurtx3Ufe/iCYH3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/M
D8wPzA/MD8wPzA/MD8yPwpPXlPdGZV4E8yPHu2B+4LwOdfQjb38QzI+8v2Uw
P/L+V8H8yMdbB/MD8wPzA/MD8wPzA/MD8+M1adz3cDA/XpO8fjSYH5gfmB+Y
H5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwpP
2nk/Hn5kXgTzI8e7YH7gvC77eFlndzz8wPzI+1sG8yPvfxU8TfXoePiB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5Edd3
8APzA/MD8wPzA/MD8wPzA/MD8wPzA/Oj8OQD6Tlt7+Ub3xuF+ZHjXTA/cH5O
YVxHm7c/COZH3t8ymB95/6vgaWpX1+EH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
xwdSvzcyPz6Qvte3g/mB+YH5gfmB+YH5gfmB+YH5Edd38APzA/MD8wPzA/MD
8wPzA/MD8wPzA/Oj8KSd19GPzItgfuR4F8wPnJ/bGf3I2x8E8yPvbxnMj7z/
VfA0jTNGPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD8wPzA/MD/i+g5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSe3D/UG35kXgTz
I8e7YH7g/Bzb+NxF3v4gmB95f8tgfuT9r4Knadx9d/iB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+YH5gflxf/qejwXzA/MD8wPzA/MD8wPzI67v4AfmB+YH
5gfmB+YH5gfmB+YH5gfmB+ZH4Uk7b+N7mjMvgvmR410wP3B+rnN8DilvfxDM
j7y/ZTA/8v5XwfzIx1sH35PqyYnwA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzI67v4AfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZH
4cmrhnrCj8yLYH7keBfMD5yfcx79yNsfBPMj728ZzI+8/1UwP/Lx1sH3pHZz
9APzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8+NV6XuPzA/MD8wPzA/M
j7i+gx+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSftvJwMPzIvgvmR410wP3B+
7v9keY7zZPiB+ZH3twzmR97/Kpgf+Xjr4HvSOOJk+IH5gfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/AD8wPzA/MD8wPzA/MD
8wPzA/MD8wPzo/DkfUO94EfmRTA/crwL5gfO78EYn+vO2x8E8yPvbxnMj7z/
VTA/8vHWwfzA56d28p7wA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/Pjfek8PBHMD8wPzI+4voMfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH4Un7XuP
fmReBPMjx7tgfuD8XpjRj7z9QTA/8v6WwfzI+18F8yMfbx3MD3x+GjeMfmB+
YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/Cg8OTnUA35kXgTzI8e7YH7g/J6k8T0gefuD
YH7k/S2D+ZH3vwrmRz7eOpgfmB/4stQu3ht+YH5gfmB+YH5gfmB+YH5gfmB+
YH5gfmB+YH5gfmB+YH5gfpxM5+XJYH7E9R38wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/Cg8ad9r/N2wzItgfuR4F8wPnN8bNr4XJ29/EMyPvL9lMD/y/lfB/MjH
WwfzA/MDX5bGCfeFH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8KT84brjs/Mi+C+ZHj
XTA/cH6P3uhH3v4gmB95f8vgeH972v8qmB/5eOvgeH/7wPH+9oEvS+Pm0Q8c
728f/sb72weO97cPHO9vHzje3z5wvL994Hh/+8Dx/va0ruVbwfH+9nTfcuR4
f3vKSz8eHO9vT3mHU8Hx/vY0rhw53t+e2o2nxus7+IHj/e0Dx/vbB473tw8c
728fON7fPnC8v33geH/7wPH+9oHj/e0Dx/vbB+ZH4Un73PeHH5kXwfzI8S6Y
Hzi/V/L+8p6w+8MPzI+8v2UwP/L+V8H8yMdbB/MD8wNfluaR94cf+JXpOt8f
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8
wPzA/MD8wPzA/MD8wPzA/Cg8uVQ7OPiReRHMjxzvgvmB83tWx/cM5u0PgvmR
97cM5kfe/yqYH/l462B+YH7gy1Je5YHwA78ytXsPhB+YH5gfmB+YH5gfmB+Y
H5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/Lk3n7XQwPzA/MD8wPzA/MD8w
PzA/MD8KT9rnGv3IvAjmR453wfzA+b3Dox95+4NgfuT9LYP5kfe/CuZHPt46
mB+YH5gfmB+YH/g96bqOfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+xPUd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPDlu3Dz4kXkRzI8c74L5
gfN7uMf30ubtD4L5kfe3DOZH3v8qmB/5eOtgfmB+YH5gfmB+4Pekdu7B8APz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI67v4AfmB+YH5sfxdB6f
CeYH5gfmB+YH5gfmB+ZH4Uk77vg79pkXwfzI8S6YHzi/l358T3Pe/iCYH3l/
y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YHPpau40PhB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwpOf
kmcZ/Mi8COZHjnfB/MD5dxpGP/L2B8H8yPtbBvMj738VzI98vHUwPzA/MD8w
PzA/MD/wsdSujX5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38
wPzA/MD8wPzA/PipdF5H5gfmB+YH5gfmR+FJ2+83w4/Mi2B+5HgXzA+cf7fk
m+U99N8MPzA/8v6WwfzI+18F8yMfbx3MD8wPzA/MD8wPzA98LPXz3ww/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/4voOfmB+YH5gfmB+YH5gfmB+
YH5gfmB+YH4UnvyevPzgR+ZFMD9yvAvmB86/4zP+7kXe/iCYH3l/y2B+5P2v
gvmRj7cO5gfmB+YH5gfmB+YHPpbGvQ+HH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH3F9Bz8wPzA/MD8wPzA/MD8wP34vneczwfzA/MD8KDxp241+
ZF4E8yPHu2B+4Py7VqMfefuDYH7k/S2D+ZH3vwrmRz7eOpgfmB+YH5gfmB+Y
H/hYmgeOfuB3p+s0+oH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5Edd38APz
A/MD8wPzA/MD8wPzA/MD8wPzA/Oj8OQbw3XiR+ZFMD9yvAvmB86/8zb+TlLe
/iCYH3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YHPpbyIo+EH/jdqd16JPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/IjrO/iB+YH5gfmB+YH5gfmB+YH5
gfnxjXTenwvmR+Hhv0fDj8yLYH7keBfMD5x/53D8nbC8/UEwP/L+lsH8yPtf
BfMjH28dzA/MD8wPzA/MD8wPfCzlBR8NP/C7U7/9aPiB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+RHXd/AD8wPzA/MD8wPzA/MD8wPzA/MD8wO3v5NXx+ff
nJ+d4e+Rof5/Kvj/bD7/NcGtvt0Q3Orzl4Lz7zYfKb/DeaT8rtqR2R9szv9t
wa347cHLzfm5I/jiDw3vrRx4s7t4z9yR2Vu8V2bgVt3WwT/guc+Bfz09p3Vk
9lfWZQ/8fWkd5ZHZf0rrYo7MFuk+55HZP0h56yOzX055iCOzT6dx5ZHZd6Xr
cGT24xf1/zfyfzj8tm96w7eC//fmC478ic0F+HbwwYX9AR8LPnO0/4eRX9pf
vvc/HvzG/uucdyr4nZv/GfnP+qtzyRPBR8/tP+CTwac3l2/kc/qv+66ngt+w
qTBPB1/0ov6EjvzxzQU9HXxzX93Ofib4if7rf37kH+l3/5Zng3/+zf0F/E7w
b/eX7+qR/6SvLm86E/zl/uu+4Lngh/vdXTmy+t48+Ehw+/uJ8KN5cFVcn1Yv
vxLXr9XLo8GtXn41uNXL/bj+rV4eBLd6eWtwq5e3Rf1p9fL24FYvvx71rdXL
ZXCrl3dG/Wz//o3gtp9jUZ/bce+K+t4+98jtex8PP1q9PB7+tHq5Dr9avbw7
/Gv18u6IY762enoiymN+t3p7Mspj7UGrxyej/Wj1+J5oP7D2ptXre6M81l61
en5vtFdY/cTav+bBfbPXbT629rWbxvrWob5pf9W3oX2eiG9Ob7THtl88r722
/c395472upsaz/z97flO+/6vu6Hsv3tee2//m/MX7X03NR6q/YHym8v6uZuj
fP7d8rG/UH5TDcfffZ7Get3Snyj/2f5yjb/zOY31vKW/Uf5X+vM5/q7b1His
9kfKb/55/B2fqfFa7a+U/2T/BcbfbZjGeuHSnym/aZ7G93RPYz1x6e+Uf2cv
wPhe1mmsNy79YTr/43v4prEeufSXym/C43uXprFeufSnym+ahfE9G9NYz1z6
21Q/x+eqp7HeufTHyv9I79H4HN001kOX/lr53+51HJ+bmMZ66dKfK//l/nKO
62SnsZ669PfK/5Ne63Fd1DTWW5fxgPL/rf94433waazHLuMF5bu+GRvve0xj
vXYZTyj/w/0FGfNc01jPXcYbyr+1v97Pxbx/Guu9y3hE+c33j/FIN4314GW8
ovzm/MV4pZvGevEynlF+c75OjeVjPXkZ7yh/TX+6Pyx+zrjefCh/oq8fr30s
4rH+fIh/f3/97x/jsR59iP90f6A/fDzisT59iP9afz5++lTEY7269mOj7xiP
9etD/Or++777iYjHenbtZ1+ffuLJiMf69iH+ok3zNsZjvbv2qK9O73wq4rH+
XX/S159/9nTEYz28/qGvb7tjPNbHD/Gr+sv59tMRj/XyQ/zO/nA//EzEY/38
EP/evnpdP8ZjPf0Q/8m+Pv3msxGP9fVD/Jf6+vP934l4rLcf4kf6y/GXYzzW
3w/xP+9398tnIh7r8Yf47X17+d3PRTzW5w/xzTjlk2PcfEpc/62+6n/reNI4
wPg9l/9UjDf193X8mctdE+NRvihv/3l/O1Eet37ws+X36K+K42PHreUxv7HP
U+OtX7w24li8VavrI47FW7/0hYhj8daP3xhxLN767S9HHGvPWj99U5THymPl
jf+1j9j25gPidX5gXKN8nS8YB2mfzR+033U+Ydxje/ML5et8w+/l6i/MP/Qn
2P7q/MTvidrefMX2df7i9xVtbz6jfJ3f+L05/Z/5jv6xzn/8/pbtzYeUr/Mj
v0ekPzZf0l/X+ZPfZ7G9+ZTydX7l9yqMD8y3jB/q/Mv7+21f52PYeKXG6/vq
xe3ffM72dX7n/c/GS+Z7xlN1/ud9uLav80Fs/Fbj9f2w4vZf55PY+LHG6/s1
xR2vzkex8WuN1/cTijueuPFxnc/W97mJ27+4/dX5buX6PixxxxO3/zo/rlzf
JyTueObT9o/NT7D5S43X97OIO36dj1eu77cQN5+q77uo8/06n6/seW3zP3Fc
3ycg7vOZ//s8NT+gPLY/+SxxbHv5LXEsLt8ljsXlv8SxuHyYOBaXHxPH4ub7
leU/zO9rfiQ/T3404tj2rg92PbB8oe2NN7Hzqbzzh50v7Pxg5wMb79XzI248
VbnlQcfn1cSNpyorb3wnjsXlZ8SxuOuBnX/s/Nle/cTG5/X7F57U/WH7w65H
Ld/ywmN5rDxWvuWNH4jyWHmsfPv7YJTHymPlW7mxPFYeK9/+/aEoj5XHyrd6
+M0oj5XHyrd6OpbHymPlWz1+OMpj5bHyrZ4/EuWx8lh9bvV+vL+K7Q/bX427
/2T/tXyNY74pj//++1k74VOe99xQ5j1fCs73r3bK/audcv9qp9y/2in3r3bK
/audcv9qp9y/2in3r3bK/audcv9qp9y/2in3r3bK/audcv9qp9y/2in3r3bK
/audcv9qp9y/2in3r3bK/audcv9qJ+7v1vmx6yZe56/mpfn6LuL+sfkmNr/E
5pPY/BGbL2Lzw/g9s2H+F79nVuaL+Xd/nn//Rz0yH6vzKfMj59t8xvUw/3C9
zBdcT+N/19v4XH0w3lZfjJfVJ+NR9c14Uv00XlQ/sfpsvKe+G5/xI95fNPhR
x0NYf43111h/jfXX9X08dfyS3xf1peeNR/L7bG4J5jv2ebHPi31e7PNinxf7
fGcVb/P7Tz4VHPmkgaN9Gzjat4GjfRvYeEl/jvXP+n8srj8Wx+L6X3Esrr8V
x+L6V3Esrj8Vx+L6T3Esrr8Ux+L6R3Esrj8Ur/2j/kh5/ZXypf98Nc7t4zz4
kuE641uHvGLOt30p2H25nG/Trx3E+NjnqfOV+v4fcflWLL+K5VOx/Cke8vxR
33zOOv5UP7H3PWDPt2PP82LPL2LPa2HPp2Dr8bH1x9h6S2x92cuHfqV59/Gh
nf52cGt/v9Xu4170t8Hfs9nw5iHf8ehs0zxdcXRonx+d/fPNfP5g9sWhXv3o
5vzcPnv7UE//duPLHbN/OtT79u/fGP79wWG71ey/D16249w17Oe+4XMcn/3d
0C62fmM9+x/DvLzlje4ePseJoZ85MfvqkPdo/c+J2buGPE3rl04O3+vOod+6
J/KM37Op5vfN/sVmf88G//tNnuE7wf9rc/yR/99mHn8meH/zeZ8L1i+/bHP+
Ducjmw/4zPP4wo0H9wdfvPncI1+5EeiB4Ns23/PB4PZ35PY9Hgpu3+Obwe17
jNy+x8PB7XuM9+nc/zIOwnnc4/7tVcHGOVh9xMY52DgHG+dg5xMb12B5bSyP
jY1zsLw0Vh/wrw3jHnz1kCfGLxrywPhNQ54Xf3rI42L1D1845GHxlUOeFZ95
rv8vfgd4eu6QB8UXDHlOrL7jK4a8IuYHfmbI82E+4X875Nkw//D/HfJYmK/4
ydyuTn805R266b8e+m2sPcAfGfplrP3Ajw39Ltbe4J8b+lWsfcIfHvpN/MXU
T3bTR4Z+D2v/8I9tvs/I2kv8C5vvN94/1r7i39l835G1z/ijm++Pt4d2cOTd
zfl4LLi1iyM/vjk/I7d28vHgF2/O18it3Rz5dZvzdyq4taMjv2NzPkdu9xGe
CL58c35Hbu3uyDduzveTwW2eMPKjm/M/cmtXnwo+eyPwyK1dHflnNw3GyK2d
fTr4tzbCjdza3ZH/aNOenQ5u7fDIN2zaj5Fbu/xM8EObBmhk7Sv+x5v25tlg
/Q9+9ebvyPoj/J83wo+sf8I7m/bzTLD+Cv/Npj0bWf+F79m03yM3n0fWvrd2
/cq4D9sa6k/P1P/Wrn0lxhOt3frqjD+tndoPbu3ULTHeaO3QrTM+tnZo5NYO
3RbjkfY5vzbjd2tnvh7c2pmvx3iltTPLmfaitSt3BLd25c4Yz7R//8ZM+9P2
eyzY+EZ71T7naqY9a9/rrpn2r52n48HGP9rL1k4cn2lPWzuxjvFRayfWM+2x
8ZL2u7UDd8+09837EzP9Q/P85Ez/0rw+OdP/NK/vmemvmtf3zPRXWP/XvL53
pv/D+tfm9b0z/avxEj/E+SOuvzd+2iz3+0Xjka1pzEeH9lP+r/Fvb+b7R193
VZTP+Zlu2q/n+vznro14Xg/R+vcLY3yyNc35utZ/H43xydY05++6ab+318f4
ZGua5z3d9HB387tifLI1zfm9bnrzuRf99eUxPtma5nxfNz28CF+5MMYnW9Oc
/+umfee/FeOTrWnOB3bT628696mjMT7Zmub84Gb89I8ujfHJ1jTnCzfjwT88
J8YnW9OcP+ymd179tg9fHOOTrWnOJ3bTn7zirj+9K8YnW9OcX+ymRz50waen
MT7ZmuZ8Yze9/ZIbr7k8xidb05x/7KY/ftF5Xzz9snsjnvOR3fRw/rp3YYxP
tqY5P9lNDy58yfLqGJ9sTXO+spu+9HDwtBXjk61pzl9203ceNk7viPHJ1jTn
M7vp0XMvevpojE+2pjm/eVg/zn7wu18e45Otac53dtN/+YKXX3JjjE+2pjn/
2U1/411v+YNTR8d4zod20/ee+tj7zonxydY050e76V+/7Y4PXhDjk61pzgd0
bX9fFD+Y5vX/222+/9bHIp6fB9hu+YMffDzi+fmA7Xaf/Joxnp8X2G73vX/1
VMTz8wPb7b72C5+IeH6eYLvdp/70GM/PF2y3+86/+GTE8/MG2+2+8Zkxnp8/
2G73ff/0qYjn5xG2233Mf/N0xPPzCdstT/H4GM/PK2y3PMWHT0c8P7+w3fJk
r30m4vl5hu2WJ7t/jOfnG7ZbnuwPn414ft5hu+XJfvo7Ec/PP2y3/MRqjOfn
IbZbnuzdZyKen4/Ybnmyn3gu4vl5ie22nvVgjOfnJ7Yj/9Ha5Stmxt+tHfyr
4Nau/U3kQ9o878sxnmn92m7Esbj8ifUtxgPGB9bTGA+0cc/4+/X6f+MB61n0
723cf/fM/E9/bTyp/zSexOL6U+NLceNLLK688aa48SYWV974U9z4E4srbzwq
bjyKxZU3PhXHNf/S5gn3xX0T4wfjC3HjDyxey7d5xVgei8vn4DbPGPM5WFy+
B7d5x5jvweLyQbjNQ8byWFy+CLe/Y74Ii8sn4VZvxnwSFpdvwq3ejOWxuHwU
bvVmzEdhcfkq3OrNmK/C4vJZuNWbsTwWl+/CrR49EuUx/9yPeuLwsD97t/zY
Vnl+xvMenoN57+b+1Gde/IlSfhHle6tfH/myrfJ8TMs/XR75sq3yPEzLL21F
vmyrPP/STd94WC8vjXzZVnneZXP8P7448mVb5fmWbnp4lj41jXzZVnmepZu+
+OwHv3D6D26NeH5+pZv2g82rI1+2VZ5X6aZvPZyMvSPyZVvl+ZRNPu+7Xh75
sq3yPEo3vebyi3/owciXbZXnT7rpVdPtD17whuPl+43jy+99+RUf/Uzky7bK
8yXd9JdecvYnz3pwHJ/m50m66Z+fdelfvu28cfyZnx/p+vHY9TdFvmyrPC/S
9eOt3XNvG8en+fmQrh9PHVxyzjj+zM+DdP14aXUy8mVb5fmPrh8P3f8znx/H
p/l5j64f7zz+sbPG8Wd+vqPrxzNnnvuVhyOen+fo+vHKC9905Tg+zc9vdNN/
9/mbXvimd43jz/y8Rjf9n+e94KxLzxnHn/n5jG76p585rAI3jfH8PMZ2e97k
7eP4Mz9/sT17bX+8Hx7Hn/n5i+32/Ml1Yzw/f7E9+2B/vN8cx5/5+Yvt2fX9
8b5/HH/m5y+2Zw/0x/vLMZ6fv9iebfXH++Vx/Jmfv9ieTfu/3z2OL/PzF9uz
t/TH++QYz89fbM/e3x/vjeP4Mz9/sT27tj/e02M8P38x5IM+Oo4/8/MX27Mf
6I/3c+P4Mz9/sT07v6eHx3h+/mJ79uv98T44jj/z8xfbs8v6471qHH/m5y+2
Z3/VH+/EGM/PX2zP1v3xfn8cf+bnL7Zn39f/ecU4/szPX2zPXtkfbznG8/MX
2+35ld8dx5/un4pvvs611w73xf841nlg86n6vIR+wvi0zauvj/Fmy8v8XXDL
2+xF/qzlfW6J/BqWD5P/kn83HtW+YPcP5I+0j1g+SL4IW28hf2i8ho3XsPGX
/tP4y/0hbDwb47fhfNft237H/hw7Hs7Pc8kLzeN6uN/VPsdfxHph65GNx91v
1P9Z3+F+UWs3x98Lc//Z/SjnQ//s/rP7W75ffi7nveU5nPeWdUlHnvc3Pzfz
3sjnVlZe/RVXf7G48vn+3pG4fsobj1dW3vhdXP6vsvLOj7j7f5WVdz9Q3Pmv
rLz8pbj8ZWXl3S8Ud/0rKy9/Ki5/Wll59xPF5WcrK89HcfndysrLB4ur35WV
d/9R/Iohv1xZee2JuPx0ZeXdnxSX366svPuV4sbvlZWXTxeXb6+svPy8uPl6
ZeW1r+Lm/5WVd/9AXP6gsvLuT4i7f1FZefc/xPUHlZV3f0Xc/ZfKyut/xPU/
lZV3f0hcf1ZZefkXcf1jZeWNJ7Wb4tbDaO9qfqi1S1eX9aJdfN5W778a39f9
KflX7Py1eva1OF9Y/fC8k/or34M936O+Ww+DPe+DrY/hj/tB2PM+ymP+WU/D
V8/ziGP+u5+E9Y/81z9ice1Nvd9kvQ72/Iz21nhC+6l/1V5W1h8bL9Txx+nk
/XXR/+rPjD/Uq5r/MZ6QP8XGKzj3i38RrL6p363f6YJbv3JjtL95fevRGB84
Xl6veaT8vtyR573fKcZLw/kpPOGX82P8Kr/axgFXhmf5+83LOOMj8X3z+qJF
Wa98XXx/418+Y+Xdl8vj6RvC59av3xD7w/aHy/2N2L7Vuy/G9tj22P0V9/m0
F8br5r9YeeM+5Y3nlcfm18bz7gd53lV74/64+To2vzf+l8/gs/bB+B5bf238
z1/tA/+x9dnyLZ6v0z7IX2P1Wf6Hr8Y77idj67eNt/hu/M1nce0Ftt7aeFB7
YHzOf3F+4boeVXn5d+Vx/b1K5eXflcf19yyVl39XHtffu1Re/l15XH8PU3n5
d+Vx/b3MOp+rvyebnx/7SGk/57F+W1x7Gu3B0F5pf/L2i/J82VWzGs/Po10V
+4/1isP+zV9sr32zvbjtY76T83RR3nxH+VjfOJTX3jq/cT9tiGu/ba88Vt76
Y+XdX1AeK299svLuLyiPlbd+WXn3F5THylvfrLz7C8pj5a1/Vt79BeWx8tZH
K+/+gvJYeeunlXd/QXmsvPXVyru/oDxW3vpr5d1fUD7uPwz/6U9tb7227d1v
sH29H6G/5ht2v13/Kj+K9c/ud+rfzJv1X1j/pn/K/fOR8p6OI+GL8UFezzvO
5+t8vc7H63y7zqfrfLnOh+t8t85n63y1zkfrfLPOJ+t8sc4H63yvzufqfK3O
x+p8q86n6nypzodynmcR1009MN/J72f5eIyf5I3UB2z8U+dHxnvql/Gc+uj5
NvURK9/yOJ+Lzy8PZDyEjX+w+aDxsPL1eTisfL2f7/kH59N6Rdvj/P6Xo7G9
5yMc3/tKzG89L2H8Zb5nvGV+ZjxV51/iuD7/Jo5rftb8zfjL+M78Sxwbr1l/
VdcHGr+5f2c+Zn5lvoaNz6wnM34b8uQxvjOfM37Dxmd8V9643vgO5+fjvvC8
+ZD+Xfsaz2MM/9X5nPbV9rh6pv62duzz4QfmU42b34nj/H6iL0V59d08wfc3
/zN+xc6H9RzOBxa3fkMci1uvIY7Frc8Qx3E9hvUZ4lhcO+N6YNcj8tnD+Eh7
pjxWPvLXQ3nzd/HIT5fxlvUb6gcWt15DHItbnyGOxa3HEMdRv4b1F/G+5YHF
rbcQx+LWV4hjcespxLG49RPiWNx6CXGs/juvmIfaV/0+Vk/1d97HJH/m/Una
T6y89d3mv96HZH6L9a/Wd1tfaT2W++FY/2x9t/Wc3p+EvT9J/17LW7/lfho2
PrD+23pT+T3rA7Dxhnyg9av6C+sNsPGKfJ/2kUd5/fK85HM+EfMb/b3+Tn5D
f4jFXU/Xz7hOvgLrH+VP7c99F/0vVl9aPzU+L2CcqP9VfxwPGz/Jf7j+3uel
vmD5b883ql/exyXueUfreb2/S33C8u/KW5+hPsnne15S/fG+K/cHPC+pvsgX
Wy+C3X+o5e3PeFX9U5/kj90fkV/Wf+v/5Wew/Kz8rfXdxgfY/WD7w8bvnifI
+fcbYzxp3mE8iY0nPX/i+vDd+fN9fT9+5Pcdfmrm+Svj27yeeRFx4938vsCb
4/ObP9n+kmHcbXvjX/MR50/c9+GT9825f6D9U5+1R+qb9sj1t37N/SztifxF
ztt+4XnzA3kxvvORf/KP/ORbfp/g9eE3zu3H9eV9FF+I8lh5+VrnR//Cf+zz
uB7Ka6+Ux8rLtzq/2hPtBVbffF/jtvKcbFlH8IVoX9Ufx8/57aPRn5pvuB7a
P+cHay/NP4zn+Wg+gNU//qmv/OMb5pvxaPZjHvXX98O+v+/j/Pq88tn2r3/x
vIDtre/Cno/kq/Pv8/jc9XwbR/PV58nv87wl6pvP53xqv8yfnD+fx/GcH9c9
n68uzk/9vnzMz0vM4/lP+///mDccUg==
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxMnXe8j/X7xz97nOOc0957KJWy9957kxIiDZSkaCF7RYhIRVlJEUmFFBGR
KKUUSovKatEuv+v5vV7vx+f3x/tx3dd73p/7et7nnMR5Xtj9zjZ9YpFIpP95
kUjc4heFkch5xSKRc/IikW/s+nK7vsquv7br4nZdwq732vUFdn2BXX9r11fY
9TV2vc+ur7LrMnb9g12Xs+sadn3QrivZdT277mDxLotfZSORLwsikYssv9jy
72xOKbuuZNff23UZu65q1/vt+mq7Lm/XHS3ezb3Y2q+s/xLLi1t+yK6r2HVD
u/7FrhvY9XV2/bNd17PrDnZ9xK5r2HVzu/7VrhvZ9Q12fdSum9h1V7v+w67b
2HVvuz5s19Xsuoldt7PYx+KXdu4B669geW3Lf7PrFnZ9s13/btet7Po2uz5m
183surtd/2jXtey6lV1fb7E/z9X2GWzXM5hr113s+n6en13fYNf38lzt+ka7
fpBnYNfVLNaw+vS1dov1D+UZW38vux7JM7brfnY9gTPtuo9dj+Vz2HUPu36I
52rXt9v1aJ6ZXd9m18Pt+oBd97Xrh3lOdn2uxXKcY6279Q+iPtY/wK4n81zt
epnV7kmegV3/aZ/xQrsub/MH2pzpPFfrX10UiVxm1xWt/wqLlSz2slbBrqtZ
7GPtAZv/GDWx+ffZ9RRqaNf32PVEu/7JrktZrGJzb7dW1q6rWrzDWkm7rmyx
t7Wf7B7q2Jq29Fmrbn13Wqtp1zUt3mWttV3Xt3ivtRZ2Xc/iAGv17bq2xbut
tbPrBhbvs3atXTe0eL+1m+y6qcVB1nradXOLD1l7xFonazdYa2T9dSzeY62z
XTe2+KC1G+26Cc/G2vV23YjPbW2i1nW21tT66/Ie8qzss9xueQu7HmWtLfdl
baS1Nspn2ngri8OsjdZ4e2tjFDtYG2/tOs60NiHfnoetacm1+rjvW6yvmcXB
1sbxma11tPawIuvHaj/GJul+u1ibp+faz9pcsUlex/aspf5HrXXlGVibrHXk
03im1npYe9rmz7J2K59LjFDTx63dLA4X65nxPKdov27WPjLGPrT2gLXtRb72
Kepk1wOt/W78PAbHOm+q1pHP0jlwtUB14/k/pwgbz4oLxuaIKT7nfH0+xi60
L6BHovbeWVskXrjXF8QR+dM6B25nR5x99npGfeQLdSZ8Pq/I+hf1ueFnacQZ
pF5RO2+bxfet/Wyf9Ttrc+05vqRx+PzXWPrH2hC73m/jwy2+Yu3ViF+PsPaa
Iny9Loao+cqI8wdfefa+TzSG5tj+KzSXsTfEDbys0lzWb7X2hLUnra3Wfsyb
nef971lbH3Ge4GJtxLnkfXpLkffjbY3D0QZF6r9RkXoOsfd+AV+/rdabIl5v
+HpT98V78I7mMrZGfZy31T7XvDxnbZvu9yk9UyI8fm1tiZ79dnFDPT/QOPmH
6qOeh/TseB4fixvej50Rf2dgZ3fEOaPmn0WcMxjcIT5Y86nmMvaJ9mD9Ls1l
/Uc6kzV7tB/sfK4Ig99GnIllrDEGFlhbbp/7G30mxr6KOGd8zi8j/r6Rr1Md
qNOzrLO439reiLPOvC90DvmBiPMEI99Hcqz9oMjYdxHfh7FjtmfriLN4UOtW
6j7gHdZ/Uc3WWvsx4jzB3U+K1PlXjcPOUUXu/ZgirP0ZcW5g4feIswVTP2sP
zvhNcxm7yd6b7tbmw5bmsj4/6rWhbn9pP7jLi3qNGYtFnSEYOR5x3nknIlGP
sBaP+jhMJaIe4SgZ9Uhts1GvPfumo84HTD1n97TF4r/WUlGfy9h/Ee/nvEzU
57K+WNTvF3YKoh5h8AK7PmzxiLWiqDMEO4VRHyc/Iep9X2je66rByVFnBXZO
jfp7AlNnRp0R6hyx+n5mz/AFu9+Tos4Nax61ryXP5zmbp0R9D9Z/Wuhrz7C+
E6N+JmvOivp+MHV21CNMXRR1JmDh4qhH6nlh1O+VsfOj/k7yOc+LOmchX6XP
c0nU18HauVHnmHnnRP0c8sujzhOMFI86c7B2WdQjY5dGfQ/G+JoK23zPLhH1
dXB3RdQjTJWJOh9wUTrq9SO/2q7/tviPtbJRH+frfTlF+KoUdVaof5Wo80HN
4/bMY9YW2/O9Jup7wEmFqDMHaxUVWV9e+zEWLfJn38Raqaiv456qam94rB11
PuClVtR5Iq8e9XeA96OOxmGnriL1bBj1esNLNe3HminGwyK739PsurI+E5+n
ftS5gbUGiqyvp/0Yaxr1e4a7LtautHaVtc5Rf9bk8631s3a3teZR5wmOmmkd
eeuo8wEvbaP+bsDRtVHng9q20Thjz2q/e6y10H7w0j7qXMJjB0XWt9N+jLWK
Omec11LryDvqHPjqHvX6UYebFGGkW9T5YOyGqLPF57zRWkmN1VAdeO9vjTo3
1PmWqPNEfp3Ogd9OUeebva5XH3kPnQmnNyuyfoE+d39rNXUOHPSMOmfwdadq
DBe3q65weociTPXVOPd7l2JN1YoIXwOizlA9nQl/8NVHe1RTHWpp7L6oc9NA
91dH63tH/Z3hPu7VfswbpXpTn8FR5wkulvAzvMUHrQ2M+jXvxUMah6MhitR/
qCL1HBl1Vth3uOoNX+vt/VpX5O/BMM1l7Ebru8W+9k2192CE5rJ+tO4LpsZG
nSd4fErPupe1R1Q/WJig+pGP01yYmqhx3olJirwrj0WdM/iarnrfrH0r6nk9
rD3gZUrUOYPBqYqsf9RaV42N11zuY5r2Zt/HtTcMzlI94OJpRbiYqbMZe9La
bfqcT0Sd49vUYBnOntE6WJihvZk3Rs+M5zUv6mzB1Jyocwl3cxUZm609GLso
5j/L/2TtuagzBIN/WNtgbaO1l/Kci8U8A6tdb6vdY1a7hZoLX78UOTcvWlsS
9etB1l6OOjfw8oo4GK69H9Uzfl57wPJLUecS7pYpsn6p9huse5qimmy0czdY
u9+uX9XeMLU66gzBxet6RuQros4r78EbGqfmbypSz3VRZwh2XtN+rHnb2mTd
93J9Jj7P2qizCJtvKbJ+jfZj7B3dLwzuivrXFJ73Z1H/2kr+rT4/n3tz1HmC
001aR75VfMDL+1F/N+DoI/FBbbdpnDG+H/C9l58H39V+sLk96lzC44eKrP9A
+zH2XtQ547wtWke+Q+fAV8qefdLaC3adsHinsTHN2NgTdT6o7adR/57E59yt
z83YStWB9/7rqHNDnb+K5jj6WOfA786o881en6iPfJ+d+4W1l43Tz4t87ZfW
/hQrPPtVOgcO9ukZw+ZBMcG9HFC9yb9TjWH2kMbZ47AiTP0cdW6o86/igPrH
Y/4cecbfaw/Y5D2DS7j7SZH1R7QfY4mYr6MmP2gd93RUe8Pm32ICRv7S5yP/
PeqM8m79o3Fq/q8iNYzGnA/Y+c3aeq2JxbyP+/5Fn4nPc1wcwF0k5pH1/2k/
xpIxv18YPCPmz3e/tdNjznTIX9YzTcecIWqbivk68vyYs8I7URDz9wReXuHP
YS2eaH3FYj7OGD/3/Kn/LsnEfD+4yBoDGWufs4/9t99043G57VEY8/1gMy/m
PHFeNubryE+K+Vnwc3bM60cdzol5hJGzYs4HY6fZ9TdR/5xnxvxzMkYfLPM+
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
xKRH+Dol6eNwdJpdfyOOTk96hKOzk84KjJyZdJ7g6KSk78EZZyR9LmPnJp1X
2Dkr6XNZf1XSa8X7d07S92PelXb9h+p4cdK5gZcLks4ifF2Y9AhflyR9HF4u
TXqEqeJJj7DwbZ7veYX1PW5fW6YXOUfnJf2+YPmypM+FwfOT3sd55fh/swX2
eWyPkkm/X5i6OukRpmon/VkXWSuVdJ7g6Jqkj5OXTnofTI2x6/bWOlgrl3SG
4KVC0hmCtSpJ54D6V0o6c7BTNukcsKai5jJWXnuwvrLmsr5M0s9kTVXtB2vV
FOGobtKZgIV6itSzjj4TY7WSzhafs2bSmSO/KOl1oE71tQ7WaiSdb+ZV1znk
TZLOE4w0snZq0llrrMhYA+0Bj2P1nK611lTr4K550nmCx5ZJZwjWWilS29aK
1LONIhy1VYSjdooXqSbEi3UmEb6eNF6+59+QWuuYdM7g6zpF2Lmb/5/P31HL
83u9RPPuKnLubrB2i+pHzbsknXXeg66K8HWjInx1U4Sj7orwdZMiTPVQpM43
K3JGz6TzBCO36kwYuU2Rsc5Jvzfuo4WeJc+xl9bB3e1J5wke+6qW1PYO9cFU
H0WYukvjMNJPEXbuVuRduTfpnMFL/6RzBoN3ag/OuEdzGXvAWsOk8zJAc1l/
n/aAlwc1Dke9de/c95Cks8LnG6oIL4OSziJMPWStmeYNVl8zNViDs2FaB1+j
k84NvIxMOlswNVzjcDdCkbGBui/OG6W5rOd7Iz+L8bPXuKRzA1+7rT1nbaG1
iUlnh1o9Zt/vjhhfWf7Ns7VO1jfB2iSNw9RkRZh6VBGmpiWdG3iZmnS2YOqR
pO/DGVM0l7HHk84TzD6muaxfoNpQt+naj3nPqsaMzVINYOfJpDMHj08pwtfT
GoejZxThaLYiLMxPOkPsOzfp/MHXDN0XXM/RXMaeUB/nzdPcfnqW3O8APVMi
DE635/mrPcc8a4ssvz/prD2vcfharD74ekfPjuexNOkMwcuypDMEa6+KA+q/
POnMwc4SccCalzWXsZe0B+tf0VzWv6gzWfOa9oO1FYpwtMbaeDGwVpF6/pjn
/W9a+5l/g57nfL2e9O89fE2dqTpQp7e0DtZWJZ1v5q3UOeQbks4TjKxPOnOw
9rYiY+u0B2OH+Df9ef41cqPW8ez4fsLPI/z8sVU1g5F3k84T3G1RpM7bNA47
7yty7x8owtqOpHMDC/y3K2zB1HvagzO2ay5jnySdJxj5SHNZv1+1oW4faz/m
7VONGduTdIZg5LOkc887sUsR1r6w9kLSmdqrCEdfKlLbb1V79v066XzA1E7d
F+x/pbmMfao+zvtGc1n/ne4Xdr5XhMG/rW2yttnagaQzBDs/aJz8oPpWat40
1aCC/cxT3tofVr97ipyjn6wdTTor1PmXpPMHd7/ZvGN5ztfPSZ/P2AD+Dpu1
o/x+BM1l/SGdCWvHtB9M/aYIU/+KCVj4T5F6/qN7ZeyvpL+TfM4/k85ZyB/T
5zmudbD2R9I5Zt7vOoc8nnKeYCSacuZgLZbyyFgk5Xswxp9H8ufW/Dl1MuXM
wVE65SzCTn7KawYjmZT3wV025ZE6F0v5OOwUpDzytb8w5RHWTk45N7BwYsrZ
gqm8lO/BGSfY9edJHzs15TzByEkpn8v6S1JeG+p2Ssr3Y97FKa8tY2ennCEY
OSPl3PNOnJnyCGvnpHwcps5NeYSjU6zOf+V5bS+y/h/FzP3Wf5+1Av5tZMrv
C/ar8jtP+Lf91n96yvs4794iX3uh9V2a8vuFneIpjzBY2a5TKX/el6ecIdi5
LOXj5CVS3ked66X82fE8rko5K7BzdcrfE5gqk3JWqHOplPMHd1emnBvWXJPy
uYyVTPkerC+d8rmsvyLlZ7KmbMr3g6lyijBVNeVMwEI1RepZRZ+JsUopZ4vP
WTHlfzZHflbK60CdqmsdrFVIOcfMK69zyOtYK0o5IzVTzhys1VKEtRrao5jO
g2U4rqt1PLva/B4Ya6l8+zkm5TWDkYYp5wnuGilS56Yah51mitx7c0VYG2T7
DbRWZAycxf8DyXOmGmsPzmihuXDX1toFKWejhq170/67LGr30z3ltaFu/+X5
nDbWuqW8xoxdl3KGYKRDyrnnnbhWEdau1zhMdVKEoxsUqe2NKa89+3ZJOR8w
1U73BfudNZex9urjvK6ay/qbdL+w00MRBu+zVt9aA2u3pJwh2LlZ4+S3qq+8
5p2sGvQSK7Bze8rfE5jqm3JWqHOflPMHdz3FDWvu0FzGemsP1t+puay/TWey
5i7tB1P9FGHqATEBCw8qUs/7da+M3Zvyd5LPOSDlnIX8JH2egVoHa/1TzjHz
7rFWW/n7Vv9EvjMyOOXMwdpDirA2SHsw1lF1hoMhxs9D1k7k71pbPtvaHGtj
VDMYGZlyjuBulCJ1Hqtx2BmnyN4PK8LaxJRzAwsTUs4WTI3WHpwxXnMZm5xy
nmDkEc1l/TOqDXWbpP2Y97RqzNj0lDMEI1NTzj3vxGOKsPa4xmFqhiIcPaFI
bWep9uz7VMr5gKlHdV+w/6TmMjZFfZw3U3N761lyv3fqmRJh8FVrw62NsDYv
5QzBzlyNkz9r7W7Vea2eHc9jYcpZgZ0XUv6ewNSSlLNCnRennD+4ey7l3LBm
keYy9rz2YP2Lmsv6BTqTNU/b16JZRc5UnvGVzXemVqScCVhYqUg9X9NnYuwV
a8P0OTP5fr3c2jTVgTqt0jpYG24MDrOWtrnn8fdT7L9Jitn1mynnCUZWp5w5
WHtDkbHXtcdYnd865byu0TqeXTzf+7mfjaoZjKxPOU9w97YidX5H47CzSZF7
36wIa1tTzg0sbEk5WzC1QXtwxruay9j7KecJRt7TXNbvVW2o2zbtx7wvVGPG
Pk45QzDyYcq55534SBHWPtE4TH1qbX7KOfpMkdp+rtqz727xAVMf6L5gf5fm
MrZdfZy3R3NZ/6XuF3bOt3oV5juDR629ZW0da6yGJ1n/Kfa1ZZ7NOcGuT7br
AovLbPxbzZuoGnwnRmDnh5S/JzB1WKxQ54Mp5w/udhX5/P3WDmguY99rD9Yf
0lzW77H5u63NtnZE+8HUj4ow9ZuYgIXfFannMd0rY7+m/J3kc/6Scs5C/og+
zx9aB2s/p5xj5v2kc8j/STlPMPJXypmDtb8VGftTezDG34vn32Hw7y7+1Tq4
O55ynuAxkfaawUg07TzBXSztkTon0z4OO6m0R772p9MeYa1Y2rmBhTy73imm
4mnfgzMyaZ8Ld4Vp5wlG8tM+l/Xnpr021K0g7fsx75y015ixUfbej7R2mrFx
sdXmlHx/J7bb97XT8p21ky1+Y/FUW3da2q/h5/S0x33Wzk577dn3zLRzAVNF
ab8v2D8j7XMZOyHtfbxnZ6V9LuvPS/v9ws75aY8wWCbtzzpi8cK0MwQ7F6R9
nPyitPdR5/vtuoG1htYuTTsrsHNZ2t8TmLoy7axQ5xJp5w/uLkk7N6y5PO1z
GSue9j1Yf0Xa57L+4rSfyZqr0r4fTJVMe4Sps/Odg3LWzs33Wpa3Vjbtnwle
Slv7T0yVSjtn5MWtLs/Y+3yGrTs/3zmrYO2atHPMvKvTfg75yzbnsnxn5OJ8
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
kbjAb4cXDmZn6/7uVR9rgkNxtlhZpDWwslT3HRyE5Pj38PZNFiv4BYOTcJnm
UdflGttnz7+/rdksRvALviqGcP7hJMT5uVqswBl+wVXihbm4CkerjzUjtY69
goOQNcM0l7NbFbpPFF9hm0J3F+In3Gn304//n8bnLGbfV2h59uwsnmvt7Dxn
is8YPIREHIb9VB/qsdv2uZufxbI5x2FwHhJxIH5tc+7hz+Lt+gu7vsT2fodn
audcbO1S/g6JxQutXZTnX+8e1bN9iXFrl+f510j6uK8jts99tud7fFYbL2Ht
aptz0Prvtf4tPCPrK2mtnPX/bP33W/9WnpH1XWOtovWvsVjWWnX+zYDF0taq
2PVrFq8k5++C29oHbO02Pp/1lbdWC7eZ9T9o/e9b/0n2bEfY9ad2/Zf1D7Tr
D+z6fZtb11p7PrPFqtYa83vhbP5gm/OhzdlgfZWtNeDfc1r/EOvfYf2buS9r
zfi3MdY/1Po/tv4iux5ODe26mF0Ps+tP7PpfO3eQXW+36y22rqa1lrZ2PZ+V
++D3x1isba2NXW+3WN9aR/6usu0z0tZ+BqvWd521e6z/DOsfZf27rP8j62to
rZP1f8znsNbFrr+3cwfws6LNOc/mj7HrPXZ9oV2PtevP7foyu37Yrvfa9SV2
PY4/R7frnbZHU2vdbJ/d3K+1W/m39RabW+th159bbG2tl12fbWtH29rdtnav
9bW1dgf/psj6vsy6n/E77tHagDz37uF2xHeHjw+fI334+fA8/q/P5l5rrZ/N
f9niZdTern+w2NnafXm+L/5H1n1FPa31tf7D3Lu1gbBnsau1B/Lc5YcjEncf
Z+/Leh85vkj8fj/a3JusDc7zHHckbsBj1tfT2og8z/FI4gn8lWdjbVieu//w
SOL3+936elsblec5Tklcf3gA8Uji9yPHL0kfe+GjZI8/eX7WxuT5PFyTuAT/
tr47/6+pO4G7ba7+B37u5brXc87emwiViCJzUUrIlMxDSgM/RWQeQ6WBkCRT
GTJkSHPmuWTOFEIlSTJPIfNcKf/9ftbn/PV6Pc9rr7P2+g57XsNnrW//f3DP
X6I/5ydO1Fp+/+l5n+//D7XOlvUih7Vvi0GtQflZSxt51/Uy352o9QqtO2n/
NM9gzz96ouSsU7klKIrnqOcfM1HvButPLkvNdz/3/OPUHOq3e/T/h09UG2tf
bjWouVoT0zh+W+/yc8oueg/08kf28ocPa+7WiPvBsOoSqRlzxLDWl/tdz//+
sGpdq2X9n56+bKJqGf/KmqrZ96Nh5VvLhbVfPVq1jr/Rj3NFaoqeOKytmqI3
yx9pq5//etdOVJ3Ia1PnT73Id7XVVl+nTNR8rKG4dM9/d/9/Q887eVh10dTo
unWi6uKokfSad89E1eb69qhoxzbo6T9H7tDQ6p+cMqytehU/7OlpE5UvPqWX
+dtE1bX41qjGNN4d4aktclPGUV/uO5HX/p7koKsj8MBE5R/LUT8/73xriP5k
WLl98p+O6ts+0tMz+v8fD2srz+/J5HLJCZw2qnwFv59Lzoe8r+N7/j97unEv
TlRehRyex5I7KL90lsho8++JwsjLl5hbbnS/7z/977X683rGsLBnPxtWf3D3
XXiwjG9Vi6+Xn9rzft7/d8HVD4aFxYahP7WnZ58oPOy0YeFq4bZX7/s/Lb9P
77dzThQGbaLvb/ZhYSZnpG/z+3FwlDC781gnM/M8ud8O035BmJm0P7P/n2ui
MErbDGrN1G1Nrd//q2Fhvd6YLezdmtZtGxaeaqacf9fpkWFhbbYRAx0WVgUO
gl5gfdj3DEpPsO6x9VjnjTyM18/7fuaLnrBE2sJ7faQpXUKbizImDM7Wg+rT
fE+NjmHt4/va0gmsX/zxpvQB9Bl0gegD9IsFMoePNaUnWKP5qjxPaq7eFb3C
e+NvWcMZfRrZ6DafbEqXsD7yWf32HdE9Hsiaye/v5c9LP+8bVI6YnKMn+/vq
sv78f7Wr+/nhrJ9sDdxNmvpe+E2/Wyz9PNYVvYM+6S/5pjyadZitmft/Tekt
fvt+Lpk+tUHvOChd5t2R/0fWarbG7qeb0k/eFTkyO/XbC3reYtGFfqnv6DAX
99t3R+fZvCm9yPrLdKj3pE/t0dZcvUgf/6M7WdvZGr6fbUp38ps+Za1f6/xq
g7ZGK13pA5F/IetIW194q6b0K7+fyvrP2mpD3rqvl5pXdLCXs3a0NYK3bkpP
WyFy1i22Buy/sja1tYPpYitmrOt72ZWiO23blM62UtpYe9g6sVf2vPdFl7vc
sY5KD9y+KX3JGtb0qdXSP51u5cxHe3xrul7lmKJfDbIm9qqDssWsd72a89OU
7uc3vc9ayKv0/Gsc66h0P33hW6vWGrXWPLY+LXturfRJN1w3fc6Stbg/NKg2
ZLS7ru9vxVHpmTs2pVua065N6ZPazNpvf5F32axZf3v1vu1+Telg1t2mb26Q
/s0DbY3cG52zUemWo6zX/WFzaEq39JtOulH61AZtTd2b+v2rjUr/9NvazNbX
/UJTerL1uOm2G6fPW8x9VPpzl/W61xiUvm0d7zUHpaNaA3ztQengn4yMftHW
7P2Dczx6Xde1TvhaPf/LTem0ftN/N02f2qCt8Xtrv3+tUem9fltb2trCX21K
BzY2HfnT6fNLTenV5neb8z0qPfktWY99nV5m76b0Xr/ps1tk/re7Z0elD3+9
KR14y4xHxtrCn29Kt3fN6Npbpc87et4Go9KZF8ja6esNSifXx7qD0se3CW1t
YrS1i/WrH7w7XcNR6eHvyLrr1oP+RlN6uN/fbEr3tq46vX6nyOjL+tnWNX5n
1l3foKfvcs1HpcOf4x08KpuOnLb7epbZBMNaX/tbTenY1l2/p99uPCo9n46P
Rx9nQ2yfYzw07Yx1n3M/Kv2czm5Nd3r7t5vS8/1mB1j3nS3ADrDWO1vgkKZs
H78Pa8qOIPeI6zwqm4I98aWJ0uuPaErntyb8o67zqOyFh/rtpqOyob7TlB2h
DZvAmvHsADaBduwCurz14Onvj/eyW4zKjnjBORuVLcA+sK48m4ANYb15dsP3
mrIj/D62p7celdwz/Xab/n/fibIhrENP9z+hKfvCWvTPuZ6jsimOasqWMb/j
m7I1tHnCPTgqG4fdoB3b4aSm7A7zfqnf7jQqG4QdYB16Ov4PmrIvrG/PLrFl
i7zi2o7K7rhRPY221p75l+s2Krvjx03ZGof09H+dy1Hp/2yUwyZK9/9hU3bK
t/vfr/bb3Udlm7B7tGPT/LQp20EbNhBZdhC74TsTZTv8PDaL3zOz90dlp7BR
vjdRNsfpsV8c21T+h1HZF6fG1jjCuJ6/Udl0Z8au0Z4NZP8WfT8D9vKo7KMZ
Pb3PqGwcNs2xE2XHnB3bx+9Z+BNGZR+NYlM4V2yd4yfK3mGHndDT23mOYq/R
Cffuisb3DJyUZ+e+ruj9ByVn7Xa6GRsEfXx4PwjNBvxB+mQvWXf7Jt+jUbUh
w876Yej/tvUs/yj9kWHXbNHzb2qKz/6Ss3xjz3+0n88Z1ryJnDXDrSn/2V7+
u8P6vXHo8RrPtq9G9meRZz9ZF3w8x59nPg8Nam3jBwfVxrjW79WndaNv6On7
uzov5rB5WzaMc2qdWm3n6rd39vx7h7Um8n3DWrfWGqT2nRHZrdui17IWXle/
rWP6bvUnQ/+yqfbWM92h523f1hqUv42M9SnvTf/6tp+stSm/3svs0/8v1fM+
3taW/M7pwxqWn+jp+4e1LuGSPX1hU3Netqt15e6ZUmvLoa39dW9X+853bvt2
DwxrHbqJrvpB09+/P1F2QTe11hWzptg5Xa01Zl2mV4dlL1tfzDNNZlXrZjTV
J/4ubc31/IytrbnwX9G56EVNV/e6NajUPWNbsiu/2Le7qKl1hWzZ7Zf09O3y
obui2dvsc7b5/qOifzq19l8e+vaptS6INUGsL8MGvz22/6WRuTzyd0TWuiEz
elvjwMhbg+bKrmr+q63OHrkyMrOFv/xMZftfE/rXTcmRubgpf8HV/e8vtfWb
3NhHwD/wzVHRk/3MWmsE4O/V1hoDO85U/offZP724Vt3wFyMNT2830beWgM3
hD64K9qaBZc05R9RL3eZtmx+NeX/0NV46Dd0tU+tdnVH+Qj4Bw4alfxJfT+/
7KpOtXrP23bll1CzGu+WyOiL/InxY9wSGb6OmyNzWNre0tNfacs38bv8Vof6
5vhD0AP16kZV73eZnv5qW8fj9+FdHZM6r4eMqg157dB8KX/t6pq5FuoP85ks
PXP5Vf74P2P+MW0du7qyW81ccn6rv3pHzgv+DunHfPZoy5fkfuaT+Uv6f4BO
Oirfo/qi/CpH9/yLuqovekz8M+qNqjW6c2TQu3ZVw1H9xqmj8sX4fUTo62Yu
X83d6VN/d2ZuszfVxj7+LPUD1XXTXlv+nO93VfNLvS/+onvT5x5d+RAW7fmX
NvVsvpz6hPeHniX0tTO/XqNwPM6D6WeOpnxq6s4dnz4XmVY+iofT/7XpV83D
73Ulq8bYA3kvGOuypvrSZuZR+YPMe86mfqtRxpekXhD/kn1kNok/6tGM+720
3XRa+cr+mnNFTr2qT2WrVtUh08rnpKbVuJ7Vk+nfb3WuDovMExnL/n+k7bGj
+o3mB3s84z6ePtH8Zk9HZtm2fGGXxj+mzpEaR2ol4V8S+tnI4D0T+vBR3ZeO
RX/Pp8+D00adpYu72qfODd8a3we/x4ld1cJR78QY+GrmqCvCR2ffs6PSOemZ
/G4vZT7Lt9WXfr7clV/uqfjoXgmtn1cyT748tVTUUeG7Q883S2395sebq6u6
Kvxjc8Snp9bKcm3ViDHG5U3Ja8u/pybG/LOU//DV8XGNyme3b8/fp2+3d1t9
qr2Az4/3pq78dOpy8PupnbHhLLX1mw/wiqb8dWTm7ao2B7/efuI4bdH6mzlj
8RWqySDPnj/R3NR14GPE/8gsdZzGUKPDGNqqBcFmV7Nhv1nKN4neMH5F+dkP
9PQF/fg/6ipvf+6mbHw0X+WMtJWTyz/IN3hlUz7GWeOvnMixazvKnH/juzAq
OfvIqluhbgDeObNUP9qeG/+ntvLln+5qXHnGfKJNZPhD0fJ3F+gqn5xv81vi
TW3RJ+e49H/KqPyz989SeehoftpV2roWzgM/qZzzB+PLbSN/dtrIW783xy8f
mW92jpw3vlS03E3zekPm6X53D7s3nTNtZ5dL0h/vr4eVX7ZWcpflnx4UX6tc
6YW6yp32m+92nsyH71mO6huml28ULQeRf1UOrZxbv+W1ykc8RLws/fL9vjlj
/WRUbcY5utrKvV2gn9u5w8q1xCPDZ4snv1eu79nDyimV5zlPL3/WsPI6R6M6
LvRbmpKTy9n0/ItDyw2WIyo/dJwzjDdfL3/OsPI95anKHzYvPPLyio2DL5e1
7fu8JPJdT1+aOcsxlpOsb/5oOZty797R93/esHJCbcnISZ6Njhe+e8K5d53f
2ctfMKzcUnnIcpXlKctTXzy8C4eVuymHmaw85+XDJ8+nfXXfz+XpZ/Z+rKvT
Rg79OzNfPnB9rpq+l0hb85ZnKo+FP1xOi3wWfnr81Xr6U/TkYR3noaHlev9o
VPec+017beUIem7tdxy3NzWWcfnml8m1lnspL3frbJcJ/Z7x7+l1/ebPtbqg
rXtZ3ttv6ZZtYSzloMm1lJe2YlfXa5xjuWz2r9LV+R/nY9vKh1u3rXO3nGMR
5xpW3q598qxP7rcrdXXdjbFaV+fZPjmD8pHlEcoJ106+uVw8uZDy8DZMn+Rc
E/zPT6+ccnnA8sl/0ctcOaxc4w93Rcv/PKPn/2ZYcmt1RY/zPG3l9vmXs2nM
6+jtw8pBNpcVM59FuuKNc9qNY77rdCWvvdiKnFL5pOaNls93EZ2wrZwyOYry
Zo+dXtcJ7Rou3lScRj7s+3v62WHlfZzf1jtIjusSXZ0LOdxzjAq3Kc9Rbp4c
yBv008u8YVTyx4Z/TK7DWrkWS/X9PZW2ZJ/KuBe2dX/Iu/xVtnLa/j298pf+
lbwi9JKwwTkmeU5z9v08M6xcv6WbmtsGua4r5Xy/tymZjdKX3EJ93xDacehX
boxxLmlrDPlKl2Ur9+WNozo/G+U+fm/u08+k7eb9dvmu3mP2Ld+P+9yw8heu
bCuHRn4DOTkS2s1N14rMb9qSkwdxdbbw7PP0Mi8MC/cOrwwTf/WMwsTr54gZ
9Y+P59mChYdT/mBT/Wu7Rk+/NCxs4TVtjUEO3gsGcROYkDyXsKurNDUuXPSb
+jm8GPrFGYVzfSG4V/Q7++2HmpLZIr/1af+NbfX72cx7sxzHm0c1ny3S12bp
+6bIwjO+pZd5OXO+ua198JBLdYU32jXz3jrH8fvsh3c7OPxD+u3lbV1L1+AP
bcnBvMGqwazBSe40LIzUZeFtH/689Mlh4eXuHNY+2LY/pQ9YJGNoa8y1m5oz
+fWaagsftREbt/+9i/ub73FYOC//6KuDS/IbDmnJrvBV5B0nXBW801yjuq88
pxs1FU/lM7mtrTntnONwPDBb9yZWLuZ4R1PxTrFOMU+0OCbfy+7hfye4eHh5
8UhtxRzFG8UgxRCfaCq2J64nlii+KIb4WFMxRbRYHxkxuKebiuehxfHQ4nfi
aeJqYl5idGJ74mvijV9K/881xScvPjYZJ+vpF5tqS362tmIz4jKvNCWzUuI/
3whf/EqsS2zrv03FyfiCxMTQ4l8ztxUDIyMOhhafmt5WvArdtNWn+NFEW7Eo
cah/NxXPMzexrP3CF8fbO2OJU+2ftmJH5iweNEdb8aE141fk64Qnmaut2I+4
j3jRN0OLBeGL6dCP6F70n3nbitms0/Pnbyses25PL9RWHEUMZcG2YhvrJebz
rciL1Xw7fLGag9JWDOTgtH1TW/JrJ66iTzGRRdqKkWwQP+d3enq/nn5XT38s
flW+Wfzze/7XR3WMx8dnfNiw/MZT2rpGrsXnenqrtBW7OSx9isMcGnm+xyOH
5X/lc+Xz/V18sfh8m7c0xb/RsUd3paPyoR41LD/qMl35T4/2DHTl9/yeZ6gt
/ymaz/OYYfk2d2vLz+g3f+axw9f9ncdGhm/yuOHr/kk0v+aDXfkV94xv8vi0
3W9U/D2mFm7HWtR/ic+TzGpTy1+Iz3/If8CPAG/zUFe+PrgguB5rhfK58RGi
+fesgcj/dVJ8ZeiTs54avxy/Ez/WJIZp5lrbSP9bZT0IvhT+EOuK8NdcF38L
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
5tU3Gbat/fjsYv0tnz5h5FcO/2tdrcO0XeIvaDEXYxp7XAePnTy2kdEwMzD4
HwofD315bGW18naJzYhmb6qh9+Hw2bVotiQbTx0/NiMeuStjs+KzK9X6Wyv0
6pHZJfYpPpuRraTOHfsLT5txnT02526x79BsQ77zdcPHQ7MT9aGvG2O7odl6
6gCtH77aP+rfsa1sNwjNDkNvmGNaO3Oe5HVl66mDx/5h+7CB0Oy1yVpE4auh
x75iK6nr87HudbuJDDtPLR+12OjhZMmw29hN/ClsL7V/xJSPjP1Fjk2nLhk7
55rYSmh6KdmNI6+exycjYz+aDquWHXvppdRbZmOwd9QoUguPraGO0SaRwds0
fO3w/xT7g+3EfrGfHPvJMX0mx6WOkZp6bBnbzUKzcdCfix2mX/YdHjm6PN+P
+5iPRX/6Zftc0tWaInt29W7xPvI+4VMVqzgn7wG09wmfsO+9b73vO/ri+JzV
FOPvVScMfWn8tGKEfK3yvbfpqibqr7paf2jr/LadGj4Z9cSWSdvfpd224cuJ
2qmrWqmndrVu0HZd1W+13XrmyqXfPjwyaLXIbHcILTcfTfbXXa3ls2P6tb0+
tcus5TMtMsZVx8x259DqA5ib47PG0i7ugaz7gz46PL+tAbRb6KMj47c6Zmq5
ft51TX2z3SIjRuG6+EbI19q9K1lba/yobyZ/H23/aV2twaMv68G4ts9Mqxyw
L4RHZve0dQ/gq59m+8XQ8vHR2u3V1dowaqaJs6LH6zF/qacXEDfsSo5Mkzb2
y2fy/vTetjbvV7p6x9p+LfSfutq3/aDqNdt3wqBwn1+NjP6tc2M872Vtyf6z
H28JOsgsFVOjE9OHrYf1+67iCHhiJOdF30aTpWPChtIzxSb2zX1rTbL9evrH
U2vtMfTt2e4fWtwdTfbJfntA/z8xrl/R1f4rulqfzD41L77ZVW1h7b6Rfsjg
i7mLg1vrSwxdPwemHd0WJvXqxErQ9N/fdLW22UFd1SC2/cFM1f7b4ZFBi63b
Hhz6kH57aFd1LU7M7xNmqvW6DgnfvA7M3CRekCdre1hk3P9o+7+T59HzdVt+
o63d9d2e/u9M9YySsc7XSbmm7hnrcpFRK0PtjCO6amd7ZPja6RP+1jN1VJ4R
NTLQW6aPIyI/uT8yk2t2dSV7TJ4R97/1s47tqvaF7XGhH44cGWva2fdi1rfC
l2up7Qld1SeEddCWrFzHE/6nT3LW57L/+PA9s2jtPp/5WDPrhMiT8Y5y7M7H
l3KuPL98SPwvfC94J+U5td7PyT299yy1Xjn6nPB+EBomGE3W9pTw4YnR9lub
6Iddxf211RfbYXr24d/VFS3O9ZPI6MdaQdo+nJqKPwnftTs19wMdU7yTnilG
iaaHXtjV+pI/68p/ZvtIcOM/72J3d0WLKdv+IjQbHE3Wu807znndPuNul3N8
Wq6p+Zob28g5PD334V6hne8zMx/9/yz0BYPa2mcNSv65szJPse8zIw/HclL6
tP/szF+t8nNy7fjt0NZkHB8zGX4119d+/fM/8BvwP+gHjz8Cn2/Q9vzudT8D
2n71yX1nfTd9Y9HW+3PdLsi1cw4v7F4/vgszf/XD6Qa+Bdr9Kv349vkW7ph/
303r320TGeOoqY7v+yheaSz3zkVpiw/rN4zvi+/CO/q8fKN8k3y3rOd+aVff
BesmoOF7L82+8ffhssjwJ3jfel9556LvyBqRV4T/zdD2ex96Px6Uf+9Sa0Re
Gb73JNzAVT29xpTyUVwZ/l7hwwlc19WaoPQla4le3VU7uINrQuOhfce1ubar
Pk4LfXq214X+begvBz/w29DX99sbuoq/i+X7vbLYfWj8qzIH8jdGfpXE928M
jYeejPX3v3/XVR+2N3X1XePPuTl9/jj78O/oai1G3yOyZOh+vh+3dPWNsP19
6JvTp37E332bfZftR9MPd0ib7fvt4/32sf7/j13pAbYnRi+4NTw+o9t6+udT
a13RP3fFs/9PuR+e6Mo/Tu6r4evjqa6Owbf4ibTlM/9r+HxQZHzX/5L9xrgk
/qrbM9bjmY+xtCG74kx173p2rNM3W86V/U9mbON6P97Z04/kffm3rnjPhPZs
2t4V+kehyb7Q/z/f/9/dle1te9+UWh/2nvCsB2Gd3Mm6B13tO39sr0fm2a5k
4G9fSFuYE7z70xY+F073ka7ebQ909d67P7R3nvPzYM6hvJsHc66cy4dyvPJr
Hso9Y5yHu9fxLQ9nbsb6e+bjPWvMCwe17jA+3gOZmzngPRr6jNAX5F3xWK7L
H3Mv7TCoa/V47qvbcm+ImzwWPnnn33p4d2b/EzmuA3I/zJrrjKbveUf/IzJ3
5PraD8vxdK7dn9PPbekX/4Ksu/fM/1zrZ7L/uVzfM3Nt0Wflujyb430+cvhf
m1I0PJL7zvvTe/v53Cv6eSTX8RuD2r4Y+p7IGMfa6vjWoP57xto/vJdC47+c
++H/ASngyu4=
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
q/j/AFri51c=
     "]], {{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwt1Hk01WsXB3B0EjfhmkoDGYpQXqnIcL8acImOkroiGgxliGZFSUSI7jFP
JRQZkiGE6pSZMmWeoiP8THFOKEq9z7vWu9d61l6f9fzzPHvtvWVOuh205+Hi
4moj53/5Y+t6o8vyHHD9P8JrDgW6EZ/IcYh1GN6Ft8OFgqeJBdMFb9gOH4Cu
klOXLbHXB89K366juBXLGD1MbPboUAZ9+AQyDcxgSnxXsDK709YBbvTa7t3E
YjTlQOsuJwTKXxlUJu6wuRq2afgcFBw4ZtLE49wJd1myF8GafE4TId7PTpCP
sb2ML5r3MStH7s92n/jeeQ2h9fzVQ8TFDiJJyeLX0We8L7KN2PuWdN7fB70x
Kd3Dm0+sXbeDWT7kg2OP3DMeEvtxJMeEaL6oczoTGULswO8aYynrh95w0d32
xBbWhquHbPwxm7FtYTnxBeOp6a6OIPze09D7VZaDVUqal4TmgsGYHl3WQ/w6
KS5/l1gItpRpaKYRe7x7vBBvdg9TjjJLNYiXZ1V5hn1m4IIbU1WSWMhEqPbB
hTAIK3A/WpDhoHFlo1A6Tzi6DbidSol5aTr/FK2PwA1hjts24vOcS57F1lE4
J5o5Lkwco0vTfj4ehatyKnkT6zm4/zyIkXUtGvynJdcnE0vEhn+IjInB7Ps0
XxpxmoUI3ag1Dpo7nlj2SHNQevuNu+qpeOxmRnvmEu8O+10twolH9u3OFCti
957G4Sah+9gaxA5Mk+KgyFAgYtO+RIyabqpft44D3X8WJZIGkrD4XJ02tJYD
fqEv1j82J8NlysYpk3iV6UiIuWcyLHQ7K7YTXy9oD1sUT4E2J75Ibw0H9KTg
wxr7HmFbUflrVUkORKud/tIuSEVUie+v0VUczFT15rvzpEHV3cU9hfh1nOH9
FHoa5Jo9x0WJgzY/y+YeS0O+7/SecQkOWq14f9+XSkfhenr6BTEOPgvMzJsF
ZGJJWoasDLHTKGfv0dZMnPHb21wvyoH0wOS94zJZuOS70CBPfFtQn9+uNAuP
tgwdqP2Tg4jw9WX6U0/htyokaUKQg/LaxRUayjlIqAquvc/HwRfKr1qYkQep
Y1XndhL/7fSut/V5Hly+lpxtXcaB7wmH3dGdeQi9ftWRj/jxr9ivEuvz8T3p
0z+nl3KQ2KmTxP0sHw6Km47z8XDAUPCt9nn/HMqXaxTrFtiYoF90W81bhKyv
XCVmxJUWSw6mbCpCZBoet8+zkfanmqqSaRFwxzNo4DsbUvY8jWoRRYhgJUVM
zLGhKDhjpSj7AmHnnOqHOGwk+lQ65egWI6Qpk8tmjI0gmmLs6gulGLR3nP4w
yoapp3lDVmQpFPxa9A2JjwzeqtB5UQpHuVOyWyg23r7MG7NYLIXa99HUmSE2
Bn7M97kEvIT7+0Vu+0/kPXWc48rxr7DPYFK+tYMNV3Px1T1vmHBoi7ScLWPD
ys0iRJ+nDI5qist2EKvX2Ghki5XBkopbfvktG2eND+qKK5QBLouSM0w2Du2p
P/JxXxn0Xrw8SL1kozNQPMU6sgydsmftcgvZcNsXf4lPsRyR0v53q9PJf73t
jMRMKqCiSVcQDmXjxlNr3eLQKkQ+8nqrEcLGyBW6i1diFWb1/Vtt7rIh2tI2
pptTBbUPw/aZQWx8UxRqKW2uwk7mmNZfAWyMvrigkSJWjdDT19qNb7Kx4+rP
YOm4agyu9F/FfZ4N57sPT9Wk1ODHyMmf4+ZsvLDKrs7KrcOpimeSOwTY8Lf2
oq9d3oijGRaPPr+axo+eHx27IpvRRDPNZJydxs3yw8kRbi0IdD61LkpkGkda
NjtGH2sDlamj88FtCmt4nyiZrOxAWGSD3c3CL5jab3N+saATVbQO0zujk/ix
/ar5XoduSLhdqlu2cRKWl06r6FE9sJMAc4npBOalNdNfXe7D2/Ezb3MujEMr
t2Zk1dhH8L5m3Pj6eAyhXuI9dyUHkFgcP6hXMYqTuRLm9WUDqOHtChucpjA3
udxKzfITrtrsfaO+nIK3yP5Q2swnjNQKOTxTHIHQCg2BUF8WtJnyNu8ODWPn
hpcFsjyD6P1XxLry7BAuJ7t8yvAdxDXat220mM/47Bw1+mh2EN7Be57OVw6C
zqSPnrD9jP5bcSYdLBacGgVMnr77jN217eVOQizsELb0zlAaQtpqrpAFpU8w
jhd01g0eAg9ti1rAvgEcSd3r2jE4BIunTNm2bx8R2naRtVFtGK39m7hDNfpQ
MrlF18d7GJtqaH0ro3sgJdy48Kp8GLyeUYHBXN3oCDUaEeYZweKGkna6USfi
N00YvdIbgaXD5jn93HYcdk9OK7g8Atcf0WYt31uhOeM+ezFrBDSziwrati3Y
ayBfsqd7BCe5503XNTZjwT8lT3wJhRsBddrvpZpgbqJzQkKZgq7OX3zJkvX4
tSxFIciEwrzMg6CLBbXw2ho/metC4YBXwIOxU1Woym7//dcdClqxC+ezTcvx
Icgn9NIDCr9psw50vXLs/I9lfAOx1JPDN6a3lmPPLh8nhUQKJl1sCfVV5RCb
7qF3Ek8Jzk0Us8rQ/dJZQyOJQrZxyMqGK2SONjt7j6ZQ0D+/9o1Q8lvIbulb
tz6dwpYqLanhSSbyEg0H2vMofHOeqFhsZaL1XtO7NfkU8l1KHoi/ZOKZVt+t
48TFw7zj+kFMRNqGm48Sj+v3f3qykYk1yZPe359TCCg/Iu9h+xpdTzfyrSii
ELEjoVOr+SXsBzxnBEspCCfqMA0LijEZOyFzpYwi+yGLh0ooBiPs8NxT4iuH
BF3v+BWj/+ffsZ+JTXq4CmvNixEl0mZ8oJyC6y85sf2cFzglO26tWEHh3xGD
vmOqL6AgukKvvpLUR/LizZj0QtCmQyQ5NRTumHUf0GUU4odoWKVsLQWBzN97
WR7EnDt65sR8bv33VP4uRNwVq5R84v18R/LLhgvwffX42vN1FLaKqgjMyhVg
zZQja+gdhdtyQr3uD/JhLTP47kkDhY/0YD0+v3zcWnXzWzvxcblrVYln8vHe
u2mU1kjh7WLL9sZt+bg3Eyt7nFhM4GKC6rs8LPm5dUi0iYK5tqzl3LdchBuF
5Lo3U/jPNyWBuAM5YPvH3fjdQqFbvU19u0YOrmfRAza2UijlcF9uWpuDNyVy
R0yJ1dYuDRNseobdPNtN4ojvfZwzmPiZjcfXD95VayP1UBLh5Bx+iqRUKUeL
dgoNdbe2W/+RAQ1t2/jznRQCu0VjpbvScS462OVf4t/OvlKDaem4cspHIJv4
aW5QiJN+OqS7m19QxCIBQpxrN5/AInBXuVUXBRXta75Jc6lojFFJ0uymEFxn
0eVQmYrNuWO25sThorr7VCJS0S8XPulKLB3xwqdILRUJExmXkolrVTaoNro8
htkOlZ38PRR62cydSwZTIGK/7l49cYuMvXxdbgr05ux1h4i15DU3MG6mwK+/
sOQnsXn+F0dpqRSsbfGQVe6lcFbbdETHMhmJhtmpt4nvJCt6ejY+hCa/ja9a
H4WXAk4Jex48xPzkgqwBsdHP6frlrg8xo1nKOEps/8v8eMIfDyFjk9V7i9hs
apW7V/ADNFR7KTYT2yipvuHziEfADeVYu48UrDy+r1X8Ix6vR1+pexDfvnMy
3DAhDkytYEYwsfw7To3/m1jsP/YxKpdYoJ+zk5c/Bo9NE2oWiO158ww2xkfj
SI72dYF+CvGDZXYGm6NRLL1hdh1xsU5Ok/+BKGQc79uiR1whzjDmi4uAlqB4
nQ/x2KHCCkWVCKTE7ohlEM886DA0eh2OvVtzlJOIT8R+sgtihWFSPS+OSTwS
1doroMyAkJh00jyxqvXnfDmPYGj/mjc7OUD6bajhvV1CEAKijx4+S+yavr39
8ZtAfKlVlr5GvOWmSJ4C/x04em748S+x/VItc6U4P/wTHd9bSvxFW7PA6bUv
NB6mLlYS010G5zJYtxDzXoXVSLyc1SasrOwDuevPZlnEF1jONQc9PNFc+MyA
9xOFxin6n81vruL+pQJfQWL7Fd3f9vN74Hcx/CSIrc5xhRjFXYSXynDjBuKl
X5TVq1jn4elJW7OZWHNkjcNu5XNoZ2Ru2kY8WlZTdt7DGXZyMYxdxILm4btP
85+GVVz/mCHx1wXJEus4O2g25S/bTxx8SrjPz8MKUrq8dy2JHbbyb3eMO4Qq
Y/+vNsRNqvHnQj32gVERJWVH3G78+li4hzbUgzRXnCGuW9/ZyjoXrFN02YXp
SvxfGVO4Iw==
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Dashing[{0, Small, Small, Small}],
       LineBox[CompressedData["
1:eJw113k0lP3/BnCVqBRahFKIiiT1UFniKksNQllDUspSeEpF1lT2CsmeLdtk
SdbslaVBkiKV5dFiMJhbDz0lWb8f5/x+c86cOa9/7lnueV+f6y1uc9HQdjEH
B8coeS68Xvi3JGLSkgLH/z3+0r5usWD/XIH5+SkV2Jh1l/wmnn2X0DQ/pYvr
Iq8eTiz4zsn7mDFGRaLO5l/EZudLvs9NWeJX7ynZ/4j7dFb++9n7DGpYS1vH
iNeuo29RmzkHs3pwfCcuFwnhTPJyAN1r5csR4qAf64OmpxyhuclJmEWcK1mY
aO55ER6lpziYC++X+k9Cj7cLlMz63T8T33Ohbb194AqkV8/e6iJ2ed1yVnHm
KuJ+Z23uIN7q9eDYYJUbAkWHdFuJ/9br64/0cofKPTHLWuLMyPSh0Skv2PNs
UK0kVsu6rvOg0gedOx8VFBH/EYtVPOzpi5Yu76NpxBdeiRu0et+EeCbjajyx
RZKIf/rJW7CJSdt1j1ixPdbF/YAfGr2FzbyJhYRdHMRn/LHrRTHDhXgXD4fj
r54AcNf1MeyIr252EXpVFYhVpfOeBsSJbpZ2F72C4XZJuXwj8dfe2b/Lpu6g
uN63eBWxca3O+eDuu+Cxsjw4b0HhvyDV/05UhuK15kfeb8Rcz92yJj3C0eDx
7XoKsbzgFZF47wic8PvCFUasdDA4y5eKgMxLVzFv4luX27/bklu4ktNpmRnx
m9X70/cciIRMYFAuN/Ehw3gvxnQUHI4Y1Pwwp7Dmw5PsbMdo+CcW2vUSM6ot
/UN7ohF17IhDIXHa/GNF46oYxJypUTMm3uUb6NzrGQfWU2WlgBMUAqyZt3v/
JMC9rJnHntivyDdK8koifJemnaQRJ4wPbXSkEjFdKeWxnNhfyi1h4nMSMjzo
SQFmFKTyG8W4X6Yg4vhIlK0phdDQE3JcjanYy7HvKIj/cHiLZS5Jg3Vn+00h
Yhf7XS80Dqah6M1ih1cmFESsRjhuVKRhxSsDsa3EU072137mpsPBT+vQSyMK
l0xfqLbcy4TX2pneaOLdwc0Btm8y8XCa748dsU4674W55XT07zbK4Sam6VOL
5fzosFe2/qNuSCF2JMvsjusjGFeb6KQeo9DOGfJAziIbsyWuz2eOUniuenJ8
s0QesgZtDOuIR4Kr4uiWeThnY+saRGx56HezbFQedAfyHPiJC5p9WpSXPgFr
vz3nJl0KnRYiMgasJ9j/9vhqcW0KgZqPaAUmBQgXFg7u0KTwz0QxO1y4CK6F
cRx3iffoPrv/em8Rysz0l2kQm0xvGucyLEKu1WlGvgYFZveWdu/bRdCPwYSf
OgWV5iEh2+kixJX+kBc8SEGgs9t0e28xGt43bh9WprCyUP3GxYdP0TDmrBpF
rH0rM31t9VOULG4fVCM+u+jJlbJPTyEk2fXzvhKFZTzLhOZ4S9EYxj23V5HC
4xSaXZBPKc718zTY76VQk6xeHWJRhtY8tX2echTYVdEOOusqoD98oEGQ+EGt
vRFTrgIe27aOlOwi+cGd1uulW4HxyIrRUVkKJziyWnNvVYBTWKTfYieFwgY7
Qe7xCiguEwkXk6ZgfnwTK+dNJUyN5oYstpD5uSGTkBFYjaoRz2vfxCnQE+PN
AjOq4d63JMiemOtuw337umpoh2lIXxaj8PbuIT+puWq0RZZ63txMYVhhVjXD
9Rl+RJwwCt5AIeppQsatc89xLcGRvW8NheLcqnq2WA004kVUhTgoJJf8EraZ
rYV3YtXJkHk2HAwnS9V56nB8Rp93ao6NYzJ8qySE6+D/0HJ79ywb1+xSmH0K
dai8obMnepoNs+1GCtZOddA/cZU+McGGRLKxgk5PHXLq5rbaj7Ih/eH0nqHy
ejhPZM/PdbJhveq6ouIVBi7KWI8N0tmYyr8XrSb7Chocs6smnNlY+bCr6G1r
C16O+rtM7mGjJf6vH+YC7yAyVHHYe3gEcxox66SYbdAyiatnJY+gULzpeWHo
e2xVK3poYzCCtendRyVkPuDUx8OnOX8M4yct2GDx4Ed8eM3x3DhqGH97yp9w
8+nExQMjbRXbh7Ft1pj35O5u7DXXSxIoHULCdT+9+fc9CJ6OLx7TGoKYsn21
s3EvrARe8JcyWJA1ZTNtRz/jy+hbzp9HWBjr6OxI2vMVtwdzRvdWDGL9asWq
jN9f8Varejxn2yBa1txjaj/9Bq2C5k9n4gbQ0zZrXHemDw6RTWN7JvuxzN/f
s0SQCeHZUD1lq3707z8dlFPNxDs0HLOpYSKveEQmxbwfe9/lSw/wM3GRGfXX
2bl+zLzbKKTt0IdJh86ZtvsDKLDqOH318TeEDgT9KZMdBP+v2zwb/v2KuaAd
ClEvBlHp7pEL5a8o+XAtcOwQCxKewy52zM+YujJf/6uJhTCXzev5bHuhZMJV
NHRwCAVadQw5Vg+a5t0kHhcMQfz1qc+Gh7phJkJ/oidBfkeZSm6Bwk5Urxmo
GA4ahofVsqLzkx+RKmk3+GN0GKnxDfenTD+AxVN5M/DwCJSK+M+Elr8H7b6G
6nzMCDyWmF7NH2+DHy1OajVrBNfU85rua76Dgurk9/EdbAjKxh0U+dyCmBLN
/J9ObHS9nRRec+AV3APkC3nJ/yaxm7NJsp0Bu6W0dJsONny9zonq1DMwsf54
lcgHNi5rRa69WMLAJj1f44/Ed3Y6vy+LYeDVuOoK2ic2OCM8yzUtGRDYOnRr
azcbqmUaRkf7X+LnN0F60xc2Qnyl6esm6iHZG5eUP8IG7dSNhDihOqgUydHn
yVzYJLhoZq6oQ2aKZEk4mRvf3tLMwpla5DV8MRQlc6UpufH+q6+12N6Voq66
iELrNwuhiaxa6AksZ19ZQs4JpgqPulItxGujrVq4SS5H9vE+Mq+BqX5qpTQ/
hej3r2VzdWvg4i7bm0tsWzPJk69ag1imyj3Z1RRkeqa5SsVr0OTy6ZEcmWvl
Vtfpm+9f4KdvW+KudeR62t6qMf89B3+6YKKgEAVRuoLDWflnWDTk3hctSuY+
JNdqWPAZBCaZr7hJjji38/b/PVONxe2jWh7ElJJapjujGizRT9MWJHc0aJWc
QWbV4NradkpYgsL18enIcK8qpIiOzd/cRj6fRlK7YX0F8o/FpS8mufcoZUnh
60cVWLurZKM9cW68m6zm3QoYNapIvSbW7di2WMGkAnz7g+ciSG6GFcht42OV
QyqbStmwm/Qykb6S4hXlkFmeXCIoT3pNEM+b8uOlEL3TtLGW5PSWVqkHrfKl
4M9s8RElOQ7L60v6BUoRJzV12odYQYB6vKr7KQY+NufsJ7kfMxd4/qTNU5ze
J3CUrkJyc8J+nnW5BHt8h+od1Uiuno/VrYoswpIt7T6x5Nwp4zuZwXAtwqN1
s4sGiRP9duS8NSsCY4k4twI5pzic5p/3bSyCtLV+VCuxcrWGyNKMQpipClfO
alFYPsi7UaWkALa+tL80aaS3HHct/JKVhwov7RYXcm62ZPpW9V/Kw+Z41sHH
xDa/jQ2HFfPwXaHp8CBxRmeL9HjTY9Cs9LjM9Sg4/sOKnR7KxVouA2MlfdJL
a27tnpHKQdS/LjIDBhQ4k8ecp8aycUqprViInOsjhj1ak+XZGEywfaNLzP9f
ZNMPWjY4Q3eUFBBfkrmzh+mQBa1cvmOux0lvMLQ+XpRFR/3LhzXDpCcoHrFI
yrlEx+XI35brSY9Q9QqISFOk41nDtWB14pWPu1wjmjJhlz0eFU8c3Xj1sONQ
Bqq+lXupG5P788a0kU8qHdr1XDd8SY9pzBadXTyWBs8QumwmcZL/m6FfZWno
LbR1aiYeD9Ma6D6ShgkmktaSXiTzKON2qn0qdI4Ytzwk1vsiGqapn4LA84HW
dNKz1kkMDAm2JaMoXSS3iTi441zeiFEyNtzwcRohXrFxk0+YeRK6whOP7SQ9
TYh/r+fbcwlYX6CWnE18OiDCNpn1AFVhQnGNxBsGqt44XXgAf4Vy7gHiWmPO
zcsuxWM2/jBtM+mJ7it2LFLyioXRi3v6t4m7u6oEOOdi4FYWMpFO/KlArrL1
Rgy2a2que0Ycmn+k2iYwGuPyMwWjxFljHEMBEZFozrtwkUZ666rxC8/11kUi
2v0sw4p4IPn1foHY+/iityHiMrGG57RIemIEfvvXhDwgNop6xnI1CMez4v55
5kKPDg3X5jAJQ4Z+/ZJfxGJ8HoK3LUIRssbKZynp4R8XZa1ItL2DmI81bZLE
zuLuSpKOt/FH9fZjeeK9Uq6s3EsheJO4avYQcbEdT0eFVxBUdh6aP0m89Iyc
yMGbgRDrGis4TxzZGD3BCAwAv5t5pyvxIne4vovwQ3q0cfBd4v3RqyRMYm8h
I3uQP5Y4hiHv1pV4E87vdvOlLuwh8gdQZ+AL3hjKqZhYQLV7rsnCB2Y9Vi1V
xBo/jOTe2npB+0Zgav3CHqGs0N1xyQMlp+yoZmJpDq7l3V7XwG00+7iNeG63
MeNzoCtMD+gyPy1cvypbiBlxBaYzBuG9xGEREStZiS6wvsZT2Lfw/Q1kTT4Y
XMT5KB/awt6Wzgya7LF1xBpVugmbOKmZtr7Pyx6xVgGdC3uf8a+AWlbEWfT0
b2gbJ+7Jy9nQbWAN65d2+EmcXxsv3O9lBp0xB4mFPbNBcMXRHgMD2FiL+yzs
oROjZ+J6DIB1PPeOLuyp3HfzF++jhR/4/z32f93jafQ=
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  AxesLabel->{None, None},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6614260766594143`*^9, 3.661426187949492*^9, 
  3.661426308352911*^9, 3.6614264600024433`*^9, 3.661426957295556*^9, 
  3.661427032061552*^9, 3.661427524787408*^9, 3.661427831613803*^9, 
  3.6614278654420977`*^9, 3.661428301989951*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<H:\\\\misiek\\\\Articles\\\\SurfaceTracking\\\\figs\\\\j-const_A_02_J_\
02.png\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "150"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.5091629959625254`*^9, 3.50916305810608*^9}, {
   3.5091632738114176`*^9, 3.509163274002428*^9}, {3.5091633887299905`*^9, 
   3.5091634161625595`*^9}, {3.5091634851795073`*^9, 
   3.5091634854505224`*^9}, {3.5091636446166267`*^9, 3.509163648769864*^9}, {
   3.5091638984381437`*^9, 3.5091638986661572`*^9}, {3.5091641741659145`*^9, 
   3.509164177705117*^9}, {3.5091642516923494`*^9, 3.5091642523133845`*^9}, {
   3.5091900785307264`*^9, 3.509190082168935*^9}, 3.657506528369314*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"\[Rho]DISPXY", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "2.5"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.507780438797083*^9, 3.507780442959321*^9}, {
  3.5081399530547976`*^9, 3.5081399531268015`*^9}, {3.5091122053520517`*^9, 
  3.5091122208189363`*^9}, {3.509269087566562*^9, 3.5092690881875978`*^9}, {
  3.657506540658061*^9, 3.657506541905232*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVnXmcz1X7/4exV0iytdE9IndRQpS8JWRCdUt2EqLFuC2FRFG2ZB1LpJQl
IrJlGFv2KOvYhpHdzCBr9iy/++Y8r8/vfr07j/v++ufz+DznOJ/r/TrnXOec
632WIi3+WeeNjFFRUclZo6Ki//X5S8lRR6Zd7FeJz7fa5XqsdqOjQcaFg260
S1kTwHuP/nxUzdHpwY4Wm4N2KTuMry1cb/HAPw4Hr577/aP4mAPGX+zze3T/
5/YFwfwz++JSUo2/8l7qq0OmbQ0e7nYhiI3/3fjKew8nFmy9Ihgw7tpL8TFn
jKd/PCXDbRW+Dm7c/PeH8Sj3793XM86KS7kQ4kdXZGqeknA5xJvFZM0dG381
xLf2yb4sIe5GiE/6I3P5+JgMlZW/djOfjCFe6NVs6TduRIc439F1ZKU1DzWe
kGY68/nymIS25Tqmms7wK70zJ5c8f9B0hnfuXiLpXHqK6Qxv8v7sT5Ze2Gw6
w+eOaPbnhH8sNZ3hRWaerPz4A71NZ7jqrBydlaOzcnRWjs7K0Vk5OitHZ/Tr
NSbfmuWHInrBZzx7pXXp8/vtO5/1Zt/RdFCRPaYzvPGNe+IuzdxqOsOj68/6
+b2nVpvO8Im/Zf/99kPfmc5w7ERn5eisHJ2Vo7NydFaOzsrRWTk6K0dndMpa
dM8zCWW2mc7wfPe0r9As+1azA35hdvv6D9XeYN/5LNP35FeVyi03neEFG/04
uWi+iaYzHHvQWTk6K0dn5eisHJ2Vo7NydFaOzsrRWTk6o0f20Y9+d23gXNMZ
fqxNmUo1HpllOsPnbSk6JWn1SLMPTv58V47OytFZOTorR2fl6KwcnZWjs3J0
Vo7OytFZOTrz3HB0Vo7OytFZOb+nnO/K0Vk5OitHZ+XorBydlaOzcnRWjs7K
0Vk5OvN8qrNydFaOzsrRWTl2KOe7cnRWjs7K0Vk5OitHZ+XorBydlaOzcnTm
OVRn5eisHJ2Vo7NydFaOfcr5rhydlaOzcnRWjs7K0Vk5OitHZ+XojL2qs3J0
Vo7OytFZOTorR2fl2K2c78rRWTk6K0dn5eisHJ2Vo7NydMYu1Vk5OitHZ+Xo
rBydlaOzcnRWzvMo57tydFaOzsrRWTk6K0dn5ejM76vOytFZOTorR2fl6Kwc
nZWjs3J0Vs5zKue7cnRWjs7K0Vk5OitHZ35HdVaOzsrRWTk6K0dn5eisHJ2V
o7NydFbO8yvnu3J0Vo7OytFZOTqTn+qsHJ2Vo7NydFaOzsrRWTk6K0dn5eis
HJ2Vo4tyvitHZ+XorByd+X+qs3J0Vo7OytFZOTorR2fl6KwcnZWjs3J0Vo7O
ytFLOd+Vo7NydObvqrNydFaOzsrRWTk6K0dn5eisHJ2Vo7NydFaOzsrRWTk6
Kue78nEpl04lxJ0Kfv/6133xMVuCjN/lGd+kxDdB1U3Xi8XGnzVO+oWPZUhO
iDsf4j8WODckJeFosKzo9q9j4/cEJfrXKv5w9qkB+cM1H+Ul46P7x8ReCvFb
z/tniPP9l1dPlYqKOhz0GTd9UvZd8+w7n81HHq0xteiHAXbCNX/lBW7qdS3E
eX7y0/TKn2+ceX1CXFRlH0cneMaBWSbFpWTwcsoHvnhx1u4xsdFejt7wxm9m
+6h9SkLA58pfho2683y6lSv83TKj2vdtl2rf+fvHX7728sijhy2OzN9vvPNE
p5xVj1o6/j5i8zPjBuVPM85n1yPr7xs466DVN/LBTrjGP3kuTU/9Vo4d/G7b
Ant+rnnvESsn+ONLeuTom3ulxQXga6pUylZr+Dybx2r9p5zwQz1rP91x/fBq
Nh/ztSONN1L/NT08FJ909ZJ2UKj9pBnp81dZ/Ah+9Ytvhn91JdHqMX5xwlP3
JK4YNM+el/Rr/5z27d7RcaaPxusoF22P6KDtBX+o6fGHPj+g+VCu8NzN/ui9
8I21Vm+0fdl7H5e+y8q8x3Y2XRupn46/kn5fhrwjVxpHv5gaCwu9UnZK5L2P
S39vfOyOqqemmN36u/Y+SOznu6bHfm3v2K/psdOXXjntQv0DXP0D7YtyUDv5
u/6ucr77uPZHVr70/397ocTkFpH3dPy9SLVGnd/Jkm7f+fu8j46/U6VVxM/A
WxaaOLhBjiNmt763ol376rPWf3RRjj2Uf4N//j6tUMG5lm8oHuvqg3Ly0bgi
z+WLQ/rKyzce0HJBL61vj2S5digh7nTweoaNQ6KithlvF3u+TXzM8aBsv50v
zY/bF0Q9VPDbImseDgaWyHTuxo1LEe7+8b1339NZ58cdCea8nWfosREjgwIX
+389PGZ5QH6kTyt3fVFcypngRPf4116IX298Qpsbw2Ni/wjxJqOj2qYknAvZ
eXjaxfxRUSeDmquSTqUk7AoOTz63KeOL7YP86zJUjY+5YJz02K8cu3MXPVk/
Nv5gcH+WJinbao627/yd9FfSzs6PiU23v8OxW5+X39V6iD7k91iLJfUqDRsS
5Fx9rUenlMn2eXvWhU9uaH7UvvP/Mv39RIVLndOD49mylY6fFF2Zv2v56vOS
Tu2Ekx+c78rxO773gNrfUS5ajozTfO+tfOM333sW33jM917ANx7zxbF94zGN
r1a/+btXQu3F3u/Lc6Gj2o9e1BMtF9oHHD9IeU56/cITQ16N1B/8x8sTY8tM
qHA0oD362hd86d41OS9+PCmAW/ysUOs3b5v0ufVbpF/0aIt5Tx4calzrIe1d
fxcdlZPeN+7S9FsuZ7w3Nv6il6s9PJeWF1zbL+VB+glLki6/Om2KlRP1+YUW
1VZvfX+IlSvpP+68LFufbiMD7NHfhfvGV5oe/8PvV32w8ciXS75jforPKc9d
Kbb1rdnm19S/UU/IZ88TeaPn/fy51R+tn9RDygeOn+L/NaiwoNP0LEfNf/FZ
Muf8Sb3Oppnfh3/fov2SQhNTjZPPu+svz123Ks38lPb7lKu2F/6/r99U/0Z6
W+czLN/37zc7at+xs8Mzbab265Zu+fr8sPpJ/KFy9IVff2FHp4e7LzR/zfN9
mjNoebnRVBs3wM89GV1gxvyxkXVK4mfIR/svuPphWzfl8pnVcfv2glV/snZF
/fn1oVXdDibMM45/3pT/o/LfFhpv+Wr9oR5recF977u1/0J/nz/09WtaH+hf
tN3RHynPcLO/+DPUHunX9Hnh+lz0U1petr5LeOcT2eqmJFwPtV/s134NHlon
4Pq7v7YzzDtPyfxxzLqoyqo/9mv/CNf+lH5T7aSfVf5YcpZGKeUyVqY9qf06
34H73oeqv6I+aHrssHnSxZjOb/422/RlfJ3nxUXPvVh8RoB9+K3Cg1t9/lv/
0QHjAW13lIu2u0U39bkWSk891HIhvbYj9Nf6ViBX5nyxeaIqa3rqW6j+uPT0
h6pzaD1GkOXkjY8yhNJTr7SekJ7xiNYTrT+D22ddk3AiYyg99UfrA+nVP5Av
5Vv5bL7ay+NG2bgIP096uMavyMc3nlG/gR06DsFu5YwHtL9Ad/U/tE9+t0L+
8SeqrBtj9Ubrla2bdX5mc5tNWVtPWmP1GD9T4cHXTtfYvsg49apb/QKJk56e
bvmST94e07f2mPal/f9Q/MT5Z+rhs632b/7q2iib1+v7dNop/adyX1yUfrlH
jQsdrraKjEP4+4ujogeMHZBuzwV/Zmf03ApN06w8eI48c5LOVqs23bitdyi/
c9MdR3sG2KFxS+qDcvyR1jfy0fpG/dH5Mv2LjpMZNypnfuqbl2l9w4/5xvPK
6R99XPsvuPol+jutt3Dtj+Dqf+i/Qvk7rv0LXP0M/ZHmD9f+Ba7+h/LVdgHX
foH2zOcTz764KUvhJPtO+qv1Hpo/9JOfzS+gW47UIwPjVy42P6D9CN996w+1
3aEj5dtr4fVxX29YaPnCFzRIvX6+3dwAXbReoYv6Mbj6T+zw+T2tV/gHLUe4
9kcZS2W7IzYpunKne278lnDibCg9/hjO/9f5iJWvcJ5L5wuMB7SdwlU3+n1t
X/T7qhtc6xX9e6hfcP271k94KA7j+nFtX/hzrW9wHT/QX2v7sn0TYg/1Qe2n
vLQfoR6q/sRb1T/D1Q/jP31+WPOBaz74Vc2HcZjqhl7Kqf+qP/loeaGvpo9t
k6tK55hwfY7LO3lT7mtnguT3Lp/dnut7S9+vR0LDpa3OBKdm1629ac9a4/HP
xOQqu+9MSIf4H4ofeW7cmWBFhbL1Dt6x0viI0iuHr0s8E/TcNqtpx/zLjBfe
urRimW7hcdf/1U6fPb7f9dnps8eng+89o4/74vO+eILvvZIvbuN7v+Z7X+B7
r+SLQ/rior51qr74qu/9uC9O61uH7Iv3+t7X++LGvnXmvvizb/2AL47t20fg
i4f71jn45pu+OI/vvbDvfYcvPuN7L+aLy/neI/vin771JL73RL54MuNs6vvH
t/+jbcXjqUHXe4bO3JOwzvxJ/4d6Fbi3fHpwb+lNbebHbbf0dY9Nr/Z+t0NB
Lfdctt/l4aWDCn19KOheb0eXqKi9xs+W3f38P785YOnJ54VOsYszzDtg6eG9
Zzcr2n3qvqCe7E+s5fYntltycmVM7CHjtYNpK0oc2x30ZZ7FfsbLbXptGLrD
8rH13W7/HfmYPfcsebfwxp2WD7zwwpfy15q7NRj30tmasfFpln/H9J+zfN04
KUhgHY7jP3ySXPrL39YHGw+c3xqXctx4l3JFGlyJXm35kP/kHo+MShuxyfKx
crn/0yrFPltr+dh63p+OnGzda3mQ6vov8q8x8XT1+QOXBDcSrz4am+e08avP
zojuMWOOcfJ5+42UNY8WnhLMvTIwT//akf2bRe9qsnxshS+Cjt9GPzAyZrb5
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
9FHhuNOxN7KsS5gRjjuxflb1X1Qwy12xdcJxpwxufZDqX+N6lrLxrSL5WNzP
rVtU/QvOyfJRTPZI+v8Wd1L70V/tR//FYr+tfxD70V/tt7if2I/+aj/6J46v
XfCOCmGddZ8UOnd+IevxGz9F8kFn3W+OztFu/azqzLpO1Xnbwaz1UzqH4x6+
+NK3o7KOj7snHPdQ+9G5i9iPzkvEfnRW+9FZ7Udntd/e7yS9eGbl5IyhfC66
eX31c398++YTc22eUM/N0zOeWtX213Zf2ryiqZunL3D7cLF/sZzPQ/qXnN4b
3L54m4e4ebra87iso6a8WPc1uuehEdvvXWXz7bauHGpWWVfgxRcTLV7Buuv8
bn8E5cVn+p7+ix+tNdG+P+Tmv5/ePM+nnT3XWlnPRjnul3k0foPPtPSibU6V
OGrfq7o4zOFuQXqmhMg6rrYuzjO3aOuHa9Y5YulbOv2zVru8es3nRyyOwbrc
o4U+23tkRiT9ZBeHWdF4Q1zh4octf9YRLbp987mB3Y9Y3IPPRo9cTf611xFL
35n4YtMuD2c5fNDS3eP+/s2xH7Zla3XAfpf2131RpZNVLhy2+NWH7v/V/vbh
GkG5jaZnuktfUuI57Vz629MOfrP0wWWWTwH6q1ktky/PXGX58Lt/l3zg3wyN
u21xQqLVQ/isUT836PbdDKuH8NQ/x54ZEIy2+ZiugyUf1h1VcvvN8Q/JrKeS
9U7ZXD1PfGXdgmOvr7O4TA1XT4e0nPZUqcurLJ+67rOsO8ebfLq6+j7hfMLD
H+5cafnYuTrNFi4auzuiG/ypzCteueerBMufdUSlJX94zpm/NuyweoHpST5v
dK63oln3QaZPt613vFDto52h8Ux0xY1XJiftD+mWR9Ztov/bzFck/ccSv6K+
xbn0ucZMyjildWSfdi7Ozfjl6AdPV9xk9bOYa9eDKywefXzJKuP1e/7xt6io
o0HyzX3l/YzfKfElOOta357/9N7lLddau5gz8MTxuJQDQaMtT/59amJknRh8
8I2U5UX2/RJZh+nyKTr1hR0zm8+NxI0dv9ud/1PLs06VfOo5+9VP6v4jW4fp
8WPKsaeyrOOinjSQ3yX/S2In+RT3xMdye3R+VuJmlO8hiWuRXuNylEtfiadR
LspJr/FA8tf12HDt97FzkPTL9h5Z+mW4jlvIB7+96bf2+7teS7f6xnr5Ujln
jkianWb1lnWkcaUmfLG2U5qlt/syEh8/X6lAqvk9XbdM+1VOe9T1h/wu6/16
J1Z8+65yc63ewtu5fYjUB10fSH1QTv66Lo7n8q2XC+2jd3rqunfyUY4+011/
unTKv88tHGq65XP16KGb57CVtf5oldMtqxv/4D87s25u8NWfKpd9zdK/wvu0
CRnrzM5RuiLturjzV0UqzK5RtdL35jcOuPHGupvnGvUxP1yj1ODti3puDscB
XDlsceMu2mlO5ycfd+cLwfHPVzPf4pRXJSkX+K/Ob9zm/BXleFDGRfiZH50/
PN3w3/dQDLd+6h3x/5TLrxL/h/v8c3s3jrrr7oyzE1+PjLt4r9fk1d/rfHUi
zcpxlHvvQzmSXt9rwHUcjv66/wU/o/WKdqGc9F86PZbcvG+ij/Uj9cXfYg9+
IPu/Cq9h/qNWH0qfjS/7+ZM7Qu16aO7sx95aGx7PvOHG8xPceB59eD/47s3z
c3raOAo+w6WH1/SM83U/IOkryDgfHjonzelywb0vO/jZc5ufaf5tZJzp2kfy
1ao1DqfNMY6/GjEn8+gvzn1h7Y73gK3cuTfUq6/c/7tced+KhZnHG0f/2Jvn
2DS2dsFnSRlH0e8X+2nA6V8+iPTv61x7iXHthXbnG+dQH+p0n308621TrX76
/NhAV8+v97hr5HcDIvtHqrt5R+orRwqurBvpF7q49tJ9To1vB5SM9C/tGe9k
KzHyiyNp5s8vS/9u4yLXT/2z0axjQ5oftXKnXdC+KBf4VzmC3k2fjozbB7r2
eHfnScWiH4j4zxxu/HxuyZja/cqMtXLczX4B2RdAfSv56jcX24ydGNkPIuMc
2w8i3PZxeNLPcuWrvL34MX63vvSbcO1Pbb7mfjdfny6zNo5bFtnX4/iYbM8u
GTZ4ofkHxrc/ra9V/MMeC62/0HpCPQzt03R2Kycf2oVy7a/RrZxbLzF09IVz
G+ousvrQ1NWX1JZt76w09wfzGzld//zImuUL+uRfYJxxy+b7xuU80jHB8unt
6mm7XxL6NUuI+Cv84fp/7N69bcwM84fwWV92Lzyp1zDjug+LcsQ/8F6e8sIv
FXT9Ozx0jgrjN1dep1u8Xj13n58j+7kcP5P1b32H7V9tnP49z+rYz9dGJRin
fDt3vxH0eX6FcdvfMXzZF4Ve+CGyD8vlX7zDH3nOFYw3v8H+y9XFkrcdbnHU
6hXrCrK5OAmczyqXH833S+GdVq8yufa4ZNbyctG9kyxdGadbgdqfXKvVcrNx
6nnX3jX7NX4zMg+a69rR1Unrr08/u8L8wzipb+g8R+qnzV+kv4Zr/YSPcH6m
4O7Pf53w8vLI/i/3XD9Ne2nM/a0WWvniT2a6cwPg6z3+IUbWUZD+GU97uSp+
lfpcV/p90rf1rKPQ9os9ysnHl/4L0R/eSOzhd5/1PJfPP+g8kfYYc6VBcLlb
7yD/I68fWfvyGGuntcdmy3vf39YGJZPLlLjzvjjjC5PzHF82fHUwYF77nj/P
6RaJ25S4PmX924lB5SU5XppQbahx/MmRLBt69r7+rvHYT8/vaFltfcgeH9e4
kK9f/r/OO3z7wnz9hW/87PPPvn6c/nuQGz9EL833ZoeckXsq4e+OHjLiSplI
nAg+bEmL8s/XjeyzhacUuPRV+dqR82ThL657J8f5wj/Ze2s49rAOXjnv+ZSz
blg570WUE8dXTv1o7vqFUfXferNT3YM2voFfbHB5TZaekX2M8A+zbuiwfHhk
HyB8wrjX+j65NLIfD37m2pefP9lmrb2/bC79Ec+lnOdSznMpZz6snOft5urL
YyuKzF72VbI9L7z6gKeeXnnbbnte+P2Nyl+f9eNWe15467sGvHugT2QdfDdZ
z4b9yrFfOfYrt3tOxQ+zj+iv96eHzw+xe0iF2z2ket6I0415weGb9wYONX3g
02/O494zfXQeR31QTntRzvMq53mV076U076UUw+VU47K0VM5eipHT+Xoqevu
0FM5eipHT+XoqRw9laOn77wX5eipHD2Vo6fvPDrl6KkcPUPn4Dk9F8h6Nvh1
2WdHe9f0cE1PuWh6OydU0lNemh6u6SlHTQ/X9JSvpodrespd08M1PfVB08M1
PfVE08M1PfVH08M1PfVK08M1PfVN08M1PfVQ01MPlVMPffWtqqzTo14pp/4o
p54opz4op9yVU77KKUfllJdyykU5+itHZ+V2/qRwu8dT1unZvZ/C7X5P4Xa/
p3C731O43e8p3O73FI5uyu1+T+F2v6dwu99TuN3vKdzO1RFu93sKtziCrH9D
T+XoqRw9laOncvRUjp7K0VM5eipHT+XoqRw9laOncvRUTntXjs75ZL0cOitH
Z+V277VwdFaOzsrRWTk6K0dn5eisHJ2Vo7NydFaOzsrRWTk6l5T1deisHJ2V
o7NydFaOzsrRWTk6K0dn5eisHJ2Vo7NydFaOzsrtfhPh6LxF1rOhs3J0Vo7O
ytFZOTorR2fl6KwcnZWjs3J0Vo7OytFZOTorR2fldg6UrIuze36F2z2/wu3c
W+F2z69wu+dXOHoqt3t+hds9v8Ltnl/hds+vcLvnV7jd8yvc7vkVTlyDz5+2
JmRrUjrN9q3BC8670jrxu9/sfS189+4Fc+svS7L1EPDW7394stBbY4LNbt+L
xk/Yj6F8odsnoJz166G4jVtXrZz1vspZhxqK57j3tcqJUxMPiV6xc8mwSsm2
r0DjJO+59eIh7tYxK2d9rXLWgyrnXFeNbzzv1osrZx22ctbXKmc9qHI7J1bi
G3aPlXD2U+n8nX1Kytl/opxzb3Xeyrl5yjl/TznnCiq/kvjX89wkz/z0Fc88
9BnPfLOYZ175qWf+yLxI50ek0/SPun1Qmr6TZ/44we3b0fTpnvljfrfPRNM3
9cwfB7p9EZo+6b/MH/963poxxPFjynu5dqvzo/POjynf6/yY8kbOjynf5PyY
cr4rT3R+THlJ58eUT3R+TPlA58eUP+/8WGg+6PyY8kedH9P5zt/d/lLl37h9
j8rvdvvxQvM+9z007/vslp8Mzfucnwxx5yeVl3J+Uvkx5yeVd3B+UucdqW5f
n/LGbr+Zcr4rr+b8rfKmzt8qL+D8bWie5fyt8irO3+p4fr7b36j8EbfvTvl4
tx9MOd+VV3f7Z5RHuX0dyhc5/6/8Luf/dZzc3/l/5deq3fL/yju6fXHK09x+
LeV8D80X3P6W0PjfrctUfsj1Ozr+bOj6HeUbXb+j/DnX7yhf4PZ9Kc/n9iMp
57vygW79qPK5zv+Gxreuv1A+zvULyu9y/l95f+fnlV/bcmtflvJEt19IOf27
jnPo35UzPmB8kjoh17CfGn5n64B13MJ4QznjDeXsI1Xewu2v4PeruvVd7KPQ
cQv7CZUzTlPO/rfQexbnT5QzntTxDONb7X99/WxzTz/LviPtRzjXg3IZPrxl
lX1JB+zeZB0/s/9KOf24ctavk3+hHPmP9ii6yt4LwzeMLhK8lTFy3qXWE+Zl
yhkfKud8ZuV2T4yrDx/fGHxo4d7Ivd7wtxY12zX56RVmJzzp5v3FTe18Aa1X
zBOVM09Uzvo86sOt+zc/snUG8Htv3hfcz8430fpDvspZP6Q8r1ufoPWN+Abp
b92D0zc47eqJpkdfXz7K2bfmi2+H5t3uu/LMblyknHgC9bBq7wdmPrczcs84
vGuekeU6r43c5wtP2/9A1lYtI+eTanmxH0A59U05v4ueL9+8t3e4rSfTcqEe
Kicf1RP7fe8HVWfO7f/PdtG34l/zqCjWW/NcDcefiT314BhbJw2v6Na3N3Xj
LtWB8w6U+/oFzinQ9JSTtpd33XpW/r7+x4azpt6ebutZ4awDx7/p79J+lXPu
xv/K2bev9nPefqgfceM0371mvvdx6ueZv/vmfWqPr7/GDvgat96b+g9f5u5X
5VwVzef/yjnv43/18+znUf+M/fq8rLuCL3i93o6yh8YHzKM1Pb8b8vOuvlGO
e9w+MtZZKveVC/6f+nm2+j+ytfg+LWB8Au+3NPvkxB1HgqFu/aLWH54LfRp2
KNOidrFlFvfzjWdC8SUXB1Ce5OYzyonj+cZd+rvk89frScKce4W0XdCOlLPv
XfMhPqY8gzt3QNvXNk98g3aq6YnvqT3sqw/N6127/l/jIeSvnPZIPWl7Ye+J
k+t/CNBHy4V4js//hNbnOH1C3NnvW8eidnI+Qkg3V17KaS/KGX8qZz+ez0/6
1gOg2/vdK31e7cUBNq7TcSx+UjnjUtWZfZjwwbHHH9t09VPzA2oPcdpQfMnN
73y/q5x4cigO7/yqcs6LUb/KeNXXL/+vnHb913HycD0kzu/joXUvbj4VWn/i
aV/ooOXFuBr+0M9vpk59NnIOIHzNB6+V7tJ/s9nt88O+9W+hOJ4rX9+4SHm6
i3eF5hEuX+XsWwut/3H1TTn+VssLfxIqRzfPDb2/cP5EOeWi+uAnldOuQ+sS
nf2hfFz7Ur9k9+uJ/vT72i4YzyvnnKa/Xm/8Z4gTx1A72besnH2PyvHzyhn/
KOc8Puzp02XU/paZWgXFyj9+rebIsB/zcd+8wDf+9I1XfeNb33jYN87xzS/s
XCM5x5V5CryVOx81n5v/8lwF3DmofOczz76HW09tvt/OE4H3dOeU4ufh48r0
rBYbmxg858Z12Jk7U5fy01/eZfEl+L70wWsz7N9u3/ls7M4RZf4OTxgzec/L
i5bZvnfVgf1IofdiLg6jnO/KX3DjWy3H9m7/gvJBrryUsx9SOftMlFOfled1
5RtaT+jKV3k27kmR+W8DV07K2Yep/G1XvsqLuPLVOP+XrnyVt3flpPxBV77K
c7p5t/KrrtyVP+7iAxq33+/iA8p/dP2a8jXsPxT+g+vXlH/h/JLyOm7erXH4
Gm5eo/zquVv9r/LWbn+L8jrOLyh/yvlb5d+uujUv07h6sotrKa/I/nnhOVz7
Un7WtS/le127Ut6A+0okftXDtSPl01w7Uh7PvSHCP3TtSLnO6xe7ef3dbt4K
z3jP05993/qQnbeCnxnvzp+Bh+KKLp+QP+lxy5+oPTPYXySc/c/87u9uf3cX
zhuU/c74Dfh7j+ZuNKLMIjsvwLePXuNC7JOCr+q7teuGc5F78eAV21bY9Gne
yLnf8CFuPxT7MeFvNDm/u2OFZNv3DX/6z349xt0fOfcbXmdvkyMnCm+2/Ybw
nk3zdbmn/DrbJwu/dmZmy7LV5tt+T8ox29D6X++qccjinPBXEqvXXVUwcg8g
/PoXm8s26bLHnhde+dL2xqtq7bLnhX/j9jfxvPCSpVI7PlY/yeyhHAdmia/w
8dhdto8VfmLd2y+1uTPZ7IQ/eKBaicZtd1j+8K9dPbT78mS9ClzLvZ5n/wj6
Kycf5Xb+jIx/2PennOdVzvMqZzyjnPJSbudUC6/n2X9Rz7PuBZ2VU29D8Qen
m3LqrXL2OSqnPof2X7j+Tjnlos8F1/R2DpuMEygv5ZSXcspLOeWinHJRXs+z
rwH9laO/cvRXjv7K0Tm0D8LprBw9ldv9dJ7zkJXbPXTC7b454XbfnPB6nn0N
dt+c53xj5XavnHC7P07XvXB/nHC7P044+ug4DX2Uo49y9FFez7MfAR2Uo4Ny
dAitq3E6KOd5ldu58TIO5HmV81zK63nW/9u57sJ5LuXYrxz7fXbquBE7ldfz
rJ+388yFY49y7FGOPTpurOdZT87vhtaNuPx9+ei4y84LFb5R5tGN3Ty6r8yL
u7p5MX6V/rrQyZnNs929y84tgTcr8+rvv8Zts3GO9tf4Ae1/qQ/KsUc5+Su3
ezGEp3rmxfgB33hA+yN0UN7VM4/GDyhHN+XUT+XophzdQvNup5vycZ55Onoq
R0/l6BnaR+n09D2v9jsbPfP9Ap75vt1zKryvZ75v94oKJ3/1e+SvvLtnvs/v
Kud3Q/vCPPN97FE/9rtnvo+dyrFTOXYqT/DEAbA/tN+Kc/OEd/TEB3gu5TyX
cp5LOc+lvJ0nnsDzKud5lfO8oX1P7nlD6x7d86of5nmV87zK7f4U4bU88Qp0
UI4OytFBOTqE1kk6HZSneuIe6KPc7nuVfsfuexXe1RM/sftehdt9r8Ltvlfh
du+McLvXVbjd66rrMD3xGbvX1dPPKrd7XXW/EvfLePj/Gicv4ImHkx6+pUXu
BwZM22fzd/iI91q/OvWug3YOG3xK6stVdhWdZ/ENeIZMjZY1qr7G5u+hdR1O
T+y/+8GWP9cds8TiD/CW7rwRnlfjAJRv6L2Jy98XH1BewLNeDn2Uo0/ofQfn
xDr9G9zRO9u+dmmRc5X1PbInzkZ78Y1P0PNDd35jgqx7merWvWCPrqdKlTjh
LDnvMbQuTuJ1B128rqsnXpcg61XquvUqtLvQOSfuuchn5R032m9c9Z3pBq99
387kYGVPq4fY86Rbn0b+8AbuPQv1xOJOl2Y8Nz1PktVbnz3K0Uf5Rs97vf8H
o70Nlw==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
o01pn0lntlVpHaGzUPLbesg8mbkOq1qhapu7FfZ/lavU2dMZVH5VeXE9u77d
aB75vXdy6wXpB/kkF5Q+Gz/krpvLr1YdYOPSdnoY/AtDpyimW5Z53fS82xau
O01T8Vx5+NRrotqT9oD2Qgp/79RropqafI/+8P8pXNc8tPB+kw9wsvQk7TbZ
hsy2TLmMfpnPjt7hY6VrdrViv+lcqnat3Oq/me3IyNw1Zf2ms9s4c25ZMYTq
g7KfB2S2oYqhFJ9dmfgbAPl7NQuv85+ho/RNzSTl10vX+ZSb3T78Lvlfmxb2
8ZT7XTfztylXQJPw/aTjlHdQ/kF2VjpcMd9LpWMrzUHx3DaFa4NTSn978Eec
FdX4VCtXzVx6RvZB3zDIZug8/oHMj5n1ifKodXPn7rSHVY9Q/la1jE1z+y3P
5LYFykks4V6b5PZhns5tG2QjlGOXTpaN0rcTzxa2sW8rL47cNRXXQVQfUa1N
9Q7ldhLZvsz1EdXjVDepl9uvmwU9lf5PpK5HqIalWozqWapVqSalelavwudR
eXvlMpTT0JgN+O0OZGbnzjutibNwb2G7rxrBUblz0Quh9XP7MK9Dx+icMNZY
2eGY/7O562WqD6pGVie37zcJumNuf29i9JUNX8TcTyjtG2l81YNUi1QNSDkW
Pbv27a65vw2YDD0A+a6pcfPSvpfOYP3SfuSU3HpYscPSzN9o6dm1BtrPzSuu
yxyMfN/Ua6ggRTlz5aKVP5e/r1z64cjclvp5l4fulQ5W7lq5DNX+mpT+dkFr
qNqffC3Vp/RNhWyN/MEDCn8XpJqFaoW9K66XyXfaiWd8KbPPIF9pfNTxdg6+
9kaPip9L/tWO8J8rnHuS3zU28zvSe1Tdc1xmH29M5rz6exXrItVte1Vco1Tt
rGfFNdwGMb7qaKqfqqamWqfqen0qrmPq26+GcV6kG/eAnlP4uxQ9o+zqbsz7
6tTv95zSvoVy9eeW9i1UAxoescY3ieu9ih1+SJyrkY6SrjqptF+r2vHIiDu+
S3yWpR/2gU5LbffXg85N/Y3c5qnzDMppSC81LR3nqJZ9RukYRrXy2am/o6uZ
+vsHfYOhOtReyFyXeq8qLpZe1fcL+kZIOSZ9lzEufCQFrPo+Td9lHZRZb8se
7VtYb2iPyca9FL5Tqj1a+t3o3b0WvtBGskmpv9OrkVonrI1DC3+Ho9yRckgn
lo4HVPs+s3TcpW8J9G2SasqqLZ9f2sdSTXAZdBlj7pj6mw35CbILtZBppXfA
3N4M/6029D3ND1wn9fc0ytVo3CVcvw3eTr5/6bhFtXt9c6JvUPRtl+r5yhv8
Tr8aueMy+Rj6BkW5COUkWpb2I1WXfAu6FJltoM1Kx2n6BuCs0rGlvoXYHnwp
+CnGmZT628VC9jz81b8S+3nSz7KnT6eOW1dLf5fOWchmTQ4/dh2tHe1d2ffU
37q0irmdXTru1XcLykneGfZxo9zxpuagPIvyLYoB9W2TUkvKQ51eOn7WNxs7
gS9PrfOVi+tUdS1GdUDV7+SfHI/M/anryKonKwb8MnEuS/kl1XpOLh0HLg/f
Urkd1UZVz2+O7GzZw9xxrnJBqkUrHv858XenynPpW0LlozqHb6YcoHJ6qlnU
YfwrU9usdXLHktoPqjOqBid/b37pb+xUh90hfEL5hspldQpbrO8tlQeclfmb
vJ0rzsfq+xHFwl8lrtdqDprLsYx5b+pa/H8B+gyIcw==
          "]], Polygon3DBox[CompressedData["
1:eJw1m3fgV3MXx+/3TquQsqkkMjJSdhLZJLJJRClpZxVKGdkRMlMaMiqVysio
pJDK3vN5jMd47BGp5/3yPs8f5/c9537GvfdzP59z3mf8Gnfpc2zvNEmSwVmS
5Pp9VH+O0W9jXZwp/qciSZZIfkV0ufjPRdPFzxCdI35VmSTfaezvkpuJ/03j
fhU9pGsPi35Un5cTzzFU/OHq07WWJFtLriv+OV0bxtyi7cWPFXUUf6fmqFcl
yc+F771UNEz8f/VMbcVP0O+bal+sazdJflf920puIvlcyX1072aSf9Q9Fkuu
L3mK5BUad5TkbfU7X/IvhedeJhou/lP1+1z833rGh9Tn2cLPNlS0nfgvCr/7
TFF38ftp/mPU92zR75IrzdlXz9JQ7b+o7d+69mjiNesm/itdmyX+T/W5Q33n
6drwxGuwg/hndc9cc20o+UnWX/1fFL+RnutR9f9afZ6W/IxogPgvCz/LY6Ie
4tdRn4s094WitcV/n/tbztLvO5L/0HzPq+9amm+C5G+5p+TnROeL76O+TUXb
iJ7QmGN17V61TVX/juq/m+RLJV8jubXkv1K/yzSeT7Qtc6j9EvG7qX1XyYMl
XyF5L8lbSe4puZ/k7SU/rXvsoPHbpn7f+Wq/IvGa7Ci+qaiX+AvUfyfeR8//
guR1JT8oORWdrbFniWril6j/KLXfItqL/aL+C8Wvo/6T1P6Srt0seaRoD/Hb
iHqLv1jtu6p9leb5WzRD8kzR1mo/T+0Dxe+o9rVEF6j9fNGa4kvRjXruR/XN
+uleLdX/MvW/Xv3bVF5D1rKZ6Bbx96v9eLUfJ/pJ8rjCPHv+R8nTNcfW6jtV
/Nsa/13hbzOPNRC/QHRl4jVqLv7Fwu/CGdi98D241/aiueJ31rVBnC89zx6a
75nCe/lFtbeS/N/Cc88XXSh+F9HF4oeo/+5qL0Tnqm8PUc76F+67QHSR+Bai
S8Rfpf77qH2C5LMkdxGt1v1fkXxr4m+yN2dZ1xqI31X9z1D/jdjrunaZ5h8i
+kL8gWo/TO1z1b6TfpuLzlRbF9FGucfQdyj91fa1+v+ua+PV9ovklZwlyaeq
/QfJK9Atkk+W/KGe4X7J40Unid9H6723rs/X2BdZD/X/Q21/8X3E78A+FZ2m
Pp1En6rfrmprq2uvV9Zf/TmLcX7fUHsj8bup/bHK+3kgZyu+1zeFzy5nbmDh
88/YgbHf+b70vUC0U+F335G1Sr0GL2n+eugi9qfm/6jwu0wQnSz+A9G4xO94
ovj3RPeJHys6nu+rcTuLummuc0Tnao7R6CJRT/Fvxvnhmx0mfqXu15m10phz
1H6e6C71vVvUS/yroX/ZgwdxlnTtHrXdK+oj/vU4b5zHQ8S/FvuVawcX7kPf
MaK+4t/WtdvUdrvoCPF1df/19O12El2hPqskn6m2Tpmf9zN9v0mSv1bbjZLf
1Zgxid/5OPHvF3531uQEzqboJfEfanxn9e8uuk1jb2ePi/9b85+h9lMzyx8X
XtuJolM4q7p+k/qOFHVF/6n/6axtZrmb6Ba1jUq9Xm/F/uedDhf/jvo3QTex
p9W+J+cys/5Cj72FvlZ7S12bpfZ/acy0xDakq/htdX0b0fuiD0RvFF5bvtmh
4j8TTU085mzsmWhK4mtnoetLn49fYn7s4WmSj5X8HPsJnSG5teQuvL9+P8N+
af1HxnlG96CD9kH/lMYLo2MvLQl7dkWc9/GFdcGDam9QWV+hfy4P/Vun8Pp1
0322UPvL8T7sjz3FTxJ15V1ENewBOln0rui9zPqcuYZFf/ZrB86C2urHfMPC
nmAP+F5HsxfUvoHaJxaeG52ViL9Oz9kk9Z5DB/2p/p3Qz+LnhX7rGPqb/m10
fT9Rf40ZwPnUepya+IxwViaFvj9BlIp/ufR6c0Y4K6nmr+W219jtJaXvd5/4
fpXxR7/EOgZ8NFrtf+rZZmvM2ZXxEO97lJ7hGclLS5/XCdgobJPk2ep/r+gs
8Z+o/y5q3589p/ZZsb7dRFsUtk8HcTZFP6vvCvRhZhvQE30KJlBbB117q7L9
apd4DPZsYtiz4+N7TQ97wBpvIn5Z6fP1AO+r8TNj/XmGzdjrsV8Ys5H4pWHv
rhLtK3533beV6HSN7yy6P7fuxwZ8ruv/UZ+5iTFSf/EXqf1ata8UTRbfRzRI
fGu17y7+lNK2ogV7W89zouQ9Ne8eohOwxeg8zdtL1FT8abqWqv/ekpdKvlDj
Rkg+StRR/L6i4eKPFh0f8w+p2aZsJ/5qPdP6iW3RAo0/VH3aqX0d0TBd20x9
NhV/kq4/rfb/6D4HSX5NdA+2UVRX/ABRd/EbFNaHvdEL6r9I8o2S39Fc+1fG
aGC1a9mnlTEYWOxK0d7iL86Nxa/XfJeIvxqcIv5m0cHqs1Wcl1GSR+TGSGCl
QaIW4o8orR/aqG2R5Fa6/xDJN2bG4+Dp6zT2FdFtuTECWOFq0b7iu+had7UV
sX5nhvyF5vgMuyf5nGg/nffXmJt1/RZRu8oYC6x1Q+b3PU7PM1B9d2f/lMZs
YLfzwRHi6+X+9huqTwN0nfpsLr6R+IVqH6H3byH5YtEhGjNZ7Rvr2pvYH/FZ
6O+1JZeM0bW1gn9S48/X7zDJH4j24KypfQv8HfEvqP1W/S6RvJvmOFDz3y55
KftF9xgmflNwF/1Fy8TfqOstxX+PPWQvsMdYS9Ei8aNFy8TvxxlU+yH4R5K7
iXDo7gX31+yffav24aXfhfO0hvj91b5XzXuYvcx+bMFZRP+Jfyrw3XOp1+94
jTlfbSdIXgmeyeyP0X9L9e9Y2n9qK36x+p8quaP6bhr7uUnuPcVeuoY1C3z6
lPpsp/bDdW1/dIXmOyL0D3gx4wxnpr9CJ9F2WGnfa5T6PlH5fOwt+SbRwtw+
Br5Gf7BcZZ8Q37Bv5vvdEeuHzQOH7syZVttFol0q40305Ui+v/hWub9dH/Qp
ulD374v/J/7lyr/IfIPP4nuwd9nT7O0V6HO+D/sA+555r9POWdiMOcASos3F
P1DYX3oY7Ct5PDpPdGJmTNZJ97+15jX7jrMqOqTmPbOP+M1F7dXWOXTKyeCb
ms84Z/2h8H9mim+k+Rfk3mvM0SG3vgePH5PZH39E/ftKfjwNfZh7/fGBTxDf
UNfOUd/umedjD7IXu8b5fUR0g/gDwCuZcR/4r2HNNvbhwv7jbOywxjcW9cD+
oIvYTxp/lvoeXvN+3j/WFx3ROXcf+vbMPJ65sbXb5b4HOg5dV0c0SPyQeB6+
aZ3c+oy50Dsvafzk1LbqtMyYc1XYv9Mz45lJapsoOiUzZnwBDKH25an169DY
L9zj8tzyjeLbq304GFFyf3QtNkT83ML+9YLU+2/d3GvFeJ71+dx7mz2O/hie
ey7mRH/gI+Mrs4fZy0+HPl6MHqnsk+ObX5pZbhbf87LM/iA+Ir7iMNGe6Orc
tmCj2P9X57YF2IQjM8d+jqj5m/Btvovz21C/z8Z4zk6bxPZkY107E2wp2oT1
LexfT0VHSN5Q1Bm9n3m/d819Xlgj1oo9xl5bV7R27v3P8/Bcy9S/eW7b2xSf
Ifc9uNdZmefnvGGrm/PN1V6f9RM/WDRP/JXxvLsEnhibGouB+8H4DxaORzya
+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
6CKu8f9q/wO0WggV
          "]], Polygon3DBox[CompressedData["
1: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
j7V/XZ7OyblZ+n8k/i+5jPZ/XzzJDg==
          "]], Polygon3DBox[{{1711, 1205, 1202, 1201, 1189, 1789}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
p94SU2Lb4PwYnIS9yKNnv/HMXf8BV0aGNg==
          "]], Polygon3DBox[CompressedData["
1:eJwtlUeMj2EQxt/v8/9e7CJ2SZS1Yk/qaictellECaL3i14iWtiEi261aNHW
qlmEAwciEQ4c1ZMudiU4CKJdlN9j5vDkP887871l5pn5l8xdNm5pGkJYDXKg
fwyhlt9xSQgDsHdkITSD/wFb4HvgDbAbgsd8cIK128QugB/H3of/L3ZgrQG8
Ej4SOgJ8ID5l7Qv2JPyrsA/jL4a3Bi/x781s70bgCXw2MR+wjxI/J9qafDoj
H94T9Me3EDTGPhvtLJ15Ltr96vDA7/B12CXsX5LYmu67AdyF/8afh90G/zT4
N3gGLwMz4KtBc+yh0fzary72cnAFPh1Mxr4J3uMrg/fy7wsTe8Nv9u4Hb4s9
3vOrfMteDMZgf89Zbj4rhfAc30yBf1V94MfhfbB7g1piZ0XLzREwE3sX/pbK
J++7BL9FTHfsvviHYu9grR52DdiJfSSzbzvwzVv8u+H5wWr8CL6SmOv4Pyln
2AfxF+FrBZ7jvwEvx3cZLMN/KDOfavoiZzlT7nqDHtHeqLeqZr8ye08nYkvB
O+KPwTsGW9P7thL/JjENbsIeFi335Z5v1Vy1XwBGRfteuekFajw/PbCPuX6k
59fYr8Bm+PZouXgLtrm+df8if7/y0xP7Gv4V0fR7I7GcrPR6lQVbk547p6Yl
aapLavnUXqrJw5ztob10J9VrtzSbWE8ov+v8fXdYK8euAO+w2wW730AwITFN
Sk/K/9pgGlzu9S9OrYY6bz1r84P1qPYT197SsLT+k5gp+M/A50frv2Kvr/p7
I2v38HVjz6tef9VHenmWs/4t9Xqp3ieJySe2PbwymuakvRr1bB3Th2I7un5O
EdMotRxXRTtH5+kb6fY0awWp9bTuNzbabJKGC6JpXFpvgf+iz5/Wrr98j1+S
WM+p90aDRfDoeikE9ROLKfB5Ip9moPRZkdneRZxxAd997lxf9YRXw+dFy51q
eAb7APF5qdX8mc8vaU81U+1+sDYcX2Fq8ZpXTVKrgWoxGD5Z2vZ+10ySnqRZ
zV/dR2fnsfYgZxqWll8m1h878TcP1jPqHfV7bWJv1Fv3Z1YbaarC9S9t1fo8
kF+9IL0+Zf8hrE1NTEOZ76+zlAPlotL7TTPpI/wXmBrsTZq/2kN7KSfSg+6s
u0ujqlfM7L+jWjMQfh40TW2Pxd7vmq1rfN5Kg11T6y9pcxCYmFgPJl4P5bbA
taP5rv+uex7fifW63qOlXlPVVjmr9vpJ29KwtHxU/0ep6VXzRDNSfq1VuV+z
Rho+5f2sWakaq9b//wMS+w/Q/PsHM+7YoA==
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0zdPVlEcx/GDwgNiXXSw0KSpNBEpClhoKrCYKAqYCIOIDSfFOBkVeAWA
L0BHF8Cy2HBxVbHXGBcToyEORgb9HEme7/P9nf8997R7b3bvwP4zSSGEn7gq
xNzr7w8P8ZPkEFbISfKMnCl/5BJepVbHzzkzEULVghCqcdb1Gn7E27ief+g3
zdXxHl7JD/kiZ2AUbfrkGCdL7pIXpYSQjhPyer7AZTzC9TzG7XyDu3mKT/Jj
zjVOnnHG8Uz7Mtear5JXL7RmtTW8Fuswo53BmXghZ3E2cvAyzs+5yMMr7Xwu
wGu5kN/wW7zDe3yI54RPKDDnNXyWr3AVhqzzqfYgT3M/T3InX+dWHuVy+9iq
/7A8Ls/J251pLeri2eKW+g7eidvyLt6NBjTijloTN6MFe3BXbS/vQyva0I4q
80yY4zsf4BY+yA2J+XekQ+7gQ9yoNisflvvi2rlJ7ZfcJTfL5+OzkXuQgzEM
qg24dlPOjthrv1qCO/m359TK37iWv3JxPFfO4CWJ8P9FHcZy8RIXYZm8NF7H
YqTHdwhp9pXGqVyEYpSgFGWYMN5mLsc9c2zhv57pF/c80K7QnorPgSvjOZlr
BDWoUE/m+/oVuLYJk2obeCMKkY88DCDVmKf5FOI2jnMfjiElfnvcg6MwZDjC
3bCcMOtvLp6ztl8o1aHQ3OeS57/df/7+YOE=
       "]], 
      Line3DBox[{643, 590, 1155, 591, 592, 1102, 283, 1222, 326, 270, 1221, 
       399, 1220, 51, 643}], 
      Line3DBox[{593, 64, 405, 1223, 305, 1141, 386, 1722, 351, 1627, 595, 
       1224, 594, 1163, 593}], 
      Line3DBox[{597, 273, 322, 596, 373, 598, 1591, 315, 1723, 232, 597}], 
      Line3DBox[{263, 320, 362, 361, 600, 599, 263}], 
      Line3DBox[{306, 377, 306}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1225, 1596, 1597, 1790, 1576, 1625, 1987, 1415, 1575, 1787, 
       1997, 1626, 1577, 1724, 1971, 1226, 1791, 1792, 1416, 1227, 1793, 1794,
        1795, 1417, 1228, 1796, 1797, 1725, 1888, 1229, 1788, 1798, 1649, 
       2000, 1418, 1662, 2001, 1714, 1716}], 
      Line3DBox[{1237, 1780, 1799, 1726, 1972, 1236, 1974, 1545, 1800, 1727, 
       1973, 1238, 1801, 1802, 1427, 1239, 1803, 1804, 1728, 1889, 1240, 1976,
        1549, 1628, 1998, 1729, 1975, 1550, 1610, 1779, 1994, 1611, 1991, 
       1587, 1588}], 
      Line3DBox[{1247, 1805, 1730, 1890, 1246, 1806, 1807, 1731, 1891, 1248, 
       2004, 1684, 1685, 1732, 2003, 1249, 1979, 1781, 1808, 1556, 1733, 1978,
        1555, 1786, 1996, 1529, 1619, 1992, 1589, 1666, 1590, 2002, 1557, 
       1617, 1618, 1995, 1530, 1579, 1734, 1970, 1578, 1988, 1558, 1433, 1665,
        1689, 1690, 1531, 1683, 1691, 1692, 1559, 1620, 1621, 1532, 1580, 
       1591}], Line3DBox[{278, 1045, 276, 1175, 463, 1176, 279, 1156, 400, 
       1157, 234, 1048, 281, 1049, 466, 1180, 235, 467, 1053, 283, 1054, 236, 
       1149, 1150, 397, 1151, 272, 1980, 1254, 1809, 1438, 1255, 500, 534, 
       275, 350, 588, 587}], 
      Line3DBox[{1290, 1814, 1815, 1447, 1288, 1816, 1817, 1818, 1448, 1292, 
       1819, 1820, 1449, 1294, 1822, 1823, 1824, 1450, 1296, 1825, 1826, 1827,
        1451, 1298, 1828, 1829, 1452, 1300, 1831, 1454, 1302, 1456, 1304, 
       1458, 1306, 1460, 1308, 1462, 1310, 1642, 1463, 1655, 1542, 1646, 1682,
        1464, 1718}], 
      Line3DBox[{1315, 1832, 1833, 1466, 1314, 1834, 1835, 1744, 1914, 1316, 
       1836, 1837, 1467, 1317, 1838, 1839, 1840, 1468, 1318, 1841, 1842, 1745,
        1915, 1319, 1843, 1844, 1469, 1320, 1845, 1470, 1321, 1471, 1322, 
       1472, 1323, 1473, 1324, 1474, 1325, 1475, 1326, 1645, 1476, 1661, 1544,
        1667, 1668, 1704, 1477, 1688}], 
      Line3DBox[{1328, 1846, 1746, 1916, 1327, 1847, 1848, 1747, 1917, 1329, 
       1849, 1850, 1478, 1330, 1851, 1852, 1748, 1918, 1331, 1853, 1854, 1749,
        1919, 1332, 1855, 1856, 1479, 1333, 1857, 1480, 1334, 1481, 1335, 
       1482, 1336, 1483, 1337, 1484, 1338, 1485, 1339, 1486, 1340, 1571, 1487,
        1586}], 
      Line3DBox[{1342, 1858, 1750, 1920, 1341, 1859, 1860, 1751, 1921, 1343, 
       1861, 1752, 1922, 1344, 1862, 1863, 1753, 1923, 1345, 1864, 1865, 1754,
        1924, 1346, 1866, 1755, 1925, 1347, 1867, 1488, 1348, 1489, 1349, 
       1490, 1350, 1491, 1351, 1492, 1352, 1493, 1353, 1494, 1354, 1495, 
       1355}], Line3DBox[{1357, 1868, 1756, 1926, 1356, 1869, 1757, 1927, 
       1928, 1358, 1870, 1758, 1929, 1359, 1871, 1872, 1759, 1930, 1360, 1873,
        1760, 1931, 1932, 1361, 1874, 1761, 1933, 1362, 1875, 1496, 1363, 
       1497, 1364, 1498, 1365, 1499, 1366, 1500, 1367, 1501, 1368, 1502, 1369,
        1503, 1370}], 
      Line3DBox[{1372, 1762, 1934, 1935, 1371, 1876, 1763, 1936, 1937, 1373, 
       1877, 1764, 1938, 1374, 1878, 1765, 1939, 1940, 1375, 1879, 1766, 1941,
        1942, 1376, 1880, 1767, 1943, 1377, 1881, 1504, 1378, 1505, 1379, 
       1506, 1380, 1507, 1381, 1508, 1382, 1509, 1383, 1510, 1384, 1511, 
       1385}], Line3DBox[{1387, 1768, 1944, 1945, 1386, 1882, 1769, 1946, 
       1947, 1388, 1770, 1948, 1949, 1389, 1883, 1771, 1950, 1951, 1390, 1884,
        1772, 1952, 1953, 1391, 1773, 1954, 1955, 1392, 1885, 1512, 1393, 
       1513, 1394, 1514, 1395, 1515, 1396, 1516, 1397, 1517, 1398, 1518, 1399,
        1519, 1400}], 
      Line3DBox[{1414, 1574, 1573, 1413, 1526, 1412, 1525, 1411, 1524, 1410, 
       1523, 1409, 1522, 1408, 1521, 1407, 1520, 1887, 1406, 1969, 1968, 1778,
        1405, 1967, 1966, 1965, 1777, 1404, 1964, 1963, 1776, 1886, 1403, 
       1962, 1961, 1775, 1402, 1960, 1959, 1958, 1774, 1401, 1785, 1957, 1956,
        1784, 1572}], 
      Line3DBox[{1567, 1622, 1623, 1043, 1581, 1561, 1993, 1595, 1259, 1130, 
       1534, 1562, 1535, 1114, 1260, 1722}], 
      Line3DBox[{1570, 1783, 1990, 1584, 1566, 1984, 1273, 1986, 1568, 1585, 
       1569, 1985, 1274, 852, 1893, 1275, 1811, 1735, 1894, 1895, 1276, 1812, 
       1736, 1896, 1897, 1277, 1737, 1898, 1899, 1278, 1813, 1443, 1279, 1444,
        1280, 1445, 1281, 1446, 1282, 1637, 1638, 493, 1283, 443, 1720}], 
      Line3DBox[{1627, 1981, 1563, 1582, 1564, 1999, 1629, 1261, 1983, 1782, 
       1989, 1583, 1565, 1982, 1262, 2005, 1686, 1687, 1892, 1789, 1711, 2008,
        1263, 1713, 2007, 1709, 1712, 1710, 2006, 1264, 1810, 1440, 1265, 
       1441, 1266, 1442, 1267, 1634, 1636, 1635, 1678, 1268, 1651, 1536, 
       1721}], Line3DBox[{1717, 1551, 1977, 1609, 1527, 1598, 1612, 1614}], 
      Line3DBox[{1719, 1657, 1656, 1311, 1680, 1681, 1643, 1641, 1309, 1461, 
       1307, 1459, 1305, 1457, 1303, 1455, 1301, 1453, 1830, 1299, 1913, 1912,
        1743, 1297, 1911, 1910, 1909, 1742, 1295, 1908, 1907, 1741, 1821, 
       1293, 1906, 1905, 1740, 1291, 1904, 1903, 1902, 1739, 1287, 1901, 1900,
        1738, 1289}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{602, 1139, 1140, 1072, 1138, 1137, 1997, 1074, 1011, 1974, 
       1013, 626, 830, 1806, 638, 1046, 1176, 1178, 1177, 1179, 1129, 1130, 
       1086}], Line3DBox[{604, 810, 1791, 606, 821, 1801, 629, 1183, 2004, 
       1185, 1186, 997, 1157, 999, 1182, 1079, 1141}], 
      Line3DBox[{608, 812, 1793, 611, 823, 1803, 631, 1025, 1979, 1028, 1032, 
       1131, 1133, 1049, 1099, 1098, 1080, 1055, 1983, 1160, 1058, 657, 854, 
       1811, 673, 870, 1821, 1822, 689, 886, 1838, 705, 902, 1851, 721, 918, 
       1862, 737, 934, 1871, 753, 950, 1878, 769, 966, 1883, 785, 981, 1886, 
       800}], Line3DBox[{614, 815, 1796, 617, 1015, 1976, 1018, 1144, 1192, 
       1193, 1031, 1996, 1126, 1125, 1127, 1101, 1222}], 
      Line3DBox[{620, 1164, 1166, 1798, 1167, 990, 1021, 992, 1994, 1120, 
       1118, 1024, 1095, 1121, 994, 1124, 1995, 996, 1123, 1077, 1037, 1151, 
       1039, 1207, 1208, 1198, 2007, 1203, 1200, 663, 1898, 860, 679, 1912, 
       876, 1828, 695, 892, 1843, 711, 908, 1855, 727, 924, 1866, 743, 940, 
       1874, 759, 956, 1880, 775, 1954, 972, 791, 1968, 987, 806}], 
      Line3DBox[{623, 1209, 1170, 1212, 2001, 1211, 1213, 1210, 1215}], 
      Line3DBox[{643, 1152, 1153, 1150, 1196, 840, 650, 1204, 2008, 1205, 
       1202, 847, 662, 1897, 859, 678, 1911, 875, 1827, 694, 1915, 891, 710, 
       1919, 907, 726, 1924, 923, 742, 1932, 939, 758, 1942, 955, 774, 1953, 
       971, 790, 1967, 986, 805}], 
      Line3DBox[{794, 975, 1068, 1957, 779, 960, 1945, 763, 944, 1935, 747, 
       928, 1926, 731, 912, 1920, 715, 896, 1916, 699, 1833, 880, 683, 1815, 
       864, 1901, 667, 850, 1984, 1061, 653, 317, 1085}], 
      Line3DBox[{797, 978, 1960, 782, 963, 1947, 766, 947, 1937, 750, 931, 
       1928, 734, 915, 1921, 718, 899, 1917, 702, 883, 1914, 686, 1818, 867, 
       1904, 670, 851, 1985, 1064, 654, 843, 1111, 1114, 1113, 647, 838, 1158,
        1156, 1047, 640, 832, 1891, 628, 820, 1973, 1012, 603, 809, 1971, 
       1006, 1010}], 
      Line3DBox[{799, 980, 1962, 784, 965, 1949, 768, 949, 1938, 752, 933, 
       1929, 736, 917, 1922, 720, 1850, 901, 704, 1837, 885, 688, 1820, 869, 
       1906, 672, 853, 1893, 656, 844, 1159, 1999, 1051, 1162, 1163}], 
      Line3DBox[{802, 983, 1964, 787, 968, 1951, 771, 952, 1940, 755, 936, 
       1930, 739, 920, 1923, 723, 904, 1918, 707, 1840, 888, 691, 1824, 872, 
       1908, 675, 856, 1895, 659, 845, 1982, 1057, 648, 839, 1134, 1053, 1097,
        1096, 642, 834, 1978, 1030, 1027, 633, 825, 1889, 613, 1795, 814, 
       610}], 
      Line3DBox[{807, 988, 1969, 792, 973, 1955, 776, 957, 1943, 760, 941, 
       1933, 744, 925, 1925, 728, 1856, 909, 712, 1844, 893, 696, 1829, 877, 
       1913, 680, 861, 1899, 664, 848, 2006, 1199, 651, 841, 1980, 1038, 644, 
       836, 1970, 1075, 995, 1122, 1107, 1143, 1088, 1119, 1991, 1087, 1022, 
       991, 1168, 622, 2000, 818, 1169, 1165, 621}], 
      Line3DBox[{808, 1887, 989, 793, 1885, 974, 777, 1881, 958, 761, 1875, 
       942, 745, 1867, 926, 729, 1857, 910, 713, 1845, 894, 697, 1831, 1830, 
       878, 681, 1813, 862, 665, 1810, 849, 652, 1809, 842, 645, 1036, 1988, 
       1076, 1035, 1110, 1116, 1171, 1977, 1117, 1216}], 
      Line3DBox[{251, 248, 1577, 299, 252, 1800, 627, 831, 1807, 639, 279, 
       280, 1562, 239, 308, 1585, 287, 669, 1903, 866, 1817, 685, 882, 1835, 
       701, 898, 1848, 717, 914, 1860, 733, 1927, 930, 749, 1936, 946, 765, 
       1946, 962, 781, 1959, 977, 796}], 
      Line3DBox[{1071, 381, 473, 382, 1987, 601, 1008, 1972, 819, 625, 1890, 
       829, 637, 1041, 1175, 837, 646, 329, 1993, 1218}], 
      Line3DBox[{1084, 1109, 1069, 1070, 1067, 1956, 778, 959, 1944, 762, 943,
        1934, 746, 1868, 927, 730, 1858, 911, 714, 1846, 895, 698, 1832, 879, 
       682, 1814, 863, 1900, 666, 1062, 1066, 1060, 1990, 1082, 1108, 1044, 
       1217}], Line3DBox[{1102, 1054, 1003, 1191, 1188, 2005, 1190, 660, 857, 
       1812, 676, 1909, 873, 1825, 692, 889, 1841, 708, 905, 1853, 724, 921, 
       1864, 740, 937, 1873, 756, 953, 1879, 772, 969, 1884, 788, 1965, 984, 
       803}], Line3DBox[{1136, 1043, 1135, 1078, 1042, 1045, 1040, 636, 1805, 
       828, 624, 1799, 1009, 1014, 1007, 1073, 1106, 1790, 1005, 1115, 1004, 
       1181, 1105, 1142}], 
      Line3DBox[{1155, 1154, 1174, 1002, 1149, 1195, 1197, 649, 1206, 1892, 
       1189, 1201, 846, 661, 1896, 858, 677, 1910, 874, 1826, 693, 890, 1842, 
       709, 906, 1854, 725, 922, 1865, 741, 1931, 938, 757, 1941, 954, 773, 
       1952, 970, 789, 1966, 985, 804}], 
      Line3DBox[{1219, 1104, 1103, 1083, 1063, 1986, 1065, 668, 1902, 865, 
       1816, 684, 881, 1834, 700, 897, 1847, 716, 913, 1859, 732, 929, 1869, 
       748, 945, 1876, 764, 961, 1882, 780, 1958, 976, 795}], 
      Line3DBox[{1220, 835, 1172, 2002, 1090, 1034, 1146, 1148, 1145, 635, 
       827, 1975, 1020, 1017, 619, 817, 1888, 616}], 
      Line3DBox[{1221, 1091, 1128, 1992, 1089, 1173, 993, 1194, 1147, 634, 
       1998, 826, 1019, 1016, 618, 1797, 816, 615}], 
      Line3DBox[{1223, 1093, 1092, 1048, 998, 1187, 641, 833, 2003, 1184, 630,
        1802, 822, 607, 1792, 811, 605}], 
      Line3DBox[{1224, 1050, 1981, 1112, 1052, 655, 852, 671, 1905, 868, 1819,
        687, 884, 1836, 703, 900, 1849, 719, 916, 1861, 735, 932, 1870, 751, 
       948, 1877, 767, 1948, 964, 783, 1961, 979, 798}], 
      Line3DBox[{609, 813, 1794, 612, 824, 1804, 632, 1026, 1029, 1808, 1033, 
       1132, 1000, 1180, 1001, 1100, 1081, 1989, 1056, 1161, 1059, 658, 1894, 
       855, 674, 1907, 871, 1823, 690, 887, 1839, 706, 903, 1852, 722, 919, 
       1863, 738, 935, 1872, 754, 1939, 951, 770, 1950, 967, 786, 1963, 982, 
       801}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnXk8lfva/ylJKBkiRQNKFFFRST5SmRopoYQ0kKQoCQ0oKRQyNBFpQCik
DJlLZpnnYVnzQjRoMD9ev7P2eZ5t/zz77HPq7PZ5ln9ur/drvb7rWvfw/V73
dV+fzz3f4pj+wQlsbGz1k9nYJo5uVaeN7C3zcs+6rXF7z53MKFj2jewS+dKD
u3Ndj3653IR8j5J3hwqfguA0455PRReEz6U/qlpEgngo4ZqCTwxkb8yo8b7O
wOad1+MN86jI0U5FQ3oCWo+sy7xtRoVVoHP6oyQq7mzyPy0xIQEP5JP4S+2p
2N1vHO/jS8Sqe8Xcdr6JaCPq7Er5wkCK11xuN/ZmiGeFP5R1SECQse30ivgu
sP1//97/ZXiBgJhF/rwnWZUXrSOLq8ggfybaPllFh1v4DJrq82pcGN4n9GR5
O16HOVV3ddAhMWi1IUS+HfXhJU5IbIZxtuT14RYqwjoj9l3ZS4aTc5PL0uO1
6Ag9fMNqkAIJ/x6FsBEyvFUlby3grsLekbXHWhSoKGMcMyjJbMe5BT5rDsdW
YDDTPSRtDgPGIb2RJc9bkIKUpc5rszDFIzg2VOCvv58JnQeW2Eo+zOJYn5NU
v5+Brm0HZgXZkkDPn8HgiSvFFx791gFOOsR4/M5uKCIhRVL9y8oDDTA1l7GW
rKQgX6j8eW80CVp7uSaWryfgEcFY+LoAEduvLzeYUEbGOqMcu6vb22EyQyB9
1/VW8MkaFXxeQIWD7XlZi5wWzNScluVlWgPfWIt3K9d2/HT753txl5Lw5Vou
UVmUyef3SK/qQEyl6gM2bSLidvb0Jl7IxWOf+WdE3BgwVDBNSX1FRGuuc3kp
XzXmegU7RnrTQAlQP3BZiYR3W880dqyuh/Zntbb46RSkv3VL31hJRtgc2V2+
PbV4V7fAnPt5O7pccntj+ei/xOP66+13/70/evx/mG94eSx7RDYia+1iTxrl
Hh0Wxy6+FjtIhg4/19n868k4sN/BfZonHUkW/Pu4Dcl4r/4yfrb/G9wId85p
46DhY5m+1wZXyk/3u1icxVmcxVmcxVmcxVmcxVmcxVmcxX8GXmRr8ihDrxEu
H6kbVNZWwj+yZTIlqfOXz7v+ejv+OEfXFg+vFmkBKSD7Ux+xBZy3t56/t5H+
w+MPnzb/ZFd1OQ4E6clsW0dF0vs5Ye8PUnA3bU7R2bIaSEm+871VQ8JdNrbj
E8Ko3zse119vf77jOx7fl07N4eArwsOrjqFDnxvx4WRLJJd2FypcSZzTeglI
MxPy3qtUBTmqwmJtCwZSjWXqDXqzUeLtnOR7mIYjJ+f6cxyiYG7r3BM80+Kz
KPXOVllVrWAv758Y9a0TFtSPx7dLkrCo3v/tEqNEWO24r6fgzQChKjroZWQ9
3LViig8dJ6F4vWfcK5Xvflx+w20mfQlbrhiTNbty/hznRzRsn7M1d/FZCnJn
q4tqnCWCe6XIqbx9NZAzNllvXk2DyL2TZYntBFwVP6n84Xk1FIdFK29LMMY9
7kWnysQjauvxal5cDU20GqQvz+a+T+384efP5YgZaXFXmhDpqTmnI5+IY+9b
3vt/pCDx2nE2Um8bBhLuHTcLJ+ACg+JTtZSK7SYZD5R31eO0xmtLsgQJRrRj
/PkBVNjFv7IytG+AfK+T1WB4E64PuGxMpo//e/9onN+LFwrdmKnBHwv9+q7y
xwYM7DPlcd16mjRunBfPhRg218Zlfb5wKTJvBwP6e3VlJUc/r7vOwnT76nyE
XRn4JN1Ch0pOiMt0XRLEez4+L+PIg+HyiQuzi2kgXvCtOZxBxr2opyqO7yuQ
H718uV0jGVHXo1/UXv3d8/Y38fyT++F7jfPTc+NnWxNTTD2zvKiPBE6ZXYFQ
s9m52uEevBgyPPe+qgams09sOmFdiTxDXtEl97uQbEMQD5mRj7QFA4aNr0go
J1boks7RMTFCR7nGqRX6r2xo9xsJUOuj8Lpe/vHzjDOPRx3XyBOkHNd24w6i
I3oT7wuZg+TfO47j8R8W5+/w8eL5DT9ub+By2L8OW02l8230W5A1wLbImDT+
vHG8bpGrUWQprOy/0vbYU9CmJjRX0O/HH5cna7Q/HJNpQl50yRGXhgaoCBsI
FnX/8fntwP4YUsfmapzYdbYswo0IWRUGN6b+bp7zD48/Hg9dONV7Q1wqFA8E
Wry0oQOPn7ecsSFDcNW+OMG621le75dPmbPJDTZxCfHkwR44uLyZLEZ9COcw
QRcl5VZwDGwS3CT3u889/+U4Wfzfyl1/vf0n8gfczDk4ckSN2+D4i7irXnAc
iUvZNtKDr8JhThu3pkOYb11khXMLvi3P5bgmP/750zFZw+gmbxt2us0RaTUd
zRsNIhcFqXdg26drFeR1rbDWVhJ67VONBQ4flUw1OjBVOevhnKAGXAls7LFd
UYVNZ78Obk7+8fnSn8U/z0xIVSE3YqvE4a1BXW0oT22n09bREXqOXc1Wvx6r
9YuMBxe3Q3eh92nCbDqyzz+91DcymtfFrnDqq29Fw9mKZUW632+emR+1vleC
NwNGaxySOEXomJ3BIF7LImOgJJuXMLUGMjdMtnqJkxFG0fUW/O885zfjf1vR
82nzpksQ9m+u77pHx+763KeWNr+73v0mHoUPzrUPh+swp3v/torDbzFF7JPd
xTtdKB+ZZLiFsxze7tcHzmrVQ6587bkK1y7Qid0MD91mxPjHp3p4NYHW6ea0
fSkDhVWLCtgkGxE3L89EJP01Ni0/Fc2d9ePnPY99WxQt9npmubTztnzaewt2
F/TIn0bn4SXVvKf5bB9mqYQQJ1s0t+J9m+TMc2zfL54DCbHn7isREH/z9q4X
pc0w4X5tGXmZBnbzfR8KbzTA9pXi1ozXTZh419eLUcPAg33TEpbaNGI2UbzF
tqARvbsPU6b893r9D//e8eJ0+nKvzOfQW9TLSukvfkOD4AwRUu07EtSkS+Yu
cMtHx6atsgczadi9lufZ53tk0Bzsi1/NfYPCFdahF8toeNjAlVgSSf7T5kMW
Z/F/ha8LucgTsIWInfN6+dcoZkLfK8ywrY+BozT/mAavFmhNy/Tc05+NYbeb
Gwz4uzA0wadBaWcTJme4u7/xLMcnAxup3rTfXQdZ/E/i66QGeyx8mhC6he8o
14M0rHv6cmXPf0DfphiPZNhyv3qcizo33BbcDHcJXpmA5vHXhbqNL4d2xWdB
sOPxt2NWDGw598Isk4cEy7o5E7o2v8KXisdFA+wM1IUh/bYZCZHCS7ZkVmbC
fMXeLgF+OjRjT5msTCejLJmn0/xzFSbpTTAjG5PRWHjX+Wnw+PeDpXyv01NF
72VNnGz01TiCjv7N11rOHPyn14t/mMfkWTbPX1+F18etPy4JqsE2+9y+/d5d
UN3Ns1tbkIDS0rdZyfq10Fg2O+6IHgP2M95cEpMsBc+Vo5OrR+9vnyS6rCee
oSBOdc1E2QvFo+ui7p3Qx1Scb2P3Yb9I+enOBxb/z+AvabJXjNwboEVISe6N
o+CLr9YpyQIShnImDsk51+LWDrtJyXZUKPIufybZQEKzTc1koSfV6EzfuiFt
kAK+nDzKUOX3u75qp+0y7ljaindvq6tllNpAK+n9dtqdBrn0qQ7blFux0Dd3
ErmiGY88rpRdUP/xz49YnMVZ/F/nK75GuOtObEbiulOBg+fj4dzk8fJhYhc4
K33mLC9swsev3sZ3W56j82GJ6ZFRviZeSmqkqhEn3t437lfIBZ6+v1uR0IVg
HsPnw8FNiLKZmM92PRWDQ+sktEc//1m/5mucYhNU1fuX1iVkweKjrxzHKK90
Om/Tt6cJehoRnGJbMzBZZ/eHuaNcXmLdcdEvjThlK6BVap6DkOFVpuSEv36e
xvzH9ddbFmdxFv/t3/cbX81e8L6gfDku+4nfJXgTIWRrLm5XRAffgf7YsJ2t
4DWMlRjxi4e6e1HXvFldSHj6aMGSFwR4nyjOke5vQYmLtjpfGRUNe7zkps4m
Y33QgT7KjTgYFawbdq+iQ28/TUHUiYJP5IOrpDfFY67WhP177tPwgT+2QXgi
EUMTufu75ZuwzJ7tQ2j86Dg8kzX1V5Ig+a5galh9PWw68wgxptRx9YkHj2w8
NjOLihtVNcJ1pxLANpgRU36IitwdPidrUqhIPmo2rVIhAZt0h7on2FIRPkZ/
18nU3902EHLZGUJGW5lv8uDiGiyYalaxRoCK1fnnpqfUkzHU7Hxeg1IFWyKv
pPMCKioMNkezr6YiwoJTKU8lASmRtvr+XVQ4+ziHRDwnQ3dacodcQwLmcZkX
fNSlQ0x747cDYiQ0ZtnLCx5MRFmAP/tqPwZuPdtQNTWUjP0OZ51dSZUYPj13
S3QgFULXvD7rHyGhgjvgedShSiSpX2NXfEGD5pfZ2ziXEDGfarKdq6UCd47u
8zyRT4fdLmLlEcd2pGwsPMJhkIhYt8JZH1504EiszNpWzzZIXKdrc3QnQNjP
eWpiTic8dlrMiw1qAWGjy3zX+9lwOB7x9SV/FwxnLWcrYW+GgldrfdeWBDzt
Vm4WH11fPNOtLLSDnyIlfhHl3SwGXgQ56LllkkBlnHqzizsPT7QGfEV86DAU
DCH31JEwPYzQ7LK0HEWWJ+O4imnIPnbwjuhbEixcEwt5FatxfKOEvQkHDWx6
du+OlI0e7wFRc36xemTIn7zfK0HFdJOuWa0vSBDv92XnQhOUvSLP8b4nYwm1
zEKajYwH8UuXyHxsQbV6tOGQFwn9/CXvV9iRoc3U/UUydX96TN3fJN7Ab2Vx
BFhVcArt421H7rHyE48NKLgfsDPwBn877kzpX7h9pA0J+w9tNa+hYD+z/hzD
rD+bMuvPnBy9K9XOtMJIYVpAvWYdRNsaE+pDGfDV4s+2n3oLkUXLF8zm74Be
f7Sww+j1ZBk81KT+OgVsMYLTj75hYOK0fJOXz4k4U2Kp0aCeB6rnMfGOLQzk
vbf18GgkQtkldoqMbSkGsl71yIXTgXexPtbTSTi44FKXdkYliIM5JnY1NBws
5CtgUyBhoPKx+rSuWhwxk27cOZuKmcmhk+aJknHXYbb0/kd1eBN6pj7Blgi7
uBvS8ga077ZeT5npK/vmyjPc3Hy8veYaHWoGUkI5pmRsTOhJNjd+A2OuRbFP
rGnwI4e/6xRi1QFYnMVZnMVZnMVZnMVZnMVZnMVZ/P82dxvSEwhd3I6PG7QO
dR1oREuhzwpuXxroNaUSZo9ImLNG3VTUOxspxb3chh101DssiLGWJoPTOzdA
tacMJ9ra72iH0f5eHyseUx+7Malt60J1KnYvlEvP/fQKRne975icoOJl/g13
hWsUEJIiYx/Ty3Cval6v8W4qdAUTe9XkqLD5+u793IpktDt4x+4mULHMZC+n
oA0Z14RJcfJib1D/Rp1jygQ6ZE0ch87aE6Hv11UhzluOZZ+6vBqJdGzuvBkY
5NgOZX1rld7zmTiwzyBxhVcH7pyys1HbnQ+diq95Qzk03LbPiwsMJ+P0klYJ
W9UG+M6T7SeAgg+n/R9O30lG2Kf3lo4DBCg6SMndCGmFSBDHk8/7qajjctq5
/CEBQfmhghwvCLjoNv2mUjjl7/5aLmPqe3Ia3rJbtEiovbqXdNCvARpCPWfe
iFHhN1FomcxcIqZar6Ksu90My1nVbyfJUJE1Rj+1lKmfqrhkZ/0wtA2bKpc2
l1vVwOstZ7/JEwbM5i1TurE2FE1XtjkkXmFANj73ZKEGCd+sQl5XyKdic3jX
6e2+DKivFk32HSZinqZWy/nhMoxUz0kd6qOhdkRmX0wqCWde+EkKO1Ygx1Wn
uLqMhnuaxjo2F0mYbX1rt6N1FcKXr2o6HUpDX0DIERFdEsJPP8kwVGxA9dHz
OkGeo/utV4/uw0OGaoB5rNrGBjxoD/J+sYGIqxfIGoNcNBRVaCzqzi8Ax0xL
tpzqMkTMERDgPNY97vk555kjTN8mgh6s5uD/no74dBmzYwwSMu2CjIS58+F+
VUYkxIIGvkfvpwzzs+o8LM7iLM7iLM7iLM7iLM7iLM7iLP5rrvPFfWPkhDZs
yfA/c56jEjJrN3S3uXbASSoepVWN4FhrfmrK/gqULuCTzE/pBImpw9Vn6nCX
MnW4Vkx/HgLTn4eL6c/jx9TFRzF18Tq/1sX/w3FeqYtQuOVYiezSldT+Lioe
Dmo6nN9BhnBVylH6q0o4CQw7NM2noibhYNWSuRScHEcfcS68xs/AtgbeXTd7
n/eR8O1+QMryYCqim2p7i27no23g5ZaNp2tQLm+7c9D33R+Oc+lso20zrJIR
9pSkt313CVRV23y38ffgld+yAquHWbDLmcq2Ib4ZNO+nYa47uxAlPHGHVCoR
N08E7MhPycBzEfvFn58wkMse82x63nMM71i9XIJAhaRXPi9RiYr3sd46291K
8UDqRnGIJxk3uK51nTpMA1052b2h9QX4uGeqvxuiIU3ClrRygAzHB7wXbkqT
cNdn2RmHmjhMjVy9mubHwCmD8L1CaTVIfVV/K7iwHZNqqxL5telwfvD2QSo3
ARaLmhxjLNqQsJBLvOstFXy2a/c+MavAlqOu7d2DVETpmBYOnyPDVaWA9+ms
F6Cy8wTp+dBwh3tyU/hZCiQDFWQH9pNx6CUsKx9UQc1unoBqGBU5zHrOZGY9
R55Zz4mPntJc9L4du8QKZq8KqYT86gID27d0CJye9E75UTvOGA0kcRk2o+Bl
BYXtf4zDPWacXKcKUzPddpSfceaYRqqG6WTDwjsVdLybe8Zt89xWvHrxhpvT
swp3X7zAwNkOdOw5kXdsXTXKShbv6BMoQZ6+q6De5fGPuxZTb36YqTeXZurN
tcbpd1I/fFroZlkzemIfbhG+S0S/h1nbhTgKnE9uv3ZXrg2lfMfPVsxoh1fJ
wqUnxKnoZvp4a43x8Ubh8zSPl42YrT8lfLMpCXYTPIeWPqVAq9Nce0VBC5Tu
+XKeTG3HjAc5EypEqAjKjC5fu6ENvF7ddTKrCGhTCy9Ylkb9u0/4L+NnMMff
aMd5bNKOevRLtLg73SPh5kh3Ws9CKmIV5CTusDdg0qYo+61izag5LN8wRPyn
9bz/Mh8w8nlkTAnFiWebZISCGXjA5yktuIwEzsc4NsU3FXODVVXM7BmIGTA1
15Qk4WvpcMQnj3DcPmP75IQ8AxkCYuLDyST0lfA+mBZxGowUcqvLyiZoa7Df
XPJl/P5teauLXBXKd3BVkcg1aMLALl4df/VzJLwTKJbiS3yFSc1hL3YZMzCf
3GykQiXi7vRt+toDFXizKG0aZycNpxKtVnisJ+HznsC4deIVMBkwFLBnUJBw
JLkmK4GCiH/O/4fF/0P5DOEcNjHPYpzXnfNCN/A+FMLydsmp9GCixWsJ13lN
MNVc9napUzUsrPb4eYp3QviKX3rn5Cx8CNQhSEqR8dZA5GKDLx3ZIezB3sp1
WHlTIHevTDuuyNfd2LT/++mebjiv4IxNicAgoa8pKZSOSgmrhJjDZDxi6hCn
MXWIl/5iOsQTxv5FBShGXadYowIxF45f56mcpHfjjUaD47IXhVCs5squLnsN
iZu7zHMZ3TjIzH+IY/KfhGcfxGddqEcxaf/U+S7NMF41K2EHbXT9PeR0Y/95
giqx4dCV85fIqr98r3PZ1YeBMW+xqfrOW3ITBQueX9MUGqIguki3sHZaNjit
i06uVamD2CXHwx+8x1+nYph5VwYz71rLzLusmP5C9mP8hbYxuRmTr/0d36Gb
zPkqgzlfJf3OfFX61n/3ZbcC7AlbeNa8sxJrXxtpz/r0x/Or8ThZg49n7/qA
rJjStOknDDyw91OuyOzhHnAKKB09mJ0Ont2x8levtoPzhefQhQsd4x7H7xXP
H+VKyzq+BDxJwS5x2VRFuQas3GhYMrhu/P1zTyo7Jmr+azR6swU9WNcMgX2i
a65s+OP6o3ZmPm8wJp+vOxKt9NWlCAYGIm/T2l8hrsP7keDo/iGO8eH55fPf
K88fj8csWihr3FOP2ZQIunEDAYMjzzcJydPRVkcSqzrVgtUzHVw59AgQ38XP
/k2dBue8AhW/e3WYpE5M6j7eDtPiRV92C9ORxvS9ecj0vWli+t7s7eVUlNye
hnMBYYYx2+jgcI51qvYmY5Ixp3D38FN83X1Imu1KI5SOu4XPnvoOXWPet5LJ
zKOkiubz30+qBWl49VaHCBIUPoUtZQ+g4sGY9T36d66XRJ5J7Oa6EeA0v+p3
dHRelVd59PCg9fg6Wc+IWLepgfVQync7YifQBme26TxZ8xkYilKYpqfYgBLp
gZcZonWYeb2NUD+1E6ezS50HWxuhlxnjPD0lHdNN1JI+VXSBK21WiTRPPYR1
5tP1mkpAVUue2PZq/PPqTbjlW1lTz6zi07tMejgDcPXapYNTR6+78a6vmevm
LznA044XKsVzeiVbEflxOumZKxUHLj+2NkltQuWnW0cHQuqhsMAqJmhGB5Ic
zrUIejRg19NTeoTEJsz9mHJ/RxsD5mN8acyZugCeI0nPdkxohIvalRUfNJsw
kiEtXv6/+Az8bNzh7MmylWalcHR6fWwJHx0BQxOp1/NJULqe+PKyZjk0ptIX
LJ1Mw+5nGdcHYsmYSWF3uetYjK3aMo3eeTRE1H4IeKr74/0KxuMf2dV8Ko4R
Ieys5zKyLwUpfYWC/P0MUA+1dRE2tmPHIff1GkIv4WvK62Wd2gGR4bs07RlE
PL9wLKZ+SyFCyrZEP7vHgMitxI42AwK081PND+gUwf+1r/+elA4YfdoXLnG+
GVJGTQpPBQqRs0FC7uTnTgjC+pnAynZYl5kH6u7LwKItl/didPyJwWvSUq81
oUDQYx3NMg2Vmjala/8XneZ4z+Utmet7+5j1fbxxaPK0s6KEF4i8u9R5+n4G
RC/FThHYSIJ2BX/LxMQcvLsvtbJei4GqwA9cE8RJiBvwH2iblQV2ruVU6QI6
VCUrc1RbSeClnN8xKyAHqjtbLScoMzD9bvBhbWUShOsH6/OWvwTn1IW83zbT
8UBmldUBLzKsNXWqHxOrIbJ3xPjETDJWbNtNuX+HihtzGY5pdV5Z5lz7XK9s
ssOnx7kyq0d6YMOsk3Ay6yTPmXWS0LTuhm0nGhDWpuQnkE1BU7tWP38qCUEv
VXYE7WyCrYbITbZqMtJfq87jFibDKN5YTriiFgtn63rmPKDC6GBGQbwHCQnf
5utwa9WAXcFDlspGgyal0H3lFRJ6osI4HYJqsMKiJzF4FRV55d2qeoY//rzV
bYnbkrWSgPq+tWetOloRcPZuq0QDFaeSebIJM9oQ+Ty4TGsuAdt1Ml4lNVEh
zfQNWMD0DYhi+Qb8EJ7uFrV90tfRddkkpO2NbiJmir2X2TR6nZ7J4Yxb2t4E
9Vyu7u0bciAa2tN+07kLMvPcxG60NkNdOcXd7FAWaNZu1lU6XXCzSKTJnW+C
jISWm5HZS+R4qxUajY7TqZa35oBlM55aPzHWdszGHamB/EHz8eeBXI7QC0t8
KsB4tjlrQkkyBHc7BMrd+/Pywx/NCUvnuXV2RGed4vR2+LyaCMvJW8O9R/M6
pY5V/HNutOPqwlup1980ILW/hN3hCA06Cv7cGq/IuJgRHayqXY2kpSvkFCWp
WPslp5tHiwLfHo6sa2oVSKcRpJN0qZi8xu9NOGn0/tPUbe+wUDkGFYU/UrV/
vnX5vUhpdOLRckQ2nWHTPEuFs/4if4k1FHDzbr3LWBqVlSkavbjOi453/PPO
hzqTcbXoxMqhxibM6Tl1LEGMjPt9fkqV4WRkbFwjRTnQjsrXAX2yDgS0NlQt
lFChwNnycqbDdiK+jERztJU1QWGaWcWidX9enSfq1uoe77Q3eDSZTdhsgI7q
K/v2mC0hgX3BtynpayKznBak2Yh2MLBkcjLtZjIRA61Sn8WFa/HxVui0kS4q
9sTmrOW2JEHiYsBUCZsmTLGwaHjNRkbI6uiZKYQ/Lw/50bx/gzNHiektXOOw
/5BwsAhHeAuOGWzpgV53lfl00Sism3pP6mlgAdzKeZ9pmvb8dPGzOIuzOIuz
OIuzOIuzOIuzOIuz+H8GX/Fw1xklx0pMUtScxu/aAm85inJrYwfO8yk5UHeQ
kbi6MDRqQTXEC18OmPhTsc7C1GWDDgUDSjsDpddVYMRI+ZaQNhVsT4s1w1za
YHIhYvIqzizMi+2QaAz+6/uH7+FW6v/iQYCTpkqR0+J28CVtck3b89fpT2Bx
FmdxFmdxFmdxFv+r8yd5nwsSRpogmhfp+InRiuGYZ7Od/g3vdx42+lt/1wdm
f9dKZn/Xj/7en42/25Wp2t9cBUOdR9KP2igo3kaMJEl+v3zYNlKeyvG5HZNp
k+Tu8jXiztEaO00+Gqb0eSYn5reBIFInlzu1Blo7Rg6tSPrxz4V9ntAXTclr
gaxpwjeXHgJmGjqazn1OhU+I+khmZiMuGZ3k4yQQIdnLde60GBV9917xmmUX
wZQ9SDGapxTfHizHsePfrx/AXPUUqcE0Fiu1FxjGDzbCtDnBbtmXLnTYtG3T
932Ew4FTWvd7FUKkp+m11I4f/zzRfRpjlhr1elbE+oM7slc34Wymx771vX8d
f3uJ18HnUyVrcKdwykWT8FZcLBJnFHB14IO6zmXfj/kIEay5xqZDhNbI8wv1
/gwYlaS0eF1sQ4RM2W1fjVZUSbgJd+77fj69Ugr3M3fH+qE/dSK/sn0RyF3N
yyS2/nnPhdn/3/aV6t+2aaq/9/n6vafbKk0a0Ry1afP6By0on1IvfUOMgSfM
/vbSMf3tPzr+8a6Xh/a6bUMBrllhA+XOjJlEHHYLVi3Y3wE2Zh84N7MPfDKz
D/xHx/lX553jvHf1n3y/6g/jf3R+djKMvCDg0wz9vRuXOJu24iNpvn+I9h/P
N4aZOrJupo5Mi6kjG4+PN84nBfcZprXF2E6kc7fPJkCiU8jLNrcDW9Y7u1yw
b4Hg1Fj9d/GtiLPM7FrMGH9eiso/VFa+vx0pfBuPpy9sgNLahR6P07/fPMbi
Pyc3oi3pcd7ThoOlFclel7OxPFs48MJ/QJ32R3PjU7MDXi5pwaMkkbN2MzPR
5xP6+via75fnBJ8pWD6Tvx6XJl5kG+lthq7FBaONhJ+v75HF/8Ztve/fr11c
Dw73Dssti6kYbFEYuB9FQtb6t/X9OfUY1oK+OYGCSyufR6SVkn66+Fmcxf8n
PzwxQUCuqglGNwJddwdnIXHyTPmn3uPPbx53qBFfJJrQrDaDx04lG0O+k1NE
Ev86932/+Lh+GOPjuoTpj7qF6Y+qyPRHvTWOD2pGkoZQKl8Dhr4s230gmgzd
k6IOe/vJ8Gf6lHKP8SkdTJLO908h4In02v1FNjV4kdpclyfCwHD8xjMWqs+w
1yGnfMrofWZU5KyVQyIkGHB87OKfUwm27mj36Vk0XAmQveRlN76PaFXEN53k
w43Y2UddQfEkYmlmZUzieZY/AIuzOIv/cU4fc18vz7yvP7im7HiXayQ27Oy7
Jn6RjuKgg/YOF8hQY/rPiI3xn/nRcVKZ+m4Vpr57FlPffYmpd1Yeo3c26ovh
L3zXjkB5e95Y4zK4Bp0puXhw/Hybc0xd6Bd/AGfzjS9nWBHBcC3n7laoh8rO
maLlyjSIve2qjw4k4cRHURWR/BokK28rFmig/l0P5c7UQz1n6qFS5h2WjB4m
g2GUF5wzUIlH+Zo9jSuoqPcsHpmxkoIcpWvsVU8r0GVhk5m6ngr/GIblUTIZ
8ucucwgLV8DUdo8s5QkV39ZaP0UiCcVP/QoUgsvxtfjerc0VNHhM+lpJXtkO
s6Xr3YTfFqLHhZDgo9ABS8WThG8Xk3DEtFjXwIyOwbr1YXEBZKxoYOPgPlsL
c8cTGlK6FPQ5dbstE6JAx3HRI58HLVC06dx6SoaEidr5KSfpZJxS2834MpuA
NwVXrOPi2qEltSLsqAbl7/qmqjH6plOzvvVG5rXDI1NFNPJNKwZO9KkPPqdg
Ld9xTUv/O7j+UvrsmWwG2kVuXeroI2KZYOXhBScLsSBvY+aDXDoYpa6xkiBh
RJksvaSgHH7tu3xTOeiYdMCxKc6K9HcfpF/OQ/t/03nI4izO4izO4iz+f5nL
jrmP/uU9I7/cF08Zc19cITMlvXxCOjT8DfQaDjFAPrw5uVGKhDfGchG9edUQ
PqOoMKREg0HtgwmCR1n1NBZncRZncRZn8R/Jx3vfWeiYevgdZj08RHHBYx7H
RrwOFR4SOkCG0LQI7oS3ZCR8W0P9Jl0JWwGl9hoFKoyEJqm7KlJwpy1wStJW
AmQFyneyq9XgHM87Xtro+j/n0dFCV0kiHhh9zd37vhGVh0MV7KPHr2NHrIlQ
nufTBNOvQltDJxBxf5vnrOpA6m/8RkL/Yn4jN1u+dvIpl6PLV9Qng9wKBw3V
IzlV368fqZ7p37hzjH/jCWbfix6z7+Uzs+9lvH6q8fwex/te8hg/RjFmvc5z
nHrdL/0qz5j9Kqt+p19FlOd1ku+hNvjXErP1FLNheKnj8c3gTpTvjyz1DW/G
0aIpiRefZkIzUEwi0aQLAcz+tMfM/jRrZn9axDjPWWYVmXHzudRBla/uQ48N
FQPZ2huTA358XvpfcqQfmQ==
    "]],
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 2.5}, {0, 2.5}, {0, All}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426076774333*^9, 3.661426188197651*^9, 
  3.661426308447393*^9, 3.661426460183526*^9, 3.6614269574088306`*^9, 
  3.661427032213098*^9, 3.661427524901402*^9, 3.661427831717761*^9, 
  3.6614278655427094`*^9, 3.66142830209086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"NT", ",", "NR", ",", "NL"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"C", ",", "\[CapitalOmega]0", ",", 
      RowBox[{"R", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"R", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "}"}], "/.", 
  RowBox[{"dat", "[", "Jtest", "]"}]}]], "Input",
 CellChangeTimes->{{3.5081399770371695`*^9, 3.5081400102520695`*^9}, 
   3.6574460261712008`*^9, {3.658645697444034*^9, 3.6586456989800587`*^9}, {
   3.6586458429143972`*^9, 3.658645904657494*^9}, {3.6586476543823957`*^9, 
   3.658647669117798*^9}, {3.660974930667313*^9, 3.6609749532115498`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "9", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0361597807878598`"}], ",", "0.5981914931881218`", ",", 
     "0.7775181521171451`", ",", "1.1339018684932891`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.661426076797702*^9, 3.66142618850917*^9, 
  3.661426308462421*^9, 3.661426460331007*^9, 3.661426957431291*^9, 
  3.6614270323776407`*^9, 3.661427524915717*^9, 3.6614278317409*^9, 
  3.661427865558182*^9, 3.6614283021119633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", "\[CapitalOmega]0"}], "}"}], "/.", 
      RowBox[{"dat", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0.0", ",", "0.249", ",", "0.01"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657600492140768*^9, 3.6576005837716703`*^9}, {
   3.658647289010109*^9, 3.6586473617938747`*^9}, {3.6586475302399817`*^9, 
   3.65864754814384*^9}, {3.658647606927536*^9, 3.658647613854493*^9}, 
   3.661341723982383*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Import\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", ButtonNote -> \
\\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661426077096002*^9, 3.6614261887736673`*^9, 
  3.661426308770279*^9, 3.661426460726027*^9, 3.66142695787138*^9, 
  3.661427032844801*^9, 3.6614275252062798`*^9, 3.6614278320393667`*^9, 
  3.661427865863701*^9, 3.661428302364346*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661426077096002*^9, 3.6614261887736673`*^9, 
  3.661426308770279*^9, 3.661426460726027*^9, 3.66142695787138*^9, 
  3.661427032844801*^9, 3.6614275252062798`*^9, 3.6614278320393667`*^9, 
  3.661427865863701*^9, 3.6614283023824253`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ6qRda5P6xqsf9/WOlWusFiewh/iv2kzdd4l2pt
tt8h1/o6cMc8+7M/lEuKN+6Byi+xP21vNddJ+LD9rJkgsNLehnmiwdaDx6Hq
19nPscj9syDhjP2bQJDIRnvh3N8JGmUXoPq32LuwGfyI33DJnuv64gJbru32
n6p8kk/euQI1b6e9xp44Nc6f1+w1Y/oPfdXYY1/yeeGxaUw3oebvs2eL1Z1z
4Nst+yVA3dcXH7DX86zt3nLpDtS+g/bFjswdEyffszcGg8P2p6b6LjGUfgC1
/4j9/rel7GJ3Htgf/qoBtOGo/e6jot9dux9C3XPcnt9kpfhF9Uf2QWALT9hL
Jzr9uLjhEdR9J+2fLKivSVJ5bP+wCmTgKftNDdLrWxsfQ917xl7st4i89/HH
9oUg5xWcta/pCj7g/+mxPQDN67gJ
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 0.23}, {0, 0.6233290439962071}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6614260772482843`*^9, 3.6614261890865107`*^9, 
  3.661426309069231*^9, 3.661426460855424*^9, 3.661426958005918*^9, 
  3.661427032997108*^9, 3.661427525330258*^9, 3.661427832142658*^9, 
  3.661427865981591*^9, 3.661428302476102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{
         RowBox[{"R", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/", 
         RowBox[{"R", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], "}"}], "/.", 
      RowBox[{"dat", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0.0", ",", "0.249", ",", "0.01"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.658647678334565*^9, 3.658647697918109*^9}, 
   3.66134172939021*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661426077340991*^9, 3.661426189179865*^9, 
  3.661426309143014*^9, 3.661426460929831*^9, 3.66142695836032*^9, 
  3.661427033085083*^9, 3.661427525534793*^9, 3.6614278323509483`*^9, 
  3.661427866073107*^9, 3.661428302685186*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQM6fyu3rrjw3r5aZJ37w6oWe0HGmR2fTsL4U+zd
GU/8vrD1vf0OudbXgTvm2a95L2boPgUmv8R+5VE2wejU9/azZoLASvu3e6SD
xTRh6tfZ273e+KH9/jv7N4EgkY32f5dc+ne04x1U/xZ7k3qLp+9V3tlzXV9c
YMu13X7rk+y7BlveQs3bab9s/9XJh8ze2mvG9B/6qrHHfv+ku2vfr3kDNX+f
/fG59Weei72xXwLUfX3xAXs9ftbjV8teQ+07aK/yUuPrxxOv7I3B4LC91vOk
ekXBV1D7j9hfnLX2zH3/l/aHv2oAbThqLybt9DCq7gXUPcftLy/91+Cy6bl9
ENjCE/YmcxdFr7v1DOq+k/bTAtw0XT4+tX9YBTLwlL3076ZPTz4+gbr3jH2r
m0jOntuP7QtBzis4a//RZ9vqXc2P7AGVjMlW
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5577981800285935},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 0.23}, {0.5785802224876574, 0.9942210716689366}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426077438979*^9, 3.6614261892201433`*^9, 
  3.661426309174827*^9, 3.661426460987953*^9, 3.661426958436129*^9, 
  3.661427033165063*^9, 3.6614275255661583`*^9, 3.661427832392363*^9, 
  3.6614278661120663`*^9, 3.661428302717482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalOmega]0", ",", 
        RowBox[{
         RowBox[{"R", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/", 
         RowBox[{"R", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], "}"}], "/.", 
      RowBox[{"dat", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0.0", ",", "0.249", ",", "0.01"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.658647755324985*^9, 3.6586477577083073`*^9}, 
   3.661341743774225*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"$Failed\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661426077530789*^9, 3.661426189672468*^9, 
  3.661426309239748*^9, 3.661426461056615*^9, 3.661426958544058*^9, 
  3.6614270332599688`*^9, 3.661427525647808*^9, 3.661427832475471*^9, 
  3.661427866211706*^9, 3.661428302792288*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAAAAAAAAAAAAs/Xm1qNDvP//DItpn
MKM/EQGZiPLJ7z+Ss9YNpSqzP0cByPvQte8/zfgjdHOxvD+s7xYxR5TvP8s/
Op1CE8M/qcUGEVtl7z88A5EwtcHHP+28G1MWKe8/nDht/KBgzD8+67Hwh9/u
PxNt+2AodtA//aTS/sWI7j9EBjD4X7DSPzR/OOXvJO4/8npMY8nc1D+15Gvd
MLTtPyi8XiYJ+dY/pr/Vk8I27T9086HGlgLZP7+S3a3vrOw/Bl0tnMD22j/H
nX/M5xbsPy5JfYu00tw/Lg8Fx9V26z9zQQOIkZPePyTpKPXxyOo/ypVNpDEb
4D8q52J/IRHqP7/tdQcW3OA/0ZqtzN9P6T+7xRX3RYvhPxYbQuFafug/DzSp
F9En4j/Tpf6ARLLnPxthQvjRsOI/NJ2iW67a5j/koH98YiTjP5ZQRilE8eU/
soAbr4WB4z8b+4Ly5PHkPxb7FB9Lx+M/hUYUbLzb4z98ilPAT/LjP/FMtqu6
g+I/WbDJkQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5577981800285935},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 0.6233290439962071}, {0.5785802224876574, 
   0.9942210716689366}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426077630609*^9, 3.661426189751175*^9, 
  3.661426309282835*^9, 3.6614264611460543`*^9, 3.661426958765668*^9, 
  3.661427033326604*^9, 3.661427525686036*^9, 3.66142783251362*^9, 
  3.66142786625264*^9, 3.661428302829073*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colorlabel", "=", 
  RowBox[{"DensityPlot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", 
      RowBox[{"1", "/", "20"}]}], "}"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "20"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"None", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.509271682018956*^9, 3.509271700472012*^9}, {
   3.5092717365180736`*^9, 3.5092718416060843`*^9}, {3.5092718778861594`*^9, 
   3.5092719136442046`*^9}, {3.5092720228954535`*^9, 3.509272029145811*^9}, {
   3.509272182183564*^9, 3.5092721823625746`*^9}, 3.509272247635308*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxl1jFrVEEUhuHBJr9AraKI/o+QShQEtRGLEBCsJFily5Q2gSlcsVARZHDQ
VAFBf8CFVHaXKJgUgoggom46tVCzk30/OZ+XiD453L33ZeSwZ27cvnrzWErp
5+Gf2d9+Tc5dOPx5sRQ9yPuv1g5/Xtt8lPt4/628d/QL+fef2fVevtvv/yCf
nXHyUX7Zb/8kn+8P/Cy/65//Rb7VX/CrfHRNzSmd2l1e3F1eW6I3epDpjfNR
phfTi+nF9GJ6Mb2YXkwvphfTG01vtt5svdl6s/Vm683Wm603W2+23my92Xqz
9Wbrzdab1Xti9eD46sEd9UYPMr1xPsr0YnoxvZheTC+mF9OL6cX0YnqjOd9i
51vsfIudb7HzLXa+xc632PkWO99i51vsfIudb7HzLXa+xc63qPdef+5EvdGD
TG+cjzK9mF5ML6YX04vpxfRiejG9mN7olE72876v3uhBpjfOR5leTC+mF9OL
6cX0YnoxvZheTG90So8e9Eu90YNMb5yPMr2YXkwvphfTi+nF9GJ6Mb2Y3uiU
Tvf/34/VGz3I9Mb5KNOL6cX0YnoxvZheTC+mF9OL6Y1O6crC+uWF9SfqjR5k
euN8lOnF9GJ6Mb2YXkwvphfTi+nF9Eazr6rtq2r7qtq+qravqu2ravuq2r6q
tq+q7atq+6ravqq2r6rtq2r7qqr3zey4F5+qN3qQ6Y3zUaYX04vpxfRiejG9
mF5ML6YX0xvNfm62n5vt52b7udl+brafm+3nZvu52X5utp+b7edm+7nZfm62
n5vt56be6xs71zZ2nqk3epDpjfNRphfTi+nF9GJ6Mb2YXkwvphfTG53Sw76u
t9QbPcj0xvko04vpxfRiejG9mF5ML6YX04vpje9b59+3Vuz75cr8/b/ZfCpz
/6/N7R+b2891P+Z+tz+f+5hj5v7+fN5k/r3p6H0uzc/ju8z8Yv/HluY49v67
Pz5/8t/zuZ95CtdUz+c3/nw+7y/i3Lx3
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJxTTMoPSmViYGD4CcTMQPzRY4/NXO179mbrX60Ru7Hb/vH/vhUBdx/YzwtK
kjCKvmyfKmHm0cJ60P5WjfzZa3uf2lf4+kTMvXneXj87qXH9iwv2wcplq/Zy
vbRP/2nTfNzygv3PO16GLv237Oc4XLE5+valvc+1p1d311yyn+luP+dI4kP7
X1MWMPB0vLAvkbjgs0nomv0SdyGmreFP7Fs2NhqXtT613/rniJP+g1v2XAW2
J2fbP7P/2/dw4/yjD+1v72arfZn7wN7BQ8ygMfq5ffjTajclkzv2XsGH/9x4
/Nh+xfFtPBann9tX7Z5/lS3jmr3Rwq65uonP7ae8D7uuPPG5/YQZUspiRZfs
3Rbd6BGIf2Uv4D5D5XLSM/s3BcZRXOwX7HNUzT0LA9/YcwX433O9/dieK7Yx
7fKFM/b/hIyE7t1/Y3/LTnTr94z79lLzpnf1Vp60fybhPTXT7I19dJWMu57N
FXszzqnVDnJH7V+dsVWpyX9tv2im+nWREwfsj6cU/p/48oD9aDiPhvNoOI+G
82g4j4bzaDiPhvNoOI+G82g4j4bzaDiPhvNoOI+G82g4j4bzaDgPnnAW6tWP
ifK7Yf+ytSZIS2mv/TQexwkHEh7jDH9prWM/Z194bb//yzPj+MVn7G+9+nC5
/M8hmpuPSxyX+aSqx+V+ptelZ37b3LafMGtzvULtHnsbtow5HPKP7Jt+M/Lz
LHhtb+Dezrpr6zH7C+obX7J8PkiyelzhQKr5pLqf1HyHyz0AF9+n/A==
    "]],
  AspectRatio->NCache[
    Rational[1, 20], 0.05],
  AxesLabel->{None, None},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{None, None}, {Automatic, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "ScalingFunctions" -> None},
  PlotRange->NCache[{{0, 1}, {0, 
      Rational[1, 20]}}, {{0, 1}, {0, 0.05}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426077871229*^9, 3.6614261898175364`*^9, 
  3.661426309337861*^9, 3.661426461205522*^9, 3.661426958907902*^9, 
  3.66142703339321*^9, 3.661427525778473*^9, 3.661427832589205*^9, 
  3.6614278665133743`*^9, 3.661428302903857*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListDensityPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.9", ",", "0.0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Rho]C"}], "}"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
                    RowBox[{"\[Rho]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], 
              "\[IndentingNewLine]", ",", "1"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "/.", 
          RowBox[{"dat", "[", "jj", "]"}]}]}], "\[IndentingNewLine]", "}"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
       RowBox[{"Mesh", "\[Rule]", "False"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Show", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ListPolarPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Pi", "/", "2"}], "-", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}], "/.", 
           RowBox[{"dat", "[", "jj", "]"}]}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ListPolarPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Pi", "/", "2"}], "-", 
                RowBox[{"\[Theta]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"r", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "NR"}], "]"}], "]"}]}], "}"}]}], "}"}], "/.", 
           RowBox[{"dat", "[", "jj", "]"}]}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"powSpline", "[", "jj", "]"}], "[", 
          RowBox[{
           RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
         RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"DotDashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"\"\<C=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"C", "/.", 
         RowBox[{"dat", "[", "jj", "]"}]}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Rho]C", "/.", 
         RowBox[{"dat", "[", "jj", "]"}]}], "]"}], "<>", 
       "\"\<, \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[CapitalOmega]0", "/.", 
         RowBox[{"dat", "[", "jj", "]"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], 
   RowBox[{"(*", 
    RowBox[{"Show", " ", "ends"}], " ", "*)"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"jj", ",", "0.0", ",", "0.235", ",", "0.01"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5089983087857013`*^9, 3.508998347632923*^9}, {
   3.50899838149286*^9, 3.5089984075673513`*^9}, {3.509000527550607*^9, 
   3.509000587621043*^9}, {3.5090941579688005`*^9, 3.5090941744057407`*^9}, {
   3.5090942053555107`*^9, 3.509094230026922*^9}, {3.509112307494894*^9, 
   3.50911232595795*^9}, {3.5091124296988835`*^9, 3.509112431296975*^9}, {
   3.509157533351082*^9, 3.5091575356152115`*^9}, {3.5092692785114837`*^9, 
   3.5092692832817564`*^9}, {3.5092693788352222`*^9, 3.509269380934342*^9}, {
   3.509269435505463*^9, 3.509269435948488*^9}, {3.5092695099217196`*^9, 
   3.5092695553893204`*^9}, {3.50926959839778*^9, 3.5092696035640755`*^9}, 
   3.6584835491284747`*^9, 3.66142579052595*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`jj$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`jj$$], 0., 0.235, 0.01}}, Typeset`size$$ = {
    450., {127., 136.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`jj$44987$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`jj$$ = 0.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`jj$$, $CellContext`jj$44987$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        ListDensityPlot[{{{1.9, 0., 1}, {2, 1, 1}}, 
          ReplaceAll[
           Join[{{0, 0, $CellContext`\[Rho]C}}, 
            Flatten[
             Table[{Part[$CellContext`r, $CellContext`i, $CellContext`j] Sin[
                 Part[$CellContext`\[Theta], $CellContext`i]], 
               Part[$CellContext`r, $CellContext`i, $CellContext`j] Cos[
                 Part[$CellContext`\[Theta], $CellContext`i]], 
               If[$CellContext`j == $CellContext`NR, 0, 
                
                Part[$CellContext`\[Rho], $CellContext`i, $CellContext`j]]}, \
{$CellContext`i, 1, $CellContext`NT}, {$CellContext`j, 1, $CellContext`NR}], 
             1]], 
           $CellContext`dat[$CellContext`jj$$]]}, AspectRatio -> 1/2, 
         PlotRange -> {{0, 2}, {0, 1}, {0, 1}}, ColorFunction -> "Rainbow", 
         Mesh -> False], 
        Show[
         Table[
          ListPolarPlot[
           ReplaceAll[
            Table[{Pi/2 - Part[$CellContext`\[Theta], $CellContext`i], 
              
              Part[$CellContext`r, $CellContext`i, $CellContext`j]}, \
{$CellContext`i, 1, $CellContext`NT}], 
            $CellContext`dat[$CellContext`jj$$]], Joined -> True, 
           InterpolationOrder -> 1, 
           PlotStyle -> {Thin, Black}], {$CellContext`j, 
           1, $CellContext`NR}]], 
        Show[
         Table[
          ListPolarPlot[
           
           ReplaceAll[{{0, 0}, {
             Pi/2 - Part[$CellContext`\[Theta], $CellContext`i], 
              Part[$CellContext`r, $CellContext`i, $CellContext`NR]}}, 
            $CellContext`dat[$CellContext`jj$$]], Joined -> True, 
           PlotStyle -> {Thin, Black}], {$CellContext`i, 
           1, $CellContext`NT}]], 
        PolarPlot[{
          $CellContext`powSpline[$CellContext`jj$$][
          Pi/2 - $CellContext`\[Theta]\[Theta]], Sqrt[Pi]/
          2}, {$CellContext`\[Theta]\[Theta], 0, Pi/2}, AspectRatio -> 1, 
         PlotStyle -> {{Thick, Black}, {DotDashed, Black}}, 
         PlotRange -> {{0, 1.5}, {0, 1.5}}], Frame -> True, FrameLabel -> 
        StringJoin["C=", 
          ToString[
           ReplaceAll[C, 
            $CellContext`dat[$CellContext`jj$$]]], 
          ", \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=", 
          ToString[
           ReplaceAll[$CellContext`\[Rho]C, 
            $CellContext`dat[$CellContext`jj$$]]], 
          ", \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=", 
          ToString[
           ReplaceAll[$CellContext`\[CapitalOmega]0, 
            $CellContext`dat[$CellContext`jj$$]]]]], 
      "Specifications" :> {{$CellContext`jj$$, 0., 0.235, 0.01}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {179., 187.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.661426077898423*^9, 3.661426189849571*^9, 
  3.661426309398242*^9, 3.661426461294627*^9, 3.66142695893867*^9, 
  3.661427033582716*^9, 3.661427525809042*^9, 3.661427832615735*^9, 
  3.661427866542199*^9, 3.6614283029357862`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"grid1", "=", 
   RowBox[{"Show", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListPolarPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Pi", "/", "2"}], "-", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}], "/.", 
         RowBox[{"dat", "[", "Jtest", "]"}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5089992527896953`*^9, 3.508999395205841*^9}, {
   3.5089995705998726`*^9, 3.50899960517085*^9}, {3.5089997234786167`*^9, 
   3.508999723754633*^9}, {3.5089997699462748`*^9, 3.5089997702182903`*^9}, {
   3.509000053571497*^9, 3.5090000825841565`*^9}, 3.5090004787048135`*^9, {
   3.5091123856413636`*^9, 3.509112387345461*^9}, {3.5091575949676065`*^9, 
   3.5091575973357415`*^9}, {3.65744515744598*^9, 3.6574451590776453`*^9}, {
   3.65750744651896*^9, 3.65750744927064*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"grid2", "=", 
   RowBox[{"Show", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListPolarPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Pi", "/", "2"}], "-", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"r", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "NR"}], "]"}], "]"}]}], "}"}]}], "}"}], "/.", 
         RowBox[{"dat", "[", "Jtest", "]"}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.508999425535576*^9, 3.508999611411207*^9}, {
   3.5089997288759255`*^9, 3.50899972911994*^9}, {3.5090001211253614`*^9, 
   3.509000165571903*^9}, 3.509000481127952*^9, {3.509112391450696*^9, 
   3.5091123929477816`*^9}, {3.5091576030820704`*^9, 3.509157604767167*^9}, {
   3.657445164612012*^9, 3.657445165109147*^9}, {3.657507454054987*^9, 
   3.6575074560395*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dp", ",", "grid1", ",", "grid2", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"\"\<NT=\>\"", "<>", 
     RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<\\tNR=\>\"", "<>", 
     RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<\\tNL=\>\"", "<>", 
     RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<\\tJ=\>\"", "<>", 
     RowBox[{"ToString", "[", "Jtest", "]"}]}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"2", "/", "3"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.508999583620618*^9, 3.50899958751384*^9}, {
  3.508999740352582*^9, 3.5089997411516275`*^9}, {3.509000032215276*^9, 
  3.5090000342463923`*^9}, {3.657600385182806*^9, 3.6576004656131773`*^9}, {
  3.6584836881404257`*^9, 3.658483739364356*^9}, {3.6584837944605074`*^9, 
  3.6584837950435405`*^9}, {3.659261062283946*^9, 3.6592610668272676`*^9}, {
  3.6592613548885117`*^9, 3.6592613568562098`*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxt3X+sLGd52PFVEqJC0zhSjprIaiFJXQlXCUToBMWu2AUSNZCmVMVVY0UJ
bUKioBbSgtLIVaFqrCvckNgEdIAoWOFHN3EFVgBnYxJjxcYMhhw7nMvxsTFr
c9d3fa9/Yxvs6x/X5rpn9p3PM3oex/8cf+/zzszuzPt9fzzzzuyP/tp/feNv
fNdkMnnyrMmk/3veC15+xV0nD6btbze9/qZzLzrv5HyG3/mWK8+69OQi+OwH
f+bN77rwuuDl1W+74+qTXfBLLzr8v5fsBv9O/z8X7gW/+V2HO3z9fvCL3vSG
z9908iD4M9Pt2y65+GvBF77k8IgvWQY/1//3uTuD/+yuk1vXXrjKfPqu4NNH
D/fw+nXw4dHOvehDdwd/vD/gyRPBT3zs8B+27wn++fef8/r3X3xv8J9c/KEL
Hj16X/C333H4DV7yQPC/6r/g2x4M/uMLHn3Hi659KPjhw9P3lhc9HPzaw697
44WPBP9Cf7wLHh3PX3+CTo/80f74H/tW8Lz//D/37YHPmX3l8PK94JGRn+q/
zwcfC/6x/gK+6vHgzfFOjLw53u+fCt4c7xVPBO/2J3Q58uP99//dJ4Nf3NeP
lz4V/Lr+fOyN/I47DivM7zwdfHl/fl58OvjGvv59ceRH+/P11meCz7728os/
9IPPBv9sf/6uGfm3DqvrqV/9TvAfHX69c154JviGw80v+PTID20d7vAXnwv+
gUtPfewzZ0aeDP813hn+nR94EXz4aQ7P0HUl3gVvwuHHzuzWzT/sBfeX45zw
w/YHwX31vjz8sL9l8Muu6EvcWfa/Cu71ujH8cLx18D397sOPndn5m78ngi87
1Veoe4LXm89zb/ArNyfgvuD3bD7fA8HH+vYi/NiZvWLzeR8KfveH+grxcPBy
8/kfCf6h/uOFHzuz12y+z8j/pb/+4cfO7AOb7/ft4Os2m498/+b7Phb8g/31
nz4e/KrN35F/s2+/Lj0V/L7N+Xgi+HP917tj5JOb8/Nk8Fl9e3fuU+P13Zyv
kd+8aaCeDr50c/5OB3+2XcDg45vz+UzwP+z/bD0b/FOb8zvyf+zb0zd/J/j3
Nuf7TPBfnLURIPgbm/P/XPCgw6sLT7IX9e8iOPsR/Uxw9mNe/JgXP2x/EJz9
mBc/5sWPefFjXvyYFz/mxY958WNe/JgXP+bFj3nxY178mBc/5sWPefFjXvyY
Fz/mxY958WNe/JgXP+bFj3nxY178mBc/5sWPefFjXvyYFz/mxY958WNe/JgX
P+bFj3nxY178mBc/5sWPefFjXvwInrR6/6niAV4E8yPHu2B+YH5gfuTtD4L5
kfe3DOZH3v8qmB/5eOtgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+xPUd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPKn9
ROZF8eS68u9dcO4/FqX/WJT+YxF+4Nx/LEr/sSj9x6L0H4vSfyxK/7Eo/cei
9B+L0n8sSv+xKP3HovQfi9J/LEr/sSj9x6L0H4vSfyxK/7Eo/cei9B+L0n8s
Sv+xKP3HovQfi9J/LEr/sSj9x6L0H4vSfyxK/7Eo/cei9B+L0n8sSv+xKP3H
ovQfi9J/LEr/sSj9x6L0H4vSfwRPWj28poxrrontMD9yvAvmB+YH5kfe/iCY
H3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwpNb
U79gXD/2E5gfOd4F8+PWVG4vmB95+4NgfuT9LYP5kfe/CuZHPt46mB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH3F9Bz8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/Ck9aPbqhzGtvCD8wP3K8C+YH5gfmR97+
IJgfeX/LYH7k/a+C+ZGPtw7mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+ZHXN/BD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI/C
k5qHqvOKPA+/rsS7Ms7aLf3KXvFov2wX9z/K/KMLP3Cef3ThB87zD8eL+x9l
/tGV+UdX5h9dmX90Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH12Zf3Rl/tGV+UdX
5h9dmX90Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH12Zf3Rl/tGV+UdX5h9dmX90
Zf7RlflHV+YfXZl/dGX+0ZX5R1fmH8GTVi+/FH5kXgTzI8e7YH5gfmB+5O0P
gvmR97cM5kfe/yqYH/l462B+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Cg8
ye1+vY8x5qXy/HzsJ3D9m+fnu+FH3v6gePW1sp9lcJ6f74YfOM/Pd8MPnOfn
u2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+
vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ue7ZX6+W+bnu2V+vlvm
57tlfr5b5ue7ZX6+W+bnu2V+vlvm57tlfr5b5ufBk1bvbg4/Mi+C+ZHjXXCu
xzeHH5gfefuDYH7k/S2D+ZH3vwrmRz7eOpgfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8w
PzA/MD8wPwpP6n3uet8i3+e77nnzitpP5LzVXpmn75ftD8o47Gtlf8vi2Z1l
v6vgnL/aCz9wzl/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7J
X+2V/NVeyV/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7JX+2V
/NVeyV/tlfzVXslf7ZX81V7JX+2V/NVeyV/tlfzVXslf7ZX81V7JXwVP2sc6
Gn5kXgTzI8e74DzOOVrq7dHwI29/EMyPvL9lMD/y/lfB/MjHWwfzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mjru/gB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5kfhSc4r1XVS433vnN8d81B1XlH7CVz/5vzu
fviR97cs47I7y/5Xxbu7ynHWwTm/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/y
u/slv7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/yu/sl
v7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf8rv7Jb+7X/K7+yW/u1/yu/slv7tf
8rv7Jb8bPGn15pbwI/MimB853gXzA+dxzS2lnt4SfmB+5P0tg/mR978K5kc+
3jqYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8KT85P9yGsax3XRWF+5HgX
zI/zy7zi/NJP5O0PgvmR97cM5kfe/yqYH/l462B+nJ+OeyKYH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8w
PzA/MD8wPzA/MD8wPwpPWr24LfzIvAjmR453wfzAed57WxnH3BZ+YH7k/S2D
+ZH3vwrmRz7eOpgfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+Y
H5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwpP1kO95Efm
RTA/crwL5gfOeaBxXpG3PwjmR97fMpgfef+rYH7k462D+bFO/dSJYH6s0+e4
N5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8KT9p1vz38yLwI5keOd8H8wDkvenuZ594e
fmB+5P0tg/mR978K5kc+3jqYH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8K
T94z1EN+ZF4E8yPHu2B+4HyfYMxD5e0PgvmR97cM5kfe/yqYH/l462B+YH5g
fmB+YH68J32uB4L5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfkR
13fwA/MD8wPzA/MD8wPzA/MD8wPzA/MD86PwpF3XO8KPzItgfuR4F8wPnO+b
3VHyoHeEH5gfeX/LYH7k/a+C+ZGPtw7mB+YH5gfmB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZHXN/BD8wPzA/MD8wPzA/MD8wPzA/M
D8wPzI/Ck1cM9Y4fmRfB/MjxLpgfON9HHu9b5O0PgvmR97cM5kfe/yqYH/l4
62B+YH5gfmB+YH5gfrwieftgMD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8w
PzA/MD/i+g5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSetOt2LPzIvAjmR453
wfzAeV3FsXKf7Fj4gfmR97cM5kfe/yqYH/l462B+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/Cg8WQ71jB+ZF8H8yPEumB84rzMa73Pn7Q+C+ZH3twzmR97/
Kpgf+XjrYH5gfmB+YH5gfmB+YH5gfmB+LNPnfiSYH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH3F9Bz8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Ck/adRnfi5N5
EcyPHO+C+YHzurtx3Ufe/iCYH3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/M
D8wPzA/MD8wPzA/MD8yPwpPXlPdGZV4E8yPHu2B+4LwOdfQjb38QzI+8v2Uw
P/L+V8H8yMdbB/MD8wPzA/MD8wPzA/MD8+M1adz3cDA/XpO8fjSYH5gfmB+Y
H5gfmB+YH5gfmB+YH5gfmB9xfQc/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwpP
2nk/Hn5kXgTzI8e7YH7gvC77eFlndzz8wPzI+1sG8yPvfxU8TfXoePiB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5Edd3
8APzA/MD8wPzA/MD8wPzA/MD8wPzA/Oj8OQD6Tlt7+Ub3xuF+ZHjXTA/cH5O
YVxHm7c/COZH3t8ymB95/6vgaWpX1+EH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
xwdSvzcyPz6Qvte3g/mB+YH5gfmB+YH5gfmB+YH5Edd38APzA/MD8wPzA/MD
8wPzA/MD8wPzA/Oj8KSd19GPzItgfuR4F8wPnJ/bGf3I2x8E8yPvbxnMj7z/
VfA0jTNGPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD8wPzA/MD/i+g5+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSe3D/UG35kXgTz
I8e7YH7g/Bzb+NxF3v4gmB95f8tgfuT9r4Knadx9d/iB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+YH5gflxf/qejwXzA/MD8wPzA/MD8wPzI67v4AfmB+YH
5gfmB+YH5gfmB+YH5gfmB+ZH4Uk7b+N7mjMvgvmR410wP3B+rnN8DilvfxDM
j7y/ZTA/8v5XwfzIx1sH35PqyYnwA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzI67v4AfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZH
4cmrhnrCj8yLYH7keBfMD5yfcx79yNsfBPMj728ZzI+8/1UwP/Lx1sH3pHZz
9APzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8+NV6XuPzA/MD8wPzA/M
j7i+gx+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfhSftvJwMPzIvgvmR410wP3B+
7v9keY7zZPiB+ZH3twzmR97/Kpgf+Xjr4HvSOOJk+IH5gfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+RHXd/AD8wPzA/MD8wPzA/MD
8wPzA/MD8wPzo/DkfUO94EfmRTA/crwL5gfO78EYn+vO2x8E8yPvbxnMj7z/
VTA/8vHWwfzA56d28p7wA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/Pjfek8PBHMD8wPzI+4voMfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH4Un7XuP
fmReBPMjx7tgfuD8XpjRj7z9QTA/8v6WwfzI+18F8yMfbx3MD3x+GjeMfmB+
YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA
/MD8wPzA/MD8wPzA/MD8wPzA/Cg8OTnUA35kXgTzI8e7YH7g/J6k8T0gefuD
YH7k/S2D+ZH3vwrmRz7eOpgfmB/4stQu3ht+YH5gfmB+YH5gfmB+YH5gfmB+
YH5gfmB+YH5gfmB+YH5gfpxM5+XJYH7E9R38wPzA/MD8wPzA/MD8wPzA/MD8
wPzA/Cg8ad9r/N2wzItgfuR4F8wPnN8bNr4XJ29/EMyPvL9lMD/y/lfB/MjH
WwfzA/MDX5bGCfeFH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfcX0HPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8KT84brjs/Mi+C+ZHj
XTA/cH6P3uhH3v4gmB95f8vgeH972v8qmB/5eOvgeH/7wPH+9oEvS+Pm0Q8c
728f/sb72weO97cPHO9vHzje3z5wvL994Hh/+8Dx/va0ruVbwfH+9nTfcuR4
f3vKSz8eHO9vT3mHU8Hx/vY0rhw53t+e2o2nxus7+IHj/e0Dx/vbB473tw8c
728fON7fPnC8v33geH/7wPH+9oHj/e0Dx/vbB+ZH4Un73PeHH5kXwfzI8S6Y
Hzi/V/L+8p6w+8MPzI+8v2UwP/L+V8H8yMdbB/MD8wNfluaR94cf+JXpOt8f
fmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38wPzA/MD8
wPzA/MD8wPzA/MD8wPzA/Cg8uVQ7OPiReRHMjxzvgvmB83tWx/cM5u0PgvmR
97cM5kfe/yqYH/l462B+YH7gy1Je5YHwA78ytXsPhB+YH5gfmB+YH5gfmB+Y
H5gfmB+YH5gfmB+YH5gfmB+YH5gfcX0HPzA/Lk3n7XQwPzA/MD8wPzA/MD8w
PzA/MD8KT9rnGv3IvAjmR453wfzA+b3Dox95+4NgfuT9LYP5kfe/CuZHPt46
mB+YH5gfmB+YH/g96bqOfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5g
fmB+xPUd/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPwoPDlu3Dz4kXkRzI8c74L5
gfN7uMf30ubtD4L5kfe3DOZH3v8qmB/5eOtgfmB+YH5gfmB+4Pekdu7B8APz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI67v4AfmB+YH5sfxdB6f
CeYH5gfmB+YH5gfmB+ZH4Uk77vg79pkXwfzI8S6YHzi/l358T3Pe/iCYH3l/
y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YHPpau40PhB+YH5gfmB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmR1zfwQ/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPwpOf
kmcZ/Mi8COZHjnfB/MD5dxpGP/L2B8H8yPtbBvMj738VzI98vHUwPzA/MD8w
PzA/MD/wsdSujX5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7E9R38
wPzA/MD8wPzA/PipdF5H5gfmB+YH5gfmR+FJ2+83w4/Mi2B+5HgXzA+cf7fk
m+U99N8MPzA/8v6WwfzI+18F8yMfbx3MD8wPzA/MD8wPzA98LPXz3ww/MD8w
PzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/4voOfmB+YH5gfmB+YH5gfmB+
YH5gfmB+YH4UnvyevPzgR+ZFMD9yvAvmB86/4zP+7kXe/iCYH3l/y2B+5P2v
gvmRj7cO5gfmB+YH5gfmB+YHPpbGvQ+HH5gfmB+YH5gfmB+YH5gfmB+YH5gf
mB+YH5gfmB+YH3F9Bz8wPzA/MD8wPzA/MD8wP34vneczwfzA/MD8KDxp241+
ZF4E8yPHu2B+4Py7VqMfefuDYH7k/S2D+ZH3vwrmRz7eOpgfmB+YH5gfmB+Y
H/hYmgeOfuB3p+s0+oH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5Edd38APz
A/MD8wPzA/MD8wPzA/MD8wPzA/Oj8OQbw3XiR+ZFMD9yvAvmB86/8zb+TlLe
/iCYH3l/y2B+5P2vgvmRj7cO5gfmB+YH5gfmB+YHPpbyIo+EH/jdqd16JPzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/IjrO/iB+YH5gfmB+YH5gfmB+YH5
gfnxjXTenwvmR+Hhv0fDj8yLYH7keBfMD5x/53D8nbC8/UEwP/L+lsH8yPtf
BfMjH28dzA/MD8wPzA/MD8wPfCzlBR8NP/C7U7/9aPiB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+RHXd/AD8wPzA/MD8wPzA/MD8wPzA/MD8wO3v5NXx+ff
nJ+d4e+Rof5/Kvj/bD7/NcGtvt0Q3Orzl4Lz7zYfKb/DeaT8rtqR2R9szv9t
wa347cHLzfm5I/jiDw3vrRx4s7t4z9yR2Vu8V2bgVt3WwT/guc+Bfz09p3Vk
9lfWZQ/8fWkd5ZHZf0rrYo7MFuk+55HZP0h56yOzX055iCOzT6dx5ZHZd6Xr
cGT24xf1/zfyfzj8tm96w7eC//fmC478ic0F+HbwwYX9AR8LPnO0/4eRX9pf
vvc/HvzG/uucdyr4nZv/GfnP+qtzyRPBR8/tP+CTwac3l2/kc/qv+66ngt+w
qTBPB1/0ov6EjvzxzQU9HXxzX93Ofib4if7rf37kH+l3/5Zng3/+zf0F/E7w
b/eX7+qR/6SvLm86E/zl/uu+4Lngh/vdXTmy+t48+Ehw+/uJ8KN5cFVcn1Yv
vxLXr9XLo8GtXn41uNXL/bj+rV4eBLd6eWtwq5e3Rf1p9fL24FYvvx71rdXL
ZXCrl3dG/Wz//o3gtp9jUZ/bce+K+t4+98jtex8PP1q9PB7+tHq5Dr9avbw7
/Gv18u6IY762enoiymN+t3p7Mspj7UGrxyej/Wj1+J5oP7D2ptXre6M81l61
en5vtFdY/cTav+bBfbPXbT629rWbxvrWob5pf9W3oX2eiG9Ob7THtl88r722
/c395472upsaz/z97flO+/6vu6Hsv3tee2//m/MX7X03NR6q/YHym8v6uZuj
fP7d8rG/UH5TDcfffZ7Get3Snyj/2f5yjb/zOY31vKW/Uf5X+vM5/q7b1His
9kfKb/55/B2fqfFa7a+U/2T/BcbfbZjGeuHSnym/aZ7G93RPYz1x6e+Uf2cv
wPhe1mmsNy79YTr/43v4prEeufSXym/C43uXprFeufSnym+ahfE9G9NYz1z6
21Q/x+eqp7HeufTHyv9I79H4HN001kOX/lr53+51HJ+bmMZ66dKfK//l/nKO
62SnsZ669PfK/5Ne63Fd1DTWW5fxgPL/rf94433waazHLuMF5bu+GRvve0xj
vXYZTyj/w/0FGfNc01jPXcYbyr+1v97Pxbx/Guu9y3hE+c33j/FIN4314GW8
ovzm/MV4pZvGevEynlF+c75OjeVjPXkZ7yh/TX+6Pyx+zrjefCh/oq8fr30s
4rH+fIh/f3/97x/jsR59iP90f6A/fDzisT59iP9afz5++lTEY7269mOj7xiP
9etD/Or++777iYjHenbtZ1+ffuLJiMf69iH+ok3zNsZjvbv2qK9O73wq4rH+
XX/S159/9nTEYz28/qGvb7tjPNbHD/Gr+sv59tMRj/XyQ/zO/nA//EzEY/38
EP/evnpdP8ZjPf0Q/8m+Pv3msxGP9fVD/Jf6+vP934l4rLcf4kf6y/GXYzzW
3w/xP+9398tnIh7r8Yf47X17+d3PRTzW5w/xzTjlk2PcfEpc/62+6n/reNI4
wPg9l/9UjDf193X8mctdE+NRvihv/3l/O1Eet37ws+X36K+K42PHreUxv7HP
U+OtX7w24li8VavrI47FW7/0hYhj8daP3xhxLN767S9HHGvPWj99U5THymPl
jf+1j9j25gPidX5gXKN8nS8YB2mfzR+033U+Ydxje/ML5et8w+/l6i/MP/Qn
2P7q/MTvidrefMX2df7i9xVtbz6jfJ3f+L05/Z/5jv6xzn/8/pbtzYeUr/Mj
v0ekPzZf0l/X+ZPfZ7G9+ZTydX7l9yqMD8y3jB/q/Mv7+21f52PYeKXG6/vq
xe3ffM72dX7n/c/GS+Z7xlN1/ud9uLav80Fs/Fbj9f2w4vZf55PY+LHG6/s1
xR2vzkex8WuN1/cTijueuPFxnc/W97mJ27+4/dX5buX6PixxxxO3/zo/rlzf
JyTueObT9o/NT7D5S43X97OIO36dj1eu77cQN5+q77uo8/06n6/seW3zP3Fc
3ycg7vOZ//s8NT+gPLY/+SxxbHv5LXEsLt8ljsXlv8SxuHyYOBaXHxPH4ub7
leU/zO9rfiQ/T3404tj2rg92PbB8oe2NN7Hzqbzzh50v7Pxg5wMb79XzI248
VbnlQcfn1cSNpyorb3wnjsXlZ8SxuOuBnX/s/Nle/cTG5/X7F57U/WH7w65H
Ld/ywmN5rDxWvuWNH4jyWHmsfPv7YJTHymPlW7mxPFYeK9/+/aEoj5XHyrd6
+M0oj5XHyrd6OpbHymPlWz1+OMpj5bHyrZ4/EuWx8lh9bvV+vL+K7Q/bX427
/2T/tXyNY74pj//++1k74VOe99xQ5j1fCs73r3bK/audcv9qp9y/2in3r3bK
/audcv9qp9y/2in3r3bK/audcv9qp9y/2in3r3bK/audcv9qp9y/2in3r3bK
/audcv9qp9y/2in3r3bK/audcv9qJ+7v1vmx6yZe56/mpfn6LuL+sfkmNr/E
5pPY/BGbL2Lzw/g9s2H+F79nVuaL+Xd/nn//Rz0yH6vzKfMj59t8xvUw/3C9
zBdcT+N/19v4XH0w3lZfjJfVJ+NR9c14Uv00XlQ/sfpsvKe+G5/xI95fNPhR
x0NYf43111h/jfXX9X08dfyS3xf1peeNR/L7bG4J5jv2ebHPi31e7PNinxf7
fGcVb/P7Tz4VHPmkgaN9Gzjat4GjfRvYeEl/jvXP+n8srj8Wx+L6X3Esrr8V
x+L6V3Esrj8Vx+L6T3Esrr8Ux+L6R3Esrj8Ur/2j/kh5/ZXypf98Nc7t4zz4
kuE641uHvGLOt30p2H25nG/Trx3E+NjnqfOV+v4fcflWLL+K5VOx/Cke8vxR
33zOOv5UP7H3PWDPt2PP82LPL2LPa2HPp2Dr8bH1x9h6S2x92cuHfqV59/Gh
nf52cGt/v9Xu4170t8Hfs9nw5iHf8ehs0zxdcXRonx+d/fPNfP5g9sWhXv3o
5vzcPnv7UE//duPLHbN/OtT79u/fGP79wWG71ey/D16249w17Oe+4XMcn/3d
0C62fmM9+x/DvLzlje4ePseJoZ85MfvqkPdo/c+J2buGPE3rl04O3+vOod+6
J/KM37Op5vfN/sVmf88G//tNnuE7wf9rc/yR/99mHn8meH/zeZ8L1i+/bHP+
Ducjmw/4zPP4wo0H9wdfvPncI1+5EeiB4Ns23/PB4PZ35PY9Hgpu3+Obwe17
jNy+x8PB7XuM9+nc/zIOwnnc4/7tVcHGOVh9xMY52DgHG+dg5xMb12B5bSyP
jY1zsLw0Vh/wrw3jHnz1kCfGLxrywPhNQ54Xf3rI42L1D1845GHxlUOeFZ95
rv8vfgd4eu6QB8UXDHlOrL7jK4a8IuYHfmbI82E+4X875Nkw//D/HfJYmK/4
ydyuTn805R266b8e+m2sPcAfGfplrP3Ajw39Ltbe4J8b+lWsfcIfHvpN/MXU
T3bTR4Z+D2v/8I9tvs/I2kv8C5vvN94/1r7i39l835G1z/ijm++Pt4d2cOTd
zfl4LLi1iyM/vjk/I7d28vHgF2/O18it3Rz5dZvzdyq4taMjv2NzPkdu9xGe
CL58c35Hbu3uyDduzveTwW2eMPKjm/M/cmtXnwo+eyPwyK1dHflnNw3GyK2d
fTr4tzbCjdza3ZH/aNOenQ5u7fDIN2zaj5Fbu/xM8EObBmhk7Sv+x5v25tlg
/Q9+9ebvyPoj/J83wo+sf8I7m/bzTLD+Cv/Npj0bWf+F79m03yM3n0fWvrd2
/cq4D9sa6k/P1P/Wrn0lxhOt3frqjD+tndoPbu3ULTHeaO3QrTM+tnZo5NYO
3RbjkfY5vzbjd2tnvh7c2pmvx3iltTPLmfaitSt3BLd25c4Yz7R//8ZM+9P2
eyzY+EZ71T7naqY9a9/rrpn2r52n48HGP9rL1k4cn2lPWzuxjvFRayfWM+2x
8ZL2u7UDd8+09837EzP9Q/P85Ez/0rw+OdP/NK/vmemvmtf3zPRXWP/XvL53
pv/D+tfm9b0z/avxEj/E+SOuvzd+2iz3+0Xjka1pzEeH9lP+r/Fvb+b7R193
VZTP+Zlu2q/n+vznro14Xg/R+vcLY3yyNc35utZ/H43xydY05++6ab+318f4
ZGua5z3d9HB387tifLI1zfm9bnrzuRf99eUxPtma5nxfNz28CF+5MMYnW9Oc
/+umfee/FeOTrWnOB3bT628696mjMT7Zmub84Gb89I8ujfHJ1jTnCzfjwT88
J8YnW9OcP+ymd179tg9fHOOTrWnOJ3bTn7zirj+9K8YnW9OcX+ymRz50waen
MT7ZmuZ8Yze9/ZIbr7k8xidb05x/7KY/ftF5Xzz9snsjnvOR3fRw/rp3YYxP
tqY5P9lNDy58yfLqGJ9sTXO+spu+9HDwtBXjk61pzl9203ceNk7viPHJ1jTn
M7vp0XMvevpojE+2pjm/eVg/zn7wu18e45Otac53dtN/+YKXX3JjjE+2pjn/
2U1/411v+YNTR8d4zod20/ee+tj7zonxydY050e76V+/7Y4PXhDjk61pzgd0
bX9fFD+Y5vX/222+/9bHIp6fB9hu+YMffDzi+fmA7Xaf/Joxnp8X2G73vX/1
VMTz8wPb7b72C5+IeH6eYLvdp/70GM/PF2y3+86/+GTE8/MG2+2+8Zkxnp8/
2G73ff/0qYjn5xG2233Mf/N0xPPzCdstT/H4GM/PK2y3PMWHT0c8P7+w3fJk
r30m4vl5hu2WJ7t/jOfnG7ZbnuwPn414ft5hu+XJfvo7Ec/PP2y3/MRqjOfn
IbZbnuzdZyKen4/Ybnmyn3gu4vl5ie22nvVgjOfnJ7Yj/9Ha5Stmxt+tHfyr
4Nau/U3kQ9o878sxnmn92m7Esbj8ifUtxgPGB9bTGA+0cc/4+/X6f+MB61n0
723cf/fM/E9/bTyp/zSexOL6U+NLceNLLK688aa48SYWV974U9z4E4srbzwq
bjyKxZU3PhXHNf/S5gn3xX0T4wfjC3HjDyxey7d5xVgei8vn4DbPGPM5WFy+
B7d5x5jvweLyQbjNQ8byWFy+CLe/Y74Ii8sn4VZvxnwSFpdvwq3ejOWxuHwU
bvVmzEdhcfkq3OrNmK/C4vJZuNWbsTwWl+/CrR49EuUx/9yPeuLwsD97t/zY
Vnl+xvMenoN57+b+1Gde/IlSfhHle6tfH/myrfJ8TMs/XR75sq3yPEzLL21F
vmyrPP/STd94WC8vjXzZVnneZXP8P7448mVb5fmWbnp4lj41jXzZVnmepZu+
+OwHv3D6D26NeH5+pZv2g82rI1+2VZ5X6aZvPZyMvSPyZVvl+ZRNPu+7Xh75
sq3yPEo3vebyi3/owciXbZXnT7rpVdPtD17whuPl+43jy+99+RUf/Uzky7bK
8yXd9JdecvYnz3pwHJ/m50m66Z+fdelfvu28cfyZnx/p+vHY9TdFvmyrPC/S
9eOt3XNvG8en+fmQrh9PHVxyzjj+zM+DdP14aXUy8mVb5fmPrh8P3f8znx/H
p/l5j64f7zz+sbPG8Wd+vqPrxzNnnvuVhyOen+fo+vHKC9905Tg+zc9vdNN/
9/mbXvimd43jz/y8Rjf9n+e94KxLzxnHn/n5jG76p585rAI3jfH8PMZ2e97k
7eP4Mz9/sT17bX+8Hx7Hn/n5i+32/Ml1Yzw/f7E9+2B/vN8cx5/5+Yvt2fX9
8b5/HH/m5y+2Zw/0x/vLMZ6fv9iebfXH++Vx/Jmfv9ieTfu/3z2OL/PzF9uz
t/TH++QYz89fbM/e3x/vjeP4Mz9/sT27tj/e02M8P38x5IM+Oo4/8/MX27Mf
6I/3c+P4Mz9/sT07v6eHx3h+/mJ79uv98T44jj/z8xfbs8v6471qHH/m5y+2
Z3/VH+/EGM/PX2zP1v3xfn8cf+bnL7Zn39f/ecU4/szPX2zPXtkfbznG8/MX
2+35ld8dx5/un4pvvs611w73xf841nlg86n6vIR+wvi0zauvj/Fmy8v8XXDL
2+xF/qzlfW6J/BqWD5P/kn83HtW+YPcP5I+0j1g+SL4IW28hf2i8ho3XsPGX
/tP4y/0hbDwb47fhfNft237H/hw7Hs7Pc8kLzeN6uN/VPsdfxHph65GNx91v
1P9Z3+F+UWs3x98Lc//Z/SjnQ//s/rP7W75ffi7nveU5nPeWdUlHnvc3Pzfz
3sjnVlZe/RVXf7G48vn+3pG4fsobj1dW3vhdXP6vsvLOj7j7f5WVdz9Q3Pmv
rLz8pbj8ZWXl3S8Ud/0rKy9/Ki5/Wll59xPF5WcrK89HcfndysrLB4ur35WV
d/9R/Iohv1xZee2JuPx0ZeXdnxSX366svPuV4sbvlZWXTxeXb6+svPy8uPl6
ZeW1r+Lm/5WVd/9AXP6gsvLuT4i7f1FZefc/xPUHlZV3f0Xc/ZfKyut/xPU/
lZV3f0hcf1ZZefkXcf1jZeWNJ7Wb4tbDaO9qfqi1S1eX9aJdfN5W778a39f9
KflX7Py1eva1OF9Y/fC8k/or34M936O+Ww+DPe+DrY/hj/tB2PM+ymP+WU/D
V8/ziGP+u5+E9Y/81z9ice1Nvd9kvQ72/Iz21nhC+6l/1V5W1h8bL9Txx+nk
/XXR/+rPjD/Uq5r/MZ6QP8XGKzj3i38RrL6p363f6YJbv3JjtL95fevRGB84
Xl6veaT8vtyR573fKcZLw/kpPOGX82P8Kr/axgFXhmf5+83LOOMj8X3z+qJF
Wa98XXx/418+Y+Xdl8vj6RvC59av3xD7w/aHy/2N2L7Vuy/G9tj22P0V9/m0
F8br5r9YeeM+5Y3nlcfm18bz7gd53lV74/64+To2vzf+l8/gs/bB+B5bf238
z1/tA/+x9dnyLZ6v0z7IX2P1Wf6Hr8Y77idj67eNt/hu/M1nce0Ftt7aeFB7
YHzOf3F+4boeVXn5d+Vx/b1K5eXflcf19yyVl39XHtffu1Re/l15XH8PU3n5
d+Vx/b3MOp+rvyebnx/7SGk/57F+W1x7Gu3B0F5pf/L2i/J82VWzGs/Po10V
+4/1isP+zV9sr32zvbjtY76T83RR3nxH+VjfOJTX3jq/cT9tiGu/ba88Vt76
Y+XdX1AeK299svLuLyiPlbd+WXn3F5THylvfrLz7C8pj5a1/Vt79BeWx8tZH
K+/+gvJYeeunlXd/QXmsvPXVyru/oDxW3vpr5d1fUD7uPwz/6U9tb7227d1v
sH29H6G/5ht2v13/Kj+K9c/ud+rfzJv1X1j/pn/K/fOR8p6OI+GL8UFezzvO
5+t8vc7H63y7zqfrfLnOh+t8t85n63y1zkfrfLPOJ+t8sc4H63yvzufqfK3O
x+p8q86n6nypzodynmcR1009MN/J72f5eIyf5I3UB2z8U+dHxnvql/Gc+uj5
NvURK9/yOJ+Lzy8PZDyEjX+w+aDxsPL1eTisfL2f7/kH59N6Rdvj/P6Xo7G9
5yMc3/tKzG89L2H8Zb5nvGV+ZjxV51/iuD7/Jo5rftb8zfjL+M78Sxwbr1l/
VdcHGr+5f2c+Zn5lvoaNz6wnM34b8uQxvjOfM37Dxmd8V9643vgO5+fjvvC8
+ZD+Xfsaz2MM/9X5nPbV9rh6pv62duzz4QfmU42b34nj/H6iL0V59d08wfc3
/zN+xc6H9RzOBxa3fkMci1uvIY7Frc8Qx3E9hvUZ4lhcO+N6YNcj8tnD+Eh7
pjxWPvLXQ3nzd/HIT5fxlvUb6gcWt15DHItbnyGOxa3HEMdRv4b1F/G+5YHF
rbcQx+LWV4hjcespxLG49RPiWNx6CXGs/juvmIfaV/0+Vk/1d97HJH/m/Una
T6y89d3mv96HZH6L9a/Wd1tfaT2W++FY/2x9t/Wc3p+EvT9J/17LW7/lfho2
PrD+23pT+T3rA7Dxhnyg9av6C+sNsPGKfJ/2kUd5/fK85HM+EfMb/b3+Tn5D
f4jFXU/Xz7hOvgLrH+VP7c99F/0vVl9aPzU+L2CcqP9VfxwPGz/Jf7j+3uel
vmD5b883ql/exyXueUfreb2/S33C8u/KW5+hPsnne15S/fG+K/cHPC+pvsgX
Wy+C3X+o5e3PeFX9U5/kj90fkV/Wf+v/5Wew/Kz8rfXdxgfY/WD7w8bvnifI
+fcbYzxp3mE8iY0nPX/i+vDd+fN9fT9+5Pcdfmrm+Svj27yeeRFx4938vsCb
4/ObP9n+kmHcbXvjX/MR50/c9+GT9825f6D9U5+1R+qb9sj1t37N/SztifxF
ztt+4XnzA3kxvvORf/KP/ORbfp/g9eE3zu3H9eV9FF+I8lh5+VrnR//Cf+zz
uB7Ka6+Ux8rLtzq/2hPtBVbffF/jtvKcbFlH8IVoX9Ufx8/57aPRn5pvuB7a
P+cHay/NP4zn+Wg+gNU//qmv/OMb5pvxaPZjHvXX98O+v+/j/Pq88tn2r3/x
vIDtre/Cno/kq/Pv8/jc9XwbR/PV58nv87wl6pvP53xqv8yfnD+fx/GcH9c9
n68uzk/9vnzMz0vM4/lP+///mDccUg==
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxMnXe8j/X7xz97nOOc0957KJWy9957kxIiDZSkaCF7RYhIRVlJEUmFFBGR
KKUUSovKatEuv+v5vV7vx+f3x/tx3dd73p/7et7nnMR5Xtj9zjZ9YpFIpP95
kUjc4heFkch5xSKRc/IikW/s+nK7vsquv7br4nZdwq732vUFdn2BXX9r11fY
9TV2vc+ur7LrMnb9g12Xs+sadn3QrivZdT277mDxLotfZSORLwsikYssv9jy
72xOKbuuZNff23UZu65q1/vt+mq7Lm/XHS3ezb3Y2q+s/xLLi1t+yK6r2HVD
u/7FrhvY9XV2/bNd17PrDnZ9xK5r2HVzu/7VrhvZ9Q12fdSum9h1V7v+w67b
2HVvuz5s19Xsuoldt7PYx+KXdu4B669geW3Lf7PrFnZ9s13/btet7Po2uz5m
183surtd/2jXtey6lV1fb7E/z9X2GWzXM5hr113s+n6en13fYNf38lzt+ka7
fpBnYNfVLNaw+vS1dov1D+UZW38vux7JM7brfnY9gTPtuo9dj+Vz2HUPu36I
52rXt9v1aJ6ZXd9m18Pt+oBd97Xrh3lOdn2uxXKcY6279Q+iPtY/wK4n81zt
epnV7kmegV3/aZ/xQrsub/MH2pzpPFfrX10UiVxm1xWt/wqLlSz2slbBrqtZ
7GPtAZv/GDWx+ffZ9RRqaNf32PVEu/7JrktZrGJzb7dW1q6rWrzDWkm7rmyx
t7Wf7B7q2Jq29Fmrbn13Wqtp1zUt3mWttV3Xt3ivtRZ2Xc/iAGv17bq2xbut
tbPrBhbvs3atXTe0eL+1m+y6qcVB1nradXOLD1l7xFonazdYa2T9dSzeY62z
XTe2+KC1G+26Cc/G2vV23YjPbW2i1nW21tT66/Ie8qzss9xueQu7HmWtLfdl
baS1Nspn2ngri8OsjdZ4e2tjFDtYG2/tOs60NiHfnoetacm1+rjvW6yvmcXB
1sbxma11tPawIuvHaj/GJul+u1ibp+faz9pcsUlex/aspf5HrXXlGVibrHXk
03im1npYe9rmz7J2K59LjFDTx63dLA4X65nxPKdov27WPjLGPrT2gLXtRb72
Kepk1wOt/W78PAbHOm+q1pHP0jlwtUB14/k/pwgbz4oLxuaIKT7nfH0+xi60
L6BHovbeWVskXrjXF8QR+dM6B25nR5x99npGfeQLdSZ8Pq/I+hf1ueFnacQZ
pF5RO2+bxfet/Wyf9Ttrc+05vqRx+PzXWPrH2hC73m/jwy2+Yu3ViF+PsPaa
Iny9Loao+cqI8wdfefa+TzSG5tj+KzSXsTfEDbys0lzWb7X2hLUnra3Wfsyb
nef971lbH3Ge4GJtxLnkfXpLkffjbY3D0QZF6r9RkXoOsfd+AV+/rdabIl5v
+HpT98V78I7mMrZGfZy31T7XvDxnbZvu9yk9UyI8fm1tiZ79dnFDPT/QOPmH
6qOeh/TseB4fixvej50Rf2dgZ3fEOaPmn0WcMxjcIT5Y86nmMvaJ9mD9Ls1l
/Uc6kzV7tB/sfK4Ig99GnIllrDEGFlhbbp/7G30mxr6KOGd8zi8j/r6Rr1Md
qNOzrLO439reiLPOvC90DvmBiPMEI99Hcqz9oMjYdxHfh7FjtmfriLN4UOtW
6j7gHdZ/Uc3WWvsx4jzB3U+K1PlXjcPOUUXu/ZgirP0ZcW5g4feIswVTP2sP
zvhNcxm7yd6b7tbmw5bmsj4/6rWhbn9pP7jLi3qNGYtFnSEYOR5x3nknIlGP
sBaP+jhMJaIe4SgZ9Uhts1GvPfumo84HTD1n97TF4r/WUlGfy9h/Ee/nvEzU
57K+WNTvF3YKoh5h8AK7PmzxiLWiqDMEO4VRHyc/Iep9X2je66rByVFnBXZO
jfp7AlNnRp0R6hyx+n5mz/AFu9+Tos4Nax61ryXP5zmbp0R9D9Z/Wuhrz7C+
E6N+JmvOivp+MHV21CNMXRR1JmDh4qhH6nlh1O+VsfOj/k7yOc+LOmchX6XP
c0nU18HauVHnmHnnRP0c8sujzhOMFI86c7B2WdQjY5dGfQ/G+JoK23zPLhH1
dXB3RdQjTJWJOh9wUTrq9SO/2q7/tviPtbJRH+frfTlF+KoUdVaof5Wo80HN
4/bMY9YW2/O9Jup7wEmFqDMHaxUVWV9e+zEWLfJn38Raqaiv456qam94rB11
PuClVtR5Iq8e9XeA96OOxmGnriL1bBj1esNLNe3HminGwyK739PsurI+E5+n
ftS5gbUGiqyvp/0Yaxr1e4a7LtautHaVtc5Rf9bk8631s3a3teZR5wmOmmkd
eeuo8wEvbaP+bsDRtVHng9q20Thjz2q/e6y10H7w0j7qXMJjB0XWt9N+jLWK
Omec11LryDvqHPjqHvX6UYebFGGkW9T5YOyGqLPF57zRWkmN1VAdeO9vjTo3
1PmWqPNEfp3Ogd9OUeebva5XH3kPnQmnNyuyfoE+d39rNXUOHPSMOmfwdadq
DBe3q65weociTPXVOPd7l2JN1YoIXwOizlA9nQl/8NVHe1RTHWpp7L6oc9NA
91dH63tH/Z3hPu7VfswbpXpTn8FR5wkulvAzvMUHrQ2M+jXvxUMah6MhitR/
qCL1HBl1Vth3uOoNX+vt/VpX5O/BMM1l7Ebru8W+9k2192CE5rJ+tO4LpsZG
nSd4fErPupe1R1Q/WJig+pGP01yYmqhx3olJirwrj0WdM/iarnrfrH0r6nk9
rD3gZUrUOYPBqYqsf9RaV42N11zuY5r2Zt/HtTcMzlI94OJpRbiYqbMZe9La
bfqcT0Sd49vUYBnOntE6WJihvZk3Rs+M5zUv6mzB1Jyocwl3cxUZm609GLso
5j/L/2TtuagzBIN/WNtgbaO1l/Kci8U8A6tdb6vdY1a7hZoLX78UOTcvWlsS
9etB1l6OOjfw8oo4GK69H9Uzfl57wPJLUecS7pYpsn6p9huse5qimmy0czdY
u9+uX9XeMLU66gzBxet6RuQros4r78EbGqfmbypSz3VRZwh2XtN+rHnb2mTd
93J9Jj7P2qizCJtvKbJ+jfZj7B3dLwzuivrXFJ73Z1H/2kr+rT4/n3tz1HmC
001aR75VfMDL+1F/N+DoI/FBbbdpnDG+H/C9l58H39V+sLk96lzC44eKrP9A
+zH2XtQ547wtWke+Q+fAV8qefdLaC3adsHinsTHN2NgTdT6o7adR/57E59yt
z83YStWB9/7rqHNDnb+K5jj6WOfA786o881en6iPfJ+d+4W1l43Tz4t87ZfW
/hQrPPtVOgcO9ukZw+ZBMcG9HFC9yb9TjWH2kMbZ47AiTP0cdW6o86/igPrH
Y/4cecbfaw/Y5D2DS7j7SZH1R7QfY4mYr6MmP2gd93RUe8Pm32ICRv7S5yP/
PeqM8m79o3Fq/q8iNYzGnA/Y+c3aeq2JxbyP+/5Fn4nPc1wcwF0k5pH1/2k/
xpIxv18YPCPmz3e/tdNjznTIX9YzTcecIWqbivk68vyYs8I7URDz9wReXuHP
YS2eaH3FYj7OGD/3/Kn/LsnEfD+4yBoDGWufs4/9t99043G57VEY8/1gMy/m
PHFeNubryE+K+Vnwc3bM60cdzol5hJGzYs4HY6fZ9TdR/5xnxvxzMkYfLPM+
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
xKRH+Dol6eNwdJpdfyOOTk96hKOzk84KjJyZdJ7g6KSk78EZZyR9LmPnJp1X
2Dkr6XNZf1XSa8X7d07S92PelXb9h+p4cdK5gZcLks4ifF2Y9AhflyR9HF4u
TXqEqeJJj7DwbZ7veYX1PW5fW6YXOUfnJf2+YPmypM+FwfOT3sd55fh/swX2
eWyPkkm/X5i6OukRpmon/VkXWSuVdJ7g6Jqkj5OXTnofTI2x6/bWOlgrl3SG
4KVC0hmCtSpJ54D6V0o6c7BTNukcsKai5jJWXnuwvrLmsr5M0s9kTVXtB2vV
FOGobtKZgIV6itSzjj4TY7WSzhafs2bSmSO/KOl1oE71tQ7WaiSdb+ZV1znk
TZLOE4w0snZq0llrrMhYA+0Bj2P1nK611lTr4K550nmCx5ZJZwjWWilS29aK
1LONIhy1VYSjdooXqSbEi3UmEb6eNF6+59+QWuuYdM7g6zpF2Lmb/5/P31HL
83u9RPPuKnLubrB2i+pHzbsknXXeg66K8HWjInx1U4Sj7orwdZMiTPVQpM43
K3JGz6TzBCO36kwYuU2Rsc5Jvzfuo4WeJc+xl9bB3e1J5wke+6qW1PYO9cFU
H0WYukvjMNJPEXbuVuRduTfpnMFL/6RzBoN3ag/OuEdzGXvAWsOk8zJAc1l/
n/aAlwc1Dke9de/c95Cks8LnG6oIL4OSziJMPWStmeYNVl8zNViDs2FaB1+j
k84NvIxMOlswNVzjcDdCkbGBui/OG6W5rOd7Iz+L8bPXuKRzA1+7rT1nbaG1
iUlnh1o9Zt/vjhhfWf7Ns7VO1jfB2iSNw9RkRZh6VBGmpiWdG3iZmnS2YOqR
pO/DGVM0l7HHk84TzD6muaxfoNpQt+naj3nPqsaMzVINYOfJpDMHj08pwtfT
GoejZxThaLYiLMxPOkPsOzfp/MHXDN0XXM/RXMaeUB/nzdPcfnqW3O8APVMi
DE635/mrPcc8a4ssvz/prD2vcfharD74ekfPjuexNOkMwcuypDMEa6+KA+q/
POnMwc4SccCalzWXsZe0B+tf0VzWv6gzWfOa9oO1FYpwtMbaeDGwVpF6/pjn
/W9a+5l/g57nfL2e9O89fE2dqTpQp7e0DtZWJZ1v5q3UOeQbks4TjKxPOnOw
9rYiY+u0B2OH+Df9ef41cqPW8ez4fsLPI/z8sVU1g5F3k84T3G1RpM7bNA47
7yty7x8owtqOpHMDC/y3K2zB1HvagzO2ay5jnySdJxj5SHNZv1+1oW4faz/m
7VONGduTdIZg5LOkc887sUsR1r6w9kLSmdqrCEdfKlLbb1V79v066XzA1E7d
F+x/pbmMfao+zvtGc1n/ne4Xdr5XhMG/rW2yttnagaQzBDs/aJz8oPpWat40
1aCC/cxT3tofVr97ipyjn6wdTTor1PmXpPMHd7/ZvGN5ztfPSZ/P2AD+Dpu1
o/x+BM1l/SGdCWvHtB9M/aYIU/+KCVj4T5F6/qN7ZeyvpL+TfM4/k85ZyB/T
5zmudbD2R9I5Zt7vOoc8nnKeYCSacuZgLZbyyFgk5Xswxp9H8ufW/Dl1MuXM
wVE65SzCTn7KawYjmZT3wV025ZE6F0v5OOwUpDzytb8w5RHWTk45N7BwYsrZ
gqm8lO/BGSfY9edJHzs15TzByEkpn8v6S1JeG+p2Ssr3Y97FKa8tY2ennCEY
OSPl3PNOnJnyCGvnpHwcps5NeYSjU6zOf+V5bS+y/h/FzP3Wf5+1Av5tZMrv
C/ar8jtP+Lf91n96yvs4794iX3uh9V2a8vuFneIpjzBY2a5TKX/el6ecIdi5
LOXj5CVS3ked66X82fE8rko5K7BzdcrfE5gqk3JWqHOplPMHd1emnBvWXJPy
uYyVTPkerC+d8rmsvyLlZ7KmbMr3g6lyijBVNeVMwEI1RepZRZ+JsUopZ4vP
WTHlfzZHflbK60CdqmsdrFVIOcfMK69zyOtYK0o5IzVTzhys1VKEtRrao5jO
g2U4rqt1PLva/B4Ya6l8+zkm5TWDkYYp5wnuGilS56Yah51mitx7c0VYG2T7
DbRWZAycxf8DyXOmGmsPzmihuXDX1toFKWejhq170/67LGr30z3ltaFu/+X5
nDbWuqW8xoxdl3KGYKRDyrnnnbhWEdau1zhMdVKEoxsUqe2NKa89+3ZJOR8w
1U73BfudNZex9urjvK6ay/qbdL+w00MRBu+zVt9aA2u3pJwh2LlZ4+S3qq+8
5p2sGvQSK7Bze8rfE5jqm3JWqHOflPMHdz3FDWvu0FzGemsP1t+puay/TWey
5i7tB1P9FGHqATEBCw8qUs/7da+M3Zvyd5LPOSDlnIX8JH2egVoHa/1TzjHz
7rFWW/n7Vv9EvjMyOOXMwdpDirA2SHsw1lF1hoMhxs9D1k7k71pbPtvaHGtj
VDMYGZlyjuBulCJ1Hqtx2BmnyN4PK8LaxJRzAwsTUs4WTI3WHpwxXnMZm5xy
nmDkEc1l/TOqDXWbpP2Y97RqzNj0lDMEI1NTzj3vxGOKsPa4xmFqhiIcPaFI
bWep9uz7VMr5gKlHdV+w/6TmMjZFfZw3U3N761lyv3fqmRJh8FVrw62NsDYv
5QzBzlyNkz9r7W7Vea2eHc9jYcpZgZ0XUv6ewNSSlLNCnRennD+4ey7l3LBm
keYy9rz2YP2Lmsv6BTqTNU/b16JZRc5UnvGVzXemVqScCVhYqUg9X9NnYuwV
a8P0OTP5fr3c2jTVgTqt0jpYG24MDrOWtrnn8fdT7L9Jitn1mynnCUZWp5w5
WHtDkbHXtcdYnd865byu0TqeXTzf+7mfjaoZjKxPOU9w97YidX5H47CzSZF7
36wIa1tTzg0sbEk5WzC1QXtwxruay9j7KecJRt7TXNbvVW2o2zbtx7wvVGPG
Pk45QzDyYcq55534SBHWPtE4TH1qbX7KOfpMkdp+rtqz727xAVMf6L5gf5fm
MrZdfZy3R3NZ/6XuF3bOt3oV5juDR629ZW0da6yGJ1n/Kfa1ZZ7NOcGuT7br
AovLbPxbzZuoGnwnRmDnh5S/JzB1WKxQ54Mp5w/udhX5/P3WDmguY99rD9Yf
0lzW77H5u63NtnZE+8HUj4ow9ZuYgIXfFannMd0rY7+m/J3kc/6Scs5C/og+
zx9aB2s/p5xj5v2kc8j/STlPMPJXypmDtb8VGftTezDG34vn32Hw7y7+1Tq4
O55ynuAxkfaawUg07TzBXSztkTon0z4OO6m0R772p9MeYa1Y2rmBhTy73imm
4mnfgzMyaZ8Ld4Vp5wlG8tM+l/Xnpr021K0g7fsx75y015ixUfbej7R2mrFx
sdXmlHx/J7bb97XT8p21ky1+Y/FUW3da2q/h5/S0x33Wzk577dn3zLRzAVNF
ab8v2D8j7XMZOyHtfbxnZ6V9LuvPS/v9ws75aY8wWCbtzzpi8cK0MwQ7F6R9
nPyitPdR5/vtuoG1htYuTTsrsHNZ2t8TmLoy7axQ5xJp5w/uLkk7N6y5PO1z
GSue9j1Yf0Xa57L+4rSfyZqr0r4fTJVMe4Sps/Odg3LWzs33Wpa3Vjbtnwle
Slv7T0yVSjtn5MWtLs/Y+3yGrTs/3zmrYO2atHPMvKvTfg75yzbnsnxn5OJ8
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
kbjAb4cXDmZn6/7uVR9rgkNxtlhZpDWwslT3HRyE5Pj38PZNFiv4BYOTcJnm
UdflGttnz7+/rdksRvALviqGcP7hJMT5uVqswBl+wVXihbm4CkerjzUjtY69
goOQNcM0l7NbFbpPFF9hm0J3F+In3Gn304//n8bnLGbfV2h59uwsnmvt7Dxn
is8YPIREHIb9VB/qsdv2uZufxbI5x2FwHhJxIH5tc+7hz+Lt+gu7vsT2fodn
audcbO1S/g6JxQutXZTnX+8e1bN9iXFrl+f510j6uK8jts99tud7fFYbL2Ht
aptz0Prvtf4tPCPrK2mtnPX/bP33W/9WnpH1XWOtovWvsVjWWnX+zYDF0taq
2PVrFq8k5++C29oHbO02Pp/1lbdWC7eZ9T9o/e9b/0n2bEfY9ad2/Zf1D7Tr
D+z6fZtb11p7PrPFqtYa83vhbP5gm/OhzdlgfZWtNeDfc1r/EOvfYf2buS9r
zfi3MdY/1Po/tv4iux5ODe26mF0Ps+tP7PpfO3eQXW+36y22rqa1lrZ2PZ+V
++D3x1isba2NXW+3WN9aR/6usu0z0tZ+BqvWd521e6z/DOsfZf27rP8j62to
rZP1f8znsNbFrr+3cwfws6LNOc/mj7HrPXZ9oV2PtevP7foyu37Yrvfa9SV2
PY4/R7frnbZHU2vdbJ/d3K+1W/m39RabW+th159bbG2tl12fbWtH29rdtnav
9bW1dgf/psj6vsy6n/E77tHagDz37uF2xHeHjw+fI334+fA8/q/P5l5rrZ/N
f9niZdTern+w2NnafXm+L/5H1n1FPa31tf7D3Lu1gbBnsau1B/Lc5YcjEncf
Z+/Leh85vkj8fj/a3JusDc7zHHckbsBj1tfT2og8z/FI4gn8lWdjbVieu//w
SOL3+936elsblec5Tklcf3gA8Uji9yPHL0kfe+GjZI8/eX7WxuT5PFyTuAT/
tr47/6+pO4G7ba7+B37u5brXc87emwiViCJzUUrIlMxDSgM/RWQeQ6WBkCRT
GTJkSHPmuWTOFEIlSTJPIfNcKf/9ftbn/PV6Pc9rr7P2+g57XsNnrW//f3DP
X6I/5ydO1Fp+/+l5n+//D7XOlvUih7Vvi0GtQflZSxt51/Uy352o9QqtO2n/
NM9gzz96ouSsU7klKIrnqOcfM1HvButPLkvNdz/3/OPUHOq3e/T/h09UG2tf
bjWouVoT0zh+W+/yc8oueg/08kf28ocPa+7WiPvBsOoSqRlzxLDWl/tdz//+
sGpdq2X9n56+bKJqGf/KmqrZ96Nh5VvLhbVfPVq1jr/Rj3NFaoqeOKytmqI3
yx9pq5//etdOVJ3Ia1PnT73Id7XVVl+nTNR8rKG4dM9/d/9/Q887eVh10dTo
unWi6uKokfSad89E1eb69qhoxzbo6T9H7tDQ6p+cMqytehU/7OlpE5UvPqWX
+dtE1bX41qjGNN4d4aktclPGUV/uO5HX/p7koKsj8MBE5R/LUT8/73xriP5k
WLl98p+O6ts+0tMz+v8fD2srz+/J5HLJCZw2qnwFv59Lzoe8r+N7/j97unEv
TlRehRyex5I7KL90lsho8++JwsjLl5hbbnS/7z/977X683rGsLBnPxtWf3D3
XXiwjG9Vi6+Xn9rzft7/d8HVD4aFxYahP7WnZ58oPOy0YeFq4bZX7/s/Lb9P
77dzThQGbaLvb/ZhYSZnpG/z+3FwlDC781gnM/M8ud8O035BmJm0P7P/n2ui
MErbDGrN1G1Nrd//q2Fhvd6YLezdmtZtGxaeaqacf9fpkWFhbbYRAx0WVgUO
gl5gfdj3DEpPsO6x9VjnjTyM18/7fuaLnrBE2sJ7faQpXUKbizImDM7Wg+rT
fE+NjmHt4/va0gmsX/zxpvQB9Bl0gegD9IsFMoePNaUnWKP5qjxPaq7eFb3C
e+NvWcMZfRrZ6DafbEqXsD7yWf32HdE9Hsiaye/v5c9LP+8bVI6YnKMn+/vq
sv78f7Wr+/nhrJ9sDdxNmvpe+E2/Wyz9PNYVvYM+6S/5pjyadZitmft/Tekt
fvt+Lpk+tUHvOChd5t2R/0fWarbG7qeb0k/eFTkyO/XbC3reYtGFfqnv6DAX
99t3R+fZvCm9yPrLdKj3pE/t0dZcvUgf/6M7WdvZGr6fbUp38ps+Za1f6/xq
g7ZGK13pA5F/IetIW194q6b0K7+fyvrP2mpD3rqvl5pXdLCXs3a0NYK3bkpP
WyFy1i22Buy/sja1tYPpYitmrOt72ZWiO23blM62UtpYe9g6sVf2vPdFl7vc
sY5KD9y+KX3JGtb0qdXSP51u5cxHe3xrul7lmKJfDbIm9qqDssWsd72a89OU
7uc3vc9ayKv0/Gsc66h0P33hW6vWGrXWPLY+LXturfRJN1w3fc6Stbg/NKg2
ZLS7ru9vxVHpmTs2pVua065N6ZPazNpvf5F32axZf3v1vu1+Telg1t2mb26Q
/s0DbY3cG52zUemWo6zX/WFzaEq39JtOulH61AZtTd2b+v2rjUr/9NvazNbX
/UJTerL1uOm2G6fPW8x9VPpzl/W61xiUvm0d7zUHpaNaA3ztQengn4yMftHW
7P2Dczx6Xde1TvhaPf/LTem0ftN/N02f2qCt8Xtrv3+tUem9fltb2trCX21K
BzY2HfnT6fNLTenV5neb8z0qPfktWY99nV5m76b0Xr/ps1tk/re7Z0elD3+9
KR14y4xHxtrCn29Kt3fN6Npbpc87et4Go9KZF8ja6esNSifXx7qD0se3CW1t
YrS1i/WrH7w7XcNR6eHvyLrr1oP+RlN6uN/fbEr3tq46vX6nyOjL+tnWNX5n
1l3foKfvcs1HpcOf4x08KpuOnLb7epbZBMNaX/tbTenY1l2/p99uPCo9n46P
Rx9nQ2yfYzw07Yx1n3M/Kv2czm5Nd3r7t5vS8/1mB1j3nS3ADrDWO1vgkKZs
H78Pa8qOIPeI6zwqm4I98aWJ0uuPaErntyb8o67zqOyFh/rtpqOyob7TlB2h
DZvAmvHsADaBduwCurz14Onvj/eyW4zKjnjBORuVLcA+sK48m4ANYb15dsP3
mrIj/D62p7celdwz/Xab/n/fibIhrENP9z+hKfvCWvTPuZ6jsimOasqWMb/j
m7I1tHnCPTgqG4fdoB3b4aSm7A7zfqnf7jQqG4QdYB16Ov4PmrIvrG/PLrFl
i7zi2o7K7rhRPY221p75l+s2Krvjx03ZGof09H+dy1Hp/2yUwyZK9/9hU3bK
t/vfr/bb3Udlm7B7tGPT/LQp20EbNhBZdhC74TsTZTv8PDaL3zOz90dlp7BR
vjdRNsfpsV8c21T+h1HZF6fG1jjCuJ6/Udl0Z8au0Z4NZP8WfT8D9vKo7KMZ
Pb3PqGwcNs2xE2XHnB3bx+9Z+BNGZR+NYlM4V2yd4yfK3mGHndDT23mOYq/R
Cffuisb3DJyUZ+e+ruj9ByVn7Xa6GRsEfXx4PwjNBvxB+mQvWXf7Jt+jUbUh
w876Yej/tvUs/yj9kWHXbNHzb2qKz/6Ss3xjz3+0n88Z1ryJnDXDrSn/2V7+
u8P6vXHo8RrPtq9G9meRZz9ZF3w8x59nPg8Nam3jBwfVxrjW79WndaNv6On7
uzov5rB5WzaMc2qdWm3n6rd39vx7h7Um8n3DWrfWGqT2nRHZrdui17IWXle/
rWP6bvUnQ/+yqfbWM92h523f1hqUv42M9SnvTf/6tp+stSm/3svs0/8v1fM+
3taW/M7pwxqWn+jp+4e1LuGSPX1hU3Netqt15e6ZUmvLoa39dW9X+853bvt2
DwxrHbqJrvpB09+/P1F2QTe11hWzptg5Xa01Zl2mV4dlL1tfzDNNZlXrZjTV
J/4ubc31/IytrbnwX9G56EVNV/e6NajUPWNbsiu/2Le7qKl1hWzZ7Zf09O3y
obui2dvsc7b5/qOifzq19l8e+vaptS6INUGsL8MGvz22/6WRuTzyd0TWuiEz
elvjwMhbg+bKrmr+q63OHrkyMrOFv/xMZftfE/rXTcmRubgpf8HV/e8vtfWb
3NhHwD/wzVHRk/3MWmsE4O/V1hoDO85U/offZP724Vt3wFyMNT2830beWgM3
hD64K9qaBZc05R9RL3eZtmx+NeX/0NV46Dd0tU+tdnVH+Qj4Bw4alfxJfT+/
7KpOtXrP23bll1CzGu+WyOiL/InxY9wSGb6OmyNzWNre0tNfacs38bv8Vof6
5vhD0AP16kZV73eZnv5qW8fj9+FdHZM6r4eMqg157dB8KX/t6pq5FuoP85ks
PXP5Vf74P2P+MW0du7qyW81ccn6rv3pHzgv+DunHfPZoy5fkfuaT+Uv6f4BO
Oirfo/qi/CpH9/yLuqovekz8M+qNqjW6c2TQu3ZVw1H9xqmj8sX4fUTo62Yu
X83d6VN/d2ZuszfVxj7+LPUD1XXTXlv+nO93VfNLvS/+onvT5x5d+RAW7fmX
NvVsvpz6hPeHniX0tTO/XqNwPM6D6WeOpnxq6s4dnz4XmVY+iofT/7XpV83D
73Ulq8bYA3kvGOuypvrSZuZR+YPMe86mfqtRxpekXhD/kn1kNok/6tGM+720
3XRa+cr+mnNFTr2qT2WrVtUh08rnpKbVuJ7Vk+nfb3WuDovMExnL/n+k7bGj
+o3mB3s84z6ePtH8Zk9HZtm2fGGXxj+mzpEaR2ol4V8S+tnI4D0T+vBR3ZeO
RX/Pp8+D00adpYu72qfODd8a3we/x4ld1cJR78QY+GrmqCvCR2ffs6PSOemZ
/G4vZT7Lt9WXfr7clV/uqfjoXgmtn1cyT748tVTUUeG7Q883S2395sebq6u6
Kvxjc8Snp9bKcm3ViDHG5U3Ja8u/pybG/LOU//DV8XGNyme3b8/fp2+3d1t9
qr2Az4/3pq78dOpy8PupnbHhLLX1mw/wiqb8dWTm7ao2B7/efuI4bdH6mzlj
8RWqySDPnj/R3NR14GPE/8gsdZzGUKPDGNqqBcFmV7Nhv1nKN4neMH5F+dkP
9PQF/fg/6ipvf+6mbHw0X+WMtJWTyz/IN3hlUz7GWeOvnMixazvKnH/juzAq
OfvIqluhbgDeObNUP9qeG/+ntvLln+5qXHnGfKJNZPhD0fJ3F+gqn5xv81vi
TW3RJ+e49H/KqPyz989SeehoftpV2roWzgM/qZzzB+PLbSN/dtrIW783xy8f
mW92jpw3vlS03E3zekPm6X53D7s3nTNtZ5dL0h/vr4eVX7ZWcpflnx4UX6tc
6YW6yp32m+92nsyH71mO6huml28ULQeRf1UOrZxbv+W1ykc8RLws/fL9vjlj
/WRUbcY5utrKvV2gn9u5w8q1xCPDZ4snv1eu79nDyimV5zlPL3/WsPI6R6M6
LvRbmpKTy9n0/ItDyw2WIyo/dJwzjDdfL3/OsPI95anKHzYvPPLyio2DL5e1
7fu8JPJdT1+aOcsxlpOsb/5oOZty797R93/esHJCbcnISZ6Njhe+e8K5d53f
2ctfMKzcUnnIcpXlKctTXzy8C4eVuymHmaw85+XDJ8+nfXXfz+XpZ/Z+rKvT
Rg79OzNfPnB9rpq+l0hb85ZnKo+FP1xOi3wWfnr81Xr6U/TkYR3noaHlev9o
VPec+017beUIem7tdxy3NzWWcfnml8m1lnspL3frbJcJ/Z7x7+l1/ebPtbqg
rXtZ3ttv6ZZtYSzloMm1lJe2YlfXa5xjuWz2r9LV+R/nY9vKh1u3rXO3nGMR
5xpW3q598qxP7rcrdXXdjbFaV+fZPjmD8pHlEcoJ106+uVw8uZDy8DZMn+Rc
E/zPT6+ccnnA8sl/0ctcOaxc4w93Rcv/PKPn/2ZYcmt1RY/zPG3l9vmXs2nM
6+jtw8pBNpcVM59FuuKNc9qNY77rdCWvvdiKnFL5pOaNls93EZ2wrZwyOYry
Zo+dXtcJ7Rou3lScRj7s+3v62WHlfZzf1jtIjusSXZ0LOdxzjAq3Kc9Rbp4c
yBv008u8YVTyx4Z/TK7DWrkWS/X9PZW2ZJ/KuBe2dX/Iu/xVtnLa/j298pf+
lbwi9JKwwTkmeU5z9v08M6xcv6WbmtsGua4r5Xy/tymZjdKX3EJ93xDacehX
boxxLmlrDPlKl2Ur9+WNozo/G+U+fm/u08+k7eb9dvmu3mP2Ld+P+9yw8heu
bCuHRn4DOTkS2s1N14rMb9qSkwdxdbbw7PP0Mi8MC/cOrwwTf/WMwsTr54gZ
9Y+P59mChYdT/mBT/Wu7Rk+/NCxs4TVtjUEO3gsGcROYkDyXsKurNDUuXPSb
+jm8GPrFGYVzfSG4V/Q7++2HmpLZIr/1af+NbfX72cx7sxzHm0c1ny3S12bp
+6bIwjO+pZd5OXO+ua198JBLdYU32jXz3jrH8fvsh3c7OPxD+u3lbV1L1+AP
bcnBvMGqwazBSe40LIzUZeFtH/689Mlh4eXuHNY+2LY/pQ9YJGNoa8y1m5oz
+fWaagsftREbt/+9i/ub73FYOC//6KuDS/IbDmnJrvBV5B0nXBW801yjuq88
pxs1FU/lM7mtrTntnONwPDBb9yZWLuZ4R1PxTrFOMU+0OCbfy+7hfye4eHh5
8UhtxRzFG8UgxRCfaCq2J64nlii+KIb4WFMxRbRYHxkxuKebiuehxfHQ4nfi
aeJqYl5idGJ74mvijV9K/881xScvPjYZJ+vpF5tqS362tmIz4jKvNCWzUuI/
3whf/EqsS2zrv03FyfiCxMTQ4l8ztxUDIyMOhhafmt5WvArdtNWn+NFEW7Eo
cah/NxXPMzexrP3CF8fbO2OJU+2ftmJH5iweNEdb8aE141fk64Qnmaut2I+4
j3jRN0OLBeGL6dCP6F70n3nbitms0/Pnbyses25PL9RWHEUMZcG2YhvrJebz
rciL1Xw7fLGag9JWDOTgtH1TW/JrJ66iTzGRRdqKkWwQP+d3enq/nn5XT38s
flW+Wfzze/7XR3WMx8dnfNiw/MZT2rpGrsXnenqrtBW7OSx9isMcGnm+xyOH
5X/lc+Xz/V18sfh8m7c0xb/RsUd3paPyoR41LD/qMl35T4/2DHTl9/yeZ6gt
/ymaz/OYYfk2d2vLz+g3f+axw9f9ncdGhm/yuOHr/kk0v+aDXfkV94xv8vi0
3W9U/D2mFm7HWtR/ic+TzGpTy1+Iz3/If8CPAG/zUFe+PrgguB5rhfK58RGi
+fesgcj/dVJ8ZeiTs54avxy/Ez/WJIZp5lrbSP9bZT0IvhT+EOuK8NdcF38L
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
5tU3Gbat/fjsYv0tnz5h5FcO/2tdrcO0XeIvaDEXYxp7XAePnTy2kdEwMzD4
HwofD315bGW18naJzYhmb6qh9+Hw2bVotiQbTx0/NiMeuStjs+KzK9X6Wyv0
6pHZJfYpPpuRraTOHfsLT5txnT02526x79BsQ77zdcPHQ7MT9aGvG2O7odl6
6gCtH77aP+rfsa1sNwjNDkNvmGNaO3Oe5HVl66mDx/5h+7CB0Oy1yVpE4auh
x75iK6nr87HudbuJDDtPLR+12OjhZMmw29hN/ClsL7V/xJSPjP1Fjk2nLhk7
55rYSmh6KdmNI6+exycjYz+aDquWHXvppdRbZmOwd9QoUguPraGO0SaRwds0
fO3w/xT7g+3EfrGfHPvJMX0mx6WOkZp6bBnbzUKzcdCfix2mX/YdHjm6PN+P
+5iPRX/6Zftc0tWaInt29W7xPvI+4VMVqzgn7wG09wmfsO+9b73vO/ri+JzV
FOPvVScMfWn8tGKEfK3yvbfpqibqr7paf2jr/LadGj4Z9cSWSdvfpd224cuJ
2qmrWqmndrVu0HZd1W+13XrmyqXfPjwyaLXIbHcILTcfTfbXXa3ls2P6tb0+
tcus5TMtMsZVx8x259DqA5ib47PG0i7ugaz7gz46PL+tAbRb6KMj47c6Zmq5
ft51TX2z3SIjRuG6+EbI19q9K1lba/yobyZ/H23/aV2twaMv68G4ts9Mqxyw
L4RHZve0dQ/gq59m+8XQ8vHR2u3V1dowaqaJs6LH6zF/qacXEDfsSo5Mkzb2
y2fy/vTetjbvV7p6x9p+LfSfutq3/aDqNdt3wqBwn1+NjP6tc2M872Vtyf6z
H28JOsgsFVOjE9OHrYf1+67iCHhiJOdF30aTpWPChtIzxSb2zX1rTbL9evrH
U2vtMfTt2e4fWtwdTfbJfntA/z8xrl/R1f4rulqfzD41L77ZVW1h7b6Rfsjg
i7mLg1vrSwxdPwemHd0WJvXqxErQ9N/fdLW22UFd1SC2/cFM1f7b4ZFBi63b
Hhz6kH57aFd1LU7M7xNmqvW6DgnfvA7M3CRekCdre1hk3P9o+7+T59HzdVt+
o63d9d2e/u9M9YySsc7XSbmm7hnrcpFRK0PtjCO6amd7ZPja6RP+1jN1VJ4R
NTLQW6aPIyI/uT8yk2t2dSV7TJ4R97/1s47tqvaF7XGhH44cGWva2fdi1rfC
l2up7Qld1SeEddCWrFzHE/6nT3LW57L/+PA9s2jtPp/5WDPrhMiT8Y5y7M7H
l3KuPL98SPwvfC94J+U5td7PyT299yy1Xjn6nPB+EBomGE3W9pTw4YnR9lub
6Iddxf211RfbYXr24d/VFS3O9ZPI6MdaQdo+nJqKPwnftTs19wMdU7yTnilG
iaaHXtjV+pI/68p/ZvtIcOM/72J3d0WLKdv+IjQbHE3Wu807znndPuNul3N8
Wq6p+Zob28g5PD334V6hne8zMx/9/yz0BYPa2mcNSv65szJPse8zIw/HclL6
tP/szF+t8nNy7fjt0NZkHB8zGX4119d+/fM/8BvwP+gHjz8Cn2/Q9vzudT8D
2n71yX1nfTd9Y9HW+3PdLsi1cw4v7F4/vgszf/XD6Qa+Bdr9Kv349vkW7ph/
303r320TGeOoqY7v+yheaSz3zkVpiw/rN4zvi+/CO/q8fKN8k3y3rOd+aVff
BesmoOF7L82+8ffhssjwJ3jfel9556LvyBqRV4T/zdD2ex96Px6Uf+9Sa0Re
Gb73JNzAVT29xpTyUVwZ/l7hwwlc19WaoPQla4le3VU7uINrQuOhfce1ubar
Pk4LfXq214X+begvBz/w29DX99sbuoq/i+X7vbLYfWj8qzIH8jdGfpXE928M
jYeejPX3v3/XVR+2N3X1XePPuTl9/jj78O/oai1G3yOyZOh+vh+3dPWNsP19
6JvTp37E332bfZftR9MPd0ib7fvt4/32sf7/j13pAbYnRi+4NTw+o9t6+udT
a13RP3fFs/9PuR+e6Mo/Tu6r4evjqa6Owbf4ibTlM/9r+HxQZHzX/5L9xrgk
/qrbM9bjmY+xtCG74kx173p2rNM3W86V/U9mbON6P97Z04/kffm3rnjPhPZs
2t4V+kehyb7Q/z/f/9/dle1te9+UWh/2nvCsB2Gd3Mm6B13tO39sr0fm2a5k
4G9fSFuYE7z70xY+F073ka7ebQ909d67P7R3nvPzYM6hvJsHc66cy4dyvPJr
Hso9Y5yHu9fxLQ9nbsb6e+bjPWvMCwe17jA+3gOZmzngPRr6jNAX5F3xWK7L
H3Mv7TCoa/V47qvbcm+ImzwWPnnn33p4d2b/EzmuA3I/zJrrjKbveUf/IzJ3
5PraD8vxdK7dn9PPbekX/4Ksu/fM/1zrZ7L/uVzfM3Nt0Wflujyb430+cvhf
m1I0PJL7zvvTe/v53Cv6eSTX8RuD2r4Y+p7IGMfa6vjWoP57xto/vJdC47+c
++H/ASngyu4=
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
q/j/AFri51c=
     "]], {{{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{5.289917312606815*^-18, 0.0863909057907939}, {
       0.01699848911842575, 0.08545717565153324}, {0.03425058959819612, 
       0.08268823792723992}, {0.051922206971679444`, 0.07770707416412567}, {
       0.07004630199019116, 0.07004630199019114}, {0.0883252575703098, 
       0.05901705029720084}, {0.10578056313337279`, 0.04381574388530644}, {
       0.11999551075724571`, 0.02386859111965496}, {0.12598909649925433`, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{1.057983462521363*^-17, 0.1727818115815878}, {
       0.0339969782368515, 0.17091435130306648`}, {0.06850117919639225, 
       0.16537647585447984`}, {0.10384441394335889`, 0.15541414832825134`}, {
       0.1400926039803823, 0.14009260398038229`}, {0.1766505151406196, 
       0.11803410059440168`}, {0.21156112626674559`, 0.08763148777061287}, {
       0.23999102151449142`, 0.04773718223930992}, {0.25197819299850865`, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{1.5869751937820443`*^-17, 0.2591727173723817}, {
       0.05099546735527726, 0.25637152695459975`}, {0.10275176879458839`, 
       0.2480647137817198}, {0.15576662091503835`, 0.23312122249237702`}, {
       0.21013890597057347`, 0.21013890597057344`}, {0.26497577271092937`, 
       0.17705115089160253`}, {0.31734168940011837`, 0.1314472316559193}, {
       0.3599865322717371, 0.07160577335896488}, {0.37796728949776304`, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{2.115966925042726*^-17, 0.3455636231631756}, {
       0.067993956473703, 0.34182870260613296`}, {0.1370023583927845, 
       0.3307529517089597}, {0.20768882788671778`, 0.3108282966565027}, {
       0.2801852079607646, 0.28018520796076457`}, {0.3533010302812392, 
       0.23606820118880337`}, {0.42312225253349117`, 0.17526297554122575`}, {
       0.47998204302898284`, 0.09547436447861984}, {0.5039563859970173, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{2.6449586563034075`*^-17, 0.4319545289539695}, {
       0.08499244559212878, 0.4272858782576663}, {0.17125294799098065`, 
       0.4134411896361997}, {0.25961103485839726`, 0.38853537082062845`}, {
       0.3502315099509558, 0.35023150995095575`}, {0.44162628785154906`, 
       0.29508525148600423`}, {0.528902815666864, 0.21907871942653218`}, {
       0.5999775537862286, 0.11934295559827482`}, {0.6299454824962718, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{3.1739503875640886`*^-17, 0.5183454347447634}, {
       0.10199093471055452`, 0.5127430539091995}, {0.20550353758917678`, 
       0.4961294275634396}, {0.3115332418300767, 0.46624244498475403`}, {
       0.42027781194114694`, 0.4202778119411469}, {0.5299515454218587, 
       0.35410230178320506`}, {0.6346833788002367, 0.2628944633118386}, {
       0.7199730645434742, 0.14321154671792977`}, {0.7559345789955261, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{3.7029421188247704`*^-17, 0.6047363405355574}, {
       0.11898942382898027`, 0.5982002295607327}, {0.23975412718737288`, 
       0.5788176654906795}, {0.3634554488017561, 0.5439495191488798}, {
       0.4903241139313382, 0.49032411393133807`}, {0.6182768029921687, 
       0.41311935208040595`}, {0.7404639419336096, 0.3067102071971451}, {
       0.8399685753007201, 0.16708013783758474`}, {0.8819236754947805, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{4.231933850085452*^-17, 0.6911272463263513}, {
       0.135987912947406, 0.6836574052122659}, {0.274004716785569, 
       0.6615059034179194}, {0.41537765577343555`, 0.6216565933130054}, {
       0.5603704159215293, 0.5603704159215291}, {0.7066020605624784, 
       0.47213640237760673`}, {0.8462445050669823, 0.3505259510824515}, {
       0.9599640860579657, 0.1909487289572397}, {1.0079127719940346`, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{4.760925581346133*^-17, 0.7775181521171451}, {
       0.15298640206583178`, 0.7691145808637992}, {0.30825530638376514`, 
       0.7441941413451594}, {0.46729986274511504`, 0.6993636674771311}, {
       0.6304167179117205, 0.6304167179117204}, {0.7949273181327883, 
       0.5311534526748076}, {0.9520250682003553, 0.3943416949677579}, {
       1.0799595968152116`, 0.21481732007689466`}, {1.1339018684932891`, 
       0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 
          9}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}}, {{{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {4.760925581346133*^-17, 
       0.7775181521171451}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.15298640206583178`, 
       0.7691145808637992}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.30825530638376514`, 
       0.7441941413451594}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.46729986274511504`, 
       0.6993636674771311}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.6304167179117205, 
       0.6304167179117204}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.7949273181327883, 
       0.5311534526748076}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {0.9520250682003553, 
       0.3943416949677579}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {1.0799595968152116`, 
       0.21481732007689466`}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 
          2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
      GraphicsComplexBox[{{0., 0.}, {1.1339018684932891`, 0.}}, {{}, {}, 
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{1, 2}]}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}}},
  AspectRatio->NCache[
    Rational[2, 3], 0.6666666666666666],
  AxesLabel->{None, None},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->450,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"NT=9\\tNR=9\\tNL=6\\tJ=0.2\"", TraditionalForm],
  PlotRange->{{0, 1.5}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.661426078657675*^9, 3.6614261907587147`*^9, 
  3.6614263114192333`*^9, 3.661426462279296*^9, 3.661426960842507*^9, 
  3.661427034696411*^9, 3.661427526740869*^9, 3.661427833515233*^9, 
  3.66142786748701*^9, 3.661428303947124*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "/.", 
  RowBox[{"dat", "[", "Jtest", "]"}]}]], "Input",
 CellChangeTimes->{{3.658483759181489*^9, 3.658483764660803*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7775181521171451`", ",", "0.7841824262978264`", ",", 
   "0.8055099340952959`", ",", "0.841117531091028`", ",", 
   "0.8915438724174887`", ",", "0.9560509564882806`", ",", 
   "1.030464508302899`", ",", "1.10111725613501`", ",", 
   "1.1339018684932891`"}], "}"}]], "Output",
 CellChangeTimes->{3.661426078798695*^9, 3.661426190910686*^9, 
  3.661426311591496*^9, 3.66142646229379*^9, 3.661426961094068*^9, 
  3.661427034711072*^9, 3.661427526759489*^9, 3.661427833535121*^9, 
  3.661427867500798*^9, 3.661428303962235*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"jj", "=", "0.0"}], ",", 
     RowBox[{"jj", "<=", "0.235"}], ",", 
     RowBox[{"jj", "=", 
      RowBox[{"jj", "+", "0.1"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"frame", "=", "\[IndentingNewLine]", 
       RowBox[{"GraphicsGrid", "[", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"Show", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ListDensityPlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1.9", ",", "0.0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "\[Rho]C"}], "}"}], "}"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"j", "\[Equal]", "NR"}], ",", "0", ",", 
                    RowBox[{"\[Rho]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "NT"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}], 
                    "\[IndentingNewLine]", ",", "1"}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "/.", 
                  RowBox[{"dat", "[", "jj", "]"}]}]}], "\[IndentingNewLine]", 
                "}"}], "\[IndentingNewLine]", ",", 
               RowBox[{"AspectRatio", "\[Rule]", 
                RowBox[{"1", "/", "2"}]}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "2"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
               RowBox[{"Mesh", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
              "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"Show", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ListPolarPlot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}], "/.", 
                   RowBox[{"dat", "[", "jj", "]"}]}], ",", 
                  RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                  RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "NR"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{"Show", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ListPolarPlot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", 
                    RowBox[{"\[Theta]", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "NR"}], "]"}], "]"}]}], "}"}]}], "}"}], 
                   "/.", 
                   RowBox[{"dat", "[", "jj", "]"}]}], ",", 
                  RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"Thin", ",", "Black"}], "}"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "NT"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{"PolarPlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"powSpline", "[", "jj", "]"}], "[", 
                  RowBox[{
                   RowBox[{"Pi", "/", "2"}], "-", "\[Theta]\[Theta]"}], "]"}],
                  ",", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "Pi", "]"}], "/", "2"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Theta]\[Theta]", ",", "0", ",", " ", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"DotDashed", ",", "Black"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1.5"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "\[Rule]", "\[IndentingNewLine]", 
              RowBox[{"\"\<J=\>\"", "<>", 
               RowBox[{"ToString", "[", "jj", "]"}], "<>", "\"\<, C=\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"C", "/.", 
                 RowBox[{"dat", "[", "jj", "]"}]}], "]"}], "<>", 
               "\"\<, \!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)=\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"\[Rho]C", "/.", 
                 RowBox[{"dat", "[", "jj", "]"}]}], "]"}], "<>", 
               "\"\<, \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(0\)]\)=\>\"", 
               "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"\[CapitalOmega]0", "/.", 
                 RowBox[{"dat", "[", "jj", "]"}]}], "]"}]}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<j-const, A=\[Infinity]\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"1.5", ",", "0.8"}], "}"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], 
           RowBox[{"(*", 
            RowBox[{"Show", " ", "ends"}], " ", "*)"}], "\[IndentingNewLine]",
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "colorlabel", "}"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"GraphicsGrid", " ", "ends"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"dir", "<>", "\"\<frames//frame_\>\"", "<>", 
         RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"10000", "+", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"1000", "*", "jj"}], "]"}]}], "]"}], "<>", 
         "\"\<.png\>\""}], ",", "frame", ",", 
        RowBox[{"ImageResolution", "\[Rule]", "150"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Frame \>\"", ",", 
        RowBox[{"ToString", "[", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"1000", "*", "jj"}], "]"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5092697946950073`*^9, 3.509269985390915*^9}, {
  3.5092700493395724`*^9, 3.509270106830861*^9}, {3.5092719312292104`*^9, 
  3.509271994100806*^9}, {3.509272054493261*^9, 3.5092720916963882`*^9}, {
  3.509272268199484*^9, 3.509272288916669*^9}, {3.509272800871951*^9, 
  3.509272842234317*^9}, {3.5092728877499204`*^9, 3.50927294840839*^9}, {
  3.509273002664493*^9, 3.5092730065907173`*^9}, {3.509273543452424*^9, 
  3.509273579843506*^9}, {3.509274793935948*^9, 3.509274836934407*^9}, {
  3.6574457487863894`*^9, 3.657445756017482*^9}, {3.65926142353168*^9, 
  3.659261460857604*^9}, {3.66097434937963*^9, 3.660974349603444*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Frame \"\>", "\[InvisibleSpace]", "\<\"0\"\>"}],
  SequenceForm["Frame ", "0"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661426080249961*^9, 3.661426192084936*^9, 
  3.661426313365892*^9, 3.6614264635843763`*^9, 3.6614269637542877`*^9, 
  3.6614270359667387`*^9, 3.661427528242042*^9, 3.661427834847705*^9, 
  3.6614278687236423`*^9, 3.661428305196982*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Frame \"\>", "\[InvisibleSpace]", "\<\"100\"\>"}],
  SequenceForm["Frame ", "100"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661426080249961*^9, 3.661426192084936*^9, 
  3.661426313365892*^9, 3.6614264635843763`*^9, 3.6614269637542877`*^9, 
  3.6614270359667387`*^9, 3.661427528242042*^9, 3.661427834847705*^9, 
  3.6614278687236423`*^9, 3.6614283063798323`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Frame \"\>", "\[InvisibleSpace]", "\<\"200\"\>"}],
  SequenceForm["Frame ", "200"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661426080249961*^9, 3.661426192084936*^9, 
  3.661426313365892*^9, 3.6614264635843763`*^9, 3.6614269637542877`*^9, 
  3.6614270359667387`*^9, 3.661427528242042*^9, 3.661427834847705*^9, 
  3.6614278687236423`*^9, 3.661428307585238*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timer4", "=", 
  RowBox[{
   RowBox[{"AbsoluteTime", "[", "]"}], "-", "totalTimer"}]}]], "Input",
 CellChangeTimes->{{3.661426042793364*^9, 3.66142604680932*^9}, 
   3.661426156240909*^9, {3.6614264183912907`*^9, 3.661426420726903*^9}}],

Cell[BoxData["24.070971`7.833038603149329"], "Output",
 CellChangeTimes->{3.66142619539809*^9, 3.661426316350027*^9, 
  3.661426466054366*^9, 3.661426972809873*^9, 3.661427038597694*^9, 
  3.661427530794929*^9, 3.661427837341099*^9, 3.661427871315857*^9, 
  3.661428307763702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"timer1", ",", "timer2", ",", "timer3", ",", "timer4"}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.6614264295268908`*^9, 3.6614264366146593`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.46709`6.120945563007459", ",", "0.76998`6.3380244381458", ",", 
   "0.840216`6.375935940925929", ",", "24.070971`7.833038603149329"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.661426466082457*^9, 3.661426972977558*^9, 
  3.6614270386209803`*^9, 3.661427530845656*^9, 3.661427837397131*^9, 
  3.6614278713784924`*^9, 3.66142830781118*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"timer1load", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"dir", "<>", "\"\<timer_load_dKlmijk_\>\"", "<>", 
    RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"timer1generate", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"dir", "<>", "\"\<timer_generate_dKlmijk_\>\"", "<>", 
    RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"timer2load", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"dir", "<>", "\"\<timer_load_dlmijkOLD_\>\"", "<>", 
    RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"timer2generate", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"dir", "<>", "\"\<timer_generate_dlmijkOLD_\>\"", "<>", 
    RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"timer3load", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"dir", "<>", "\"\<timer_load_jac_\>\"", "<>", 
    RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"timer3generate", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"dir", "<>", "\"\<timer_generate_jac_\>\"", "<>", 
    RowBox[{"ToString", "[", "NT", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NR", "]"}], "<>", "\"\<_\>\"", "<>", 
    RowBox[{"ToString", "[", "NL", "]"}], "<>", "\"\<.m\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6614267550288897`*^9, 3.661426859621455*^9}, {
  3.661426986332691*^9, 3.661426995019582*^9}}],

Cell[BoxData["0.46709`6.120945563007459"], "Output",
 CellChangeTimes->{{3.661426973056942*^9, 3.66142699586767*^9}, 
   3.661427038665629*^9, 3.661427181492896*^9, 3.6614275309082537`*^9, 
   3.6614278374674063`*^9, 3.6614278714530277`*^9, 3.661428307870441*^9}],

Cell[BoxData["3.405663`6.9837466645795745"], "Output",
 CellChangeTimes->{{3.661426973056942*^9, 3.66142699586767*^9}, 
   3.661427038665629*^9, 3.661427181492896*^9, 3.6614275309082537`*^9, 
   3.6614278374674063`*^9, 3.6614278714530277`*^9, 3.661428307879547*^9}],

Cell[BoxData["0.76998`6.3380244381458"], "Output",
 CellChangeTimes->{{3.661426973056942*^9, 3.66142699586767*^9}, 
   3.661427038665629*^9, 3.661427181492896*^9, 3.6614275309082537`*^9, 
   3.6614278374674063`*^9, 3.6614278714530277`*^9, 3.6614283078887453`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Import\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", ButtonNote -> \
\\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6614269731998777`*^9, 3.6614269958708143`*^9}, 
   3.66142703868532*^9, 3.661427181495747*^9, 3.6614275309255466`*^9, 
   3.6614278375051117`*^9, 3.66142787149123*^9, 3.6614283079076443`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.661426973056942*^9, 3.66142699586767*^9}, 
   3.661427038665629*^9, 3.661427181492896*^9, 3.6614275309082537`*^9, 
   3.6614278374674063`*^9, 3.6614278714530277`*^9, 3.6614283079089813`*^9}],

Cell[BoxData["0.840216`6.375935940925929"], "Output",
 CellChangeTimes->{{3.661426973056942*^9, 3.66142699586767*^9}, 
   3.661427038665629*^9, 3.661427181492896*^9, 3.6614275309082537`*^9, 
   3.6614278374674063`*^9, 3.6614278714530277`*^9, 3.661428307917066*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Import\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", ButtonNote -> \
\\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6614269731998777`*^9, 3.6614269958708143`*^9}, 
   3.66142703868532*^9, 3.661427181495747*^9, 3.6614275309255466`*^9, 
   3.6614278375051117`*^9, 3.66142787149123*^9, 3.661428307935672*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.661426973056942*^9, 3.66142699586767*^9}, 
   3.661427038665629*^9, 3.661427181492896*^9, 3.6614275309082537`*^9, 
   3.6614278374674063`*^9, 3.6614278714530277`*^9, 3.6614283079376183`*^9}]
}, Open  ]]
},
WindowSize->{1914, 1138},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 217, 4, 39, "Input"],
Cell[CellGroupData[{
Cell[799, 28, 168, 3, 39, "Input"],
Cell[970, 33, 318, 4, 39, "Output"]
}, Open  ]],
Cell[1303, 40, 1255, 30, 94, "Input"],
Cell[2561, 72, 519, 13, 39, "Input"],
Cell[CellGroupData[{
Cell[3105, 89, 112, 1, 39, "Input"],
Cell[3220, 92, 291, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3548, 101, 106, 1, 39, "Input"],
Cell[3657, 104, 301, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3995, 113, 452, 10, 39, "Input"],
Cell[4450, 125, 334, 4, 39, "Output"]
}, Open  ]],
Cell[4799, 132, 290, 7, 39, "Input"],
Cell[CellGroupData[{
Cell[5114, 143, 167, 4, 39, "Input"],
Cell[5284, 149, 300, 5, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5621, 159, 5270, 75, 39, "Input"],
Cell[10894, 236, 278, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11209, 245, 5652, 81, 39, "Input"],
Cell[16864, 328, 281, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17182, 337, 3579, 56, 67, "Input"],
Cell[20764, 395, 281, 4, 39, "Output"]
}, Open  ]],
Cell[21060, 402, 883, 19, 39, "Input"],
Cell[21946, 423, 1009, 24, 39, "Input"],
Cell[22958, 449, 1221, 29, 94, "Input"],
Cell[24182, 480, 910, 23, 39, "Input"],
Cell[25095, 505, 1498, 38, 39, "Input"],
Cell[26596, 545, 1158, 27, 121, "Input"],
Cell[CellGroupData[{
Cell[27779, 576, 504, 10, 39, "Input"],
Cell[28286, 588, 315, 5, 39, "Output"]
}, Open  ]],
Cell[28616, 596, 651, 17, 39, "Input"],
Cell[29270, 615, 736, 16, 39, "Input"],
Cell[30009, 633, 279, 8, 39, "Input"],
Cell[CellGroupData[{
Cell[30313, 645, 610, 14, 64, "Input"],
Cell[30926, 661, 439, 10, 63, "Output"]
}, Open  ]],
Cell[31380, 674, 1095, 28, 48, "Input"],
Cell[CellGroupData[{
Cell[32500, 706, 135, 2, 39, "Input"],
Cell[32638, 710, 277, 4, 39, "Output"]
}, Open  ]],
Cell[32930, 717, 280, 7, 39, "Input"],
Cell[33213, 726, 2789, 66, 337, "Input"],
Cell[36005, 794, 81, 1, 39, "Input"],
Cell[CellGroupData[{
Cell[36111, 799, 64, 1, 39, "Input"],
Cell[36178, 802, 318, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36533, 811, 106, 1, 39, "Input"],
Cell[36642, 814, 285, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36964, 823, 121, 2, 39, "Input"],
Cell[37088, 827, 288, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37413, 836, 140, 3, 39, "Input"],
Cell[37556, 841, 318, 4, 39, "Output"]
}, Open  ]],
Cell[37889, 848, 1119, 28, 94, "Input"],
Cell[39011, 878, 300, 6, 39, "Input"],
Cell[39314, 886, 845, 24, 94, "Input"],
Cell[40162, 912, 231, 5, 39, "Input"],
Cell[40396, 919, 975, 28, 94, "Input"],
Cell[41374, 949, 929, 27, 94, "Input"],
Cell[42306, 978, 923, 27, 94, "Input"],
Cell[43232, 1007, 931, 27, 94, "Input"],
Cell[44166, 1036, 1798, 44, 121, "Input"],
Cell[45967, 1082, 1121, 30, 121, "Input"],
Cell[47091, 1114, 926, 26, 94, "Input"],
Cell[48020, 1142, 958, 24, 94, "Input"],
Cell[48981, 1168, 94, 1, 39, "Input"],
Cell[CellGroupData[{
Cell[49100, 1173, 677, 17, 39, "Input"],
Cell[49780, 1192, 623, 11, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50440, 1208, 318, 8, 39, "Input"],
Cell[50761, 1218, 306, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51104, 1227, 640, 13, 39, "Input"],
Cell[51747, 1242, 331, 6, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52115, 1253, 641, 15, 39, "Input"],
Cell[52759, 1270, 336, 6, 39, "Output"]
}, Open  ]],
Cell[53110, 1279, 925, 22, 94, "Input"],
Cell[54038, 1303, 659, 16, 67, "Input"],
Cell[54700, 1321, 871, 22, 67, "Input"],
Cell[55574, 1345, 2668, 63, 369, "Input"],
Cell[58245, 1410, 176, 3, 39, "Input"],
Cell[58424, 1415, 1766, 47, 94, "Input"],
Cell[60193, 1464, 1069, 20, 39, "Input"],
Cell[61265, 1486, 1914, 42, 121, "Input"],
Cell[63182, 1530, 2221, 51, 175, "Input"],
Cell[65406, 1583, 1148, 23, 121, "Input"],
Cell[66557, 1608, 7985, 175, 661, "Input"],
Cell[74545, 1785, 260, 6, 39, "Input"],
Cell[74808, 1793, 1609, 34, 148, "Input"],
Cell[76420, 1829, 373, 8, 39, "Input"],
Cell[CellGroupData[{
Cell[76818, 1841, 969, 23, 39, "Input"],
Cell[77790, 1866, 9364, 191, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87191, 2062, 917, 22, 39, "Input"],
Cell[88111, 2086, 9368, 191, 84, "Output"]
}, Open  ]],
Cell[97494, 2280, 106, 3, 39, "Input"],
Cell[97603, 2285, 5583, 122, 418, "Input"],
Cell[CellGroupData[{
Cell[103211, 2411, 851, 21, 39, "Input"],
Cell[104065, 2434, 9297, 191, 84, "Output"]
}, Open  ]],
Cell[113377, 2628, 106, 3, 39, "Input"],
Cell[CellGroupData[{
Cell[113508, 2635, 5017, 108, 499, "Input"],
Cell[118528, 2745, 175, 2, 39, "Output"]
}, Open  ]],
Cell[118718, 2750, 106, 3, 39, "Input"],
Cell[CellGroupData[{
Cell[118849, 2757, 10259, 232, 1201, "Input"],
Cell[129111, 2991, 145, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129293, 2998, 129, 2, 39, "Input"],
Cell[129425, 3002, 291, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129753, 3011, 333, 5, 39, "Input"],
Cell[130089, 3018, 287, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130413, 3027, 133, 2, 39, "Input"],
Cell[130549, 3031, 332, 6, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130918, 3042, 130, 2, 39, "Input"],
Cell[131051, 3046, 282, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131370, 3055, 260, 5, 39, "Input"],
Cell[131633, 3062, 282, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131952, 3071, 563, 15, 39, "Input"],
Cell[132518, 3088, 316, 6, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132871, 3099, 142, 3, 39, "Input"],
Cell[133016, 3104, 307, 5, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133360, 3114, 286, 6, 39, "Input"],
Cell[133649, 3122, 284, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133970, 3131, 238, 5, 39, "Input"],
Cell[134211, 3138, 304, 5, 39, "Output"]
}, Open  ]],
Cell[134530, 3146, 417, 9, 39, "Input"],
Cell[134950, 3157, 179, 3, 39, "Input"],
Cell[CellGroupData[{
Cell[135154, 3164, 1500, 41, 67, "Input"],
Cell[136657, 3207, 476, 11, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137170, 3223, 229, 6, 39, "Input"],
Cell[137402, 3231, 476, 11, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137915, 3247, 530, 12, 39, "Input"],
Cell[138448, 3261, 444, 10, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138929, 3276, 250, 7, 54, "Input"],
Cell[139182, 3285, 399, 9, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139618, 3299, 424, 12, 91, "Input"],
Cell[140045, 3313, 8066, 144, 280, "Output"]
}, Open  ]],
Cell[148126, 3460, 369, 9, 39, "Input"],
Cell[CellGroupData[{
Cell[148520, 3473, 130, 4, 39, "Input"],
Cell[148653, 3479, 318, 6, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149008, 3490, 743, 17, 39, "Input"],
Cell[149754, 3509, 317, 6, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150108, 3520, 2098, 54, 94, "Input"],
Cell[152209, 3576, 582, 12, 58, "Output"]
}, Open  ]],
Cell[152806, 3591, 575, 12, 39, "Input"],
Cell[153384, 3605, 617, 12, 39, "Input"],
Cell[154004, 3619, 1857, 37, 175, "Input"],
Cell[155864, 3658, 234, 6, 39, "Input"],
Cell[CellGroupData[{
Cell[156123, 3668, 151, 3, 39, "Input"],
Cell[156277, 3673, 341, 6, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156655, 3684, 117, 2, 39, "Input"],
Cell[156775, 3688, 281, 4, 39, "Output"]
}, Open  ]],
Cell[157071, 3695, 2800, 54, 94, "Input"],
Cell[CellGroupData[{
Cell[159896, 3753, 175, 4, 39, "Input"],
Cell[160074, 3759, 289, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160400, 3768, 149, 3, 39, "Input"],
Cell[160552, 3773, 338, 6, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160927, 3784, 129, 2, 39, "Input"],
Cell[161059, 3788, 291, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161387, 3797, 236, 4, 39, "Input"],
Cell[161626, 3803, 285, 4, 39, "Output"]
}, Open  ]],
Cell[161926, 3810, 128, 2, 39, "Input"],
Cell[162057, 3814, 128, 2, 39, "Input"],
Cell[CellGroupData[{
Cell[162210, 3820, 8660, 164, 445, "Input"],
Cell[CellGroupData[{
Cell[170895, 3988, 583, 10, 54, "Print"],
Cell[171481, 4000, 613, 11, 29, "Print"],
Cell[172097, 4013, 589, 10, 54, "Print"],
Cell[172689, 4025, 613, 11, 29, "Print"],
Cell[173305, 4038, 587, 10, 54, "Print"],
Cell[173895, 4050, 613, 11, 29, "Print"],
Cell[174511, 4063, 591, 10, 54, "Print"],
Cell[175105, 4075, 613, 11, 29, "Print"],
Cell[175721, 4088, 589, 10, 54, "Print"],
Cell[176313, 4100, 613, 11, 29, "Print"],
Cell[176929, 4113, 587, 10, 54, "Print"],
Cell[177519, 4125, 615, 11, 29, "Print"],
Cell[178137, 4138, 625, 11, 54, "Print"],
Cell[178765, 4151, 615, 11, 29, "Print"],
Cell[179383, 4164, 587, 10, 54, "Print"],
Cell[179973, 4176, 613, 11, 29, "Print"],
Cell[180589, 4189, 589, 10, 54, "Print"],
Cell[181181, 4201, 613, 11, 29, "Print"],
Cell[181797, 4214, 591, 10, 54, "Print"],
Cell[182391, 4226, 613, 11, 29, "Print"],
Cell[183007, 4239, 624, 11, 54, "Print"],
Cell[183634, 4252, 615, 11, 29, "Print"],
Cell[184252, 4265, 623, 11, 54, "Print"],
Cell[184878, 4278, 613, 11, 29, "Print"],
Cell[185494, 4291, 621, 11, 54, "Print"],
Cell[186118, 4304, 613, 11, 29, "Print"],
Cell[186734, 4317, 623, 11, 54, "Print"],
Cell[187360, 4330, 615, 11, 29, "Print"],
Cell[187978, 4343, 621, 11, 54, "Print"],
Cell[188602, 4356, 613, 11, 29, "Print"],
Cell[189218, 4369, 588, 10, 54, "Print"],
Cell[189809, 4381, 615, 11, 29, "Print"],
Cell[190427, 4394, 587, 10, 54, "Print"],
Cell[191017, 4406, 613, 11, 29, "Print"],
Cell[191633, 4419, 589, 10, 54, "Print"],
Cell[192225, 4431, 615, 11, 29, "Print"],
Cell[192843, 4444, 622, 11, 54, "Print"],
Cell[193468, 4457, 615, 11, 29, "Print"],
Cell[194086, 4470, 625, 11, 54, "Print"],
Cell[194714, 4483, 613, 11, 29, "Print"],
Cell[195330, 4496, 623, 11, 54, "Print"],
Cell[195956, 4509, 615, 11, 29, "Print"],
Cell[196574, 4522, 623, 11, 54, "Print"],
Cell[197200, 4535, 615, 11, 29, "Print"],
Cell[197818, 4548, 623, 11, 54, "Print"],
Cell[198444, 4561, 613, 11, 29, "Print"],
Cell[199060, 4574, 623, 11, 54, "Print"],
Cell[199686, 4587, 615, 11, 29, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200350, 4604, 739, 11, 39, "Input"],
Cell[201092, 4617, 284, 4, 39, "Output"]
}, Open  ]],
Cell[201391, 4624, 896, 16, 39, "Input"],
Cell[202290, 4642, 329, 8, 39, "Input"],
Cell[CellGroupData[{
Cell[202644, 4654, 481, 11, 39, "Input"],
Cell[203128, 4667, 1792, 42, 558, "Output"]
}, Open  ]],
Cell[204935, 4712, 130, 2, 39, "Input"],
Cell[205068, 4716, 1302, 23, 39, "Input"],
Cell[CellGroupData[{
Cell[206395, 4743, 258, 5, 39, "Input"],
Cell[206656, 4750, 712, 14, 58, "Output"]
}, Open  ]],
Cell[207383, 4767, 134, 2, 39, "Input"],
Cell[207520, 4771, 1724, 32, 121, "Input"],
Cell[CellGroupData[{
Cell[209269, 4807, 203, 3, 39, "Input"],
Cell[209475, 4812, 11128, 217, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220640, 5034, 2252, 47, 67, "Input"],
Cell[222895, 5083, 11967, 230, 463, "Output"]
}, Open  ]],
Cell[234877, 5316, 1070, 28, 39, "Input"],
Cell[CellGroupData[{
Cell[235972, 5348, 2338, 67, 67, "Input"],
Cell[238313, 5417, 40064, 697, 319, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278414, 6119, 276, 7, 39, "Input"],
Cell[278693, 6128, 299, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279029, 6137, 298, 8, 39, "Input"],
Cell[279330, 6147, 299, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279666, 6156, 114, 2, 39, "Input"],
Cell[279783, 6160, 299, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280119, 6169, 852, 22, 39, "Input"],
Cell[280974, 6193, 19163, 325, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300174, 6523, 500, 9, 39, "Input"],
Cell[300677, 6534, 58474, 1002, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359188, 7541, 622, 11, 39, "Input"],
Cell[359813, 7554, 349, 5, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360199, 7564, 2963, 65, 175, "Input"],
Cell[363165, 7631, 2563, 51, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365765, 7687, 2633, 51, 148, "Input"],
Cell[368401, 7740, 760, 14, 27, "Message"],
Cell[369164, 7756, 9486, 192, 84, "Output"]
}, Open  ]],
Cell[378665, 7951, 577, 16, 39, "Input"],
Cell[CellGroupData[{
Cell[379267, 7971, 1134, 24, 67, "Input"],
Cell[380404, 7997, 881, 16, 29, "Message"],
Cell[381288, 8015, 881, 16, 29, "Message"],
Cell[382172, 8033, 882, 16, 29, "Message"],
Cell[383057, 8051, 783, 15, 27, "Message"],
Cell[383843, 8068, 95118, 1606, 256, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478998, 9679, 1624, 34, 67, "Input"],
Cell[480625, 9715, 886, 16, 29, "Message"],
Cell[481514, 9733, 886, 16, 29, "Message"],
Cell[482403, 9751, 886, 16, 29, "Message"],
Cell[483292, 9769, 786, 15, 27, "Message"],
Cell[484081, 9786, 122213, 2017, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606331, 11808, 393, 7, 39, "Input"],
Cell[606727, 11817, 131526, 2172, 411, "Output"]
}, Open  ]],
Cell[738268, 13992, 759, 13, 39, "Input"],
Cell[CellGroupData[{
Cell[739052, 14009, 645, 14, 39, "Input"],
Cell[739700, 14025, 65340, 1067, 451, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[805077, 15097, 723, 17, 39, "Input"],
Cell[805803, 15116, 553, 13, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[806393, 15134, 645, 16, 39, "Input"],
Cell[807041, 15152, 673, 13, 27, "Message"],
Cell[807717, 15167, 790, 14, 29, "Message"],
Cell[808510, 15183, 1536, 36, 303, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810083, 15224, 666, 20, 39, "Input"],
Cell[810752, 15246, 784, 14, 29, "Message"],
Cell[811539, 15262, 1580, 36, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[813156, 15303, 684, 20, 39, "Input"],
Cell[813843, 15325, 785, 14, 29, "Message"],
Cell[814631, 15341, 1690, 39, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[816358, 15385, 1007, 24, 39, "Input"],
Cell[817368, 15411, 4702, 91, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[822107, 15507, 8124, 191, 1012, "Input"],
Cell[830234, 15700, 4323, 91, 386, "Output"]
}, Open  ]],
Cell[834572, 15794, 1565, 36, 67, "Input"],
Cell[836140, 15832, 1375, 34, 39, "Input"],
Cell[CellGroupData[{
Cell[837540, 15870, 1202, 24, 67, "Input"],
Cell[838745, 15896, 130699, 2152, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[969481, 18053, 150, 3, 39, "Input"],
Cell[969634, 18058, 568, 11, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[970239, 18074, 11127, 236, 1336, "Input"],
Cell[CellGroupData[{
Cell[981391, 18314, 415, 8, 29, "Print"],
Cell[981809, 18324, 421, 8, 29, "Print"],
Cell[982233, 18334, 419, 8, 29, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[982701, 18348, 260, 5, 39, "Input"],
Cell[982964, 18355, 280, 4, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983281, 18364, 185, 4, 39, "Input"],
Cell[983469, 18370, 383, 8, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983889, 18383, 2262, 44, 175, "Input"],
Cell[986154, 18429, 263, 3, 39, "Output"],
Cell[986420, 18434, 265, 3, 39, "Output"],
Cell[986688, 18439, 263, 3, 39, "Output"],
Cell[986954, 18444, 633, 12, 27, "Message"],
Cell[987590, 18458, 247, 3, 39, "Output"],
Cell[987840, 18463, 264, 3, 39, "Output"],
Cell[988107, 18468, 631, 12, 27, "Message"],
Cell[988741, 18482, 247, 3, 39, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
